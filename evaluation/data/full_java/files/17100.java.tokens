package com . badlogic . gdx . physics . box2d ; import com . badlogic . gdx . math . Vector2 ; public class Transform { public static final int POS_X = <int> ; public static final int POS_Y = <int> ; public static final int COS = <int> ; public static final int SIN = <int> ; public float [ ] vals = new float [ <int> ] ; private Vector2 position = new Vector2 ( ) ; public Transform ( ) { } public Transform ( Vector2 position , float angle ) { setPosition ( position ) ; setRotation ( angle ) ; } public Vector2 mul ( Vector2 v ) { float x = vals [ POS_X ] + vals [ COS ] * v . x + - vals [ SIN ] * v . y ; float y = vals [ POS_Y ] + vals [ SIN ] * v . x + vals [ COS ] * v . y ; v . x = x ; v . y = y ; return v ; } public Vector2 getPosition ( ) { return position . set ( vals [ <int> ] , vals [ <int> ] ) ; } public void setRotation ( float angle ) { float c = ( float ) Math . cos ( angle ) , s = ( float ) Math . sin ( angle ) ; vals [ COS ] = c ; vals [ SIN ] = s ; } public float getRotation ( ) { return ( float ) Math . atan2 ( vals [ SIN ] , vals [ COS ] ) ; } public void setPosition ( Vector2 pos ) { this . vals [ POS_X ] = pos . x ; this . vals [ POS_Y ] = pos . y ; } } 
