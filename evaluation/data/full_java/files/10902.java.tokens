package org . gradle . internal . typeconversion ; import org . gradle . api . Nullable ; import org . gradle . util . GUtil ; import java . util . Collection ; import java . util . Formatter ; public class UnsupportedNotationException extends RuntimeException { private final Object notation ; public UnsupportedNotationException ( Object notation ) { this . notation = notation ; } public UnsupportedNotationException ( Object notation , String failure , @Nullable String resolution , Collection < String > candidateTypes ) { super ( format ( failure , resolution , candidateTypes ) ) ; this . notation = notation ; } private static String format ( String failure , String resolution , Collection < String > formats ) { Formatter message = new Formatter ( ) ; message . format ( <str> , failure ) ; message . format ( <str> ) ; for ( String format : formats ) { message . format ( <str> , format ) ; } if ( GUtil . isTrue ( resolution ) ) { message . format ( <str> , resolution ) ; } return message . toString ( ) ; } public Object getNotation ( ) { return notation ; } } 
