package org . apache . cassandra . io . util ; import java . io . File ; import java . io . IOException ; import java . util . ArrayList ; import java . util . List ; import org . junit . After ; import junit . framework . Assert ; public class ChecksummedSequentialWriterTest extends SequentialWriterTest { private final List < TestableCSW > writers = new ArrayList < > ( ) ; @After public void cleanup ( ) { for ( TestableSW sw : writers ) sw . file . delete ( ) ; writers . clear ( ) ; } protected TestableTransaction newTest ( ) throws IOException { TestableCSW sw = new TestableCSW ( ) ; writers . add ( sw ) ; return sw ; } private static class TestableCSW extends TestableSW { final File crcFile ; private TestableCSW ( ) throws IOException { this ( tempFile ( <str> ) , tempFile ( <str> ) ) ; } private TestableCSW ( File file , File crcFile ) throws IOException { this ( file , crcFile , new ChecksummedSequentialWriter ( file , BUFFER_SIZE , crcFile ) ) ; } private TestableCSW ( File file , File crcFile , SequentialWriter sw ) throws IOException { super ( file , sw ) ; this . crcFile = crcFile ; } protected void assertInProgress ( ) throws Exception { super . assertInProgress ( ) ; Assert . assertTrue ( crcFile . exists ( ) ) ; Assert . assertEquals ( <int> , crcFile . length ( ) ) ; } protected void assertPrepared ( ) throws Exception { super . assertPrepared ( ) ; Assert . assertTrue ( crcFile . exists ( ) ) ; Assert . assertFalse ( <int> = = crcFile . length ( ) ) ; } protected void assertAborted ( ) throws Exception { super . assertAborted ( ) ; } } } 
