package com . badlogic . gdx . tools . particleeditor ; import java . awt . Cursor ; import java . awt . Font ; import java . awt . GridBagConstraints ; import java . awt . GridBagLayout ; import java . awt . Insets ; import java . awt . event . ActionEvent ; import java . awt . event . ActionListener ; import java . awt . event . MouseAdapter ; import java . awt . event . MouseEvent ; import javax . swing . JLabel ; import javax . swing . JPanel ; import javax . swing . JToggleButton ; import com . badlogic . gdx . graphics . g2d . ParticleEmitter . ParticleValue ; class EditorPanel extends JPanel { private final String name ; private final String description ; private final ParticleValue value ; private JPanel titlePanel ; JToggleButton activeButton ; private JPanel contentPanel ; JToggleButton advancedButton ; JPanel advancedPanel ; private boolean hasAdvanced ; JLabel descriptionLabel ; public EditorPanel ( ParticleValue value , String name , String description ) { this . name = name ; this . value = value ; this . description = description ; initializeComponents ( ) ; titlePanel . addMouseListener ( new MouseAdapter ( ) { public void mouseClicked ( MouseEvent event ) { if ( ! activeButton . isVisible ( ) ) return ; activeButton . setSelected ( ! activeButton . isSelected ( ) ) ; updateActive ( ) ; } } ) ; activeButton . addActionListener ( new ActionListener ( ) { public void actionPerformed ( ActionEvent event ) { updateActive ( ) ; } } ) ; advancedButton . addActionListener ( new ActionListener ( ) { public void actionPerformed ( ActionEvent event ) { advancedPanel . setVisible ( advancedButton . isSelected ( ) ) ; } } ) ; if ( value ! = null ) { activeButton . setSelected ( value . isActive ( ) ) ; updateActive ( ) ; } boolean alwaysActive = value = = null ? true : value . isAlwaysActive ( ) ; activeButton . setVisible ( ! alwaysActive ) ; if ( alwaysActive ) contentPanel . setVisible ( true ) ; if ( alwaysActive ) titlePanel . setCursor ( null ) ; } void updateActive ( ) { contentPanel . setVisible ( activeButton . isSelected ( ) ) ; advancedPanel . setVisible ( activeButton . isSelected ( ) & & advancedButton . isSelected ( ) ) ; advancedButton . setVisible ( activeButton . isSelected ( ) & & hasAdvanced ) ; descriptionLabel . setText ( activeButton . isSelected ( ) ? description : <str> ) ; if ( value ! = null ) value . setActive ( activeButton . isSelected ( ) ) ; } public void update ( ParticleEditor editor ) { } public void setHasAdvanced ( boolean hasAdvanced ) { this . hasAdvanced = hasAdvanced ; advancedButton . setVisible ( hasAdvanced & & ( value . isActive ( ) | | value . isAlwaysActive ( ) ) ) ; } public JPanel getContentPanel ( ) { return contentPanel ; } public JPanel getAdvancedPanel ( ) { return advancedPanel ; } public String getName ( ) { return name ; } public void setEmbedded ( ) { GridBagLayout layout = ( GridBagLayout ) getLayout ( ) ; GridBagConstraints constraints = layout . getConstraints ( contentPanel ) ; constraints . insets = new Insets ( <int> , <int> , <int> , <int> ) ; layout . setConstraints ( contentPanel , constraints ) ; titlePanel . setVisible ( false ) ; } private void initializeComponents ( ) { setLayout ( new GridBagLayout ( ) ) ; { titlePanel = new JPanel ( new GridBagLayout ( ) ) ; add ( titlePanel , new GridBagConstraints ( <int> , <int> , <int> , <int> , <float> , <float> , GridBagConstraints . WEST , GridBagConstraints . HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; titlePanel . setCursor ( Cursor . getPredefinedCursor ( Cursor . HAND_CURSOR ) ) ; { JLabel label = new JLabel ( name ) ; titlePanel . add ( label , new GridBagConstraints ( <int> , <int> , <int> , <int> , <float> , <float> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; label . setFont ( label . getFont ( ) . deriveFont ( Font . BOLD ) ) ; } { descriptionLabel = new JLabel ( description ) ; titlePanel . add ( descriptionLabel , new GridBagConstraints ( <int> , <int> , <int> , <int> , <float> , <float> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { advancedButton = new JToggleButton ( <str> ) ; titlePanel . add ( advancedButton , new GridBagConstraints ( <int> , <int> , <int> , <int> , <float> , <float> , GridBagConstraints . CENTER , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; advancedButton . setVisible ( false ) ; } { activeButton = new JToggleButton ( <str> ) ; titlePanel . add ( activeButton , new GridBagConstraints ( <int> , <int> , <int> , <int> , <float> , <float> , GridBagConstraints . CENTER , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } } { contentPanel = new JPanel ( new GridBagLayout ( ) ) ; add ( contentPanel , new GridBagConstraints ( <int> , <int> , <int> , <int> , <float> , <float> , GridBagConstraints . CENTER , GridBagConstraints . BOTH , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; contentPanel . setVisible ( false ) ; } { advancedPanel = new JPanel ( new GridBagLayout ( ) ) ; add ( advancedPanel , new GridBagConstraints ( <int> , <int> , <int> , <int> , <float> , <float> , GridBagConstraints . CENTER , GridBagConstraints . BOTH , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; advancedPanel . setVisible ( false ) ; } } } 
