package org . elasticsearch . index . query ; import org . elasticsearch . common . ParseField ; import org . elasticsearch . common . ParsingException ; import org . elasticsearch . common . xcontent . XContentParser ; import java . io . IOException ; public class PrefixQueryParser implements QueryParser < PrefixQueryBuilder > { public static final ParseField PREFIX_FIELD = new ParseField ( <str> , <str> ) ; public static final ParseField REWRITE_FIELD = new ParseField ( <str> ) ; @Override public String [ ] names ( ) { return new String [ ] { PrefixQueryBuilder . NAME } ; } @Override public PrefixQueryBuilder fromXContent ( QueryParseContext parseContext ) throws IOException { XContentParser parser = parseContext . parser ( ) ; String fieldName = parser . currentName ( ) ; String value = null ; String rewrite = null ; String queryName = null ; float boost = AbstractQueryBuilder . DEFAULT_BOOST ; String currentFieldName = null ; XContentParser . Token token ; while ( ( token = parser . nextToken ( ) ) ! = XContentParser . Token . END_OBJECT ) { if ( token = = XContentParser . Token . FIELD_NAME ) { currentFieldName = parser . currentName ( ) ; } else if ( parseContext . isDeprecatedSetting ( currentFieldName ) ) { } else if ( token = = XContentParser . Token . START_OBJECT ) { fieldName = currentFieldName ; while ( ( token = parser . nextToken ( ) ) ! = XContentParser . Token . END_OBJECT ) { if ( token = = XContentParser . Token . FIELD_NAME ) { currentFieldName = parser . currentName ( ) ; } else { if ( parseContext . parseFieldMatcher ( ) . match ( currentFieldName , AbstractQueryBuilder . NAME_FIELD ) ) { queryName = parser . text ( ) ; } else if ( parseContext . parseFieldMatcher ( ) . match ( currentFieldName , PREFIX_FIELD ) ) { value = parser . textOrNull ( ) ; } else if ( parseContext . parseFieldMatcher ( ) . match ( currentFieldName , AbstractQueryBuilder . BOOST_FIELD ) ) { boost = parser . floatValue ( ) ; } else if ( parseContext . parseFieldMatcher ( ) . match ( currentFieldName , REWRITE_FIELD ) ) { rewrite = parser . textOrNull ( ) ; } else { throw new ParsingException ( parser . getTokenLocation ( ) , <str> + currentFieldName + <str> ) ; } } } } else { fieldName = currentFieldName ; value = parser . textOrNull ( ) ; } } if ( value = = null ) { throw new ParsingException ( parser . getTokenLocation ( ) , <str> ) ; } return new PrefixQueryBuilder ( fieldName , value ) . rewrite ( rewrite ) . boost ( boost ) . queryName ( queryName ) ; } @Override public PrefixQueryBuilder getBuilderPrototype ( ) { return PrefixQueryBuilder . PROTOTYPE ; } } 
