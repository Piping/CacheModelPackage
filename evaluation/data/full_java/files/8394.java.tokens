package org . elasticsearch . plugins . responseheader ; import org . elasticsearch . client . Client ; import org . elasticsearch . common . inject . Inject ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . rest . * ; public class TestResponseHeaderRestAction extends BaseRestHandler { @Inject public TestResponseHeaderRestAction ( Settings settings , RestController controller , Client client ) { super ( settings , controller , client ) ; controller . registerHandler ( RestRequest . Method . GET , <str> , this ) ; } @Override public void handleRequest ( RestRequest request , RestChannel channel , Client client ) { if ( <str> . equals ( request . header ( <str> ) ) ) { RestResponse response = new BytesRestResponse ( RestStatus . OK , <str> ) ; response . addHeader ( <str> , <str> ) ; channel . sendResponse ( response ) ; } else { RestResponse response = new BytesRestResponse ( RestStatus . UNAUTHORIZED , <str> ) ; response . addHeader ( <str> , <str> ) ; channel . sendResponse ( response ) ; } } } 
