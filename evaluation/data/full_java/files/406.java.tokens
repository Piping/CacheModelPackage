package org . apache . cassandra . db . filter ; import java . io . IOException ; import org . apache . cassandra . config . CFMetaData ; import org . apache . cassandra . config . ColumnDefinition ; import org . apache . cassandra . db . * ; import org . apache . cassandra . db . marshal . ReversedType ; import org . apache . cassandra . io . util . DataInputPlus ; import org . apache . cassandra . io . util . DataOutputPlus ; public abstract class AbstractClusteringIndexFilter implements ClusteringIndexFilter { static final Serializer serializer = new FilterSerializer ( ) ; protected final boolean reversed ; protected AbstractClusteringIndexFilter ( boolean reversed ) { this . reversed = reversed ; } public boolean isReversed ( ) { return reversed ; } protected abstract void serializeInternal ( DataOutputPlus out , int version ) throws IOException ; protected abstract long serializedSizeInternal ( int version ) ; protected void appendOrderByToCQLString ( CFMetaData metadata , StringBuilder sb ) { if ( reversed ) { sb . append ( <str> ) ; int i = <int> ; for ( ColumnDefinition column : metadata . clusteringColumns ( ) ) sb . append ( i + + = = <int> ? <str> : <str> ) . append ( column . name ) . append ( column . type instanceof ReversedType ? <str> : <str> ) ; sb . append ( <str> ) ; } } private static class FilterSerializer implements Serializer { public void serialize ( ClusteringIndexFilter pfilter , DataOutputPlus out , int version ) throws IOException { AbstractClusteringIndexFilter filter = ( AbstractClusteringIndexFilter ) pfilter ; out . writeByte ( filter . kind ( ) . ordinal ( ) ) ; out . writeBoolean ( filter . isReversed ( ) ) ; filter . serializeInternal ( out , version ) ; } public ClusteringIndexFilter deserialize ( DataInputPlus in , int version , CFMetaData metadata ) throws IOException { Kind kind = Kind . values ( ) [ in . readUnsignedByte ( ) ] ; boolean reversed = in . readBoolean ( ) ; return kind . deserializer . deserialize ( in , version , metadata , reversed ) ; } public long serializedSize ( ClusteringIndexFilter pfilter , int version ) { AbstractClusteringIndexFilter filter = ( AbstractClusteringIndexFilter ) pfilter ; return <int> + TypeSizes . sizeof ( filter . isReversed ( ) ) + filter . serializedSizeInternal ( version ) ; } } } 
