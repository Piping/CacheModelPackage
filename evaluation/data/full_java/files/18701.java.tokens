package com . badlogic . gdx . tests . gles2 ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . graphics . GL20 ; import com . badlogic . gdx . graphics . Mesh ; import com . badlogic . gdx . graphics . VertexAttribute ; import com . badlogic . gdx . graphics . VertexAttributes . Usage ; import com . badlogic . gdx . graphics . glutils . ShaderProgram ; import com . badlogic . gdx . tests . utils . GdxTest ; public class HelloTriangle extends GdxTest { ShaderProgram shader ; Mesh mesh ; @Override public void create ( ) { String vertexShader = <str> + <str> + <str> + <str> + <str> ; String fragmentShader = <str> + <str> + <str> + <str> + <str> + <str> + <str> ; shader = new ShaderProgram ( vertexShader , fragmentShader ) ; mesh = new Mesh ( true , <int> , <int> , new VertexAttribute ( Usage . Position , <int> , <str> ) ) ; float [ ] vertices = { <float> , <float> , <float> , - <float> , - <float> , <float> , <float> , - <float> , <float> } ; mesh . setVertices ( vertices ) ; } @Override public void render ( ) { Gdx . gl20 . glViewport ( <int> , <int> , Gdx . graphics . getWidth ( ) , Gdx . graphics . getHeight ( ) ) ; Gdx . gl20 . glClear ( GL20 . GL_COLOR_BUFFER_BIT ) ; shader . begin ( ) ; mesh . render ( shader , GL20 . GL_TRIANGLES ) ; shader . end ( ) ; } } 
