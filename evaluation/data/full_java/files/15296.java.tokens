package org . gradle . api . plugins ; import org . gradle . api . Plugin ; import org . gradle . api . Project ; import org . gradle . api . internal . plugins . DslObject ; import org . gradle . api . tasks . GroovySourceSet ; import org . gradle . api . tasks . SourceSet ; import org . gradle . api . tasks . javadoc . Groovydoc ; public class GroovyPlugin implements Plugin < Project > { public static final String GROOVYDOC_TASK_NAME = <str> ; public void apply ( Project project ) { project . getPluginManager ( ) . apply ( GroovyBasePlugin . class ) ; project . getPluginManager ( ) . apply ( JavaPlugin . class ) ; configureGroovydoc ( project ) ; } private void configureGroovydoc ( final Project project ) { Groovydoc groovyDoc = project . getTasks ( ) . create ( GROOVYDOC_TASK_NAME , Groovydoc . class ) ; groovyDoc . setDescription ( <str> ) ; groovyDoc . setGroup ( JavaBasePlugin . DOCUMENTATION_GROUP ) ; JavaPluginConvention convention = project . getConvention ( ) . getPlugin ( JavaPluginConvention . class ) ; SourceSet sourceSet = convention . getSourceSets ( ) . getByName ( SourceSet . MAIN_SOURCE_SET_NAME ) ; groovyDoc . setClasspath ( sourceSet . getOutput ( ) . plus ( sourceSet . getCompileClasspath ( ) ) ) ; GroovySourceSet groovySourceSet = new DslObject ( sourceSet ) . getConvention ( ) . getPlugin ( GroovySourceSet . class ) ; groovyDoc . setSource ( groovySourceSet . getGroovy ( ) ) ; } } 
