package io . netty . handler . codec . socksx . v5 ; public class Socks5CommandType implements Comparable < Socks5CommandType > { public static final Socks5CommandType CONNECT = new Socks5CommandType ( <hex> , <str> ) ; public static final Socks5CommandType BIND = new Socks5CommandType ( <hex> , <str> ) ; public static final Socks5CommandType UDP_ASSOCIATE = new Socks5CommandType ( <hex> , <str> ) ; public static Socks5CommandType valueOf ( byte b ) { switch ( b ) { case <hex> : return CONNECT ; case <hex> : return BIND ; case <hex> : return UDP_ASSOCIATE ; } return new Socks5CommandType ( b ) ; } private final byte byteValue ; private final String name ; private String text ; public Socks5CommandType ( int byteValue ) { this ( byteValue , <str> ) ; } public Socks5CommandType ( int byteValue , String name ) { if ( name = = null ) { throw new NullPointerException ( <str> ) ; } this . byteValue = ( byte ) byteValue ; this . name = name ; } public byte byteValue ( ) { return byteValue ; } @Override public int hashCode ( ) { return byteValue ; } @Override public boolean equals ( Object obj ) { if ( ! ( obj instanceof Socks5CommandType ) ) { return false ; } return byteValue = = ( ( Socks5CommandType ) obj ) . byteValue ; } @Override public int compareTo ( Socks5CommandType o ) { return byteValue - o . byteValue ; } @Override public String toString ( ) { String text = this . text ; if ( text = = null ) { this . text = text = name + <str> + ( byteValue & <hex> ) + <str> ; } return text ; } } 
