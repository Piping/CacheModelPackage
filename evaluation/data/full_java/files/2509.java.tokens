package jcuda . jcusparse ; public class cusparseStatus { public static final int CUSPARSE_STATUS_SUCCESS = <int> ; public static final int CUSPARSE_STATUS_NOT_INITIALIZED = <int> ; public static final int CUSPARSE_STATUS_ALLOC_FAILED = <int> ; public static final int CUSPARSE_STATUS_INVALID_VALUE = <int> ; public static final int CUSPARSE_STATUS_ARCH_MISMATCH = <int> ; public static final int CUSPARSE_STATUS_MAPPING_ERROR = <int> ; public static final int CUSPARSE_STATUS_EXECUTION_FAILED = <int> ; public static final int CUSPARSE_STATUS_INTERNAL_ERROR = <int> ; public static final int CUSPARSE_STATUS_MATRIX_TYPE_NOT_SUPPORTED = <int> ; public static final int CUSPARSE_STATUS_ZERO_PIVOT = <int> ; public static final int JCUSPARSE_STATUS_INTERNAL_ERROR = - <int> ; private cusparseStatus ( ) { } public static String stringFor ( int n ) { switch ( n ) { case CUSPARSE_STATUS_SUCCESS : return <str> ; case CUSPARSE_STATUS_NOT_INITIALIZED : return <str> ; case CUSPARSE_STATUS_ALLOC_FAILED : return <str> ; case CUSPARSE_STATUS_INVALID_VALUE : return <str> ; case CUSPARSE_STATUS_ARCH_MISMATCH : return <str> ; case CUSPARSE_STATUS_MAPPING_ERROR : return <str> ; case CUSPARSE_STATUS_EXECUTION_FAILED : return <str> ; case CUSPARSE_STATUS_INTERNAL_ERROR : return <str> ; case CUSPARSE_STATUS_MATRIX_TYPE_NOT_SUPPORTED : return <str> ; case CUSPARSE_STATUS_ZERO_PIVOT : return <str> ; case JCUSPARSE_STATUS_INTERNAL_ERROR : return <str> ; } return <str> + n ; } } 
