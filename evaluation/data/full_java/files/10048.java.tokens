package com . google . common . collect . testing . testers ; import static com . google . common . collect . testing . features . CollectionFeature . ALLOWS_NULL_VALUES ; import static com . google . common . collect . testing . features . CollectionSize . ZERO ; import com . google . common . annotations . GwtCompatible ; import com . google . common . annotations . GwtIncompatible ; import com . google . common . collect . testing . AbstractCollectionTester ; import com . google . common . collect . testing . Helpers ; import com . google . common . collect . testing . features . CollectionFeature ; import com . google . common . collect . testing . features . CollectionSize ; import java . lang . reflect . Method ; @GwtCompatible ( emulated = true ) public class CollectionCreationTester < E > extends AbstractCollectionTester < E > { @CollectionFeature.Require ( ALLOWS_NULL_VALUES ) @CollectionSize.Require ( absent = ZERO ) public void testCreateWithNull_supported ( ) { E [ ] array = createArrayWithNullElement ( ) ; collection = getSubjectGenerator ( ) . create ( array ) ; expectContents ( array ) ; } @CollectionFeature.Require ( absent = ALLOWS_NULL_VALUES ) @CollectionSize.Require ( absent = ZERO ) public void testCreateWithNull_unsupported ( ) { E [ ] array = createArrayWithNullElement ( ) ; try { getSubjectGenerator ( ) . create ( array ) ; fail ( <str> ) ; } catch ( NullPointerException expected ) { } } @GwtIncompatible ( <str> ) public static Method getCreateWithNullUnsupportedMethod ( ) { return Helpers . getMethod ( CollectionCreationTester . class , <str> ) ; } } 
