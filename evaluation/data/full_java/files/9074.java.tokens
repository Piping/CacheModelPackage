package org . elasticsearch . test . rest . test ; import org . elasticsearch . common . xcontent . XContentParser ; import org . elasticsearch . common . xcontent . json . JsonXContent ; import org . elasticsearch . test . ESTestCase ; import org . elasticsearch . test . rest . spec . RestApiParser ; import java . io . IOException ; import static org . hamcrest . Matchers . containsString ; public class RestApiParserFailingTests extends ESTestCase { public void testBrokenSpecShouldThrowUsefulExceptionWhenParsingFailsOnParams ( ) throws Exception { parseAndExpectFailure ( BROKEN_SPEC_PARAMS , <str> ) ; } public void testBrokenSpecShouldThrowUsefulExceptionWhenParsingFailsOnParts ( ) throws Exception { parseAndExpectFailure ( BROKEN_SPEC_PARTS , <str> ) ; } private void parseAndExpectFailure ( String brokenJson , String expectedErrorMessage ) throws Exception { XContentParser parser = JsonXContent . jsonXContent . createParser ( brokenJson ) ; try { new RestApiParser ( ) . parse ( parser ) ; fail ( <str> ) ; } catch ( IOException e ) { assertThat ( e . getMessage ( ) , containsString ( expectedErrorMessage ) ) ; } } private static final String BROKEN_SPEC_PARAMS = <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ; private static final String BROKEN_SPEC_PARTS = <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ; } 
