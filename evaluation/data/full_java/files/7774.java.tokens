package org . elasticsearch . bootstrap ; import org . elasticsearch . test . ESTestCase ; import java . util . List ; import static org . hamcrest . CoreMatchers . is ; public class JavaVersionTests extends ESTestCase { public void testParse ( ) { JavaVersion javaVersion = JavaVersion . parse ( <str> ) ; List < Integer > version = javaVersion . getVersion ( ) ; assertThat ( <int> , is ( version . size ( ) ) ) ; assertThat ( <int> , is ( version . get ( <int> ) ) ) ; assertThat ( <int> , is ( version . get ( <int> ) ) ) ; assertThat ( <int> , is ( version . get ( <int> ) ) ) ; } public void testToString ( ) { JavaVersion javaVersion = JavaVersion . parse ( <str> ) ; assertThat ( <str> , is ( javaVersion . toString ( ) ) ) ; } public void testCompare ( ) { JavaVersion onePointSix = JavaVersion . parse ( <str> ) ; JavaVersion onePointSeven = JavaVersion . parse ( <str> ) ; JavaVersion onePointSevenPointZero = JavaVersion . parse ( <str> ) ; JavaVersion onePointSevenPointOne = JavaVersion . parse ( <str> ) ; JavaVersion onePointSevenPointTwo = JavaVersion . parse ( <str> ) ; JavaVersion onePointSevenPointOnePointOne = JavaVersion . parse ( <str> ) ; JavaVersion onePointSevenPointTwoPointOne = JavaVersion . parse ( <str> ) ; assertTrue ( onePointSix . compareTo ( onePointSeven ) < <int> ) ; assertTrue ( onePointSeven . compareTo ( onePointSix ) > <int> ) ; assertTrue ( onePointSix . compareTo ( onePointSix ) = = <int> ) ; assertTrue ( onePointSeven . compareTo ( onePointSevenPointZero ) = = <int> ) ; assertTrue ( onePointSevenPointOnePointOne . compareTo ( onePointSevenPointOne ) > <int> ) ; assertTrue ( onePointSevenPointTwo . compareTo ( onePointSevenPointTwoPointOne ) < <int> ) ; } public void testValidVersions ( ) { String [ ] versions = new String [ ] { <str> , <str> , <str> , <str> } ; for ( String version : versions ) { assertTrue ( JavaVersion . isValid ( version ) ) ; } } public void testInvalidVersions ( ) { String [ ] versions = new String [ ] { <str> , <str> , <str> } ; for ( String version : versions ) { assertFalse ( JavaVersion . isValid ( version ) ) ; } } } 
