package org . gradle . api . internal . plugins ; import org . gradle . api . Nullable ; import org . gradle . util . VersionNumber ; import java . io . File ; import java . util . regex . Matcher ; import java . util . regex . Pattern ; public class GroovyJarFile { private static final Pattern FILE_NAME_PATTERN = Pattern . compile ( <str> ) ; private final File file ; private final Matcher matcher ; private GroovyJarFile ( File file , Matcher matcher ) { this . file = file ; this . matcher = matcher ; } public File getFile ( ) { return file ; } public String getBaseName ( ) { return matcher . group ( <int> ) ; } public VersionNumber getVersion ( ) { return VersionNumber . parse ( matcher . group ( <int> ) ) ; } public boolean isGroovyAll ( ) { return getBaseName ( ) . equals ( <str> ) ; } public boolean isIndy ( ) { return matcher . group ( <int> ) ! = null ; } public String getDependencyNotation ( ) { String result = <str> + getBaseName ( ) + <str> + getVersion ( ) ; if ( isIndy ( ) ) { result + = <str> ; } return result ; } @Nullable public static GroovyJarFile parse ( File file ) { Matcher matcher = FILE_NAME_PATTERN . matcher ( file . getName ( ) ) ; return matcher . matches ( ) ? new GroovyJarFile ( file , matcher ) : null ; } } 
