package org . elasticsearch . indices . warmer ; import com . carrotsearch . hppc . cursors . ObjectObjectCursor ; import org . elasticsearch . action . admin . indices . stats . IndicesStatsResponse ; import org . elasticsearch . action . admin . indices . warmer . delete . DeleteWarmerResponse ; import org . elasticsearch . action . admin . indices . warmer . get . GetWarmersResponse ; import org . elasticsearch . action . admin . indices . warmer . put . PutWarmerResponse ; import org . elasticsearch . cluster . ClusterState ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . index . query . QueryBuilders ; import org . elasticsearch . indices . cache . request . IndicesRequestCache ; import org . elasticsearch . search . warmer . IndexWarmerMissingException ; import org . elasticsearch . search . warmer . IndexWarmersMetaData ; import org . elasticsearch . test . ESIntegTestCase ; import org . hamcrest . Matchers ; import java . util . List ; import static org . elasticsearch . test . hamcrest . ElasticsearchAssertions . assertAcked ; import static org . hamcrest . Matchers . equalTo ; import static org . hamcrest . Matchers . greaterThan ; import static org . hamcrest . Matchers . greaterThanOrEqualTo ; import static org . hamcrest . Matchers . is ; public class SimpleIndicesWarmerIT extends ESIntegTestCase { public void testSimpleWarmers ( ) { createIndex ( <str> ) ; ensureGreen ( ) ; PutWarmerResponse putWarmerResponse = client ( ) . admin ( ) . indices ( ) . preparePutWarmer ( <str> ) . setSearchRequest ( client ( ) . prepareSearch ( <str> ) . setTypes ( <str> ) . setQuery ( QueryBuilders . termQuery ( <str> , <str> ) ) ) . execute ( ) . actionGet ( ) ; assertThat ( putWarmerResponse . isAcknowledged ( ) , equalTo ( true ) ) ; putWarmerResponse = client ( ) . admin ( ) . indices ( ) . preparePutWarmer ( <str> ) . setSearchRequest ( client ( ) . prepareSearch ( <str> ) . setTypes ( <str> ) . setQuery ( QueryBuilders . termQuery ( <str> , <str> ) ) ) . execute ( ) . actionGet ( ) ; assertThat ( putWarmerResponse . isAcknowledged ( ) , equalTo ( true ) ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; GetWarmersResponse getWarmersResponse = client ( ) . admin ( ) . indices ( ) . prepareGetWarmers ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( getWarmersResponse . getWarmers ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( getWarmersResponse . getWarmers ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( getWarmersResponse . getWarmers ( ) . get ( <str> ) . get ( <int> ) . name ( ) , equalTo ( <str> ) ) ; assertThat ( getWarmersResponse . getWarmers ( ) . get ( <str> ) . get ( <int> ) . name ( ) , equalTo ( <str> ) ) ; getWarmersResponse = client ( ) . admin ( ) . indices ( ) . prepareGetWarmers ( <str> ) . addWarmers ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( getWarmersResponse . getWarmers ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( getWarmersResponse . getWarmers ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( getWarmersResponse . getWarmers ( ) . get ( <str> ) . get ( <int> ) . name ( ) , equalTo ( <str> ) ) ; assertThat ( getWarmersResponse . getWarmers ( ) . get ( <str> ) . get ( <int> ) . name ( ) , equalTo ( <str> ) ) ; getWarmersResponse = client ( ) . admin ( ) . indices ( ) . prepareGetWarmers ( <str> ) . addWarmers ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( getWarmersResponse . getWarmers ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( getWarmersResponse . getWarmers ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( getWarmersResponse . getWarmers ( ) . get ( <str> ) . get ( <int> ) . name ( ) , equalTo ( <str> ) ) ; getWarmersResponse = client ( ) . admin ( ) . indices ( ) . prepareGetWarmers ( <str> ) . addWarmers ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( getWarmersResponse . getWarmers ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( getWarmersResponse . getWarmers ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( getWarmersResponse . getWarmers ( ) . get ( <str> ) . get ( <int> ) . name ( ) , equalTo ( <str> ) ) ; getWarmersResponse = client ( ) . admin ( ) . indices ( ) . prepareGetWarmers ( <str> ) . addTypes ( <str> ) . addWarmers ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( getWarmersResponse . getWarmers ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( getWarmersResponse . getWarmers ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( getWarmersResponse . getWarmers ( ) . get ( <str> ) . get ( <int> ) . name ( ) , equalTo ( <str> ) ) ; getWarmersResponse = client ( ) . admin ( ) . indices ( ) . prepareGetWarmers ( <str> ) . addTypes ( <str> ) . addWarmers ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( getWarmersResponse . getWarmers ( ) . size ( ) , equalTo ( <int> ) ) ; } public void testTtemplateWarmer ( ) { client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setSource ( <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ) . execute ( ) . actionGet ( ) ; createIndex ( <str> ) ; ensureGreen ( ) ; ClusterState clusterState = client ( ) . admin ( ) . cluster ( ) . prepareState ( ) . execute ( ) . actionGet ( ) . getState ( ) ; IndexWarmersMetaData warmersMetaData = clusterState . metaData ( ) . index ( <str> ) . custom ( IndexWarmersMetaData . TYPE ) ; assertThat ( warmersMetaData , Matchers . notNullValue ( ) ) ; assertThat ( warmersMetaData . entries ( ) . size ( ) , equalTo ( <int> ) ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; } public void testCreateIndexWarmer ( ) { assertAcked ( prepareCreate ( <str> ) . setSource ( <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ) ) ; ClusterState clusterState = client ( ) . admin ( ) . cluster ( ) . prepareState ( ) . execute ( ) . actionGet ( ) . getState ( ) ; IndexWarmersMetaData warmersMetaData = clusterState . metaData ( ) . index ( <str> ) . custom ( IndexWarmersMetaData . TYPE ) ; assertThat ( warmersMetaData , Matchers . notNullValue ( ) ) ; assertThat ( warmersMetaData . entries ( ) . size ( ) , equalTo ( <int> ) ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; } public void testDeleteNonExistentIndexWarmer ( ) { createIndex ( <str> ) ; try { client ( ) . admin ( ) . indices ( ) . prepareDeleteWarmer ( ) . setIndices ( <str> ) . setNames ( <str> ) . execute ( ) . actionGet ( ) ; fail ( <str> ) ; } catch ( IndexWarmerMissingException ex ) { assertThat ( ex . names ( ) [ <int> ] , equalTo ( <str> ) ) ; } } public void testDeleteAllIndexWarmerDoesNotThrowWhenNoWarmers ( ) { createIndex ( <str> ) ; DeleteWarmerResponse deleteWarmerResponse = client ( ) . admin ( ) . indices ( ) . prepareDeleteWarmer ( ) . setIndices ( <str> ) . setNames ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( deleteWarmerResponse . isAcknowledged ( ) , equalTo ( true ) ) ; deleteWarmerResponse = client ( ) . admin ( ) . indices ( ) . prepareDeleteWarmer ( ) . setIndices ( <str> ) . setNames ( <str> , <str> , <str> ) . execute ( ) . actionGet ( ) ; assertThat ( deleteWarmerResponse . isAcknowledged ( ) , equalTo ( true ) ) ; } public void testDeleteIndexWarmerTest ( ) { createIndex ( <str> ) ; ensureGreen ( ) ; PutWarmerResponse putWarmerResponse = client ( ) . admin ( ) . indices ( ) . preparePutWarmer ( <str> ) . setSearchRequest ( client ( ) . prepareSearch ( <str> ) . setTypes ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) ) . get ( ) ; assertThat ( putWarmerResponse . isAcknowledged ( ) , equalTo ( true ) ) ; GetWarmersResponse getWarmersResponse = client ( ) . admin ( ) . indices ( ) . prepareGetWarmers ( <str> ) . get ( ) ; assertThat ( getWarmersResponse . warmers ( ) . size ( ) , equalTo ( <int> ) ) ; ObjectObjectCursor < String , List < IndexWarmersMetaData . Entry > > entry = getWarmersResponse . warmers ( ) . iterator ( ) . next ( ) ; assertThat ( entry . key , equalTo ( <str> ) ) ; assertThat ( entry . value . size ( ) , equalTo ( <int> ) ) ; assertThat ( entry . value . iterator ( ) . next ( ) . name ( ) , equalTo ( <str> ) ) ; DeleteWarmerResponse deleteWarmerResponse = client ( ) . admin ( ) . indices ( ) . prepareDeleteWarmer ( ) . setIndices ( <str> ) . setNames ( <str> ) . get ( ) ; assertThat ( deleteWarmerResponse . isAcknowledged ( ) , equalTo ( true ) ) ; getWarmersResponse = client ( ) . admin ( ) . indices ( ) . prepareGetWarmers ( <str> ) . get ( ) ; assertThat ( getWarmersResponse . warmers ( ) . size ( ) , equalTo ( <int> ) ) ; } public void testEnsureThatIndexWarmersCanBeChangedOnRuntime ( ) throws Exception { createIndex ( <str> ) ; ensureGreen ( ) ; PutWarmerResponse putWarmerResponse = client ( ) . admin ( ) . indices ( ) . preparePutWarmer ( <str> ) . setSearchRequest ( client ( ) . prepareSearch ( <str> ) . setTypes ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) ) . execute ( ) . actionGet ( ) ; assertThat ( putWarmerResponse . isAcknowledged ( ) , equalTo ( true ) ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; client ( ) . admin ( ) . indices ( ) . prepareUpdateSettings ( <str> ) . setSettings ( Settings . builder ( ) . put ( <str> , false ) ) . execute ( ) . actionGet ( ) ; long warmerRunsAfterDisabling = getWarmerRuns ( ) ; assertThat ( warmerRunsAfterDisabling , greaterThanOrEqualTo ( <int> ) ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; assertThat ( getWarmerRuns ( ) , equalTo ( warmerRunsAfterDisabling ) ) ; } public void testGettingAllWarmersUsingAllAndWildcardsShouldWork ( ) throws Exception { createIndex ( <str> ) ; ensureGreen ( ) ; PutWarmerResponse putWarmerResponse = client ( ) . admin ( ) . indices ( ) . preparePutWarmer ( <str> ) . setSearchRequest ( client ( ) . prepareSearch ( <str> ) . setTypes ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) ) . execute ( ) . actionGet ( ) ; assertThat ( putWarmerResponse . isAcknowledged ( ) , equalTo ( true ) ) ; PutWarmerResponse anotherPutWarmerResponse = client ( ) . admin ( ) . indices ( ) . preparePutWarmer ( <str> ) . setSearchRequest ( client ( ) . prepareSearch ( <str> ) . setTypes ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) ) . execute ( ) . actionGet ( ) ; assertThat ( anotherPutWarmerResponse . isAcknowledged ( ) , equalTo ( true ) ) ; GetWarmersResponse getWarmersResponse = client ( ) . admin ( ) . indices ( ) . prepareGetWarmers ( <str> ) . addWarmers ( <str> ) . get ( ) ; assertThat ( getWarmersResponse . warmers ( ) . size ( ) , is ( <int> ) ) ; getWarmersResponse = client ( ) . admin ( ) . indices ( ) . prepareGetWarmers ( <str> ) . addWarmers ( <str> ) . get ( ) ; assertThat ( getWarmersResponse . warmers ( ) . size ( ) , is ( <int> ) ) ; getWarmersResponse = client ( ) . admin ( ) . indices ( ) . prepareGetWarmers ( <str> ) . addWarmers ( <str> ) . get ( ) ; assertThat ( getWarmersResponse . warmers ( ) . size ( ) , is ( <int> ) ) ; getWarmersResponse = client ( ) . admin ( ) . indices ( ) . prepareGetWarmers ( <str> ) . addWarmers ( <str> , <str> ) . get ( ) ; assertThat ( getWarmersResponse . warmers ( ) . size ( ) , is ( <int> ) ) ; } private long getWarmerRuns ( ) { IndicesStatsResponse indicesStatsResponse = client ( ) . admin ( ) . indices ( ) . prepareStats ( <str> ) . clear ( ) . setWarmer ( true ) . execute ( ) . actionGet ( ) ; return indicesStatsResponse . getIndex ( <str> ) . getPrimaries ( ) . warmer . total ( ) ; } public void testQueryCacheOnWarmer ( ) { createIndex ( <str> ) ; ensureGreen ( ) ; assertAcked ( client ( ) . admin ( ) . indices ( ) . prepareUpdateSettings ( <str> ) . setSettings ( Settings . builder ( ) . put ( IndicesRequestCache . INDEX_CACHE_REQUEST_ENABLED , false ) ) ) ; logger . info ( <str> ) ; assertAcked ( client ( ) . admin ( ) . indices ( ) . preparePutWarmer ( <str> ) . setSearchRequest ( client ( ) . prepareSearch ( <str> ) . setTypes ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) ) . get ( ) ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; assertThat ( client ( ) . admin ( ) . indices ( ) . prepareStats ( <str> ) . setRequestCache ( true ) . get ( ) . getTotal ( ) . getRequestCache ( ) . getMemorySizeInBytes ( ) , equalTo ( <int> l ) ) ; logger . info ( <str> ) ; assertAcked ( client ( ) . admin ( ) . indices ( ) . preparePutWarmer ( <str> ) . setSearchRequest ( client ( ) . prepareSearch ( <str> ) . setTypes ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . setRequestCache ( true ) ) . get ( ) ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; assertThat ( client ( ) . admin ( ) . indices ( ) . prepareStats ( <str> ) . setRequestCache ( true ) . get ( ) . getTotal ( ) . getRequestCache ( ) . getMemorySizeInBytes ( ) , greaterThan ( <int> l ) ) ; client ( ) . admin ( ) . indices ( ) . prepareClearCache ( ) . setRequestCache ( true ) . get ( ) ; assertThat ( client ( ) . admin ( ) . indices ( ) . prepareStats ( <str> ) . setRequestCache ( true ) . get ( ) . getTotal ( ) . getRequestCache ( ) . getMemorySizeInBytes ( ) , equalTo ( <int> l ) ) ; logger . info ( <str> ) ; assertAcked ( client ( ) . admin ( ) . indices ( ) . prepareUpdateSettings ( <str> ) . setSettings ( Settings . builder ( ) . put ( IndicesRequestCache . INDEX_CACHE_REQUEST_ENABLED , true ) ) ) ; assertAcked ( client ( ) . admin ( ) . indices ( ) . preparePutWarmer ( <str> ) . setSearchRequest ( client ( ) . prepareSearch ( <str> ) . setTypes ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) ) . get ( ) ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; assertThat ( client ( ) . admin ( ) . indices ( ) . prepareStats ( <str> ) . setRequestCache ( true ) . get ( ) . getTotal ( ) . getRequestCache ( ) . getMemorySizeInBytes ( ) , greaterThan ( <int> l ) ) ; } } 
