package org . elasticsearch . search ; import org . elasticsearch . common . inject . ModuleTestCase ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . search . highlight . CustomHighlighter ; import org . elasticsearch . search . highlight . Highlighter ; import org . elasticsearch . search . highlight . PlainHighlighter ; import org . elasticsearch . search . suggest . CustomSuggester ; import org . elasticsearch . search . suggest . Suggester ; import org . elasticsearch . search . suggest . phrase . PhraseSuggester ; public class SearchModuleTests extends ModuleTestCase { public void testDoubleRegister ( ) { SearchModule module = new SearchModule ( ) ; try { module . registerHighlighter ( <str> , PlainHighlighter . class ) ; } catch ( IllegalArgumentException e ) { assertEquals ( e . getMessage ( ) , <str> ) ; } try { module . registerSuggester ( <str> , PhraseSuggester . class ) ; } catch ( IllegalArgumentException e ) { assertEquals ( e . getMessage ( ) , <str> ) ; } } public void testRegisterSuggester ( ) { SearchModule module = new SearchModule ( ) ; module . registerSuggester ( <str> , CustomSuggester . class ) ; try { module . registerSuggester ( <str> , CustomSuggester . class ) ; } catch ( IllegalArgumentException e ) { assertEquals ( e . getMessage ( ) , <str> ) ; } assertMapMultiBinding ( module , Suggester . class , CustomSuggester . class ) ; } public void testRegisterHighlighter ( ) { SearchModule module = new SearchModule ( ) ; module . registerHighlighter ( <str> , CustomHighlighter . class ) ; try { module . registerHighlighter ( <str> , CustomHighlighter . class ) ; } catch ( IllegalArgumentException e ) { assertEquals ( e . getMessage ( ) , <str> ) ; } assertMapMultiBinding ( module , Highlighter . class , CustomHighlighter . class ) ; } } 
