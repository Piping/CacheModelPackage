package org . elasticsearch . index . fielddata . ordinals ; import org . apache . lucene . index . MultiDocValues . OrdinalMap ; import org . apache . lucene . index . RandomAccessOrds ; import org . apache . lucene . util . BytesRef ; import org . apache . lucene . util . LongValues ; import org . elasticsearch . index . fielddata . AbstractRandomAccessOrds ; public class GlobalOrdinalMapping extends AbstractRandomAccessOrds { private final RandomAccessOrds values ; private final OrdinalMap ordinalMap ; private final LongValues mapping ; private final RandomAccessOrds [ ] bytesValues ; GlobalOrdinalMapping ( OrdinalMap ordinalMap , RandomAccessOrds [ ] bytesValues , int segmentIndex ) { super ( ) ; this . values = bytesValues [ segmentIndex ] ; this . bytesValues = bytesValues ; this . ordinalMap = ordinalMap ; this . mapping = ordinalMap . getGlobalOrds ( segmentIndex ) ; } @Override public long getValueCount ( ) { return ordinalMap . getValueCount ( ) ; } public final long getGlobalOrd ( long segmentOrd ) { return mapping . get ( segmentOrd ) ; } @Override public long ordAt ( int index ) { return getGlobalOrd ( values . ordAt ( index ) ) ; } @Override public void doSetDocument ( int docId ) { values . setDocument ( docId ) ; } @Override public int cardinality ( ) { return values . cardinality ( ) ; } @Override public BytesRef lookupOrd ( long globalOrd ) { final long segmentOrd = ordinalMap . getFirstSegmentOrd ( globalOrd ) ; int readerIndex = ordinalMap . getFirstSegmentNumber ( globalOrd ) ; return bytesValues [ readerIndex ] . lookupOrd ( segmentOrd ) ; } } 
