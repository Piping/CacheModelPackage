package com . google . common . io ; import java . io . File ; import java . io . IOException ; public interface SourceSinkFactory < S , T > { T getExpected ( T data ) ; public abstract void tearDown ( ) throws IOException ; public interface SourceFactory < S , T > extends SourceSinkFactory < S , T > { S createSource ( T data ) throws IOException ; } public interface SinkFactory < S , T > extends SourceSinkFactory < S , T > { S createSink ( ) throws IOException ; T getSinkContents ( ) throws IOException ; } public interface ByteSourceFactory extends SourceFactory < ByteSource , byte [ ] > { } public interface ByteSinkFactory extends SinkFactory < ByteSink , byte [ ] > { } public interface CharSourceFactory extends SourceFactory < CharSource , String > { } public interface CharSinkFactory extends SinkFactory < CharSink , String > { } } 
