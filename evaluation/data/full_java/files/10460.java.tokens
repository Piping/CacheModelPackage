package com . google . common . eventbus . outside ; import com . google . common . eventbus . EventBus ; import com . google . common . eventbus . Subscribe ; import junit . framework . TestCase ; import java . util . concurrent . atomic . AtomicInteger ; import java . util . concurrent . atomic . AtomicReference ; public class OutsideEventBusTest extends TestCase { public void testAnonymous ( ) { final AtomicReference < String > holder = new AtomicReference < String > ( ) ; final AtomicInteger deliveries = new AtomicInteger ( ) ; EventBus bus = new EventBus ( ) ; bus . register ( new Object ( ) { @Subscribe public void accept ( String str ) { holder . set ( str ) ; deliveries . incrementAndGet ( ) ; } } ) ; String EVENT = <str> ; bus . post ( EVENT ) ; assertEquals ( <str> , <int> , deliveries . get ( ) ) ; assertEquals ( <str> , EVENT , holder . get ( ) ) ; } } 
