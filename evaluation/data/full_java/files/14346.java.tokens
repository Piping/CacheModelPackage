package org . gradle . model . internal . inspect ; import com . google . common . collect . ImmutableSetMultimap ; import com . google . common . collect . Multimap ; import org . gradle . model . internal . core . * ; import org . gradle . model . internal . core . rule . describe . ModelRuleDescriptor ; public class ProjectionOnlyNodeInitializer implements NodeInitializer { private final ModelProjection projection ; public ProjectionOnlyNodeInitializer ( ModelProjection projection ) { this . projection = projection ; } @Override public Multimap < ModelActionRole , ModelAction < ? > > getActions ( ModelReference < ? > subject , ModelRuleDescriptor descriptor ) { return ImmutableSetMultimap . < ModelActionRole , ModelAction < ? > > builder ( ) . put ( ModelActionRole . Discover , AddProjectionsAction . of ( subject , descriptor , projection ) ) . build ( ) ; } } 
