package com . badlogic . gdx . physics . bullet . extras ; import com . badlogic . gdx . physics . bullet . BulletBase ; import com . badlogic . gdx . physics . bullet . linearmath . * ; import com . badlogic . gdx . physics . bullet . collision . * ; import com . badlogic . gdx . physics . bullet . dynamics . * ; import com . badlogic . gdx . math . Vector3 ; import com . badlogic . gdx . math . Quaternion ; import com . badlogic . gdx . math . Matrix3 ; import com . badlogic . gdx . math . Matrix4 ; public class Extras { public final static Vector3 staticVector3 = new Vector3 ( ) ; public final static com . badlogic . gdx . utils . Pool < Vector3 > poolVector3 = new com . badlogic . gdx . utils . Pool < Vector3 > ( ) { @Override protected Vector3 newObject ( ) { return new Vector3 ( ) ; } } ; public final static Quaternion staticQuaternion = new Quaternion ( ) ; public final static com . badlogic . gdx . utils . Pool < Quaternion > poolQuaternion = new com . badlogic . gdx . utils . Pool < Quaternion > ( ) { @Override protected Quaternion newObject ( ) { return new Quaternion ( ) ; } } ; public final static Matrix3 staticMatrix3 = new Matrix3 ( ) ; public final static com . badlogic . gdx . utils . Pool < Matrix3 > poolMatrix3 = new com . badlogic . gdx . utils . Pool < Matrix3 > ( ) { @Override protected Matrix3 newObject ( ) { return new Matrix3 ( ) ; } } ; public final static Matrix4 staticMatrix4 = new Matrix4 ( ) ; public final static com . badlogic . gdx . utils . Pool < Matrix4 > poolMatrix4 = new com . badlogic . gdx . utils . Pool < Matrix4 > ( ) { @Override protected Matrix4 newObject ( ) { return new Matrix4 ( ) ; } } ; } 
