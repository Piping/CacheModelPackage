package org . eclipse . debug . examples . core . midi . launcher ; import javax . sound . midi . Sequencer ; import org . eclipse . core . runtime . IStatus ; import org . eclipse . debug . core . DebugEvent ; import org . eclipse . debug . core . DebugPlugin ; public abstract class SequencerControl { private MidiLaunch fLaunch ; private String fName ; public SequencerControl ( String name , MidiLaunch launch ) { fName = name ; fLaunch = launch ; } public MidiLaunch getLaunch ( ) { return fLaunch ; } public Sequencer getSequencer ( ) { return fLaunch . getSequencer ( ) ; } public String getName ( ) { return fName ; } public abstract String getValue ( ) ; public abstract boolean isEditable ( ) ; public abstract IStatus validateValue ( String value ) ; public abstract IStatus setValue ( String newValue ) ; public void fireEvent ( DebugEvent event ) { DebugPlugin . getDefault ( ) . fireDebugEventSet ( new DebugEvent [ ] { event } ) ; } @Override public boolean equals ( Object obj ) { if ( obj ! = null ) { if ( getClass ( ) . equals ( obj . getClass ( ) ) ) { return ( ( SequencerControl ) obj ) . getSequencer ( ) . equals ( getSequencer ( ) ) ; } } return false ; } @Override public int hashCode ( ) { return getSequencer ( ) . hashCode ( ) + getClass ( ) . hashCode ( ) ; } } 
