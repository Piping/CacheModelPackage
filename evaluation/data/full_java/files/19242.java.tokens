package io . netty . handler . codec . spdy ; import io . netty . handler . codec . Headers ; import io . netty . util . AsciiString ; import java . util . Iterator ; import java . util . List ; import java . util . Map . Entry ; public interface SpdyHeaders extends Headers < CharSequence , CharSequence , SpdyHeaders > { final class HttpNames { public static final AsciiString HOST = new AsciiString ( <str> ) ; public static final AsciiString METHOD = new AsciiString ( <str> ) ; public static final AsciiString PATH = new AsciiString ( <str> ) ; public static final AsciiString SCHEME = new AsciiString ( <str> ) ; public static final AsciiString STATUS = new AsciiString ( <str> ) ; public static final AsciiString VERSION = new AsciiString ( <str> ) ; private HttpNames ( ) { } } String getAsString ( CharSequence name ) ; List < String > getAllAsString ( CharSequence name ) ; Iterator < Entry < String , String > > iteratorAsString ( ) ; boolean contains ( CharSequence name , CharSequence value , boolean ignoreCase ) ; } 
