package org . apache . cassandra . config ; import java . util . Set ; import java . util . concurrent . TimeUnit ; import com . google . common . collect . Sets ; import org . apache . cassandra . config . EncryptionOptions . ClientEncryptionOptions ; import org . apache . cassandra . config . EncryptionOptions . ServerEncryptionOptions ; public class Config { public static final String PROPERTY_PREFIX = <str> ; public String cluster_name = <str> ; public String authenticator ; public String authorizer ; public String role_manager ; public volatile int permissions_validity_in_ms = <int> ; public int permissions_cache_max_entries = <int> ; public volatile int permissions_update_interval_in_ms = - <int> ; public volatile int roles_validity_in_ms = <int> ; public int roles_cache_max_entries = <int> ; public volatile int roles_update_interval_in_ms = - <int> ; public String partitioner ; public Boolean auto_bootstrap = true ; public volatile boolean hinted_handoff_enabled = true ; public Set < String > hinted_handoff_disabled_datacenters = Sets . newConcurrentHashSet ( ) ; public volatile Integer max_hint_window_in_ms = <int> * <int> * <int> ; public String hints_directory ; public ParameterizedClass seed_provider ; public DiskAccessMode disk_access_mode = DiskAccessMode . auto ; public DiskFailurePolicy disk_failure_policy = DiskFailurePolicy . ignore ; public CommitFailurePolicy commit_failure_policy = CommitFailurePolicy . stop ; public String initial_token ; public Integer num_tokens = <int> ; public String allocate_tokens_for_keyspace = null ; public volatile Long request_timeout_in_ms = <int> ; public volatile Long read_request_timeout_in_ms = <int> ; public volatile Long range_request_timeout_in_ms = <int> ; public volatile Long write_request_timeout_in_ms = <int> ; public volatile Long counter_write_request_timeout_in_ms = <int> ; public volatile Long cas_contention_timeout_in_ms = <int> ; public volatile Long truncate_request_timeout_in_ms = <int> ; public Integer streaming_socket_timeout_in_ms = <int> ; public boolean cross_node_timeout = false ; public volatile Double phi_convict_threshold = <float> ; public Integer concurrent_reads = <int> ; public Integer concurrent_writes = <int> ; public Integer concurrent_counter_writes = <int> ; public Integer concurrent_materialized_view_writes = <int> ; @Deprecated public Integer concurrent_replicates = null ; public Integer memtable_flush_writers = null ; public Integer memtable_heap_space_in_mb ; public Integer memtable_offheap_space_in_mb ; public Float memtable_cleanup_threshold = null ; public Integer storage_port = <int> ; public Integer ssl_storage_port = <int> ; public String listen_address ; public String listen_interface ; public Boolean listen_interface_prefer_ipv6 = false ; public String broadcast_address ; public Boolean listen_on_broadcast_address = false ; public String internode_authenticator ; public Boolean start_rpc = true ; public String rpc_address ; public String rpc_interface ; public Boolean rpc_interface_prefer_ipv6 = false ; public String broadcast_rpc_address ; public Integer rpc_port = <int> ; public Integer rpc_listen_backlog = <int> ; public String rpc_server_type = <str> ; public Boolean rpc_keepalive = true ; public Integer rpc_min_threads = <int> ; public Integer rpc_max_threads = Integer . MAX_VALUE ; public Integer rpc_send_buff_size_in_bytes ; public Integer rpc_recv_buff_size_in_bytes ; public Integer internode_send_buff_size_in_bytes ; public Integer internode_recv_buff_size_in_bytes ; public Boolean start_native_transport = false ; public Integer native_transport_port = <int> ; public Integer native_transport_port_ssl = null ; public Integer native_transport_max_threads = <int> ; public Integer native_transport_max_frame_size_in_mb = <int> ; public volatile Long native_transport_max_concurrent_connections = - <int> ; public volatile Long native_transport_max_concurrent_connections_per_ip = - <int> ; @Deprecated public Integer thrift_max_message_length_in_mb = <int> ; public Integer thrift_framed_transport_size_in_mb = <int> ; public Boolean snapshot_before_compaction = false ; public Boolean auto_snapshot = true ; public Integer column_index_size_in_kb = <int> ; public volatile int batch_size_warn_threshold_in_kb = <int> ; public volatile int batch_size_fail_threshold_in_kb = <int> ; public Integer concurrent_compactors ; public volatile Integer compaction_throughput_mb_per_sec = <int> ; public volatile Integer compaction_large_partition_warning_threshold_mb = <int> ; public Integer max_streaming_retries = <int> ; public volatile Integer stream_throughput_outbound_megabits_per_sec = <int> ; public volatile Integer inter_dc_stream_throughput_outbound_megabits_per_sec = <int> ; public String [ ] data_file_directories = new String [ <int> ] ; public String saved_caches_directory ; public String commitlog_directory ; public Integer commitlog_total_space_in_mb ; public CommitLogSync commitlog_sync ; public Double commitlog_sync_batch_window_in_ms ; public Integer commitlog_sync_period_in_ms ; public int commitlog_segment_size_in_mb = <int> ; public ParameterizedClass commitlog_compression ; public int commitlog_max_compression_buffers_in_pool = <int> ; public TransparentDataEncryptionOptions transparent_data_encryption_options = new TransparentDataEncryptionOptions ( ) ; public Integer max_mutation_size_in_kb ; @Deprecated public int commitlog_periodic_queue_size = - <int> ; public String endpoint_snitch ; public Boolean dynamic_snitch = true ; public Integer dynamic_snitch_update_interval_in_ms = <int> ; public Integer dynamic_snitch_reset_interval_in_ms = <int> ; public Double dynamic_snitch_badness_threshold = <float> ; public String request_scheduler ; public RequestSchedulerId request_scheduler_id ; public RequestSchedulerOptions request_scheduler_options ; public ServerEncryptionOptions server_encryption_options = new ServerEncryptionOptions ( ) ; public ClientEncryptionOptions client_encryption_options = new ClientEncryptionOptions ( ) ; public ServerEncryptionOptions encryption_options ; public InternodeCompression internode_compression = InternodeCompression . none ; @Deprecated public Integer index_interval = null ; public int hinted_handoff_throttle_in_kb = <int> ; public int batchlog_replay_throttle_in_kb = <int> ; public int max_hints_delivery_threads = <int> ; public int hints_flush_period_in_ms = <int> ; public int max_hints_file_size_in_mb = <int> ; public int sstable_preemptive_open_interval_in_mb = <int> ; public volatile boolean incremental_backups = false ; public boolean trickle_fsync = false ; public int trickle_fsync_interval_in_kb = <int> ; public Long key_cache_size_in_mb = null ; public volatile int key_cache_save_period = <int> ; public volatile int key_cache_keys_to_save = Integer . MAX_VALUE ; public String row_cache_class_name = <str> ; public long row_cache_size_in_mb = <int> ; public volatile int row_cache_save_period = <int> ; public volatile int row_cache_keys_to_save = Integer . MAX_VALUE ; public Long counter_cache_size_in_mb = null ; public volatile int counter_cache_save_period = <int> ; public volatile int counter_cache_keys_to_save = Integer . MAX_VALUE ; private static boolean isClientMode = false ; public Integer file_cache_size_in_mb = <int> ; public boolean buffer_pool_use_heap_if_exhausted = true ; public DiskOptimizationStrategy disk_optimization_strategy = DiskOptimizationStrategy . ssd ; public double disk_optimization_estimate_percentile = <float> ; public double disk_optimization_page_cross_chance = <float> ; public boolean inter_dc_tcp_nodelay = true ; public MemtableAllocationType memtable_allocation_type = MemtableAllocationType . heap_buffers ; private static boolean outboundBindAny = false ; public volatile int tombstone_warn_threshold = <int> ; public volatile int tombstone_failure_threshold = <int> ; public volatile Long index_summary_capacity_in_mb ; public volatile int index_summary_resize_interval_in_minutes = <int> ; public int gc_warn_threshold_in_ms = <int> ; public int tracetype_query_ttl = ( int ) TimeUnit . DAYS . toSeconds ( <int> ) ; public int tracetype_repair_ttl = ( int ) TimeUnit . DAYS . toSeconds ( <int> ) ; public String otc_coalescing_strategy = <str> ; public static final int otc_coalescing_window_us_default = <int> ; public int otc_coalescing_window_us = otc_coalescing_window_us_default ; public int windows_timer_interval = <int> ; public boolean enable_user_defined_functions = false ; public boolean enable_scripted_user_defined_functions = false ; public boolean enable_user_defined_functions_threads = true ; public long user_defined_function_warn_timeout = <int> ; public long user_defined_function_fail_timeout = <int> ; public UserFunctionTimeoutPolicy user_function_timeout_policy = UserFunctionTimeoutPolicy . die ; public static boolean getOutboundBindAny ( ) { return outboundBindAny ; } public static void setOutboundBindAny ( boolean value ) { outboundBindAny = value ; } public static boolean isClientMode ( ) { return isClientMode ; } public static void setClientMode ( boolean clientMode ) { isClientMode = clientMode ; } public enum CommitLogSync { periodic , batch } public enum InternodeCompression { all , none , dc } public enum DiskAccessMode { auto , mmap , mmap_index_only , standard , } public enum MemtableAllocationType { unslabbed_heap_buffers , heap_buffers , offheap_buffers , offheap_objects } public enum DiskFailurePolicy { best_effort , stop , ignore , stop_paranoid , die } public enum CommitFailurePolicy { stop , stop_commit , ignore , die , } public enum UserFunctionTimeoutPolicy { ignore , die , die_immediate } public enum RequestSchedulerId { keyspace } public enum DiskOptimizationStrategy { ssd , spinning } } 
