package org . gradle . api . tasks . javadoc ; import org . gradle . api . InvalidUserDataException ; import org . gradle . api . internal . ConventionTask ; import org . gradle . api . internal . file . collections . SimpleFileCollection ; import org . gradle . api . tasks . AbstractConventionTaskTest ; import org . gradle . util . WrapUtil ; import org . junit . Before ; import org . junit . Test ; import java . util . Set ; import static org . hamcrest . Matchers . equalTo ; import static org . junit . Assert . assertThat ; public class GroovydocTest extends AbstractConventionTaskTest { private Groovydoc groovydoc ; @Before public void setUp ( ) { groovydoc = createTask ( Groovydoc . class ) ; } public ConventionTask getTask ( ) { return groovydoc ; } @Test ( expected = InvalidUserDataException . class ) public void addLinkWithNullUrl ( ) { groovydoc . link ( null , <str> ) ; } @Test ( expected = InvalidUserDataException . class ) public void addLinkWithEmptyPackageList ( ) { groovydoc . link ( <str> ) ; } @Test ( expected = InvalidUserDataException . class ) public void addLinkWithNullPackage ( ) { groovydoc . link ( <str> , <str> , null ) ; } @Test public void addLink ( ) { String url1 = <str> ; String url2 = <str> ; String package1 = <str> ; String package2 = <str> ; String package3 = <str> ; groovydoc . link ( url1 , package1 , package2 ) ; groovydoc . link ( url2 , package3 ) ; assertThat ( groovydoc . getLinks ( ) , equalTo ( WrapUtil . toSet ( new Groovydoc . Link ( url1 , package1 , package2 ) , new Groovydoc . Link ( url2 , package3 ) ) ) ) ; } @Test public void setLinks ( ) { String url1 = <str> ; String url2 = <str> ; String package1 = <str> ; String package2 = <str> ; groovydoc . link ( url1 , package1 ) ; Set < Groovydoc . Link > newLinkSet = WrapUtil . toSet ( new Groovydoc . Link ( url2 , package2 ) ) ; groovydoc . setLinks ( newLinkSet ) ; assertThat ( groovydoc . getLinks ( ) , equalTo ( newLinkSet ) ) ; } @Test ( expected = InvalidUserDataException . class ) public void groovyClasspathMustNotBeEmpty ( ) { groovydoc . setGroovyClasspath ( new SimpleFileCollection ( ) ) ; groovydoc . generate ( ) ; } } 
