package com . badlogic . gdx . tests ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . graphics . GL20 ; import com . badlogic . gdx . graphics . Texture ; import com . badlogic . gdx . graphics . glutils . ImmediateModeRenderer ; import com . badlogic . gdx . graphics . glutils . ImmediateModeRenderer20 ; import com . badlogic . gdx . math . Matrix4 ; import com . badlogic . gdx . tests . utils . GdxTest ; public class ImmediateModeRendererTest extends GdxTest { Matrix4 projMatrix = new Matrix4 ( ) ; ImmediateModeRenderer renderer ; Texture texture ; @Override public void dispose ( ) { texture . dispose ( ) ; } @Override public void render ( ) { Gdx . gl . glClear ( GL20 . GL_COLOR_BUFFER_BIT ) ; Gdx . gl . glEnable ( GL20 . GL_TEXTURE_2D ) ; texture . bind ( ) ; renderer . begin ( projMatrix , GL20 . GL_TRIANGLES ) ; renderer . texCoord ( <int> , <int> ) ; renderer . color ( <int> , <int> , <int> , <int> ) ; renderer . vertex ( - <float> , - <float> , <int> ) ; renderer . texCoord ( <int> , <int> ) ; renderer . color ( <int> , <int> , <int> , <int> ) ; renderer . vertex ( <float> , - <float> , <int> ) ; renderer . texCoord ( <float> , <int> ) ; renderer . color ( <int> , <int> , <int> , <int> ) ; renderer . vertex ( <float> , <float> , <int> ) ; renderer . end ( ) ; } @Override public void create ( ) { renderer = new ImmediateModeRenderer20 ( false , true , <int> ) ; texture = new Texture ( Gdx . files . internal ( <str> ) ) ; } } 
