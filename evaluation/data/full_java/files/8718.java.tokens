package org . elasticsearch . plugin . discovery . azure ; import org . elasticsearch . cloud . azure . AzureDiscoveryModule ; import org . elasticsearch . common . inject . Module ; import org . elasticsearch . common . logging . ESLogger ; import org . elasticsearch . common . logging . Loggers ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . discovery . DiscoveryModule ; import org . elasticsearch . discovery . azure . AzureDiscovery ; import org . elasticsearch . discovery . azure . AzureUnicastHostsProvider ; import org . elasticsearch . plugins . Plugin ; import java . util . Collection ; import java . util . Collections ; public class AzureDiscoveryPlugin extends Plugin { private final Settings settings ; protected final ESLogger logger = Loggers . getLogger ( AzureDiscoveryPlugin . class ) ; public AzureDiscoveryPlugin ( Settings settings ) { this . settings = settings ; logger . trace ( <str> ) ; } @Override public String name ( ) { return <str> ; } @Override public String description ( ) { return <str> ; } @Override public Collection < Module > nodeModules ( ) { return Collections . singletonList ( ( Module ) new AzureDiscoveryModule ( settings ) ) ; } public void onModule ( DiscoveryModule discoveryModule ) { if ( AzureDiscoveryModule . isDiscoveryReady ( settings , logger ) ) { discoveryModule . addDiscoveryType ( <str> , AzureDiscovery . class ) ; discoveryModule . addUnicastHostProvider ( AzureUnicastHostsProvider . class ) ; } } } 
