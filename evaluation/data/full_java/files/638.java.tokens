package org . apache . cassandra . hints ; import java . net . InetAddress ; import java . util . UUID ; import org . slf4j . Logger ; import org . slf4j . LoggerFactory ; import org . apache . cassandra . db . partitions . PartitionUpdate ; import org . apache . cassandra . net . IVerbHandler ; import org . apache . cassandra . net . MessageIn ; import org . apache . cassandra . net . MessagingService ; import org . apache . cassandra . serializers . MarshalException ; import org . apache . cassandra . service . StorageService ; public final class HintVerbHandler implements IVerbHandler < HintMessage > { private static final Logger logger = LoggerFactory . getLogger ( HintVerbHandler . class ) ; public void doVerb ( MessageIn < HintMessage > message , int id ) { UUID hostId = message . payload . hostId ; Hint hint = message . payload . hint ; if ( hint = = null ) { logger . trace ( <str> , hostId , message . payload . unknownTableID ) ; reply ( id , message . from ) ; return ; } try { hint . mutation . getPartitionUpdates ( ) . forEach ( PartitionUpdate : : validate ) ; } catch ( MarshalException e ) { logger . warn ( <str> , hostId ) ; reply ( id , message . from ) ; return ; } if ( hostId . equals ( StorageService . instance . getLocalHostUUID ( ) ) ) hint . apply ( ) ; else HintsService . instance . write ( hostId , hint ) ; reply ( id , message . from ) ; } private static void reply ( int id , InetAddress to ) { MessagingService . instance ( ) . sendReply ( HintResponse . message , id , to ) ; } } 
