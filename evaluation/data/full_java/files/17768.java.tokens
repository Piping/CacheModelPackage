package com . badlogic . gdx . graphics . g2d . freetype ; import com . badlogic . gdx . assets . AssetDescriptor ; import com . badlogic . gdx . assets . AssetLoaderParameters ; import com . badlogic . gdx . assets . AssetManager ; import com . badlogic . gdx . assets . loaders . AsynchronousAssetLoader ; import com . badlogic . gdx . assets . loaders . FileHandleResolver ; import com . badlogic . gdx . files . FileHandle ; import com . badlogic . gdx . graphics . g2d . BitmapFont ; import com . badlogic . gdx . graphics . g2d . BitmapFont . BitmapFontData ; import com . badlogic . gdx . graphics . g2d . freetype . FreeTypeFontGenerator . FreeTypeBitmapFontData ; import com . badlogic . gdx . graphics . g2d . freetype . FreeTypeFontGenerator . FreeTypeFontParameter ; import com . badlogic . gdx . utils . Array ; public class FreetypeFontLoader extends AsynchronousAssetLoader < BitmapFont , FreetypeFontLoader . FreeTypeFontLoaderParameter > { public FreetypeFontLoader ( FileHandleResolver resolver ) { super ( resolver ) ; } public static class FreeTypeFontLoaderParameter extends AssetLoaderParameters < BitmapFont > { public String fontFileName ; public FreeTypeFontParameter fontParameters = new FreeTypeFontParameter ( ) ; } @Override public void loadAsync ( AssetManager manager , String fileName , FileHandle file , FreeTypeFontLoaderParameter parameter ) { if ( parameter = = null ) throw new RuntimeException ( <str> ) ; } @Override public BitmapFont loadSync ( AssetManager manager , String fileName , FileHandle file , FreeTypeFontLoaderParameter parameter ) { if ( parameter = = null ) throw new RuntimeException ( <str> ) ; FreeTypeFontGenerator generator = manager . get ( parameter . fontFileName + <str> , FreeTypeFontGenerator . class ) ; BitmapFont font = generator . generateFont ( parameter . fontParameters ) ; return font ; } @Override public Array < AssetDescriptor > getDependencies ( String fileName , FileHandle file , FreeTypeFontLoaderParameter parameter ) { Array < AssetDescriptor > deps = new Array < AssetDescriptor > ( ) ; deps . add ( new AssetDescriptor < FreeTypeFontGenerator > ( parameter . fontFileName + <str> , FreeTypeFontGenerator . class ) ) ; return deps ; } } 
