package org . gradle . api . internal . artifacts . repositories . resolver ; import org . gradle . api . artifacts . component . ModuleComponentIdentifier ; import org . gradle . internal . component . external . model . DefaultModuleComponentIdentifier ; public class MavenUniqueSnapshotComponentIdentifier extends DefaultModuleComponentIdentifier { private final String timestamp ; public MavenUniqueSnapshotComponentIdentifier ( String group , String module , String version , String timestamp ) { super ( group , module , version ) ; this . timestamp = timestamp ; } public MavenUniqueSnapshotComponentIdentifier ( ModuleComponentIdentifier baseIdentifier , String timestamp ) { super ( baseIdentifier . getGroup ( ) , baseIdentifier . getModule ( ) , baseIdentifier . getVersion ( ) ) ; this . timestamp = timestamp ; } @Override public boolean equals ( Object o ) { return super . equals ( o ) & & ( ( MavenUniqueSnapshotComponentIdentifier ) o ) . timestamp . equals ( timestamp ) ; } @Override public int hashCode ( ) { return super . hashCode ( ) + timestamp . hashCode ( ) ; } @Override public String getDisplayName ( ) { return String . format ( <str> , getGroup ( ) , getModule ( ) , getSnapshotVersion ( ) , timestamp ) ; } public String getTimestamp ( ) { return timestamp ; } public String getSnapshotVersion ( ) { return getVersion ( ) . replace ( timestamp , <str> ) ; } public ModuleComponentIdentifier getSnapshotComponent ( ) { return DefaultModuleComponentIdentifier . newId ( getGroup ( ) , getModule ( ) , getSnapshotVersion ( ) ) ; } public String getTimestampedVersion ( ) { return getVersion ( ) . replace ( <str> , timestamp ) ; } } 
