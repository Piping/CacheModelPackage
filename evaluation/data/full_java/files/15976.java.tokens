package org . gradle . tooling . internal . consumer . connection ; import org . gradle . tooling . internal . adapter . ProtocolToModelAdapter ; import org . gradle . tooling . internal . consumer . versioning . ModelMapping ; import org . gradle . tooling . internal . consumer . versioning . VersionDetails ; import org . gradle . tooling . internal . protocol . ConnectionVersion4 ; import org . gradle . tooling . internal . protocol . ModelBuilder ; import org . gradle . tooling . model . gradle . BuildInvocations ; import org . gradle . tooling . model . gradle . GradleBuild ; public class ModelBuilderBackedConsumerConnection extends AbstractPost12ConsumerConnection { private final ModelProducer modelProducer ; private final ActionRunner actionRunner ; public ModelBuilderBackedConsumerConnection ( ConnectionVersion4 delegate , ModelMapping modelMapping , ProtocolToModelAdapter adapter ) { super ( delegate , new R16VersionDetails ( delegate . getMetaData ( ) . getVersion ( ) ) ) ; ModelBuilder builder = ( ModelBuilder ) delegate ; ModelProducer modelProducer = new ModelBuilderBackedModelProducer ( adapter , getVersionDetails ( ) , modelMapping , builder ) ; modelProducer = new GradleBuildAdapterProducer ( adapter , modelProducer ) ; modelProducer = new BuildInvocationsAdapterProducer ( adapter , getVersionDetails ( ) , modelProducer ) ; this . modelProducer = modelProducer ; this . actionRunner = new UnsupportedActionRunner ( getVersionDetails ( ) . getVersion ( ) ) ; } @Override protected ActionRunner getActionRunner ( ) { return actionRunner ; } @Override protected ModelProducer getModelProducer ( ) { return modelProducer ; } static class R16VersionDetails extends VersionDetails { public R16VersionDetails ( String version ) { super ( version ) ; } @Override public boolean maySupportModel ( Class < ? > modelType ) { return modelType ! = BuildInvocations . class & & modelType ! = GradleBuild . class ; } } } 
