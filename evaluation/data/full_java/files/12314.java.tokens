package org . gradle . reporting ; import org . gradle . internal . html . SimpleHtmlWriter ; import org . gradle . util . GradleVersion ; import java . io . IOException ; import java . net . URL ; import java . util . Date ; public abstract class TabbedPageRenderer < T > extends ReportRenderer < T , HtmlPageBuilder < SimpleHtmlWriter > > { private static final URL BASE_STYLE_URL = TabbedPageRenderer . class . getResource ( <str> ) ; private static final URL REPORT_JS_URL = TabbedPageRenderer . class . getResource ( <str> ) ; private T model ; protected T getModel ( ) { return model ; } protected abstract String getTitle ( ) ; protected abstract ReportRenderer < T , SimpleHtmlWriter > getHeaderRenderer ( ) ; protected abstract ReportRenderer < T , SimpleHtmlWriter > getContentRenderer ( ) ; protected String getPageTitle ( ) { return getTitle ( ) ; } protected abstract URL getStyleUrl ( ) ; @Override public void render ( final T model , HtmlPageBuilder < SimpleHtmlWriter > builder ) throws IOException { this . model = model ; String baseStyleLink = builder . requireResource ( BASE_STYLE_URL ) ; String reportJsLink = builder . requireResource ( REPORT_JS_URL ) ; String styleLink = builder . requireResource ( getStyleUrl ( ) ) ; SimpleHtmlWriter htmlWriter = builder . getOutput ( ) ; htmlWriter . startElement ( <str> ) . startElement ( <str> ) . attribute ( <str> , <str> ) . attribute ( <str> , <str> ) . endElement ( ) . startElement ( <str> ) . attribute ( <str> , <str> ) . attribute ( <str> , <str> ) . endElement ( ) . startElement ( <str> ) . characters ( getPageTitle ( ) ) . endElement ( ) . startElement ( <str> ) . attribute ( <str> , baseStyleLink ) . attribute ( <str> , <str> ) . attribute ( <str> , <str> ) . endElement ( ) . startElement ( <str> ) . attribute ( <str> , styleLink ) . attribute ( <str> , <str> ) . attribute ( <str> , <str> ) . endElement ( ) . startElement ( <str> ) . attribute ( <str> , reportJsLink ) . attribute ( <str> , <str> ) . characters ( <str> ) . endElement ( ) . endElement ( ) ; htmlWriter . startElement ( <str> ) . startElement ( <str> ) . attribute ( <str> , <str> ) . startElement ( <str> ) . characters ( getTitle ( ) ) . endElement ( ) ; getHeaderRenderer ( ) . render ( model , htmlWriter ) ; getContentRenderer ( ) . render ( model , htmlWriter ) ; htmlWriter . startElement ( <str> ) . attribute ( <str> , <str> ) . startElement ( <str> ) . startElement ( <str> ) . startElement ( <str> ) . attribute ( <str> , <str> ) . attribute ( <str> , <str> ) . attribute ( <str> , <str> ) . characters ( <str> ) . startElement ( <str> ) . attribute ( <str> , <str> ) . attribute ( <str> , <str> ) . attribute ( <str> , <str> ) . endElement ( ) . endElement ( ) . endElement ( ) . characters ( <str> ) . startElement ( <str> ) . attribute ( <str> , <str> ) . characters ( String . format ( <str> , GradleVersion . current ( ) . getVersion ( ) ) ) . endElement ( ) . characters ( String . format ( <str> , builder . formatDate ( new Date ( ) ) ) ) . endElement ( ) . endElement ( ) . endElement ( ) . endElement ( ) ; } } 
