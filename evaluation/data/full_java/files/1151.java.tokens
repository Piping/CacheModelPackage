package org . apache . cassandra . tracing ; import java . net . InetAddress ; import java . nio . ByteBuffer ; import java . util . * ; import org . apache . cassandra . config . CFMetaData ; import org . apache . cassandra . db . Mutation ; import org . apache . cassandra . db . RowUpdateBuilder ; import org . apache . cassandra . schema . KeyspaceMetadata ; import org . apache . cassandra . schema . KeyspaceParams ; import org . apache . cassandra . schema . Tables ; import org . apache . cassandra . utils . FBUtilities ; import org . apache . cassandra . utils . UUIDGen ; public final class TraceKeyspace { private TraceKeyspace ( ) { } public static final String NAME = <str> ; public static final String SESSIONS = <str> ; public static final String EVENTS = <str> ; private static final CFMetaData Sessions = compile ( SESSIONS , <str> , <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ) ; private static final CFMetaData Events = compile ( EVENTS , <str> , <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ) ; private static CFMetaData compile ( String name , String description , String schema ) { return CFMetaData . compile ( String . format ( schema , name ) , NAME ) . comment ( description ) ; } public static KeyspaceMetadata metadata ( ) { return KeyspaceMetadata . create ( NAME , KeyspaceParams . simple ( <int> ) , Tables . of ( Sessions , Events ) ) ; } static Mutation makeStartSessionMutation ( ByteBuffer sessionId , InetAddress client , Map < String , String > parameters , String request , long startedAt , String command , int ttl ) { RowUpdateBuilder adder = new RowUpdateBuilder ( Sessions , FBUtilities . timestampMicros ( ) , ttl , sessionId ) . clustering ( ) . add ( <str> , client ) . add ( <str> , FBUtilities . getBroadcastAddress ( ) ) . add ( <str> , request ) . add ( <str> , new Date ( startedAt ) ) . add ( <str> , command ) ; for ( Map . Entry < String , String > entry : parameters . entrySet ( ) ) adder . addMapEntry ( <str> , entry . getKey ( ) , entry . getValue ( ) ) ; return adder . build ( ) ; } static Mutation makeStopSessionMutation ( ByteBuffer sessionId , int elapsed , int ttl ) { return new RowUpdateBuilder ( Sessions , FBUtilities . timestampMicros ( ) , ttl , sessionId ) . clustering ( ) . add ( <str> , elapsed ) . build ( ) ; } static Mutation makeEventMutation ( ByteBuffer sessionId , String message , int elapsed , String threadName , int ttl ) { RowUpdateBuilder adder = new RowUpdateBuilder ( Events , FBUtilities . timestampMicros ( ) , ttl , sessionId ) . clustering ( UUIDGen . getTimeUUID ( ) ) ; adder . add ( <str> , message ) ; adder . add ( <str> , FBUtilities . getBroadcastAddress ( ) ) ; adder . add ( <str> , threadName ) ; if ( elapsed > = <int> ) adder . add ( <str> , elapsed ) ; return adder . build ( ) ; } } 
