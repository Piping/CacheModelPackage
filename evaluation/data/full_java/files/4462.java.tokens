package org . eclipse . debug . internal . ui . viewers . update ; import org . eclipse . core . runtime . CoreException ; import org . eclipse . debug . core . model . IBreakpoint ; import org . eclipse . debug . internal . ui . breakpoints . provisional . IBreakpointContainer ; import org . eclipse . debug . internal . ui . viewers . model . provisional . ICheckboxModelProxy ; import org . eclipse . debug . internal . ui . viewers . model . provisional . IPresentationContext ; import org . eclipse . debug . internal . ui . viewers . provisional . AbstractModelProxy ; import org . eclipse . jface . viewers . TreePath ; public class BreakpointContainerProxy extends AbstractModelProxy implements ICheckboxModelProxy { private IBreakpointContainer fContainer ; public BreakpointContainerProxy ( IBreakpointContainer container ) { fContainer = container ; } @Override public boolean setChecked ( IPresentationContext context , Object viewerInput , TreePath path , boolean checked ) { boolean atLeastOne = false ; IBreakpoint [ ] breakpoints = fContainer . getBreakpoints ( ) ; for ( int i = <int> ; i < breakpoints . length ; + + i ) { try { breakpoints [ i ] . setEnabled ( checked ) ; atLeastOne = true ; } catch ( CoreException e ) { } } return atLeastOne ; } } 
