package org . elasticsearch . index . shard ; import org . apache . lucene . codecs . DocValuesProducer ; import org . apache . lucene . index . BinaryDocValues ; import org . apache . lucene . index . FieldInfo ; import org . apache . lucene . index . NumericDocValues ; import org . apache . lucene . index . SortedDocValues ; import org . apache . lucene . index . SortedNumericDocValues ; import org . apache . lucene . index . SortedSetDocValues ; import org . apache . lucene . util . Accountable ; import org . apache . lucene . util . Bits ; import java . io . IOException ; import java . util . Collection ; import java . util . Collections ; class FilterDocValuesProducer extends DocValuesProducer { protected final DocValuesProducer in ; FilterDocValuesProducer ( DocValuesProducer in ) { this . in = in ; } @Override public void close ( ) throws IOException { in . close ( ) ; } @Override public long ramBytesUsed ( ) { return in . ramBytesUsed ( ) ; } @Override public Collection < Accountable > getChildResources ( ) { return in . getChildResources ( ) ; } @Override public NumericDocValues getNumeric ( FieldInfo field ) throws IOException { return in . getNumeric ( field ) ; } @Override public BinaryDocValues getBinary ( FieldInfo field ) throws IOException { return in . getBinary ( field ) ; } @Override public SortedDocValues getSorted ( FieldInfo field ) throws IOException { return in . getSorted ( field ) ; } @Override public SortedNumericDocValues getSortedNumeric ( FieldInfo field ) throws IOException { return in . getSortedNumeric ( field ) ; } @Override public SortedSetDocValues getSortedSet ( FieldInfo field ) throws IOException { return in . getSortedSet ( field ) ; } @Override public Bits getDocsWithField ( FieldInfo field ) throws IOException { return in . getDocsWithField ( field ) ; } @Override public void checkIntegrity ( ) throws IOException { in . checkIntegrity ( ) ; } public static final DocValuesProducer EMPTY = new DocValuesProducer ( ) { @Override public void close ( ) throws IOException { } @Override public long ramBytesUsed ( ) { return <int> ; } @Override public Collection < Accountable > getChildResources ( ) { return Collections . emptyList ( ) ; } @Override public NumericDocValues getNumeric ( FieldInfo field ) throws IOException { throw new IllegalStateException ( ) ; } @Override public BinaryDocValues getBinary ( FieldInfo field ) throws IOException { throw new IllegalStateException ( ) ; } @Override public SortedDocValues getSorted ( FieldInfo field ) throws IOException { throw new IllegalStateException ( ) ; } @Override public SortedNumericDocValues getSortedNumeric ( FieldInfo field ) throws IOException { throw new IllegalStateException ( ) ; } @Override public SortedSetDocValues getSortedSet ( FieldInfo field ) throws IOException { throw new IllegalStateException ( ) ; } @Override public Bits getDocsWithField ( FieldInfo field ) throws IOException { throw new IllegalStateException ( ) ; } @Override public void checkIntegrity ( ) throws IOException { } } ; } 
