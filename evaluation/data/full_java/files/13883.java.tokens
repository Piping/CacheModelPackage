package org . gradle . launcher . daemon . server . health ; import org . gradle . api . logging . Logger ; import org . gradle . api . logging . Logging ; import org . gradle . launcher . daemon . server . api . DaemonCommandAction ; import org . gradle . launcher . daemon . server . api . DaemonCommandExecution ; class DaemonHealthTracker implements DaemonCommandAction { private final static Logger LOG = Logging . getLogger ( DaemonHealthTracker . class ) ; private final DaemonStats stats ; private final DaemonStatus status ; private final HealthLogger logger ; DaemonHealthTracker ( DaemonStats stats , DaemonStatus status , HealthLogger logger ) { this . stats = stats ; this . status = status ; this . logger = logger ; } public void execute ( DaemonCommandExecution execution ) { if ( execution . isSingleUseDaemon ( ) ) { execution . proceed ( ) ; return ; } stats . buildStarted ( ) ; logger . logHealth ( stats , LOG ) ; try { execution . proceed ( ) ; } finally { stats . buildFinished ( ) ; } if ( status . isDaemonTired ( stats ) ) { execution . getDaemonStateControl ( ) . requestStop ( ) ; } } } 
