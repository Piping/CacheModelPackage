package org . gradle . model . internal . core ; import com . google . common . collect . ImmutableList ; import org . gradle . model . InvalidModelRuleDeclarationException ; import org . gradle . model . internal . registry . ModelRegistry ; import java . util . List ; public class ExtractedModelRegistration implements ExtractedModelRule { private final ModelRegistration registration ; public ExtractedModelRegistration ( ModelRegistration registration ) { this . registration = registration ; } @Override public void apply ( ModelRegistry modelRegistry , ModelPath scope ) { if ( ! scope . equals ( ModelPath . ROOT ) ) { throw new InvalidModelRuleDeclarationException ( String . format ( <str> , registration . getDescriptor ( ) , scope ) ) ; } modelRegistry . register ( registration ) ; } @Override public List < Class < ? > > getRuleDependencies ( ) { return ImmutableList . of ( ) ; } } 
