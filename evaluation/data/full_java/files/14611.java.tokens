package org . gradle . performance . results ; import org . gradle . internal . concurrent . CompositeStoppable ; import java . io . Closeable ; import java . util . List ; public class AllResultsStore implements ResultsStore , Closeable { private final CrossVersionResultsStore crossVersion = new CrossVersionResultsStore ( ) ; private final CrossBuildResultsStore crossBuild = new CrossBuildResultsStore ( ) ; private final CompositeResultsStore store = new CompositeResultsStore ( crossVersion , crossBuild ) ; @Override public List < String > getTestNames ( ) { return store . getTestNames ( ) ; } @Override public TestExecutionHistory getTestResults ( String testName ) { return store . getTestResults ( testName ) ; } @Override public TestExecutionHistory getTestResults ( String testName , int mostRecentN ) { return store . getTestResults ( testName , mostRecentN ) ; } @Override public void close ( ) { CompositeStoppable . stoppable ( crossVersion , crossBuild ) . stop ( ) ; } } 
