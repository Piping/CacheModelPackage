package com . badlogic . gdx . tests ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . graphics . Color ; import com . badlogic . gdx . graphics . GL20 ; import com . badlogic . gdx . graphics . Pixmap ; import com . badlogic . gdx . graphics . Pixmap . Format ; import com . badlogic . gdx . graphics . Texture ; import com . badlogic . gdx . graphics . g2d . BitmapFont ; import com . badlogic . gdx . graphics . g2d . SpriteBatch ; import com . badlogic . gdx . scenes . scene2d . Actor ; import com . badlogic . gdx . scenes . scene2d . Stage ; import com . badlogic . gdx . scenes . scene2d . ui . Image ; import com . badlogic . gdx . scenes . scene2d . ui . Skin ; import com . badlogic . gdx . scenes . scene2d . ui . Table ; import com . badlogic . gdx . scenes . scene2d . ui . TextButton ; import com . badlogic . gdx . scenes . scene2d . ui . TextButton . TextButtonStyle ; import com . badlogic . gdx . scenes . scene2d . utils . ChangeListener ; import com . badlogic . gdx . tests . utils . GdxTest ; public class UISimpleTest extends GdxTest { Skin skin ; Stage stage ; SpriteBatch batch ; @Override public void create ( ) { batch = new SpriteBatch ( ) ; stage = new Stage ( ) ; Gdx . input . setInputProcessor ( stage ) ; skin = new Skin ( ) ; Pixmap pixmap = new Pixmap ( <int> , <int> , Format . RGBA8888 ) ; pixmap . setColor ( Color . WHITE ) ; pixmap . fill ( ) ; skin . add ( <str> , new Texture ( pixmap ) ) ; skin . add ( <str> , new BitmapFont ( ) ) ; TextButtonStyle textButtonStyle = new TextButtonStyle ( ) ; textButtonStyle . up = skin . newDrawable ( <str> , Color . DARK_GRAY ) ; textButtonStyle . down = skin . newDrawable ( <str> , Color . DARK_GRAY ) ; textButtonStyle . checked = skin . newDrawable ( <str> , Color . BLUE ) ; textButtonStyle . over = skin . newDrawable ( <str> , Color . LIGHT_GRAY ) ; textButtonStyle . font = skin . getFont ( <str> ) ; skin . add ( <str> , textButtonStyle ) ; Table table = new Table ( ) ; table . setFillParent ( true ) ; stage . addActor ( table ) ; final TextButton button = new TextButton ( <str> , skin ) ; table . add ( button ) ; button . addListener ( new ChangeListener ( ) { public void changed ( ChangeEvent event , Actor actor ) { System . out . println ( <str> + button . isChecked ( ) ) ; button . setText ( <str> ) ; } } ) ; table . add ( new Image ( skin . newDrawable ( <str> , Color . RED ) ) ) . size ( <int> ) ; } @Override public void render ( ) { Gdx . gl . glClearColor ( <float> , <float> , <float> , <int> ) ; Gdx . gl . glClear ( GL20 . GL_COLOR_BUFFER_BIT ) ; stage . act ( Math . min ( Gdx . graphics . getDeltaTime ( ) , <int> / <int> f ) ) ; stage . draw ( ) ; } @Override public void resize ( int width , int height ) { stage . getViewport ( ) . update ( width , height , true ) ; } @Override public void dispose ( ) { stage . dispose ( ) ; skin . dispose ( ) ; } } 
