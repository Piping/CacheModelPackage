package org . elasticsearch . index . analysis ; import org . apache . lucene . analysis . TokenStream ; import org . apache . lucene . analysis . pattern . PatternReplaceFilter ; import org . elasticsearch . env . Environment ; import org . elasticsearch . common . regex . Regex ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . index . IndexSettings ; import java . util . regex . Pattern ; public class PatternReplaceTokenFilterFactory extends AbstractTokenFilterFactory { private final Pattern pattern ; private final String replacement ; private final boolean all ; public PatternReplaceTokenFilterFactory ( IndexSettings indexSettings , Environment environment , String name , Settings settings ) { super ( indexSettings , name , settings ) ; String sPattern = settings . get ( <str> , null ) ; if ( sPattern = = null ) { throw new IllegalArgumentException ( <str> + name + <str> ) ; } this . pattern = Regex . compile ( sPattern , settings . get ( <str> ) ) ; this . replacement = settings . get ( <str> , <str> ) ; this . all = settings . getAsBoolean ( <str> , true ) ; } @Override public TokenStream create ( TokenStream tokenStream ) { return new PatternReplaceFilter ( tokenStream , pattern , replacement , all ) ; } } 
