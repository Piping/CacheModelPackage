package org . gradle . api . publication . maven . internal . deployer ; import groovy . swing . factory . BeanFactory ; import groovy . util . FactoryBuilderSupport ; import org . apache . maven . artifact . ant . Authentication ; import org . apache . maven . artifact . ant . Proxy ; import org . apache . maven . artifact . ant . RemoteRepository ; import org . apache . maven . artifact . ant . RepositoryPolicy ; public class RepositoryFactory extends BeanFactory { public RepositoryFactory ( Class klass ) { super ( klass ) ; } public RepositoryFactory ( Class klass , boolean leaf ) { super ( klass , leaf ) ; } public void setChild ( FactoryBuilderSupport builder , Object parent , Object child ) { if ( child instanceof Authentication ) { getRepository ( parent ) . addAuthentication ( ( Authentication ) child ) ; } else if ( child instanceof Proxy ) { getRepository ( parent ) . addProxy ( ( Proxy ) child ) ; } else if ( child instanceof RepositoryPolicy ) { if ( builder . getCurrentName ( ) . equals ( <str> ) ) { getRepository ( parent ) . addSnapshots ( ( RepositoryPolicy ) child ) ; } else { getRepository ( parent ) . addReleases ( ( RepositoryPolicy ) child ) ; } } } private RemoteRepository getRepository ( Object parent ) { return ( RemoteRepository ) parent ; } } 
