package org . elasticsearch . action . search ; import org . elasticsearch . action . ActionRequest ; import org . elasticsearch . action . ActionRequestValidationException ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . common . unit . TimeValue ; import org . elasticsearch . search . Scroll ; import java . io . IOException ; import static org . elasticsearch . action . ValidateActions . addValidationError ; import static org . elasticsearch . search . Scroll . readScroll ; public class SearchScrollRequest extends ActionRequest < SearchScrollRequest > { private String scrollId ; private Scroll scroll ; public SearchScrollRequest ( ) { } public SearchScrollRequest ( String scrollId ) { this . scrollId = scrollId ; } public SearchScrollRequest ( ActionRequest request ) { super ( request ) ; } @Override public ActionRequestValidationException validate ( ) { ActionRequestValidationException validationException = null ; if ( scrollId = = null ) { validationException = addValidationError ( <str> , validationException ) ; } return validationException ; } public String scrollId ( ) { return scrollId ; } public SearchScrollRequest scrollId ( String scrollId ) { this . scrollId = scrollId ; return this ; } public Scroll scroll ( ) { return scroll ; } public SearchScrollRequest scroll ( Scroll scroll ) { this . scroll = scroll ; return this ; } public SearchScrollRequest scroll ( TimeValue keepAlive ) { return scroll ( new Scroll ( keepAlive ) ) ; } public SearchScrollRequest scroll ( String keepAlive ) { return scroll ( new Scroll ( TimeValue . parseTimeValue ( keepAlive , null , getClass ( ) . getSimpleName ( ) + <str> ) ) ) ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; scrollId = in . readString ( ) ; if ( in . readBoolean ( ) ) { scroll = readScroll ( in ) ; } } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeString ( scrollId ) ; if ( scroll = = null ) { out . writeBoolean ( false ) ; } else { out . writeBoolean ( true ) ; scroll . writeTo ( out ) ; } } } 
