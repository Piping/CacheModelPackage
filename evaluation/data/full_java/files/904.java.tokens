package org . apache . cassandra . serializers ; import org . apache . cassandra . utils . ByteBufferUtil ; import java . nio . ByteBuffer ; public class ByteSerializer implements TypeSerializer < Byte > { public static final ByteSerializer instance = new ByteSerializer ( ) ; public Byte deserialize ( ByteBuffer bytes ) { return bytes = = null | | bytes . remaining ( ) = = <int> ? null : bytes . get ( bytes . position ( ) ) ; } public ByteBuffer serialize ( Byte value ) { return value = = null ? ByteBufferUtil . EMPTY_BYTE_BUFFER : ByteBuffer . allocate ( <int> ) . put ( <int> , value ) ; } public void validate ( ByteBuffer bytes ) throws MarshalException { if ( bytes . remaining ( ) ! = <int> ) throw new MarshalException ( String . format ( <str> , bytes . remaining ( ) ) ) ; } public String toString ( Byte value ) { return value = = null ? <str> : String . valueOf ( value ) ; } public Class < Byte > getType ( ) { return Byte . class ; } } 
