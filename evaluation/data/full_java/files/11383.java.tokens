package org . gradle . api . internal . changedetection . changes ; import org . gradle . api . Action ; import org . gradle . api . Task ; import org . gradle . api . internal . changedetection . state . FilesSnapshotSet ; import org . gradle . api . tasks . incremental . InputFileDetails ; import org . slf4j . Logger ; import org . slf4j . LoggerFactory ; import java . io . File ; public class RebuildIncrementalTaskInputs extends StatefulIncrementalTaskInputs { private static final Logger LOGGER = LoggerFactory . getLogger ( RebuildIncrementalTaskInputs . class ) ; private final Task task ; public RebuildIncrementalTaskInputs ( Task task , FilesSnapshotSet inputFilesSnapshot ) { super ( inputFilesSnapshot ) ; LOGGER . info ( <str> , task ) ; this . task = task ; } public boolean isIncremental ( ) { return false ; } public void doOutOfDate ( Action < ? super InputFileDetails > outOfDateAction ) { for ( File file : task . getInputs ( ) . getFiles ( ) ) { outOfDateAction . execute ( new RebuildInputFile ( file ) ) ; } } public void doRemoved ( Action < ? super InputFileDetails > removedAction ) { } private static class RebuildInputFile implements InputFileDetails { private final File file ; private RebuildInputFile ( File file ) { this . file = file ; } public File getFile ( ) { return file ; } public boolean isAdded ( ) { return false ; } public boolean isModified ( ) { return false ; } public boolean isRemoved ( ) { return false ; } } } 
