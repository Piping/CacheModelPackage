package org . elasticsearch . index . engine ; import org . apache . lucene . search . Query ; import org . elasticsearch . common . lucene . search . Queries ; import org . hamcrest . Description ; import org . hamcrest . Matcher ; import org . hamcrest . TypeSafeMatcher ; import java . io . IOException ; public final class EngineSearcherTotalHitsMatcher extends TypeSafeMatcher < Engine . Searcher > { private final Query query ; private final int totalHits ; private int count ; public EngineSearcherTotalHitsMatcher ( Query query , int totalHits ) { this . query = query ; this . totalHits = totalHits ; } @Override public boolean matchesSafely ( Engine . Searcher searcher ) { try { this . count = ( int ) searcher . searcher ( ) . count ( query ) ; return count = = totalHits ; } catch ( IOException e ) { return false ; } } @Override protected void describeMismatchSafely ( Engine . Searcher item , Description mismatchDescription ) { mismatchDescription . appendText ( <str> ) . appendValue ( count ) ; } @Override public void describeTo ( Description description ) { description . appendText ( <str> ) . appendValue ( totalHits ) . appendText ( <str> ) . appendValue ( query ) ; } public static Matcher < Engine . Searcher > engineSearcherTotalHits ( Query query , int totalHits ) { return new EngineSearcherTotalHitsMatcher ( query , totalHits ) ; } public static Matcher < Engine . Searcher > engineSearcherTotalHits ( int totalHits ) { return new EngineSearcherTotalHitsMatcher ( Queries . newMatchAllQuery ( ) , totalHits ) ; } } 
