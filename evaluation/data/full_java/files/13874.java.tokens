package org . gradle . launcher . daemon . server . exec ; import org . gradle . api . logging . Logger ; import org . gradle . api . logging . Logging ; import org . gradle . launcher . daemon . server . api . DaemonCommandAction ; import org . gradle . launcher . daemon . server . api . DaemonCommandExecution ; public class HandleCancel implements DaemonCommandAction { private static final Logger LOGGER = Logging . getLogger ( HandleCancel . class ) ; public void execute ( final DaemonCommandExecution execution ) { execution . getConnection ( ) . onCancel ( new Runnable ( ) { public void run ( ) { LOGGER . info ( <str> , execution . getCommand ( ) ) ; execution . getDaemonStateControl ( ) . cancelBuild ( ) ; } } ) ; try { execution . proceed ( ) ; } finally { execution . getConnection ( ) . onCancel ( null ) ; } } } 
