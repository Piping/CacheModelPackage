package org . gradle . api . internal . tasks ; import org . gradle . api . internal . jvm . ClassDirectoryBinaryRenderer ; import org . gradle . api . internal . tasks . compile . daemon . InProcessCompilerDaemonFactory ; import org . gradle . api . internal . tasks . compile . incremental . analyzer . ClassAnalysisCache ; import org . gradle . api . internal . tasks . compile . incremental . analyzer . DefaultClassAnalysisCache ; import org . gradle . api . internal . tasks . compile . incremental . cache . DefaultGeneralCompileCaches ; import org . gradle . api . internal . tasks . compile . incremental . cache . GeneralCompileCaches ; import org . gradle . api . internal . tasks . compile . incremental . jar . DefaultJarSnapshotCache ; import org . gradle . api . internal . tasks . compile . incremental . jar . JarSnapshotCache ; import org . gradle . api . invocation . Gradle ; import org . gradle . cache . CacheRepository ; import org . gradle . initialization . JdkToolsInitializer ; import org . gradle . internal . classloader . ClassLoaderFactory ; import org . gradle . internal . service . ServiceRegistration ; import org . gradle . internal . service . scopes . PluginServiceRegistry ; public class CompileServices implements PluginServiceRegistry { public void registerGlobalServices ( ServiceRegistration registration ) { registration . add ( ClassDirectoryBinaryRenderer . class ) ; } public void registerBuildSessionServices ( ServiceRegistration registration ) { } public void registerBuildServices ( ServiceRegistration registration ) { } public void registerGradleServices ( ServiceRegistration registration ) { registration . addProvider ( new BuildScopeCompileServices ( ) ) ; } public void registerProjectServices ( ServiceRegistration registration ) { } private static class BuildScopeCompileServices { void configure ( ServiceRegistration registration , JdkToolsInitializer initializer ) { initializer . initializeJdkTools ( ) ; } InProcessCompilerDaemonFactory createInProcessCompilerDaemonFactory ( ClassLoaderFactory classLoaderFactory , Gradle gradle ) { return new InProcessCompilerDaemonFactory ( classLoaderFactory , gradle . getGradleUserHomeDir ( ) ) ; } GeneralCompileCaches createGeneralCompileCaches ( ClassAnalysisCache classAnalysisCache , JarSnapshotCache jarSnapshotCache ) { return new DefaultGeneralCompileCaches ( classAnalysisCache , jarSnapshotCache ) ; } ClassAnalysisCache createClassAnalysisCache ( CacheRepository cacheRepository ) { return new DefaultClassAnalysisCache ( cacheRepository ) ; } JarSnapshotCache createJarSnapshotCache ( CacheRepository cacheRepository ) { return new DefaultJarSnapshotCache ( cacheRepository ) ; } } } 
