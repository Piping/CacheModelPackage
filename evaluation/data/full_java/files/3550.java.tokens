package org . eclipse . debug . core ; import java . util . List ; import java . util . Map ; import java . util . Set ; import org . eclipse . core . filesystem . EFS ; import org . eclipse . core . resources . IFile ; import org . eclipse . core . resources . IResource ; import org . eclipse . core . runtime . CoreException ; import org . eclipse . core . runtime . IAdaptable ; import org . eclipse . core . runtime . IPath ; import org . eclipse . core . runtime . IProgressMonitor ; public interface ILaunchConfiguration extends IAdaptable { public static final String LAUNCH_CONFIGURATION_FILE_EXTENSION = <str> ; public static final String ATTR_SOURCE_LOCATOR_ID = DebugPlugin . getUniqueIdentifier ( ) + <str> ; public static final String ATTR_SOURCE_LOCATOR_MEMENTO = DebugPlugin . getUniqueIdentifier ( ) + <str> ; public boolean contentsEqual ( ILaunchConfiguration configuration ) ; public ILaunchConfigurationWorkingCopy copy ( String name ) throws CoreException ; public void delete ( ) throws CoreException ; public boolean exists ( ) ; public boolean getAttribute ( String attributeName , boolean defaultValue ) throws CoreException ; public int getAttribute ( String attributeName , int defaultValue ) throws CoreException ; public List < String > getAttribute ( String attributeName , List < String > defaultValue ) throws CoreException ; public Set < String > getAttribute ( String attributeName , Set < String > defaultValue ) throws CoreException ; public Map < String , String > getAttribute ( String attributeName , Map < String , String > defaultValue ) throws CoreException ; public String getAttribute ( String attributeName , String defaultValue ) throws CoreException ; public Map < String , Object > getAttributes ( ) throws CoreException ; public String getCategory ( ) throws CoreException ; public IFile getFile ( ) ; @Deprecated public IPath getLocation ( ) ; public IResource [ ] getMappedResources ( ) throws CoreException ; public String getMemento ( ) throws CoreException ; public String getName ( ) ; public Set < String > getModes ( ) throws CoreException ; public ILaunchDelegate getPreferredDelegate ( Set < String > modes ) throws CoreException ; public ILaunchConfigurationType getType ( ) throws CoreException ; public ILaunchConfigurationWorkingCopy getWorkingCopy ( ) throws CoreException ; public boolean hasAttribute ( String attributeName ) throws CoreException ; public boolean isLocal ( ) ; public boolean isMigrationCandidate ( ) throws CoreException ; public boolean isWorkingCopy ( ) ; public ILaunch launch ( String mode , IProgressMonitor monitor ) throws CoreException ; public ILaunch launch ( String mode , IProgressMonitor monitor , boolean build ) throws CoreException ; public ILaunch launch ( String mode , IProgressMonitor monitor , boolean build , boolean register ) throws CoreException ; public void migrate ( ) throws CoreException ; public boolean supportsMode ( String mode ) throws CoreException ; public boolean isReadOnly ( ) ; } 
