package com . badlogic . gdx ; import com . badlogic . gdx . graphics . Cursor ; import com . badlogic . gdx . graphics . GL20 ; import com . badlogic . gdx . graphics . GL30 ; import com . badlogic . gdx . graphics . Mesh ; import com . badlogic . gdx . graphics . Pixmap ; import com . badlogic . gdx . graphics . g2d . Batch ; import com . badlogic . gdx . graphics . g2d . BitmapFont ; import com . badlogic . gdx . graphics . glutils . FrameBuffer ; import com . badlogic . gdx . graphics . glutils . IndexBufferObject ; import com . badlogic . gdx . graphics . glutils . ShaderProgram ; import com . badlogic . gdx . graphics . glutils . VertexArray ; import com . badlogic . gdx . graphics . glutils . VertexBufferObject ; public interface Graphics { public enum GraphicsType { AndroidGL , LWJGL , Angle , WebGL , iOSGL , JGLFW , Mock } public class DisplayMode { public final int width ; public final int height ; public final int refreshRate ; public final int bitsPerPixel ; protected DisplayMode ( int width , int height , int refreshRate , int bitsPerPixel ) { this . width = width ; this . height = height ; this . refreshRate = refreshRate ; this . bitsPerPixel = bitsPerPixel ; } public String toString ( ) { return width + <str> + height + <str> + bitsPerPixel + <str> + refreshRate ; } } public static class BufferFormat { public final int r , g , b , a ; public final int depth , stencil ; public final int samples ; public final boolean coverageSampling ; public BufferFormat ( int r , int g , int b , int a , int depth , int stencil , int samples , boolean coverageSampling ) { this . r = r ; this . g = g ; this . b = b ; this . a = a ; this . depth = depth ; this . stencil = stencil ; this . samples = samples ; this . coverageSampling = coverageSampling ; } public String toString ( ) { return <str> + r + <str> + g + <str> + b + <str> + a + <str> + depth + <str> + stencil + <str> + samples + <str> + coverageSampling ; } } public boolean isGL30Available ( ) ; public GL20 getGL20 ( ) ; public GL30 getGL30 ( ) ; public int getWidth ( ) ; public int getHeight ( ) ; public long getFrameId ( ) ; public float getDeltaTime ( ) ; public float getRawDeltaTime ( ) ; public int getFramesPerSecond ( ) ; public GraphicsType getType ( ) ; public float getPpiX ( ) ; public float getPpiY ( ) ; public float getPpcX ( ) ; public float getPpcY ( ) ; public float getDensity ( ) ; public boolean supportsDisplayModeChange ( ) ; public DisplayMode [ ] getDisplayModes ( ) ; public DisplayMode getDesktopDisplayMode ( ) ; public boolean setDisplayMode ( DisplayMode displayMode ) ; public boolean setDisplayMode ( int width , int height , boolean fullscreen ) ; public void setTitle ( String title ) ; public void setVSync ( boolean vsync ) ; public BufferFormat getBufferFormat ( ) ; public boolean supportsExtension ( String extension ) ; public void setContinuousRendering ( boolean isContinuous ) ; public boolean isContinuousRendering ( ) ; public void requestRendering ( ) ; public boolean isFullscreen ( ) ; public Cursor newCursor ( Pixmap pixmap , int xHotspot , int yHotspot ) ; public void setCursor ( Cursor cursor ) ; } 
