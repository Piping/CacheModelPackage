package org . elasticsearch . rest . action . admin . cluster . snapshots . delete ; import org . elasticsearch . action . admin . cluster . snapshots . delete . DeleteSnapshotRequest ; import org . elasticsearch . action . admin . cluster . snapshots . delete . DeleteSnapshotResponse ; import org . elasticsearch . client . Client ; import org . elasticsearch . common . inject . Inject ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . rest . * ; import org . elasticsearch . rest . action . support . AcknowledgedRestListener ; import static org . elasticsearch . client . Requests . deleteSnapshotRequest ; import static org . elasticsearch . rest . RestRequest . Method . DELETE ; public class RestDeleteSnapshotAction extends BaseRestHandler { @Inject public RestDeleteSnapshotAction ( Settings settings , RestController controller , Client client ) { super ( settings , controller , client ) ; controller . registerHandler ( DELETE , <str> , this ) ; } @Override public void handleRequest ( final RestRequest request , final RestChannel channel , final Client client ) { DeleteSnapshotRequest deleteSnapshotRequest = deleteSnapshotRequest ( request . param ( <str> ) , request . param ( <str> ) ) ; deleteSnapshotRequest . masterNodeTimeout ( request . paramAsTime ( <str> , deleteSnapshotRequest . masterNodeTimeout ( ) ) ) ; client . admin ( ) . cluster ( ) . deleteSnapshot ( deleteSnapshotRequest , new AcknowledgedRestListener < DeleteSnapshotResponse > ( channel ) ) ; } } 
