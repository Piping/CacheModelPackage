package org . gradle . api . internal . project ; import groovy . lang . Closure ; import org . gradle . api . Action ; import org . gradle . api . internal . ClosureBackedAction ; import org . gradle . api . internal . plugins . DefaultObjectConfigurationAction ; import org . gradle . api . internal . plugins . PluginAwareInternal ; import org . gradle . api . plugins . ObjectConfigurationAction ; import org . gradle . api . plugins . PluginContainer ; import org . gradle . util . ConfigureUtil ; import java . util . Map ; abstract public class AbstractPluginAware implements PluginAwareInternal { @SuppressWarnings ( <str> ) public void apply ( Closure closure ) { apply ( ClosureBackedAction . of ( closure ) ) ; } public void apply ( Action < ? super ObjectConfigurationAction > action ) { DefaultObjectConfigurationAction configAction = createObjectConfigurationAction ( ) ; action . execute ( configAction ) ; configAction . execute ( ) ; } public void apply ( Map < String , ? > options ) { DefaultObjectConfigurationAction action = createObjectConfigurationAction ( ) ; ConfigureUtil . configureByMap ( options , action ) ; action . execute ( ) ; } public PluginContainer getPlugins ( ) { return getPluginManager ( ) . getPluginContainer ( ) ; } abstract protected DefaultObjectConfigurationAction createObjectConfigurationAction ( ) ; } 
