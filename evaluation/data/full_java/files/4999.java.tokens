package org . elasticsearch . action . admin . cluster . shards ; import org . elasticsearch . action . ActionResponse ; import org . elasticsearch . cluster . node . DiscoveryNode ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . common . xcontent . ToXContent ; import org . elasticsearch . common . xcontent . XContentBuilder ; import java . io . IOException ; import java . util . Map ; public class ClusterSearchShardsResponse extends ActionResponse implements ToXContent { private ClusterSearchShardsGroup [ ] groups ; private DiscoveryNode [ ] nodes ; ClusterSearchShardsResponse ( ) { } public ClusterSearchShardsGroup [ ] getGroups ( ) { return groups ; } public DiscoveryNode [ ] getNodes ( ) { return nodes ; } public ClusterSearchShardsResponse ( ClusterSearchShardsGroup [ ] groups , DiscoveryNode [ ] nodes ) { this . groups = groups ; this . nodes = nodes ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; groups = new ClusterSearchShardsGroup [ in . readVInt ( ) ] ; for ( int i = <int> ; i < groups . length ; i + + ) { groups [ i ] = ClusterSearchShardsGroup . readSearchShardsGroupResponse ( in ) ; } nodes = new DiscoveryNode [ in . readVInt ( ) ] ; for ( int i = <int> ; i < nodes . length ; i + + ) { nodes [ i ] = DiscoveryNode . readNode ( in ) ; } } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeVInt ( groups . length ) ; for ( ClusterSearchShardsGroup response : groups ) { response . writeTo ( out ) ; } out . writeVInt ( nodes . length ) ; for ( DiscoveryNode node : nodes ) { node . writeTo ( out ) ; } } @Override public XContentBuilder toXContent ( XContentBuilder builder , Params params ) throws IOException { builder . startObject ( <str> ) ; for ( DiscoveryNode node : nodes ) { node . toXContent ( builder , params ) ; } builder . endObject ( ) ; builder . startArray ( <str> ) ; for ( ClusterSearchShardsGroup group : groups ) { group . toXContent ( builder , params ) ; } builder . endArray ( ) ; return builder ; } } 
