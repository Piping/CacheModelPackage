package io . netty . util . internal . logging ; class FormattingTuple { static final FormattingTuple NULL = new FormattingTuple ( null ) ; private final String message ; private final Throwable throwable ; private final Object [ ] argArray ; FormattingTuple ( String message ) { this ( message , null , null ) ; } FormattingTuple ( String message , Object [ ] argArray , Throwable throwable ) { this . message = message ; this . throwable = throwable ; if ( throwable = = null ) { this . argArray = argArray ; } else { this . argArray = trimmedCopy ( argArray ) ; } } static Object [ ] trimmedCopy ( Object [ ] argArray ) { if ( argArray = = null | | argArray . length = = <int> ) { throw new IllegalStateException ( <str> ) ; } final int trimemdLen = argArray . length - <int> ; Object [ ] trimmed = new Object [ trimemdLen ] ; System . arraycopy ( argArray , <int> , trimmed , <int> , trimemdLen ) ; return trimmed ; } public String getMessage ( ) { return message ; } public Object [ ] getArgArray ( ) { return argArray ; } public Throwable getThrowable ( ) { return throwable ; } } 
