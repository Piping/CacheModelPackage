package com . google . common . collect . testing . testers ; import static com . google . common . collect . testing . features . CollectionFeature . SUPPORTS_REMOVE ; import static com . google . common . collect . testing . features . CollectionSize . ONE ; import static com . google . common . collect . testing . features . CollectionSize . ZERO ; import com . google . common . annotations . GwtCompatible ; import com . google . common . collect . testing . features . CollectionFeature ; import com . google . common . collect . testing . features . CollectionSize ; @GwtCompatible public class ListRemoveTester < E > extends AbstractListTester < E > { @CollectionFeature.Require ( SUPPORTS_REMOVE ) @CollectionSize.Require ( absent = { ZERO , ONE } ) public void testRemove_duplicate ( ) { ArrayWithDuplicate < E > arrayAndDuplicate = createArrayWithDuplicateElement ( ) ; collection = getSubjectGenerator ( ) . create ( arrayAndDuplicate . elements ) ; E duplicate = arrayAndDuplicate . duplicate ; int firstIndex = getList ( ) . indexOf ( duplicate ) ; int initialSize = getList ( ) . size ( ) ; assertTrue ( <str> , getList ( ) . remove ( duplicate ) ) ; assertTrue ( <str> + <str> , getList ( ) . contains ( duplicate ) ) ; assertFalse ( <str> + <str> , firstIndex = = getList ( ) . indexOf ( duplicate ) ) ; assertEquals ( <str> , initialSize - <int> , getList ( ) . size ( ) ) ; } } 
