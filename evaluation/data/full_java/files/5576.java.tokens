package org . elasticsearch . cluster . metadata ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . common . settings . Settings ; import java . io . IOException ; public class RepositoryMetaData { private final String name ; private final String type ; private final Settings settings ; public RepositoryMetaData ( String name , String type , Settings settings ) { this . name = name ; this . type = type ; this . settings = settings ; } public String name ( ) { return this . name ; } public String type ( ) { return this . type ; } public Settings settings ( ) { return this . settings ; } public static RepositoryMetaData readFrom ( StreamInput in ) throws IOException { String name = in . readString ( ) ; String type = in . readString ( ) ; Settings settings = Settings . readSettingsFromStream ( in ) ; return new RepositoryMetaData ( name , type , settings ) ; } public void writeTo ( StreamOutput out ) throws IOException { out . writeString ( name ) ; out . writeString ( type ) ; Settings . writeSettingsToStream ( settings , out ) ; } @Override public boolean equals ( Object o ) { if ( this = = o ) return true ; if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) return false ; RepositoryMetaData that = ( RepositoryMetaData ) o ; if ( ! name . equals ( that . name ) ) return false ; if ( ! type . equals ( that . type ) ) return false ; return settings . equals ( that . settings ) ; } @Override public int hashCode ( ) { int result = name . hashCode ( ) ; result = <int> * result + type . hashCode ( ) ; result = <int> * result + settings . hashCode ( ) ; return result ; } } 
