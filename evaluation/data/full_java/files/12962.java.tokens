package org . gradle . api . tasks . diagnostics . internal ; import org . gradle . api . Project ; import org . gradle . api . Task ; import org . gradle . util . Path ; import java . util . Collections ; import java . util . Set ; public class TaskDetailsFactory { private final Set < Project > projects ; private final Project project ; public TaskDetailsFactory ( Project project ) { this . project = project ; this . projects = project . getAllprojects ( ) ; } public TaskDetails create ( final Task task ) { final String path ; Project project = task . getProject ( ) ; if ( projects . contains ( project ) ) { path = this . project . relativeProjectPath ( task . getPath ( ) ) ; } else { path = task . getPath ( ) ; } return new TaskDetails ( ) { public Path getPath ( ) { return Path . path ( path ) ; } public String getDescription ( ) { return task . getDescription ( ) ; } public Set < TaskDetails > getDependencies ( ) { return Collections . emptySet ( ) ; } public Set < TaskDetails > getChildren ( ) { return Collections . emptySet ( ) ; } } ; } } 
