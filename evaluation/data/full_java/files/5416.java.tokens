package org . elasticsearch . action . support . broadcast ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . index . shard . ShardId ; import org . elasticsearch . transport . TransportResponse ; import java . io . IOException ; public abstract class BroadcastShardResponse extends TransportResponse { ShardId shardId ; protected BroadcastShardResponse ( ) { } protected BroadcastShardResponse ( ShardId shardId ) { this . shardId = shardId ; } public String getIndex ( ) { return this . shardId . getIndex ( ) ; } public int getShardId ( ) { return this . shardId . id ( ) ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; shardId = ShardId . readShardId ( in ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; shardId . writeTo ( out ) ; } } 
