package io . netty . handler . codec . http . multipart ; import io . netty . buffer . ByteBuf ; import io . netty . buffer . ByteBufHolder ; import java . io . File ; import java . io . IOException ; import java . io . InputStream ; import java . nio . charset . Charset ; public interface HttpData extends InterfaceHttpData , ByteBufHolder { long getMaxSize ( ) ; void setMaxSize ( long maxSize ) ; void checkSize ( long newSize ) throws IOException ; void setContent ( ByteBuf buffer ) throws IOException ; void addContent ( ByteBuf buffer , boolean last ) throws IOException ; void setContent ( File file ) throws IOException ; void setContent ( InputStream inputStream ) throws IOException ; boolean isCompleted ( ) ; long length ( ) ; long definedLength ( ) ; void delete ( ) ; byte [ ] get ( ) throws IOException ; ByteBuf getByteBuf ( ) throws IOException ; ByteBuf getChunk ( int length ) throws IOException ; String getString ( ) throws IOException ; String getString ( Charset encoding ) throws IOException ; void setCharset ( Charset charset ) ; Charset getCharset ( ) ; boolean renameTo ( File dest ) throws IOException ; boolean isInMemory ( ) ; File getFile ( ) throws IOException ; @Override HttpData copy ( ) ; @Override HttpData duplicate ( ) ; @Override HttpData retain ( ) ; @Override HttpData retain ( int increment ) ; @Override HttpData touch ( ) ; @Override HttpData touch ( Object hint ) ; } 
