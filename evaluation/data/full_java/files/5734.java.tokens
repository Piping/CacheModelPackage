package org . elasticsearch . common . geo . builders ; import com . spatial4j . core . shape . Point ; import com . spatial4j . core . shape . Shape ; import com . vividsolutions . jts . geom . Coordinate ; import org . elasticsearch . common . geo . XShapeCollection ; import org . elasticsearch . common . xcontent . XContentBuilder ; import java . io . IOException ; import java . util . ArrayList ; import java . util . List ; public class MultiPointBuilder extends PointCollection < MultiPointBuilder > { public static final GeoShapeType TYPE = GeoShapeType . MULTIPOINT ; @Override public XContentBuilder toXContent ( XContentBuilder builder , Params params ) throws IOException { builder . startObject ( ) ; builder . field ( FIELD_TYPE , TYPE . shapeName ( ) ) ; builder . field ( FIELD_COORDINATES ) ; super . coordinatesToXcontent ( builder , false ) ; builder . endObject ( ) ; return builder ; } @Override public Shape build ( ) { List < Point > shapes = new ArrayList < > ( points . size ( ) ) ; for ( Coordinate coord : points ) { shapes . add ( SPATIAL_CONTEXT . makePoint ( coord . x , coord . y ) ) ; } XShapeCollection multiPoints = new XShapeCollection < > ( shapes , SPATIAL_CONTEXT ) ; multiPoints . setPointsOnly ( true ) ; return multiPoints ; } @Override public GeoShapeType type ( ) { return TYPE ; } } 
