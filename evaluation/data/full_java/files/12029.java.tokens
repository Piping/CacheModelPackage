package org . gradle . initialization ; import org . gradle . BuildAdapter ; import org . gradle . BuildResult ; import org . gradle . api . internal . GradleInternal ; import org . gradle . api . invocation . Gradle ; import java . util . List ; import java . util . concurrent . CopyOnWriteArrayList ; public class NestedBuildTracker extends BuildAdapter { private final List < GradleInternal > buildStack = new CopyOnWriteArrayList < GradleInternal > ( ) ; @Override public void buildStarted ( Gradle gradle ) { buildStack . add ( <int> , ( GradleInternal ) gradle ) ; } @Override public void buildFinished ( BuildResult result ) { buildStack . remove ( result . getGradle ( ) ) ; } public GradleInternal getCurrentBuild ( ) { return buildStack . isEmpty ( ) ? null : buildStack . get ( <int> ) ; } } 
