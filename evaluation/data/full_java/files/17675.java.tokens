package com . badlogic . gdx . physics . bullet . softbody ; import com . badlogic . gdx . physics . bullet . BulletBase ; import com . badlogic . gdx . physics . bullet . linearmath . * ; import com . badlogic . gdx . physics . bullet . collision . * ; import com . badlogic . gdx . physics . bullet . dynamics . * ; import com . badlogic . gdx . math . Vector3 ; import com . badlogic . gdx . math . Quaternion ; import com . badlogic . gdx . math . Matrix3 ; import com . badlogic . gdx . math . Matrix4 ; public class btSoftBodyConcaveCollisionAlgorithm extends btCollisionAlgorithm { private long swigCPtr ; protected btSoftBodyConcaveCollisionAlgorithm ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , SoftbodyJNI . btSoftBodyConcaveCollisionAlgorithm_SWIGUpcast ( cPtr ) , cMemoryOwn ) ; swigCPtr = cPtr ; } public btSoftBodyConcaveCollisionAlgorithm ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( SoftbodyJNI . btSoftBodyConcaveCollisionAlgorithm_SWIGUpcast ( swigCPtr = cPtr ) , cMemoryOwn ) ; } public static long getCPtr ( btSoftBodyConcaveCollisionAlgorithm obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; SoftbodyJNI . delete_btSoftBodyConcaveCollisionAlgorithm ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } public btSoftBodyConcaveCollisionAlgorithm ( btCollisionAlgorithmConstructionInfo ci , btCollisionObjectWrapper body0Wrap , btCollisionObjectWrapper body1Wrap , boolean isSwapped ) { this ( SoftbodyJNI . new_btSoftBodyConcaveCollisionAlgorithm ( btCollisionAlgorithmConstructionInfo . getCPtr ( ci ) , ci , btCollisionObjectWrapper . getCPtr ( body0Wrap ) , body0Wrap , btCollisionObjectWrapper . getCPtr ( body1Wrap ) , body1Wrap , isSwapped ) , true ) ; } public void clearCache ( ) { SoftbodyJNI . btSoftBodyConcaveCollisionAlgorithm_clearCache ( swigCPtr , this ) ; } static public class CreateFunc extends btCollisionAlgorithmCreateFunc { private long swigCPtr ; protected CreateFunc ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , SoftbodyJNI . btSoftBodyConcaveCollisionAlgorithm_CreateFunc_SWIGUpcast ( cPtr ) , cMemoryOwn ) ; swigCPtr = cPtr ; } public CreateFunc ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( SoftbodyJNI . btSoftBodyConcaveCollisionAlgorithm_CreateFunc_SWIGUpcast ( swigCPtr = cPtr ) , cMemoryOwn ) ; } public static long getCPtr ( CreateFunc obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; SoftbodyJNI . delete_btSoftBodyConcaveCollisionAlgorithm_CreateFunc ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } public CreateFunc ( ) { this ( SoftbodyJNI . new_btSoftBodyConcaveCollisionAlgorithm_CreateFunc ( ) , true ) ; } } static public class SwappedCreateFunc extends btCollisionAlgorithmCreateFunc { private long swigCPtr ; protected SwappedCreateFunc ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , SoftbodyJNI . btSoftBodyConcaveCollisionAlgorithm_SwappedCreateFunc_SWIGUpcast ( cPtr ) , cMemoryOwn ) ; swigCPtr = cPtr ; } public SwappedCreateFunc ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( SoftbodyJNI . btSoftBodyConcaveCollisionAlgorithm_SwappedCreateFunc_SWIGUpcast ( swigCPtr = cPtr ) , cMemoryOwn ) ; } public static long getCPtr ( SwappedCreateFunc obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; SoftbodyJNI . delete_btSoftBodyConcaveCollisionAlgorithm_SwappedCreateFunc ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } public SwappedCreateFunc ( ) { this ( SoftbodyJNI . new_btSoftBodyConcaveCollisionAlgorithm_SwappedCreateFunc ( ) , true ) ; } } } 
