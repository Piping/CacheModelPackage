package org . eclipse . debug . ui . actions ; import org . eclipse . debug . core . ILaunchConfiguration ; import org . eclipse . debug . internal . ui . DebugUIPlugin ; import org . eclipse . debug . internal . ui . contextlaunching . ContextRunner ; import org . eclipse . debug . internal . ui . contextlaunching . LaunchingResourceManager ; import org . eclipse . debug . internal . ui . launchConfigurations . OrganizeFavoritesAction ; import org . eclipse . debug . ui . DebugUITools ; import org . eclipse . jface . action . IAction ; import org . eclipse . jface . viewers . StructuredSelection ; import org . eclipse . swt . widgets . Menu ; public class AbstractLaunchToolbarAction extends AbstractLaunchHistoryAction { public AbstractLaunchToolbarAction ( String launchGroupIdentifier ) { super ( launchGroupIdentifier ) ; } @Override protected void fillMenu ( Menu menu ) { super . fillMenu ( menu ) ; if ( menu . getItemCount ( ) > <int> ) { addSeparator ( menu ) ; } addToMenu ( menu , new LaunchShortcutsAction ( getLaunchGroupIdentifier ( ) ) , - <int> ) ; addToMenu ( menu , getOpenDialogAction ( ) , - <int> ) ; addToMenu ( menu , new OrganizeFavoritesAction ( getLaunchGroupIdentifier ( ) ) , - <int> ) ; } protected IAction getOpenDialogAction ( ) { return new OpenLaunchDialogAction ( getLaunchGroupIdentifier ( ) ) ; } @Override public void run ( IAction action ) { if ( LaunchingResourceManager . isContextLaunchEnabled ( getLaunchGroupIdentifier ( ) ) ) { ContextRunner . getDefault ( ) . launch ( DebugUIPlugin . getDefault ( ) . getLaunchConfigurationManager ( ) . getLaunchGroup ( getLaunchGroupIdentifier ( ) ) ) ; } else { ILaunchConfiguration configuration = getLastLaunch ( ) ; if ( configuration = = null ) { DebugUITools . openLaunchConfigurationDialogOnGroup ( DebugUIPlugin . getShell ( ) , new StructuredSelection ( ) , getLaunchGroupIdentifier ( ) ) ; } else { DebugUITools . launch ( configuration , getMode ( ) ) ; } } } } 
