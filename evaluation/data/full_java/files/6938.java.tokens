package org . elasticsearch . repositories ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . common . io . stream . Streamable ; import java . io . IOException ; public class VerificationFailure implements Streamable { private String nodeId ; private Throwable cause ; VerificationFailure ( ) { } public VerificationFailure ( String nodeId , Throwable cause ) { this . nodeId = nodeId ; this . cause = cause ; } public String nodeId ( ) { return nodeId ; } public Throwable cause ( ) { return cause ; } @Override public void readFrom ( StreamInput in ) throws IOException { nodeId = in . readOptionalString ( ) ; cause = in . readThrowable ( ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { out . writeOptionalString ( nodeId ) ; out . writeThrowable ( cause ) ; } public static VerificationFailure readNode ( StreamInput in ) throws IOException { VerificationFailure failure = new VerificationFailure ( ) ; failure . readFrom ( in ) ; return failure ; } @Override public String toString ( ) { return <str> + nodeId + <str> + cause + <str> ; } } 
