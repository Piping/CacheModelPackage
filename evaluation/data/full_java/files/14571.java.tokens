package org . gradle . performance ; import org . gradle . api . Action ; import java . io . File ; public enum SourceUpdateCardinality { ONE_FILE ( <int> , <str> ) , ALL_FILES ( Integer . MAX_VALUE , <str> ) ; private final int maxNumberOfUpdatedSourceFiles ; private final String description ; SourceUpdateCardinality ( int maxNumberOfUpdatedSourceFiles , String description ) { this . maxNumberOfUpdatedSourceFiles = maxNumberOfUpdatedSourceFiles ; this . description = description ; } public String getDescription ( ) { return description ; } public void onSourceFile ( File dir , String extension , Action < ? super File > action ) { int idx = <int> ; for ( File f : dir . listFiles ( ) ) { if ( f . getName ( ) . endsWith ( extension ) ) { action . execute ( f ) ; } if ( + + idx = = maxNumberOfUpdatedSourceFiles ) { return ; } } } } 
