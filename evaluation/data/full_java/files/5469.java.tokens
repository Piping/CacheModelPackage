package org . elasticsearch . action . termvectors . dfs ; import org . elasticsearch . action . support . broadcast . BroadcastShardResponse ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . index . shard . ShardId ; import org . elasticsearch . search . dfs . DfsSearchResult ; import java . io . IOException ; class ShardDfsOnlyResponse extends BroadcastShardResponse { private DfsSearchResult dfsSearchResult = new DfsSearchResult ( ) ; ShardDfsOnlyResponse ( ) { } ShardDfsOnlyResponse ( ShardId shardId , DfsSearchResult dfsSearchResult ) { super ( shardId ) ; this . dfsSearchResult = dfsSearchResult ; } public DfsSearchResult getDfsSearchResult ( ) { return dfsSearchResult ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; dfsSearchResult . readFrom ( in ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; dfsSearchResult . writeTo ( out ) ; } } 
