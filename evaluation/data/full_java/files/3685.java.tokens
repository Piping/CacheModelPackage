package org . eclipse . debug . internal . core ; import org . eclipse . core . runtime . preferences . IEclipsePreferences ; import org . eclipse . core . runtime . preferences . IPreferenceNodeVisitor ; import org . eclipse . core . runtime . preferences . PreferenceModifyListener ; import org . eclipse . debug . core . DebugPlugin ; import org . eclipse . debug . core . ILaunchConfigurationType ; import org . osgi . service . prefs . BackingStoreException ; public class PreferredDelegateModifyListener extends PreferenceModifyListener { class Visitor implements IPreferenceNodeVisitor { @Override public boolean visit ( IEclipsePreferences node ) throws BackingStoreException { if ( node . name ( ) . equals ( DebugPlugin . getUniqueIdentifier ( ) ) ) { LaunchManager manager = ( LaunchManager ) DebugPlugin . getDefault ( ) . getLaunchManager ( ) ; manager . resetPreferredDelegates ( ) ; ILaunchConfigurationType [ ] types = manager . getLaunchConfigurationTypes ( ) ; for ( int i = <int> ; i < types . length ; i + + ) { ( ( LaunchConfigurationType ) types [ i ] ) . resetPreferredDelegates ( ) ; } return false ; } return true ; } } @Override public IEclipsePreferences preApply ( IEclipsePreferences node ) { try { node . accept ( new Visitor ( ) ) ; } catch ( BackingStoreException e ) { DebugPlugin . log ( e ) ; } return node ; } } 
