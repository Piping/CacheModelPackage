package org . elasticsearch . index . store ; import org . apache . lucene . store . Directory ; import org . apache . lucene . store . FileSwitchDirectory ; import org . apache . lucene . store . FilterDirectory ; import org . elasticsearch . common . Nullable ; public final class DirectoryUtils { private DirectoryUtils ( ) { } static final < T extends Directory > Directory getLeafDirectory ( FilterDirectory dir , Class < T > targetClass ) { Directory current = dir . getDelegate ( ) ; while ( true ) { if ( ( current instanceof FilterDirectory ) ) { if ( targetClass ! = null & & targetClass . isAssignableFrom ( current . getClass ( ) ) ) { break ; } current = ( ( FilterDirectory ) current ) . getDelegate ( ) ; } else { break ; } } return current ; } public static < T extends Directory > T getLeaf ( Directory dir , Class < T > targetClass ) { return getLeaf ( dir , targetClass , null ) ; } public static < T extends Directory > T getLeaf ( Directory dir , Class < T > targetClass , T defaultValue ) { Directory d = dir ; if ( dir instanceof FilterDirectory ) { d = getLeafDirectory ( ( FilterDirectory ) dir , targetClass ) ; } if ( d instanceof FileSwitchDirectory ) { T leaf = getLeaf ( ( ( FileSwitchDirectory ) d ) . getPrimaryDir ( ) , targetClass ) ; if ( leaf = = null ) { d = getLeaf ( ( ( FileSwitchDirectory ) d ) . getSecondaryDir ( ) , targetClass , defaultValue ) ; } else { d = leaf ; } } if ( d ! = null & & targetClass . isAssignableFrom ( d . getClass ( ) ) ) { return targetClass . cast ( d ) ; } else { return defaultValue ; } } } 
