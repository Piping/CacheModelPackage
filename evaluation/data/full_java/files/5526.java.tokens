package org . elasticsearch . cluster ; import org . elasticsearch . common . Nullable ; import org . elasticsearch . common . Priority ; import org . elasticsearch . common . unit . TimeValue ; import java . util . List ; abstract public class ClusterStateUpdateTask implements ClusterStateTaskConfig , ClusterStateTaskExecutor < ClusterStateUpdateTask > , ClusterStateTaskListener { final private Priority priority ; public ClusterStateUpdateTask ( ) { this ( Priority . NORMAL ) ; } public ClusterStateUpdateTask ( Priority priority ) { this . priority = priority ; } @Override final public BatchResult < ClusterStateUpdateTask > execute ( ClusterState currentState , List < ClusterStateUpdateTask > tasks ) throws Exception { ClusterState result = execute ( currentState ) ; return BatchResult . < ClusterStateUpdateTask > builder ( ) . successes ( tasks ) . build ( result ) ; } abstract public ClusterState execute ( ClusterState currentState ) throws Exception ; abstract public void onFailure ( String source , Throwable t ) ; @Nullable public TimeValue timeout ( ) { return null ; } @Override public Priority priority ( ) { return priority ; } } 
