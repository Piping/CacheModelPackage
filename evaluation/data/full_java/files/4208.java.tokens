package org . eclipse . debug . internal . ui . launchConfigurations ; import org . eclipse . debug . internal . ui . DebugUIPlugin ; import org . eclipse . debug . internal . ui . IInternalDebugUIConstants ; import org . eclipse . debug . internal . ui . SWTFactory ; import org . eclipse . debug . ui . DebugUITools ; import org . eclipse . jface . action . Action ; import org . eclipse . jface . action . IAction ; import org . eclipse . jface . action . IMenuCreator ; import org . eclipse . jface . resource . ImageDescriptor ; public class FilterLaunchConfigurationAction extends Action { public static final String ID_FILTER_ACTION = DebugUIPlugin . getUniqueIdentifier ( ) + <str> ; private FilterDropDownMenuCreator fMenuCreator ; public FilterLaunchConfigurationAction ( ) { super ( LaunchConfigurationsMessages . FilterLaunchConfigurationAction_0 , IAction . AS_DROP_DOWN_MENU ) ; fMenuCreator = new FilterDropDownMenuCreator ( ) ; } @Override public void run ( ) { SWTFactory . showPreferencePage ( <str> ) ; } @Override public String getDescription ( ) { return LaunchConfigurationsMessages . LaunchConfigurationsDialog_4 ; } @Override public ImageDescriptor getDisabledImageDescriptor ( ) { return DebugUITools . getImageDescriptor ( IInternalDebugUIConstants . IMG_ELCL_FILTER_CONFIGS ) ; } @Override public ImageDescriptor getImageDescriptor ( ) { return DebugUITools . getImageDescriptor ( IInternalDebugUIConstants . IMG_ELCL_FILTER_CONFIGS ) ; } @Override public IMenuCreator getMenuCreator ( ) { return fMenuCreator ; } @Override public String getToolTipText ( ) { return LaunchConfigurationsMessages . LaunchConfigurationsDialog_4 ; } } 
