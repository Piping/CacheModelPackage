package org . gradle . api . artifacts . maven ; import org . gradle . api . artifacts . Configuration ; import org . gradle . util . JUnit4GroovyMockery ; import org . jmock . integration . junit4 . JUnit4Mockery ; import org . junit . Before ; import org . junit . Test ; import org . junit . runner . RunWith ; import org . junit . runners . JUnit4 ; import static org . junit . Assert . * ; @RunWith ( JUnit4 . class ) public class Conf2ScopeMappingTest { private final JUnit4Mockery context = new JUnit4GroovyMockery ( ) ; private Conf2ScopeMapping conf2ScopeMapping ; private static final String TEST_SCOPE = <str> ; private static final Integer TEST_PRIORITY = <int> ; private final Configuration configuration = context . mock ( Configuration . class ) ; @Before public void setUp ( ) { conf2ScopeMapping = new Conf2ScopeMapping ( TEST_PRIORITY , configuration , TEST_SCOPE ) ; } @Test public void init ( ) { assertEquals ( TEST_PRIORITY , conf2ScopeMapping . getPriority ( ) ) ; assertEquals ( configuration , conf2ScopeMapping . getConfiguration ( ) ) ; assertEquals ( TEST_SCOPE , conf2ScopeMapping . getScope ( ) ) ; } @Test public void equality ( ) { assertTrue ( conf2ScopeMapping . equals ( new Conf2ScopeMapping ( TEST_PRIORITY , configuration , TEST_SCOPE ) ) ) ; assertFalse ( conf2ScopeMapping . equals ( new Conf2ScopeMapping ( TEST_PRIORITY + <int> , configuration , TEST_SCOPE ) ) ) ; } @Test public void hashcode ( ) { assertEquals ( conf2ScopeMapping . hashCode ( ) , new Conf2ScopeMapping ( TEST_PRIORITY , configuration , TEST_SCOPE ) . hashCode ( ) ) ; } } 
