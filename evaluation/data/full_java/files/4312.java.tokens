package org . eclipse . debug . internal . ui . sourcelookup ; import java . util . ArrayList ; import java . util . List ; import org . eclipse . core . runtime . CoreException ; import org . eclipse . core . runtime . IStatus ; import org . eclipse . debug . core . IStatusHandler ; import org . eclipse . debug . internal . ui . DebugUIPlugin ; import org . eclipse . debug . ui . sourcelookup . CommonSourceNotFoundEditor ; import org . eclipse . jface . window . Window ; import org . eclipse . ui . dialogs . ElementListSelectionDialog ; public class ResolveDuplicatesHandler implements IStatusHandler { @Override public Object handleStatus ( IStatus status , Object source ) throws CoreException { Object [ ] args = ( Object [ ] ) source ; List < ? > sources = ( List < ? > ) args [ <int> ] ; return resolveSourceElement ( sources ) ; } public Object resolveSourceElement ( List < ? > sources ) { Object file = null ; sources = removeSourceNotFoundEditors ( sources ) ; if ( sources . size ( ) = = <int> ) { return sources . get ( <int> ) ; } else if ( sources . size ( ) = = <int> ) { return null ; } ElementListSelectionDialog dialog = new ElementListSelectionDialog ( DebugUIPlugin . getShell ( ) , new SourceElementLabelProvider ( ) ) ; dialog . setMultipleSelection ( false ) ; dialog . setTitle ( SourceLookupUIMessages . ResolveDuplicatesHandler_0 ) ; dialog . setMessage ( SourceLookupUIMessages . ResolveDuplicatesHandler_1 ) ; dialog . setElements ( sources . toArray ( ) ) ; dialog . open ( ) ; if ( dialog . getReturnCode ( ) = = Window . OK ) { file = dialog . getFirstResult ( ) ; } return file ; } private List < Object > removeSourceNotFoundEditors ( List < ? > sources ) { List < Object > filteredList = new ArrayList < Object > ( ) ; for ( Object obj : sources ) { if ( ! ( obj instanceof CommonSourceNotFoundEditor ) ) { filteredList . add ( obj ) ; } } if ( filteredList . isEmpty ( ) & & sources . get ( <int> ) ! = null ) { filteredList . add ( sources . get ( <int> ) ) ; } return filteredList ; } } 
