package io . netty . channel . group ; import io . netty . channel . Channel ; import io . netty . channel . ChannelException ; import io . netty . channel . ChannelFuture ; import java . util . Collection ; import java . util . Collections ; import java . util . Iterator ; import java . util . Map ; public class ChannelGroupException extends ChannelException implements Iterable < Map . Entry < Channel , Throwable > > { private static final long serialVersionUID = - <int> ; private final Collection < Map . Entry < Channel , Throwable > > failed ; public ChannelGroupException ( Collection < Map . Entry < Channel , Throwable > > causes ) { if ( causes = = null ) { throw new NullPointerException ( <str> ) ; } if ( causes . isEmpty ( ) ) { throw new IllegalArgumentException ( <str> ) ; } failed = Collections . unmodifiableCollection ( causes ) ; } @Override public Iterator < Map . Entry < Channel , Throwable > > iterator ( ) { return failed . iterator ( ) ; } } 
