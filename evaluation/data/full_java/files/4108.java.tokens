package org . eclipse . debug . internal . ui . breakpoints . provisional ; import java . util . HashMap ; import java . util . Map ; import org . eclipse . core . runtime . IAdaptable ; import org . eclipse . core . runtime . PlatformObject ; import org . eclipse . debug . internal . ui . DebugPluginImages ; import org . eclipse . debug . ui . IDebugUIConstants ; import org . eclipse . jface . resource . ImageDescriptor ; import org . eclipse . ui . model . IWorkbenchAdapter ; public class OtherBreakpointCategory extends PlatformObject implements IWorkbenchAdapter { private static Map < IBreakpointOrganizer , IAdaptable [ ] > fOthers = new HashMap < IBreakpointOrganizer , IAdaptable [ ] > ( ) ; private IBreakpointOrganizer fOrganizer ; public static IAdaptable [ ] getCategories ( IBreakpointOrganizer organizer ) { IAdaptable [ ] others = fOthers . get ( organizer ) ; if ( others = = null ) { others = new IAdaptable [ ] { new OtherBreakpointCategory ( organizer ) } ; fOthers . put ( organizer , others ) ; } return others ; } private OtherBreakpointCategory ( IBreakpointOrganizer organizer ) { fOrganizer = organizer ; } @Override public Object [ ] getChildren ( Object o ) { return null ; } @Override public ImageDescriptor getImageDescriptor ( Object object ) { return DebugPluginImages . getImageDescriptor ( IDebugUIConstants . IMG_VIEW_BREAKPOINTS ) ; } @Override public String getLabel ( Object o ) { return fOrganizer . getOthersLabel ( ) ; } @Override public Object getParent ( Object o ) { return null ; } @Override public boolean equals ( Object obj ) { if ( obj instanceof OtherBreakpointCategory ) { OtherBreakpointCategory category = ( OtherBreakpointCategory ) obj ; return fOrganizer . equals ( category . fOrganizer ) ; } return false ; } @Override public int hashCode ( ) { return fOrganizer . hashCode ( ) ; } } 
