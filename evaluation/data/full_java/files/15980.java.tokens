package org . gradle . tooling . internal . consumer . connection ; import org . gradle . tooling . BuildAction ; import org . gradle . tooling . internal . consumer . Distribution ; import org . gradle . tooling . internal . consumer . parameters . ConsumerOperationParameters ; import org . gradle . tooling . internal . consumer . TestExecutionRequest ; import org . gradle . tooling . model . internal . Exceptions ; public class NoToolingApiConnection implements ConsumerConnection { private final Distribution distribution ; public NoToolingApiConnection ( Distribution distribution ) { this . distribution = distribution ; } public void stop ( ) { } public String getDisplayName ( ) { return distribution . getDisplayName ( ) ; } public < T > T run ( Class < T > type , ConsumerOperationParameters operationParameters ) throws UnsupportedOperationException , IllegalStateException { throw Exceptions . unsupportedFeature ( operationParameters . getEntryPointName ( ) , distribution , <str> ) ; } public < T > T run ( BuildAction < T > action , ConsumerOperationParameters operationParameters ) throws UnsupportedOperationException , IllegalStateException { throw Exceptions . unsupportedFeature ( operationParameters . getEntryPointName ( ) , distribution , <str> ) ; } public void runTests ( TestExecutionRequest testExecutionRequest , ConsumerOperationParameters operationParameters ) { throw Exceptions . unsupportedFeature ( operationParameters . getEntryPointName ( ) , distribution , <str> ) ; } } 
