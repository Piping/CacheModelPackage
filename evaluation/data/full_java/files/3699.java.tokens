package org . eclipse . debug . internal . core . commands ; import org . eclipse . core . runtime . CoreException ; import org . eclipse . core . runtime . IProgressMonitor ; import org . eclipse . debug . core . IRequest ; import org . eclipse . debug . core . commands . AbstractDebugCommand ; import org . eclipse . debug . core . commands . IEnabledStateRequest ; public abstract class ForEachCommand extends AbstractDebugCommand { @Override protected void doExecute ( Object [ ] targets , IProgressMonitor monitor , IRequest request ) throws CoreException { for ( int i = <int> ; i < targets . length ; i + + ) { execute ( targets [ i ] ) ; monitor . worked ( <int> ) ; } } protected abstract void execute ( Object target ) throws CoreException ; @Override protected boolean isExecutable ( Object [ ] targets , IProgressMonitor monitor , IEnabledStateRequest request ) throws CoreException { for ( int i = <int> ; i < targets . length ; i + + ) { if ( ! isExecutable ( targets [ i ] ) ) { return false ; } monitor . worked ( <int> ) ; } return true ; } protected abstract boolean isExecutable ( Object target ) ; } 
