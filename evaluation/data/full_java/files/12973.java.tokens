package org . gradle . api . tasks . diagnostics . internal . graph . nodes ; import org . gradle . api . artifacts . component . ComponentIdentifier ; import org . gradle . api . artifacts . result . ComponentSelectionReason ; import java . util . Collections ; import java . util . Set ; public class DependencyReportHeader implements RenderableDependency { private final DependencyEdge dependency ; public DependencyReportHeader ( DependencyEdge dependency ) { this . dependency = dependency ; } public ComponentIdentifier getId ( ) { return dependency . getActual ( ) ; } public String getName ( ) { return getId ( ) . getDisplayName ( ) ; } public String getDescription ( ) { return getReasonDescription ( dependency . getReason ( ) ) ; } public boolean isResolvable ( ) { return dependency . isResolvable ( ) ; } public Set < ? extends RenderableDependency > getChildren ( ) { return Collections . emptySet ( ) ; } private String getReasonDescription ( ComponentSelectionReason reason ) { return ! reason . isExpected ( ) ? reason . getDescription ( ) : null ; } } 
