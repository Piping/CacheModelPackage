package org . gradle . api . internal . artifacts . ivyservice . modulecache ; import org . gradle . api . artifacts . ResolvedModuleVersion ; import org . gradle . api . artifacts . component . ModuleComponentIdentifier ; import org . gradle . api . internal . artifacts . ivyservice . ivyresolve . ModuleComponentRepository ; import org . gradle . internal . component . external . model . ModuleComponentResolveMetaData ; import org . gradle . internal . component . external . model . MutableModuleComponentResolveMetaData ; import org . gradle . internal . component . model . ModuleSource ; import java . math . BigInteger ; public interface ModuleMetaDataCache { CachedMetaData cacheMissing ( ModuleComponentRepository repository , ModuleComponentIdentifier id ) ; CachedMetaData cacheMetaData ( ModuleComponentRepository repository , ModuleComponentResolveMetaData metaData ) ; CachedMetaData getCachedModuleDescriptor ( ModuleComponentRepository repository , ModuleComponentIdentifier id ) ; interface CachedMetaData { ResolvedModuleVersion getModuleVersion ( ) ; MutableModuleComponentResolveMetaData getMetaData ( ) ; long getAgeMillis ( ) ; BigInteger getDescriptorHash ( ) ; boolean isMissing ( ) ; ModuleSource getModuleSource ( ) ; } } 
