package org . gradle . api . internal . artifacts . ivyservice . ivyresolve . strategy ; public class MavenVersionSelectorScheme implements VersionSelectorScheme { public static final String LATEST = <str> ; public static final String RELEASE = <str> ; private static final String LATEST_INTEGRATION = <str> ; private static final String LATEST_RELEASE = <str> ; private final VersionSelectorScheme defaultVersionSelectorScheme ; public MavenVersionSelectorScheme ( VersionSelectorScheme defaultVersionSelectorScheme ) { this . defaultVersionSelectorScheme = defaultVersionSelectorScheme ; } public VersionSelector parseSelector ( String selectorString ) { if ( selectorString . equals ( RELEASE ) ) { return new LatestVersionSelector ( LATEST_RELEASE ) ; } else if ( selectorString . equals ( LATEST ) ) { return new LatestVersionSelector ( LATEST_INTEGRATION ) ; } else { return defaultVersionSelectorScheme . parseSelector ( selectorString ) ; } } public String renderSelector ( VersionSelector selector ) { return toMavenSyntax ( defaultVersionSelectorScheme . renderSelector ( selector ) ) ; } private String toMavenSyntax ( String version ) { if ( version . equals ( LATEST_INTEGRATION ) ) { return LATEST ; } if ( version . equals ( LATEST_RELEASE ) ) { return RELEASE ; } if ( version . startsWith ( <str> ) ) { version = <str> + version . substring ( <int> ) ; } if ( version . endsWith ( <str> ) ) { version = version . substring ( <int> , version . length ( ) - <int> ) + <str> ; } return version ; } } 
