package org . apache . cassandra ; import java . io . IOException ; import java . io . OutputStream ; import java . io . PrintStream ; import ch . qos . logback . core . OutputStreamAppender ; import ch . qos . logback . core . status . Status ; import ch . qos . logback . core . status . WarnStatus ; public class ConsoleAppender < E > extends OutputStreamAppender < E > { private String target = <str> ; public void setTarget ( String target ) { if ( ! ( target . equals ( <str> ) | | target . equals ( <str> ) ) ) { Status status = new WarnStatus ( <str> + target + <str> , this ) ; status . add ( new WarnStatus ( <str> , this ) ) ; addStatus ( status ) ; return ; } this . target = target ; } public String getTarget ( ) { return target ; } @Override public void start ( ) { @SuppressWarnings ( <str> ) final PrintStream targetStream = target . equals ( <str> ) ? LogbackStatusListener . originalOut : LogbackStatusListener . originalErr ; setOutputStream ( new OutputStream ( ) { @Override public void write ( int b ) { targetStream . write ( b ) ; } @Override public void write ( byte [ ] b ) throws IOException { targetStream . write ( b ) ; } @Override public void write ( byte [ ] b , int off , int len ) { targetStream . write ( b , off , len ) ; } @Override public void flush ( ) { targetStream . flush ( ) ; } } ) ; super . start ( ) ; } } 
