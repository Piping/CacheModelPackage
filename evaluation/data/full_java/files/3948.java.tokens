package org . eclipse . debug . tests . viewer . model ; import junit . framework . TestCase ; import org . eclipse . core . resources . ResourcesPlugin ; import org . eclipse . debug . internal . ui . viewers . model . provisional . PresentationContext ; import org . eclipse . ui . IPersistableElement ; import org . eclipse . ui . XMLMemento ; public class PresentationContextTests extends TestCase { public PresentationContextTests ( String name ) { super ( name ) ; } public void testSaveRestore ( ) { PresentationContext context = new PresentationContext ( <str> ) ; context . setProperty ( <str> , <str> ) ; context . setProperty ( <str> , Integer . valueOf ( <int> ) ) ; context . setProperty ( <str> , Boolean . TRUE ) ; context . setProperty ( <str> , ResourcesPlugin . getWorkspace ( ) . getRoot ( ) . getAdapter ( IPersistableElement . class ) ) ; final XMLMemento memento = XMLMemento . createWriteRoot ( <str> ) ; context . saveProperites ( memento ) ; context = new PresentationContext ( <str> ) ; context . initProperties ( memento ) ; assertEquals ( <str> , <str> , context . getProperty ( <str> ) ) ; assertEquals ( <str> , Integer . valueOf ( <int> ) , context . getProperty ( <str> ) ) ; assertEquals ( <str> , Boolean . TRUE , context . getProperty ( <str> ) ) ; assertEquals ( <str> , ResourcesPlugin . getWorkspace ( ) . getRoot ( ) , context . getProperty ( <str> ) ) ; context . dispose ( ) ; } } 
