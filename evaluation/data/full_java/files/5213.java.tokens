package org . elasticsearch . action . admin . indices . template . get ; import org . elasticsearch . action . ActionResponse ; import org . elasticsearch . cluster . metadata . IndexTemplateMetaData ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import java . io . IOException ; import java . util . ArrayList ; import java . util . List ; public class GetIndexTemplatesResponse extends ActionResponse { private List < IndexTemplateMetaData > indexTemplates ; GetIndexTemplatesResponse ( ) { } GetIndexTemplatesResponse ( List < IndexTemplateMetaData > indexTemplates ) { this . indexTemplates = indexTemplates ; } public List < IndexTemplateMetaData > getIndexTemplates ( ) { return indexTemplates ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; int size = in . readVInt ( ) ; indexTemplates = new ArrayList < > ( size ) ; for ( int i = <int> ; i < size ; i + + ) { indexTemplates . add ( <int> , IndexTemplateMetaData . Builder . readFrom ( in ) ) ; } } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeVInt ( indexTemplates . size ( ) ) ; for ( IndexTemplateMetaData indexTemplate : indexTemplates ) { indexTemplate . writeTo ( out ) ; } } } 
