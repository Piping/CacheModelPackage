package org . apache . cassandra . utils . concurrent ; import java . util . Arrays ; import org . apache . cassandra . utils . Throwables ; import static org . apache . cassandra . utils . Throwables . maybeFail ; import static org . apache . cassandra . utils . Throwables . merge ; public abstract class WrappedSharedCloseable extends SharedCloseableImpl { final AutoCloseable [ ] wrapped ; public WrappedSharedCloseable ( final AutoCloseable closeable ) { this ( new AutoCloseable [ ] { closeable } ) ; } public WrappedSharedCloseable ( final AutoCloseable [ ] closeable ) { super ( new Tidy ( closeable ) ) ; wrapped = closeable ; } static final class Tidy implements RefCounted . Tidy { final AutoCloseable [ ] closeable ; Tidy ( AutoCloseable [ ] closeable ) { this . closeable = closeable ; } public void tidy ( ) throws Exception { Throwable fail = null ; for ( AutoCloseable c : closeable ) { try { c . close ( ) ; } catch ( Throwable t ) { fail = merge ( fail , t ) ; } } maybeFail ( fail ) ; } public String name ( ) { return Arrays . toString ( closeable ) ; } } protected WrappedSharedCloseable ( WrappedSharedCloseable copy ) { super ( copy ) ; wrapped = copy . wrapped ; } } 
