package org . apache . cassandra . io . sstable ; import java . util . Collection ; import java . util . List ; import java . util . UUID ; import org . apache . cassandra . db . rows . UnfilteredRowIterator ; import org . apache . cassandra . io . sstable . format . SSTableReader ; import org . apache . cassandra . utils . Throwables ; import org . apache . cassandra . utils . concurrent . Transactional ; public interface SSTableMultiWriter extends Transactional { boolean append ( UnfilteredRowIterator partition ) ; Collection < SSTableReader > finish ( long repairedAt , long maxDataAge , boolean openResult ) ; Collection < SSTableReader > finish ( boolean openResult ) ; Collection < SSTableReader > finished ( ) ; SSTableMultiWriter setOpenResult ( boolean openResult ) ; String getFilename ( ) ; long getFilePointer ( ) ; UUID getCfId ( ) ; static void abortOrDie ( SSTableMultiWriter writer ) { Throwables . maybeFail ( writer . abort ( null ) ) ; } } 
