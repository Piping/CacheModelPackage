package org . gradle . internal . resource . transport . sftp ; import org . gradle . api . artifacts . repositories . PasswordCredentials ; import java . net . URI ; public class SftpHost { private final String hostname ; private final int port ; private final String username ; private final String password ; public SftpHost ( URI uri , PasswordCredentials credentials ) { hostname = uri . getHost ( ) ; port = uri . getPort ( ) ; username = credentials . getUsername ( ) ; password = credentials . getPassword ( ) ; } public String getHostname ( ) { return hostname ; } public int getPort ( ) { return port ; } public String getUsername ( ) { return username ; } public String getPassword ( ) { return password ; } @Override public boolean equals ( Object o ) { if ( this = = o ) { return true ; } if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) { return false ; } SftpHost sftpHost = ( SftpHost ) o ; if ( port ! = sftpHost . port ) { return false ; } if ( ! hostname . equals ( sftpHost . hostname ) ) { return false ; } if ( password ! = null ? ! password . equals ( sftpHost . password ) : sftpHost . password ! = null ) { return false ; } if ( username ! = null ? ! username . equals ( sftpHost . username ) : sftpHost . username ! = null ) { return false ; } return true ; } @Override public int hashCode ( ) { int result = hostname . hashCode ( ) ; result = <int> * result + port ; result = <int> * result + ( username ! = null ? username . hashCode ( ) : <int> ) ; result = <int> * result + ( password ! = null ? password . hashCode ( ) : <int> ) ; return result ; } @Override public String toString ( ) { return String . format ( <str> , hostname , port , username ) ; } } 
