package org . gradle . tooling . internal . provider ; import org . gradle . cache . CacheRepository ; import org . gradle . initialization . GradleLauncherFactory ; import org . gradle . internal . classloader . ClassLoaderFactory ; import org . gradle . internal . concurrent . ExecutorFactory ; import org . gradle . internal . event . ListenerManager ; import org . gradle . internal . filewatch . FileWatcherFactory ; import org . gradle . internal . invocation . BuildActionRunner ; import org . gradle . internal . service . ServiceRegistration ; import org . gradle . internal . service . ServiceRegistry ; import org . gradle . internal . service . scopes . PluginServiceRegistry ; import org . gradle . launcher . exec . * ; import org . gradle . logging . StyledTextOutputFactory ; import java . util . List ; public class LauncherServices implements PluginServiceRegistry { public void registerGlobalServices ( ServiceRegistration registration ) { registration . addProvider ( new ToolingGlobalScopeServices ( ) ) ; } public void registerBuildSessionServices ( ServiceRegistration registration ) { } public void registerBuildServices ( ServiceRegistration registration ) { registration . addProvider ( new ToolingBuildScopeServices ( ) ) ; } public void registerGradleServices ( ServiceRegistration registration ) { } public void registerProjectServices ( ServiceRegistration registration ) { } static class ToolingGlobalScopeServices { BuildExecuter createBuildExecuter ( GradleLauncherFactory gradleLauncherFactory , ServiceRegistry globalServices , ListenerManager listenerManager , FileWatcherFactory fileWatcherFactory , ExecutorFactory executorFactory , StyledTextOutputFactory styledTextOutputFactory ) { List < BuildActionRunner > buildActionRunners = globalServices . getAll ( BuildActionRunner . class ) ; BuildActionExecuter < BuildActionParameters > delegate = new InProcessBuildActionExecuter ( gradleLauncherFactory , new ChainingBuildActionRunner ( buildActionRunners ) ) ; return new ContinuousBuildActionExecuter ( delegate , fileWatcherFactory , listenerManager , styledTextOutputFactory , executorFactory ) ; } ExecuteBuildActionRunner createExecuteBuildActionRunner ( ) { return new ExecuteBuildActionRunner ( ) ; } ClassLoaderCache createClassLoaderCache ( ) { return new ClassLoaderCache ( ) ; } JarCache createJarCache ( ) { return new JarCache ( ) ; } } static class ToolingBuildScopeServices { PayloadClassLoaderFactory createClassLoaderFactory ( ClassLoaderFactory classLoaderFactory , JarCache jarCache , CacheRepository cacheRepository ) { return new DaemonSidePayloadClassLoaderFactory ( new ModelClassLoaderFactory ( classLoaderFactory ) , jarCache , cacheRepository ) ; } PayloadSerializer createPayloadSerializer ( ClassLoaderCache classLoaderCache , PayloadClassLoaderFactory classLoaderFactory ) { return new PayloadSerializer ( new DefaultPayloadClassLoaderRegistry ( classLoaderCache , classLoaderFactory ) ) ; } } } 
