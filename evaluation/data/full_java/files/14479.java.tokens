package org . gradle . api . internal . rules ; import org . gradle . api . NamedDomainObjectFactory ; import org . gradle . api . internal . PolymorphicNamedEntityInstantiator ; import org . gradle . model . internal . core . rule . describe . ModelRuleDescriptor ; import java . util . Set ; public class DefaultRuleAwarePolymorphicNamedEntityInstantiator < T > implements RuleAwarePolymorphicNamedEntityInstantiator < T > { private final PolymorphicNamedEntityInstantiator < T > instantiator ; private final RuleAwareNamedDomainObjectFactoryRegistry < T > registry ; public DefaultRuleAwarePolymorphicNamedEntityInstantiator ( PolymorphicNamedEntityInstantiator < T > instantiator ) { this ( instantiator , new DefaultRuleAwareNamedDomainObjectFactoryRegistry < T > ( instantiator ) ) ; } public DefaultRuleAwarePolymorphicNamedEntityInstantiator ( PolymorphicNamedEntityInstantiator < T > instantiator , RuleAwareNamedDomainObjectFactoryRegistry < T > registry ) { this . instantiator = instantiator ; this . registry = registry ; } @Override public < S extends T > S create ( String name , Class < S > type ) { return instantiator . create ( name , type ) ; } @Override public < U extends T > void registerFactory ( Class < U > type , NamedDomainObjectFactory < ? extends U > factory , ModelRuleDescriptor descriptor ) { registry . registerFactory ( type , factory , descriptor ) ; } @Override public Set < ? extends Class < ? extends T > > getCreatableTypes ( ) { return instantiator . getCreatableTypes ( ) ; } @Override public < U extends T > void registerFactory ( Class < U > type , NamedDomainObjectFactory < ? extends U > factory ) { registry . registerFactory ( type , factory ) ; } } 
