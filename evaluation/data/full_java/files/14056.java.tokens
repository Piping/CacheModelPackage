package org . gradle . api . publish . maven . tasks ; import org . gradle . api . DefaultTask ; import org . gradle . api . Incubating ; import org . gradle . api . InvalidUserDataException ; import org . gradle . api . file . FileCollection ; import org . gradle . api . internal . artifacts . mvnsettings . LocalMavenRepositoryLocator ; import org . gradle . api . publish . maven . MavenPublication ; import org . gradle . api . publish . maven . internal . publication . MavenPublicationInternal ; import org . gradle . internal . Factory ; import org . gradle . logging . LoggingManagerInternal ; import javax . inject . Inject ; import java . util . concurrent . Callable ; @Incubating abstract public class AbstractPublishToMaven extends DefaultTask { private MavenPublicationInternal publication ; public AbstractPublishToMaven ( ) { getInputs ( ) . files ( new Callable < FileCollection > ( ) { public FileCollection call ( ) throws Exception { MavenPublicationInternal publicationInternal = getPublicationInternal ( ) ; return publicationInternal = = null ? null : publicationInternal . getPublishableFiles ( ) ; } } ) ; } public MavenPublication getPublication ( ) { return publication ; } public void setPublication ( MavenPublication publication ) { this . publication = toPublicationInternal ( publication ) ; } protected MavenPublicationInternal getPublicationInternal ( ) { return toPublicationInternal ( getPublication ( ) ) ; } private static MavenPublicationInternal toPublicationInternal ( MavenPublication publication ) { if ( publication = = null ) { return null ; } else if ( publication instanceof MavenPublicationInternal ) { return ( MavenPublicationInternal ) publication ; } else { throw new InvalidUserDataException ( String . format ( <str> , MavenPublicationInternal . class . getName ( ) , publication . getClass ( ) . getName ( ) ) ) ; } } @Inject protected Factory < LoggingManagerInternal > getLoggingManagerFactory ( ) { throw new UnsupportedOperationException ( ) ; } @Inject protected LocalMavenRepositoryLocator getMavenRepositoryLocator ( ) { throw new UnsupportedOperationException ( ) ; } } 
