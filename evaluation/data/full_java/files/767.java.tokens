package org . apache . cassandra . locator ; import java . io . IOException ; import java . net . InetAddress ; import org . apache . cassandra . exceptions . ConfigurationException ; import org . apache . cassandra . config . DatabaseDescriptor ; import org . apache . cassandra . gms . ApplicationState ; import org . apache . cassandra . gms . Gossiper ; import org . apache . cassandra . service . StorageService ; public class Ec2MultiRegionSnitch extends Ec2Snitch { private static final String PUBLIC_IP_QUERY_URL = <str> ; private static final String PRIVATE_IP_QUERY_URL = <str> ; private final String localPrivateAddress ; public Ec2MultiRegionSnitch ( ) throws IOException , ConfigurationException { super ( ) ; InetAddress localPublicAddress = InetAddress . getByName ( awsApiCall ( PUBLIC_IP_QUERY_URL ) ) ; logger . info ( <str> , localPublicAddress ) ; localPrivateAddress = awsApiCall ( PRIVATE_IP_QUERY_URL ) ; DatabaseDescriptor . setBroadcastAddress ( localPublicAddress ) ; DatabaseDescriptor . setBroadcastRpcAddress ( localPublicAddress ) ; } @Override public void gossiperStarting ( ) { super . gossiperStarting ( ) ; Gossiper . instance . addLocalApplicationState ( ApplicationState . INTERNAL_IP , StorageService . instance . valueFactory . internalIP ( localPrivateAddress ) ) ; Gossiper . instance . register ( new ReconnectableSnitchHelper ( this , ec2region , true ) ) ; } } 
