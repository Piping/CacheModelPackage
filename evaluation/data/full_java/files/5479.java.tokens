package org . elasticsearch . bootstrap ; import org . elasticsearch . common . SuppressForbidden ; import java . util . Dictionary ; import java . util . Enumeration ; @SuppressForbidden ( reason = <str> ) public final class BootstrapInfo { private BootstrapInfo ( ) { } public static boolean isNativesAvailable ( ) { return Natives . JNA_AVAILABLE ; } public static boolean isMemoryLocked ( ) { return Natives . isMemoryLocked ( ) ; } public static boolean isSeccompInstalled ( ) { return Natives . isSeccompInstalled ( ) ; } public static final String UNTRUSTED_CODEBASE = <str> ; private static final Dictionary < Object , Object > SYSTEM_PROPERTIES ; static { final Dictionary < Object , Object > sysprops = System . getProperties ( ) ; SYSTEM_PROPERTIES = new Dictionary < Object , Object > ( ) { @Override public int size ( ) { return sysprops . size ( ) ; } @Override public boolean isEmpty ( ) { return sysprops . isEmpty ( ) ; } @Override public Enumeration < Object > keys ( ) { return sysprops . keys ( ) ; } @Override public Enumeration < Object > elements ( ) { return sysprops . elements ( ) ; } @Override public Object get ( Object key ) { return sysprops . get ( key ) ; } @Override public Object put ( Object key , Object value ) { throw new UnsupportedOperationException ( <str> ) ; } @Override public Object remove ( Object key ) { throw new UnsupportedOperationException ( <str> ) ; } } ; } public static Dictionary < Object , Object > getSystemProperties ( ) { SecurityManager sm = System . getSecurityManager ( ) ; if ( sm ! = null ) { sm . checkPropertyAccess ( <str> ) ; } return SYSTEM_PROPERTIES ; } } 
