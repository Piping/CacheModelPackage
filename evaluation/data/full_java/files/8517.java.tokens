package org . elasticsearch . search . indicesboost ; import org . elasticsearch . action . search . SearchResponse ; import org . elasticsearch . action . search . SearchType ; import org . elasticsearch . test . ESIntegTestCase ; import static org . elasticsearch . client . Requests . indexRequest ; import static org . elasticsearch . client . Requests . searchRequest ; import static org . elasticsearch . common . xcontent . XContentFactory . jsonBuilder ; import static org . elasticsearch . index . query . QueryBuilders . termQuery ; import static org . elasticsearch . search . builder . SearchSourceBuilder . searchSource ; import static org . elasticsearch . test . hamcrest . ElasticsearchAssertions . assertHitCount ; import static org . hamcrest . Matchers . equalTo ; public class SimpleIndicesBoostSearchIT extends ESIntegTestCase { public void testIndicesBoost ( ) throws Exception { assertHitCount ( client ( ) . prepareSearch ( ) . setQuery ( termQuery ( <str> , <str> ) ) . get ( ) , <int> ) ; try { client ( ) . prepareSearch ( <str> ) . setQuery ( termQuery ( <str> , <str> ) ) . execute ( ) . actionGet ( ) ; fail ( <str> ) ; } catch ( Exception e ) { } createIndex ( <str> , <str> ) ; ensureGreen ( ) ; client ( ) . index ( indexRequest ( <str> ) . type ( <str> ) . id ( <str> ) . source ( jsonBuilder ( ) . startObject ( ) . field ( <str> , <str> ) . endObject ( ) ) ) . actionGet ( ) ; client ( ) . index ( indexRequest ( <str> ) . type ( <str> ) . id ( <str> ) . source ( jsonBuilder ( ) . startObject ( ) . field ( <str> , <str> ) . endObject ( ) ) ) . actionGet ( ) ; refresh ( ) ; float indexBoost = <float> ; logger . info ( <str> ) ; logger . info ( <str> ) ; SearchResponse response = client ( ) . search ( searchRequest ( ) . searchType ( SearchType . QUERY_THEN_FETCH ) . source ( searchSource ( ) . explain ( true ) . indexBoost ( <str> , indexBoost ) . query ( termQuery ( <str> , <str> ) ) ) ) . actionGet ( ) ; assertThat ( response . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; logger . info ( <str> , response . getHits ( ) . getAt ( <int> ) . index ( ) , response . getHits ( ) . getAt ( <int> ) . explanation ( ) ) ; logger . info ( <str> , response . getHits ( ) . getAt ( <int> ) . index ( ) , response . getHits ( ) . getAt ( <int> ) . explanation ( ) ) ; assertThat ( response . getHits ( ) . getAt ( <int> ) . index ( ) , equalTo ( <str> ) ) ; assertThat ( response . getHits ( ) . getAt ( <int> ) . index ( ) , equalTo ( <str> ) ) ; logger . info ( <str> ) ; response = client ( ) . search ( searchRequest ( ) . searchType ( SearchType . QUERY_THEN_FETCH ) . source ( searchSource ( ) . explain ( true ) . indexBoost ( <str> , indexBoost ) . query ( termQuery ( <str> , <str> ) ) ) ) . actionGet ( ) ; assertThat ( response . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; logger . info ( <str> , response . getHits ( ) . getAt ( <int> ) . index ( ) , response . getHits ( ) . getAt ( <int> ) . explanation ( ) ) ; logger . info ( <str> , response . getHits ( ) . getAt ( <int> ) . index ( ) , response . getHits ( ) . getAt ( <int> ) . explanation ( ) ) ; assertThat ( response . getHits ( ) . getAt ( <int> ) . index ( ) , equalTo ( <str> ) ) ; assertThat ( response . getHits ( ) . getAt ( <int> ) . index ( ) , equalTo ( <str> ) ) ; logger . info ( <str> ) ; logger . info ( <str> ) ; response = client ( ) . search ( searchRequest ( ) . searchType ( SearchType . DFS_QUERY_THEN_FETCH ) . source ( searchSource ( ) . explain ( true ) . indexBoost ( <str> , indexBoost ) . query ( termQuery ( <str> , <str> ) ) ) ) . actionGet ( ) ; assertThat ( response . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; logger . info ( <str> , response . getHits ( ) . getAt ( <int> ) . index ( ) , response . getHits ( ) . getAt ( <int> ) . explanation ( ) ) ; logger . info ( <str> , response . getHits ( ) . getAt ( <int> ) . index ( ) , response . getHits ( ) . getAt ( <int> ) . explanation ( ) ) ; assertThat ( response . getHits ( ) . getAt ( <int> ) . index ( ) , equalTo ( <str> ) ) ; assertThat ( response . getHits ( ) . getAt ( <int> ) . index ( ) , equalTo ( <str> ) ) ; logger . info ( <str> ) ; response = client ( ) . search ( searchRequest ( ) . searchType ( SearchType . DFS_QUERY_THEN_FETCH ) . source ( searchSource ( ) . explain ( true ) . indexBoost ( <str> , indexBoost ) . query ( termQuery ( <str> , <str> ) ) ) ) . actionGet ( ) ; assertThat ( response . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; logger . info ( <str> , response . getHits ( ) . getAt ( <int> ) . index ( ) , response . getHits ( ) . getAt ( <int> ) . explanation ( ) ) ; logger . info ( <str> , response . getHits ( ) . getAt ( <int> ) . index ( ) , response . getHits ( ) . getAt ( <int> ) . explanation ( ) ) ; assertThat ( response . getHits ( ) . getAt ( <int> ) . index ( ) , equalTo ( <str> ) ) ; assertThat ( response . getHits ( ) . getAt ( <int> ) . index ( ) , equalTo ( <str> ) ) ; } } 
