package org . elasticsearch . common . inject . spi ; import org . elasticsearch . common . inject . Binder ; import org . elasticsearch . common . inject . ConfigurationException ; import java . util . Objects ; import java . util . Set ; public final class StaticInjectionRequest implements Element { private final Object source ; private final Class < ? > type ; StaticInjectionRequest ( Object source , Class < ? > type ) { this . source = Objects . requireNonNull ( source , <str> ) ; this . type = Objects . requireNonNull ( type , <str> ) ; } @Override public Object getSource ( ) { return source ; } public Class < ? > getType ( ) { return type ; } public Set < InjectionPoint > getInjectionPoints ( ) throws ConfigurationException { return InjectionPoint . forStaticMethodsAndFields ( type ) ; } @Override public void applyTo ( Binder binder ) { binder . withSource ( getSource ( ) ) . requestStaticInjection ( type ) ; } @Override public < T > T acceptVisitor ( ElementVisitor < T > visitor ) { return visitor . visit ( this ) ; } } 
