package org . elasticsearch . common . hashing ; import org . elasticsearch . common . hash . MurmurHash3 ; import org . elasticsearch . test . ESTestCase ; import java . io . UnsupportedEncodingException ; import java . nio . charset . StandardCharsets ; public class MurmurHash3Tests extends ESTestCase { public void testKnownValues ( ) throws UnsupportedEncodingException { assertHash ( <hex> , <hex> , <str> , <int> ) ; assertHash ( <hex> , <hex> , <str> , <int> ) ; assertHash ( <hex> , <hex> , <str> , <int> ) ; assertHash ( <hex> , <hex> , <str> , <int> ) ; assertHash ( <hex> , <hex> , <str> , <int> ) ; assertHash ( <hex> , <hex> , <str> , <int> ) ; assertHash ( <hex> , <hex> , <str> , <int> ) ; assertHash ( <hex> , <hex> , <str> , <int> ) ; } private static void assertHash ( long lower , long upper , String inputString , long seed ) { byte [ ] bytes = inputString . getBytes ( StandardCharsets . UTF_8 ) ; MurmurHash3 . Hash128 expected = new MurmurHash3 . Hash128 ( ) ; expected . h1 = lower ; expected . h2 = upper ; assertHash ( expected , MurmurHash3 . hash128 ( bytes , <int> , bytes . length , seed , new MurmurHash3 . Hash128 ( ) ) ) ; } private static void assertHash ( MurmurHash3 . Hash128 expected , MurmurHash3 . Hash128 actual ) { assertEquals ( expected . h1 , actual . h1 ) ; assertEquals ( expected . h2 , actual . h2 ) ; } } 
