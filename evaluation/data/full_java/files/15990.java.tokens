package org . gradle . tooling . internal . consumer . converters ; import com . google . common . collect . ImmutableList ; import org . gradle . api . Action ; import org . gradle . tooling . internal . adapter . SourceObjectMapping ; import java . io . Serializable ; import java . util . ArrayList ; import java . util . List ; public class CompositeMappingAction implements Action < SourceObjectMapping > , Serializable { public static class Builder { private final List < Action < SourceObjectMapping > > mappings = new ArrayList < Action < SourceObjectMapping > > ( ) ; public Builder add ( Action < SourceObjectMapping > mapping ) { mappings . add ( mapping ) ; return this ; } public CompositeMappingAction build ( ) { for ( Action < SourceObjectMapping > mapping : mappings ) { if ( ! ( mapping instanceof Serializable ) ) { throw new IllegalArgumentException ( String . format ( <str> , mapping ) ) ; } } return new CompositeMappingAction ( mappings ) ; } } public static Builder builder ( ) { return new Builder ( ) ; } final List < Action < SourceObjectMapping > > mappings ; private CompositeMappingAction ( List < Action < SourceObjectMapping > > mappings ) { this . mappings = ImmutableList . copyOf ( mappings ) ; } @Override public void execute ( SourceObjectMapping sourceObjectMapping ) { for ( Action < SourceObjectMapping > mapping : mappings ) { mapping . execute ( sourceObjectMapping ) ; } } } 
