package org . elasticsearch . index . analysis ; import org . apache . lucene . analysis . Analyzer ; import org . apache . lucene . analysis . TokenStream ; import org . apache . lucene . analysis . Tokenizer ; import org . apache . lucene . analysis . en . EnglishPossessiveFilter ; import org . apache . lucene . analysis . tr . TurkishLowerCaseFilter ; import org . apache . lucene . analysis . core . LowerCaseFilter ; import org . apache . lucene . analysis . core . StopFilter ; import org . apache . lucene . analysis . snowball . SnowballFilter ; import org . apache . lucene . analysis . standard . StandardTokenizer ; import org . apache . lucene . analysis . standard . StandardFilter ; import org . apache . lucene . analysis . standard . std40 . StandardTokenizer40 ; import org . apache . lucene . analysis . util . CharArraySet ; import org . apache . lucene . util . Version ; @Deprecated public final class SnowballAnalyzer extends Analyzer { private String name ; private CharArraySet stopSet ; public SnowballAnalyzer ( String name ) { this . name = name ; } public SnowballAnalyzer ( String name , CharArraySet stopWords ) { this ( name ) ; stopSet = CharArraySet . unmodifiableSet ( CharArraySet . copy ( stopWords ) ) ; } @Override public TokenStreamComponents createComponents ( String fieldName ) { final Tokenizer tokenizer ; if ( getVersion ( ) . onOrAfter ( Version . LUCENE_4_7_0 ) ) { tokenizer = new StandardTokenizer ( ) ; } else { tokenizer = new StandardTokenizer40 ( ) ; } TokenStream result = tokenizer ; if ( name . equals ( <str> ) | | name . equals ( <str> ) | | name . equals ( <str> ) ) result = new EnglishPossessiveFilter ( result ) ; if ( name . equals ( <str> ) ) result = new TurkishLowerCaseFilter ( result ) ; else result = new LowerCaseFilter ( result ) ; if ( stopSet ! = null ) result = new StopFilter ( result , stopSet ) ; result = new SnowballFilter ( result , name ) ; return new TokenStreamComponents ( tokenizer , result ) ; } } 
