package org . gradle . configuration ; import org . gradle . api . initialization . dsl . ScriptHandler ; import org . gradle . api . internal . GradleInternal ; import org . gradle . api . internal . initialization . ClassLoaderScope ; import org . gradle . api . internal . initialization . ScriptHandlerFactory ; import org . gradle . groovy . scripts . ScriptSource ; import org . gradle . internal . id . IdGenerator ; import org . gradle . internal . id . LongIdGenerator ; import java . net . URI ; public class DefaultInitScriptProcessor implements InitScriptProcessor { private final ScriptPluginFactory configurerFactory ; private final ScriptHandlerFactory scriptHandlerFactory ; private final IdGenerator < Long > idGenerator = new LongIdGenerator ( ) ; public DefaultInitScriptProcessor ( ScriptPluginFactory configurerFactory , ScriptHandlerFactory scriptHandlerFactory ) { this . configurerFactory = configurerFactory ; this . scriptHandlerFactory = scriptHandlerFactory ; } public void process ( final ScriptSource initScript , GradleInternal gradle ) { ClassLoaderScope baseScope = gradle . getClassLoaderScope ( ) ; URI uri = initScript . getResource ( ) . getURI ( ) ; String id = uri = = null ? idGenerator . generateId ( ) . toString ( ) : uri . toString ( ) ; ClassLoaderScope scriptScope = baseScope . createChild ( <str> + id ) ; ScriptHandler scriptHandler = scriptHandlerFactory . create ( initScript , scriptScope ) ; ScriptPlugin configurer = configurerFactory . create ( initScript , scriptHandler , scriptScope , baseScope , true ) ; configurer . apply ( gradle ) ; } } 
