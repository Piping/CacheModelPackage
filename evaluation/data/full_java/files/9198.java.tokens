package com . google . common . collect ; import com . google . common . annotations . GwtCompatible ; import com . google . common . annotations . GwtIncompatible ; import java . io . Serializable ; import java . util . NoSuchElementException ; import java . util . Set ; import javax . annotation . Nullable ; @GwtCompatible ( emulated = true ) @SuppressWarnings ( <str> ) final class EmptyContiguousSet < C extends Comparable > extends ContiguousSet < C > { EmptyContiguousSet ( DiscreteDomain < C > domain ) { super ( domain ) ; } @Override public C first ( ) { throw new NoSuchElementException ( ) ; } @Override public C last ( ) { throw new NoSuchElementException ( ) ; } @Override public int size ( ) { return <int> ; } @Override public ContiguousSet < C > intersection ( ContiguousSet < C > other ) { return this ; } @Override public Range < C > range ( ) { throw new NoSuchElementException ( ) ; } @Override public Range < C > range ( BoundType lowerBoundType , BoundType upperBoundType ) { throw new NoSuchElementException ( ) ; } @Override ContiguousSet < C > headSetImpl ( C toElement , boolean inclusive ) { return this ; } @Override ContiguousSet < C > subSetImpl ( C fromElement , boolean fromInclusive , C toElement , boolean toInclusive ) { return this ; } @Override ContiguousSet < C > tailSetImpl ( C fromElement , boolean fromInclusive ) { return this ; } @Override public boolean contains ( Object object ) { return false ; } @GwtIncompatible ( <str> ) @Override int indexOf ( Object target ) { return - <int> ; } @Override public UnmodifiableIterator < C > iterator ( ) { return Iterators . emptyIterator ( ) ; } @GwtIncompatible ( <str> ) @Override public UnmodifiableIterator < C > descendingIterator ( ) { return Iterators . emptyIterator ( ) ; } @Override boolean isPartialView ( ) { return false ; } @Override public boolean isEmpty ( ) { return true ; } @Override public ImmutableList < C > asList ( ) { return ImmutableList . of ( ) ; } @Override public String toString ( ) { return <str> ; } @Override public boolean equals ( @Nullable Object object ) { if ( object instanceof Set ) { Set < ? > that = ( Set < ? > ) object ; return that . isEmpty ( ) ; } return false ; } @GwtIncompatible ( <str> ) @Override boolean isHashCodeFast ( ) { return true ; } @Override public int hashCode ( ) { return <int> ; } @GwtIncompatible ( <str> ) private static final class SerializedForm < C extends Comparable > implements Serializable { private final DiscreteDomain < C > domain ; private SerializedForm ( DiscreteDomain < C > domain ) { this . domain = domain ; } private Object readResolve ( ) { return new EmptyContiguousSet < C > ( domain ) ; } private static final long serialVersionUID = <int> ; } @GwtIncompatible ( <str> ) @Override Object writeReplace ( ) { return new SerializedForm < C > ( domain ) ; } @GwtIncompatible ( <str> ) ImmutableSortedSet < C > createDescendingSet ( ) { return ImmutableSortedSet . emptySet ( Ordering . natural ( ) . reverse ( ) ) ; } } 
