package com . google . common . util . concurrent ; import static com . google . common . truth . Truth . assertThat ; import static junit . framework . Assert . fail ; import com . google . common . annotations . GwtCompatible ; import java . util . concurrent . Future ; import java . util . concurrent . TimeUnit ; @GwtCompatible ( emulated = true ) final class TestPlatform { static void verifyGetOnPendingFuture ( Future < ? > future ) { try { future . get ( ) ; fail ( ) ; } catch ( Exception e ) { assertThat ( e ) . isInstanceOf ( IllegalStateException . class ) ; assertThat ( e ) . hasMessage ( <str> ) ; } } static void verifyTimedGetOnPendingFuture ( Future < ? > future ) { try { future . get ( <int> , TimeUnit . SECONDS ) ; fail ( ) ; } catch ( Exception e ) { assertThat ( e ) . isInstanceOf ( IllegalStateException . class ) ; assertThat ( e ) . hasMessage ( <str> ) ; } } static void verifyThreadWasNotInterrupted ( ) { } static void clearInterrupt ( ) { } private TestPlatform ( ) { } } 
