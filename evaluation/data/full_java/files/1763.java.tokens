package org . apache . cassandra . stress . settings ; import java . io . Serializable ; import java . util . Arrays ; import java . util . List ; import java . util . Map ; import com . datastax . driver . core . BatchStatement ; import org . apache . cassandra . stress . generate . DistributionFactory ; import org . apache . cassandra . stress . generate . RatioDistributionFactory ; public class SettingsInsert implements Serializable { public final DistributionFactory revisit ; public final DistributionFactory visits ; public final DistributionFactory batchsize ; public final RatioDistributionFactory selectRatio ; public final RatioDistributionFactory rowPopulationRatio ; public final BatchStatement . Type batchType ; private SettingsInsert ( InsertOptions options ) { this . visits = options . visits . get ( ) ; this . revisit = options . revisit . get ( ) ; this . batchsize = options . partitions . get ( ) ; this . selectRatio = options . selectRatio . get ( ) ; this . rowPopulationRatio = options . rowPopulationRatio . get ( ) ; this . batchType = ! options . batchType . setByUser ( ) ? null : BatchStatement . Type . valueOf ( options . batchType . value ( ) ) ; } private static class InsertOptions extends GroupedOptions { final OptionDistribution visits = new OptionDistribution ( <str> , <str> , <str> ) ; final OptionDistribution revisit = new OptionDistribution ( <str> , <str> , <str> ) ; final OptionDistribution partitions = new OptionDistribution ( <str> , null , <str> , false ) ; final OptionSimple batchType = new OptionSimple ( <str> , <str> , null , <str> , false ) ; final OptionRatioDistribution selectRatio = new OptionRatioDistribution ( <str> , null , <str> , false ) ; final OptionRatioDistribution rowPopulationRatio = new OptionRatioDistribution ( <str> , <str> , <str> , false ) ; @Override public List < ? extends Option > options ( ) { return Arrays . asList ( revisit , visits , partitions , batchType , selectRatio , rowPopulationRatio ) ; } } public static SettingsInsert get ( Map < String , String [ ] > clArgs ) { String [ ] params = clArgs . remove ( <str> ) ; if ( params = = null ) return new SettingsInsert ( new InsertOptions ( ) ) ; InsertOptions options = GroupedOptions . select ( params , new InsertOptions ( ) ) ; if ( options = = null ) { printHelp ( ) ; System . out . println ( <str> ) ; System . exit ( <int> ) ; } return new SettingsInsert ( options ) ; } public static void printHelp ( ) { GroupedOptions . printOptions ( System . out , <str> , new InsertOptions ( ) ) ; } public static Runnable helpPrinter ( ) { return new Runnable ( ) { @Override public void run ( ) { printHelp ( ) ; } } ; } } 
