package org . elasticsearch . action . admin . indices . upgrade . get ; import org . elasticsearch . index . shard . ShardId ; import java . util . Arrays ; import java . util . Iterator ; public class IndexShardUpgradeStatus implements Iterable < ShardUpgradeStatus > { private final ShardId shardId ; private final ShardUpgradeStatus [ ] shards ; IndexShardUpgradeStatus ( ShardId shardId , ShardUpgradeStatus [ ] shards ) { this . shardId = shardId ; this . shards = shards ; } public ShardId getShardId ( ) { return this . shardId ; } public ShardUpgradeStatus getAt ( int i ) { return shards [ i ] ; } public ShardUpgradeStatus [ ] getShards ( ) { return this . shards ; } @Override public Iterator < ShardUpgradeStatus > iterator ( ) { return Arrays . stream ( shards ) . iterator ( ) ; } public long getTotalBytes ( ) { long totalBytes = <int> ; for ( ShardUpgradeStatus indexShardUpgradeStatus : shards ) { totalBytes + = indexShardUpgradeStatus . getTotalBytes ( ) ; } return totalBytes ; } public long getToUpgradeBytes ( ) { long upgradeBytes = <int> ; for ( ShardUpgradeStatus indexShardUpgradeStatus : shards ) { upgradeBytes + = indexShardUpgradeStatus . getToUpgradeBytes ( ) ; } return upgradeBytes ; } public long getToUpgradeBytesAncient ( ) { long upgradeBytesAncient = <int> ; for ( ShardUpgradeStatus indexShardUpgradeStatus : shards ) { upgradeBytesAncient + = indexShardUpgradeStatus . getToUpgradeBytesAncient ( ) ; } return upgradeBytesAncient ; } } 
