package io . netty . channel ; import io . netty . buffer . ByteBufAllocator ; import io . netty . channel . socket . SocketChannelConfig ; import java . nio . ByteBuffer ; import java . nio . channels . WritableByteChannel ; import java . util . Map ; public interface ChannelConfig { Map < ChannelOption < ? > , Object > getOptions ( ) ; boolean setOptions ( Map < ChannelOption < ? > , ? > options ) ; < T > T getOption ( ChannelOption < T > option ) ; < T > boolean setOption ( ChannelOption < T > option , T value ) ; int getConnectTimeoutMillis ( ) ; ChannelConfig setConnectTimeoutMillis ( int connectTimeoutMillis ) ; @Deprecated int getMaxMessagesPerRead ( ) ; @Deprecated ChannelConfig setMaxMessagesPerRead ( int maxMessagesPerRead ) ; int getWriteSpinCount ( ) ; ChannelConfig setWriteSpinCount ( int writeSpinCount ) ; ByteBufAllocator getAllocator ( ) ; ChannelConfig setAllocator ( ByteBufAllocator allocator ) ; < T extends RecvByteBufAllocator > T getRecvByteBufAllocator ( ) ; ChannelConfig setRecvByteBufAllocator ( RecvByteBufAllocator allocator ) ; boolean isAutoRead ( ) ; ChannelConfig setAutoRead ( boolean autoRead ) ; @Deprecated boolean isAutoClose ( ) ; @Deprecated ChannelConfig setAutoClose ( boolean autoClose ) ; int getWriteBufferHighWaterMark ( ) ; ChannelConfig setWriteBufferHighWaterMark ( int writeBufferHighWaterMark ) ; int getWriteBufferLowWaterMark ( ) ; ChannelConfig setWriteBufferLowWaterMark ( int writeBufferLowWaterMark ) ; MessageSizeEstimator getMessageSizeEstimator ( ) ; ChannelConfig setMessageSizeEstimator ( MessageSizeEstimator estimator ) ; } 
