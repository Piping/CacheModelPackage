package org . eclipse . debug . internal . ui . launchConfigurations ; import org . eclipse . debug . core . ILaunchConfiguration ; import org . eclipse . debug . ui . IDebugUIConstants ; import org . eclipse . jface . dialogs . IDialogConstants ; import org . eclipse . swt . widgets . Composite ; import org . eclipse . swt . widgets . Shell ; public class LaunchConfigurationEditDialog extends LaunchConfigurationDialog { private boolean fShowCancel = false ; public LaunchConfigurationEditDialog ( Shell shell , ILaunchConfiguration launchConfiguration , LaunchGroupExtension group , boolean showcancel ) { super ( shell , launchConfiguration , group ) ; fShowCancel = showcancel ; } @Override protected String getTitleAreaTitle ( ) { return LaunchConfigurationsMessages . LaunchConfigurationEditDialog_0 ; } @Override protected void createButtonsForButtonBar ( Composite parent ) { createButton ( parent , ID_LAUNCH_BUTTON , LaunchConfigurationsMessages . LaunchConfigurationEditDialog_1 , true ) ; if ( fShowCancel ) { createButton ( parent , ID_CANCEL_BUTTON , IDialogConstants . CANCEL_LABEL , false ) ; } } @Override public void updateButtons ( ) { getTabViewer ( ) . refresh ( ) ; getButton ( ID_LAUNCH_BUTTON ) . setEnabled ( getTabViewer ( ) . canLaunch ( ) & getTabViewer ( ) . canLaunchWithModes ( ) & ! getTabViewer ( ) . hasDuplicateDelegates ( ) ) ; } @Override protected String getDialogSettingsSectionName ( ) { return IDebugUIConstants . PLUGIN_ID + <str> ; } @Override protected void buttonPressed ( int buttonId ) { switch ( buttonId ) { case ID_LAUNCH_BUTTON : { int status = shouldSaveCurrentConfig ( ) ; if ( status = = IDialogConstants . YES_ID ) { okPressed ( ) ; } setReturnCode ( OK ) ; if ( status ! = IDialogConstants . CANCEL_ID ) { close ( ) ; } break ; } case ID_CANCEL_BUTTON : { cancelPressed ( ) ; break ; } default : break ; } } } 
