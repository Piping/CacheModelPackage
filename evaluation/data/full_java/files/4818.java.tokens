package org . eclipse . ui . internal . console ; import java . net . MalformedURLException ; import java . net . URL ; import org . eclipse . jface . resource . ImageDescriptor ; import org . eclipse . jface . resource . ImageRegistry ; import org . eclipse . swt . graphics . Image ; import org . eclipse . ui . console . ConsolePlugin ; import org . eclipse . ui . console . IConsoleConstants ; public class ConsolePluginImages { private static ImageRegistry imageRegistry ; private static URL ICON_BASE_URL = null ; static { String pathSuffix = <str> ; ICON_BASE_URL = ConsolePlugin . getDefault ( ) . getBundle ( ) . getEntry ( pathSuffix ) ; } private final static String LOCALTOOL = <str> ; private final static String DLCL = <str> ; private final static String ELCL = <str> ; private final static String VIEW = <str> ; private static void declareImages ( ) { declareRegistryImage ( IConsoleConstants . IMG_LCL_CLEAR , LOCALTOOL + <str> ) ; declareRegistryImage ( IInternalConsoleConstants . IMG_LCL_PIN , LOCALTOOL + <str> ) ; declareRegistryImage ( IInternalConsoleConstants . IMG_LCL_LOCK , LOCALTOOL + <str> ) ; declareRegistryImage ( IInternalConsoleConstants . IMG_LCL_WRAP , LOCALTOOL + <str> ) ; declareRegistryImage ( IInternalConsoleConstants . IMG_DLCL_CLEAR , DLCL + <str> ) ; declareRegistryImage ( IInternalConsoleConstants . IMG_DLCL_PIN , DLCL + <str> ) ; declareRegistryImage ( IInternalConsoleConstants . IMG_DLCL_LOCK , DLCL + <str> ) ; declareRegistryImage ( IInternalConsoleConstants . IMG_DLCL_WRAP , DLCL + <str> ) ; declareRegistryImage ( IInternalConsoleConstants . IMG_DLCL_CLOSE , DLCL + <str> ) ; declareRegistryImage ( IInternalConsoleConstants . IMG_ELCL_CLEAR , ELCL + <str> ) ; declareRegistryImage ( IInternalConsoleConstants . IMG_ELCL_PIN , ELCL + <str> ) ; declareRegistryImage ( IInternalConsoleConstants . IMG_ELCL_LOCK , ELCL + <str> ) ; declareRegistryImage ( IInternalConsoleConstants . IMG_ELCL_WRAP , ELCL + <str> ) ; declareRegistryImage ( IInternalConsoleConstants . IMG_ELCL_CLOSE , ELCL + <str> ) ; declareRegistryImage ( IInternalConsoleConstants . IMG_ELCL_NEW_CON , ELCL + <str> ) ; declareRegistryImage ( IConsoleConstants . IMG_VIEW_CONSOLE , VIEW + <str> ) ; } private final static void declareRegistryImage ( String key , String path ) { ImageDescriptor desc = ImageDescriptor . getMissingImageDescriptor ( ) ; try { desc = ImageDescriptor . createFromURL ( makeIconFileURL ( path ) ) ; } catch ( MalformedURLException me ) { ConsolePlugin . log ( me ) ; } imageRegistry . put ( key , desc ) ; } public static ImageRegistry getImageRegistry ( ) { if ( imageRegistry = = null ) { initializeImageRegistry ( ) ; } return imageRegistry ; } public static ImageRegistry initializeImageRegistry ( ) { imageRegistry = new ImageRegistry ( ConsolePlugin . getStandardDisplay ( ) ) ; declareImages ( ) ; return imageRegistry ; } public static Image getImage ( String key ) { return getImageRegistry ( ) . get ( key ) ; } public static ImageDescriptor getImageDescriptor ( String key ) { return getImageRegistry ( ) . getDescriptor ( key ) ; } private static URL makeIconFileURL ( String iconPath ) throws MalformedURLException { if ( ICON_BASE_URL = = null ) { throw new MalformedURLException ( ) ; } return new URL ( ICON_BASE_URL , iconPath ) ; } } 
