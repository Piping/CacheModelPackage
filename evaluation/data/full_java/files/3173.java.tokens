package jcuda . driver ; public class CUjit_option { public static final int CU_JIT_MAX_REGISTERS = <int> ; public static final int CU_JIT_THREADS_PER_BLOCK = <int> ; public static final int CU_JIT_WALL_TIME = <int> ; public static final int CU_JIT_INFO_LOG_BUFFER = <int> ; public static final int CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES = <int> ; public static final int CU_JIT_ERROR_LOG_BUFFER = <int> ; public static final int CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES = <int> ; public static final int CU_JIT_OPTIMIZATION_LEVEL = <int> ; public static final int CU_JIT_TARGET_FROM_CUCONTEXT = <int> ; public static final int CU_JIT_TARGET = <int> ; public static final int CU_JIT_FALLBACK_STRATEGY = <int> ; public static final int CU_JIT_GENERATE_DEBUG_INFO = <int> ; public static final int CU_JIT_LOG_VERBOSE = <int> ; public static final int CU_JIT_GENERATE_LINE_INFO = <int> ; public static final int CU_JIT_CACHE_MODE = <int> ; public static String stringFor ( int n ) { switch ( n ) { case CU_JIT_MAX_REGISTERS : return <str> ; case CU_JIT_THREADS_PER_BLOCK : return <str> ; case CU_JIT_WALL_TIME : return <str> ; case CU_JIT_INFO_LOG_BUFFER : return <str> ; case CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES : return <str> ; case CU_JIT_ERROR_LOG_BUFFER : return <str> ; case CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES : return <str> ; case CU_JIT_OPTIMIZATION_LEVEL : return <str> ; case CU_JIT_TARGET_FROM_CUCONTEXT : return <str> ; case CU_JIT_TARGET : return <str> ; case CU_JIT_FALLBACK_STRATEGY : return <str> ; case CU_JIT_GENERATE_DEBUG_INFO : return <str> ; case CU_JIT_LOG_VERBOSE : return <str> ; case CU_JIT_GENERATE_LINE_INFO : return <str> ; case CU_JIT_CACHE_MODE : return <str> ; } return <str> + n ; } private CUjit_option ( ) { } } 
