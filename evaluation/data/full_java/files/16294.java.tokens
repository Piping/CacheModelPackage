package org . gradle . foundation ; import junit . framework . TestCase ; import org . gradle . gradleplugin . foundation . search . BasicTextSearchCriteria ; import org . gradle . gradleplugin . foundation . search . TextBlockSearchEditor ; public class TextBlockSearchEditorTests extends TestCase { private final static String TEXT_1 = <str> + <str> + <str> + <str> ; public void testBasic ( ) { TextBlockSearchEditor editor = new TextBlockSearchEditor ( ) ; BasicTextSearchCriteria criteria = new BasicTextSearchCriteria ( ) ; criteria . setTextToMatch ( <str> ) ; criteria . setCaseSensitive ( false ) ; int matches = editor . searchAllText ( TEXT_1 , criteria ) ; assertEquals ( <str> , <int> , matches ) ; TestUtility . assertListContents ( editor . getMatchedResults ( ) , new TextBlockSearchEditor . SearchResult ( <str> , <int> , <int> ) , new TextBlockSearchEditor . SearchResult ( <str> , <int> , <int> ) ) ; } public void testCaseSensitivity ( ) { TextBlockSearchEditor editor = new TextBlockSearchEditor ( ) ; BasicTextSearchCriteria criteria = new BasicTextSearchCriteria ( ) ; criteria . setTextToMatch ( <str> ) ; criteria . setCaseSensitive ( true ) ; int matches = editor . searchAllText ( TEXT_1 , criteria ) ; assertEquals ( <str> , <int> , matches ) ; TestUtility . assertListContents ( editor . getMatchedResults ( ) , new TextBlockSearchEditor . SearchResult ( <str> , <int> , <int> ) ) ; } public void testIndices ( ) { String textToSearch = <str> ; TextBlockSearchEditor editor = new TextBlockSearchEditor ( ) ; BasicTextSearchCriteria criteria = new BasicTextSearchCriteria ( ) ; criteria . setTextToMatch ( <str> ) ; criteria . setCaseSensitive ( false ) ; int matches = editor . searchAllText ( textToSearch , criteria ) ; assertEquals ( <str> , <int> , matches ) ; TestUtility . assertListContents ( editor . getMatchedResults ( ) , new TextBlockSearchEditor . SearchResult ( <str> , <int> , <int> ) , new TextBlockSearchEditor . SearchResult ( <str> , <int> , <int> ) ) ; } public void testWithNoCriteria ( ) { String textToSearch = <str> ; TextBlockSearchEditor editor = new TextBlockSearchEditor ( ) ; BasicTextSearchCriteria criteria = new BasicTextSearchCriteria ( ) ; criteria . setTextToMatch ( null ) ; criteria . setCaseSensitive ( false ) ; int matches = editor . searchAllText ( textToSearch , criteria ) ; assertEquals ( <str> , <int> , matches ) ; assertEquals ( <int> , editor . getMatchedResults ( ) . size ( ) ) ; } public void testWithSearchText ( ) { TextBlockSearchEditor editor = new TextBlockSearchEditor ( ) ; BasicTextSearchCriteria criteria = new BasicTextSearchCriteria ( ) ; criteria . setTextToMatch ( <str> ) ; criteria . setCaseSensitive ( false ) ; int matches = editor . searchAllText ( null , criteria ) ; assertEquals ( <str> , <int> , matches ) ; assertEquals ( <int> , editor . getMatchedResults ( ) . size ( ) ) ; } public void testSecondSearchBlank ( ) { String textToSearch = <str> ; TextBlockSearchEditor editor = new TextBlockSearchEditor ( ) ; BasicTextSearchCriteria criteria = new BasicTextSearchCriteria ( ) ; criteria . setTextToMatch ( <str> ) ; criteria . setCaseSensitive ( false ) ; int matches = editor . searchAllText ( textToSearch , criteria ) ; assertEquals ( <str> , <int> , matches ) ; TestUtility . assertListContents ( editor . getMatchedResults ( ) , new TextBlockSearchEditor . SearchResult ( <str> , <int> , <int> ) , new TextBlockSearchEditor . SearchResult ( <str> , <int> , <int> ) ) ; criteria . setTextToMatch ( <str> ) ; criteria . setCaseSensitive ( false ) ; matches = editor . searchAllText ( textToSearch , criteria ) ; assertEquals ( <str> , <int> , matches ) ; assertEquals ( <int> , editor . getMatchedResults ( ) . size ( ) ) ; } public void testBasicRegularExpressions ( ) { TextBlockSearchEditor editor = new TextBlockSearchEditor ( ) ; BasicTextSearchCriteria criteria = new BasicTextSearchCriteria ( ) ; criteria . setTextToMatch ( <str> ) ; criteria . setCaseSensitive ( false ) ; criteria . setUseRegularExpressions ( true ) ; int matches = editor . searchAllText ( TEXT_1 , criteria ) ; assertEquals ( <str> , <int> , matches ) ; TestUtility . assertListContents ( editor . getMatchedResults ( ) , new TextBlockSearchEditor . SearchResult ( <str> , <int> , <int> ) , new TextBlockSearchEditor . SearchResult ( <str> , <int> , <int> ) ) ; } public void testCaseSensitiveRegularExpressions ( ) { TextBlockSearchEditor editor = new TextBlockSearchEditor ( ) ; BasicTextSearchCriteria criteria = new BasicTextSearchCriteria ( ) ; criteria . setTextToMatch ( <str> ) ; criteria . setCaseSensitive ( true ) ; criteria . setUseRegularExpressions ( true ) ; int matches = editor . searchAllText ( TEXT_1 , criteria ) ; assertEquals ( <str> , <int> , matches ) ; TestUtility . assertListContents ( editor . getMatchedResults ( ) , new TextBlockSearchEditor . SearchResult ( <str> , <int> , <int> ) ) ; } } 
