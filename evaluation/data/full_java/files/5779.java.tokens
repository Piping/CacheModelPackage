package org . elasticsearch . common . inject ; import org . elasticsearch . common . inject . internal . * ; import org . elasticsearch . common . inject . spi . Dependency ; import java . util . Objects ; class InternalFactoryToProviderAdapter < T > implements InternalFactory < T > { private final Initializable < Provider < ? extends T > > initializable ; private final Object source ; public InternalFactoryToProviderAdapter ( Initializable < Provider < ? extends T > > initializable ) { this ( initializable , SourceProvider . UNKNOWN_SOURCE ) ; } public InternalFactoryToProviderAdapter ( Initializable < Provider < ? extends T > > initializable , Object source ) { this . initializable = Objects . requireNonNull ( initializable , <str> ) ; this . source = Objects . requireNonNull ( source , <str> ) ; } @Override public T get ( Errors errors , InternalContext context , Dependency < ? > dependency ) throws ErrorsException { try { return errors . checkForNull ( initializable . get ( errors ) . get ( ) , source , dependency ) ; } catch ( RuntimeException userException ) { throw errors . withSource ( source ) . errorInProvider ( userException ) . toException ( ) ; } } @Override public String toString ( ) { return initializable . toString ( ) ; } } 
