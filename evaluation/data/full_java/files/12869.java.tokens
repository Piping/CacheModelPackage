package org . gradle . internal . resolve . result ; import org . gradle . internal . resolve . ArtifactResolveException ; import org . gradle . internal . component . model . ComponentArtifactMetaData ; import java . util . Collection ; import java . util . LinkedHashSet ; import java . util . Set ; public class DefaultBuildableArtifactSetResolveResult implements BuildableArtifactSetResolveResult { private ArtifactResolveException failure ; private Set < ComponentArtifactMetaData > artifacts ; public void resolved ( Collection < ? extends ComponentArtifactMetaData > artifacts ) { this . artifacts = new LinkedHashSet < ComponentArtifactMetaData > ( artifacts ) ; } public void failed ( ArtifactResolveException failure ) { this . failure = failure ; } public boolean hasResult ( ) { return artifacts ! = null | | failure ! = null ; } public ArtifactResolveException getFailure ( ) { assertHasResult ( ) ; return failure ; } public Set < ComponentArtifactMetaData > getArtifacts ( ) { assertResolved ( ) ; return artifacts ; } private void assertResolved ( ) { assertHasResult ( ) ; if ( failure ! = null ) { throw failure ; } } private void assertHasResult ( ) { if ( ! hasResult ( ) ) { throw new IllegalStateException ( <str> ) ; } } } 
