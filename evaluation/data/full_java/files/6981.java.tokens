package org . elasticsearch . rest . action . admin . indices . alias . delete ; import org . elasticsearch . action . admin . indices . alias . IndicesAliasesRequest ; import org . elasticsearch . action . admin . indices . alias . IndicesAliasesResponse ; import org . elasticsearch . client . Client ; import org . elasticsearch . common . Strings ; import org . elasticsearch . common . inject . Inject ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . rest . * ; import org . elasticsearch . rest . action . support . AcknowledgedRestListener ; import static org . elasticsearch . rest . RestRequest . Method . DELETE ; public class RestIndexDeleteAliasesAction extends BaseRestHandler { @Inject public RestIndexDeleteAliasesAction ( Settings settings , RestController controller , Client client ) { super ( settings , controller , client ) ; controller . registerHandler ( DELETE , <str> , this ) ; controller . registerHandler ( DELETE , <str> , this ) ; } @Override public void handleRequest ( final RestRequest request , final RestChannel channel , final Client client ) { final String [ ] indices = Strings . splitStringByCommaToArray ( request . param ( <str> ) ) ; final String [ ] aliases = Strings . splitStringByCommaToArray ( request . param ( <str> ) ) ; IndicesAliasesRequest indicesAliasesRequest = new IndicesAliasesRequest ( ) ; indicesAliasesRequest . timeout ( request . paramAsTime ( <str> , indicesAliasesRequest . timeout ( ) ) ) ; indicesAliasesRequest . removeAlias ( indices , aliases ) ; indicesAliasesRequest . masterNodeTimeout ( request . paramAsTime ( <str> , indicesAliasesRequest . masterNodeTimeout ( ) ) ) ; client . admin ( ) . indices ( ) . aliases ( indicesAliasesRequest , new AcknowledgedRestListener < IndicesAliasesResponse > ( channel ) ) ; } } 
