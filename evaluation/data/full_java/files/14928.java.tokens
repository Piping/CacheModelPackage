package org . gradle . nativeplatform . internal ; import org . gradle . api . specs . Spec ; import org . gradle . nativeplatform . platform . NativePlatform ; import org . gradle . nativeplatform . platform . internal . NativePlatforms ; import org . gradle . platform . base . internal . PlatformRequirement ; import org . gradle . platform . base . internal . PlatformResolver ; import org . gradle . util . CollectionUtils ; public class NativePlatformResolver implements PlatformResolver < NativePlatform > { private final NativePlatforms nativePlatforms ; public NativePlatformResolver ( NativePlatforms nativePlatforms ) { this . nativePlatforms = nativePlatforms ; } public Class < NativePlatform > getType ( ) { return NativePlatform . class ; } @Override public NativePlatform resolve ( final PlatformRequirement platformRequirement ) { return CollectionUtils . findFirst ( nativePlatforms . defaultPlatformDefinitions ( ) , new Spec < NativePlatform > ( ) { @Override public boolean isSatisfiedBy ( NativePlatform element ) { return element . getName ( ) . equals ( platformRequirement . getPlatformName ( ) ) ; } } ) ; } } 
