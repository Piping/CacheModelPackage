package org . nd4j . linalg . shape ; import org . junit . Test ; import org . nd4j . linalg . BaseNd4jTest ; import org . nd4j . linalg . api . shape . Shape ; import org . nd4j . linalg . factory . Nd4jBackend ; import java . util . Arrays ; public class StaticShapeTests extends BaseNd4jTest { public StaticShapeTests ( ) { } public StaticShapeTests ( String name ) { super ( name ) ; } public StaticShapeTests ( String name , Nd4jBackend backend ) { super ( name , backend ) ; } public StaticShapeTests ( Nd4jBackend backend ) { super ( backend ) ; } @Test public void testShapeInd2Sub ( ) { long normalTotal = <int> ; long n = <int> ; for ( int i = <int> ; i < n ; i + + ) { long start = System . nanoTime ( ) ; Shape . ind2subC ( new int [ ] { <int> , <int> } , <int> ) ; long end = System . nanoTime ( ) ; normalTotal + = Math . abs ( end - start ) ; } normalTotal / = n ; System . out . println ( normalTotal ) ; System . out . println ( <str> + Arrays . toString ( Shape . ind2subC ( new int [ ] { <int> , <int> } , <int> ) ) ) ; System . out . println ( <str> + Arrays . toString ( Shape . ind2sub ( new int [ ] { <int> , <int> } , <int> ) ) ) ; } @Override public char ordering ( ) { return <str> ; } } 
