package org . elasticsearch . index . analysis ; import org . elasticsearch . index . analysis . compound . DictionaryCompoundWordTokenFilterFactory ; import org . elasticsearch . index . analysis . compound . HyphenationCompoundWordTokenFilterFactory ; import org . elasticsearch . test . ESTestCase ; import java . util . HashMap ; import java . util . Map ; import java . util . Set ; import java . util . TreeSet ; public class AnalysisFactoryTests extends ESTestCase { static final Map < String , Class < ? > > KNOWN_TOKENIZERS = new HashMap < String , Class < ? > > ( ) { { put ( <str> , Deprecated . class ) ; put ( <str> , Deprecated . class ) ; put ( <str> , Deprecated . class ) ; put ( <str> , Deprecated . class ) ; put ( <str> , ClassicTokenizerFactory . class ) ; put ( <str> , EdgeNGramTokenizerFactory . class ) ; put ( <str> , KeywordTokenizerFactory . class ) ; put ( <str> , LetterTokenizerFactory . class ) ; put ( <str> , LowerCaseTokenizerFactory . class ) ; put ( <str> , NGramTokenizerFactory . class ) ; put ( <str> , PathHierarchyTokenizerFactory . class ) ; put ( <str> , PatternTokenizerFactory . class ) ; put ( <str> , StandardTokenizerFactory . class ) ; put ( <str> , ThaiTokenizerFactory . class ) ; put ( <str> , UAX29URLEmailTokenizerFactory . class ) ; put ( <str> , WhitespaceTokenizerFactory . class ) ; put ( <str> , Void . class ) ; } } ; public void testTokenizers ( ) { Set < String > missing = new TreeSet < String > ( org . apache . lucene . analysis . util . TokenizerFactory . availableTokenizers ( ) ) ; missing . removeAll ( KNOWN_TOKENIZERS . keySet ( ) ) ; assertTrue ( <str> + missing . toString ( ) , missing . isEmpty ( ) ) ; } static final Map < String , Class < ? > > KNOWN_TOKENFILTERS = new HashMap < String , Class < ? > > ( ) { { put ( <str> , Deprecated . class ) ; put ( <str> , Deprecated . class ) ; put ( <str> , Deprecated . class ) ; put ( <str> , Deprecated . class ) ; put ( <str> , ApostropheFilterFactory . class ) ; put ( <str> , ArabicNormalizationFilterFactory . class ) ; put ( <str> , ArabicStemTokenFilterFactory . class ) ; put ( <str> , ASCIIFoldingTokenFilterFactory . class ) ; put ( <str> , BrazilianStemTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , CJKBigramFilterFactory . class ) ; put ( <str> , CJKWidthFilterFactory . class ) ; put ( <str> , ClassicFilterFactory . class ) ; put ( <str> , CommonGramsTokenFilterFactory . class ) ; put ( <str> , CommonGramsTokenFilterFactory . class ) ; put ( <str> , CzechStemTokenFilterFactory . class ) ; put ( <str> , DecimalDigitFilterFactory . class ) ; put ( <str> , DelimitedPayloadTokenFilterFactory . class ) ; put ( <str> , DictionaryCompoundWordTokenFilterFactory . class ) ; put ( <str> , EdgeNGramTokenFilterFactory . class ) ; put ( <str> , ElisionTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , GermanStemTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , GermanNormalizationFilterFactory . class ) ; put ( <str> , LowerCaseTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , HindiNormalizationFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , HunspellTokenFilterFactory . class ) ; put ( <str> , HyphenationCompoundWordTokenFilterFactory . class ) ; put ( <str> , IndicNormalizationFilterFactory . class ) ; put ( <str> , LowerCaseTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , KeepWordFilterFactory . class ) ; put ( <str> , KeywordMarkerTokenFilterFactory . class ) ; put ( <str> , KStemTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , LengthTokenFilterFactory . class ) ; put ( <str> , LimitTokenCountFilterFactory . class ) ; put ( <str> , LowerCaseTokenFilterFactory . class ) ; put ( <str> , NGramTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , PatternCaptureGroupTokenFilterFactory . class ) ; put ( <str> , PatternReplaceTokenFilterFactory . class ) ; put ( <str> , PersianNormalizationFilterFactory . class ) ; put ( <str> , PorterStemTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , ReverseTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , ScandinavianFoldingFilterFactory . class ) ; put ( <str> , ScandinavianNormalizationFilterFactory . class ) ; put ( <str> , SerbianNormalizationFilterFactory . class ) ; put ( <str> , ShingleTokenFilterFactory . class ) ; put ( <str> , SnowballTokenFilterFactory . class ) ; put ( <str> , SoraniNormalizationFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , StandardTokenFilterFactory . class ) ; put ( <str> , StemmerOverrideTokenFilterFactory . class ) ; put ( <str> , StopTokenFilterFactory . class ) ; put ( <str> , StemmerTokenFilterFactory . class ) ; put ( <str> , SynonymTokenFilterFactory . class ) ; put ( <str> , TrimTokenFilterFactory . class ) ; put ( <str> , TruncateTokenFilterFactory . class ) ; put ( <str> , LowerCaseTokenFilterFactory . class ) ; put ( <str> , KeepTypesFilterFactory . class ) ; put ( <str> , UpperCaseTokenFilterFactory . class ) ; put ( <str> , WordDelimiterTokenFilterFactory . class ) ; put ( <str> , Void . class ) ; put ( <str> , Void . class ) ; put ( <str> , Void . class ) ; put ( <str> , Void . class ) ; put ( <str> , Void . class ) ; put ( <str> , Void . class ) ; put ( <str> , Void . class ) ; put ( <str> , Void . class ) ; put ( <str> , Void . class ) ; put ( <str> , Void . class ) ; put ( <str> , Void . class ) ; put ( <str> , Void . class ) ; } } ; public void testTokenFilters ( ) { Set < String > missing = new TreeSet < String > ( org . apache . lucene . analysis . util . TokenFilterFactory . availableTokenFilters ( ) ) ; missing . removeAll ( KNOWN_TOKENFILTERS . keySet ( ) ) ; assertTrue ( <str> + missing . toString ( ) , missing . isEmpty ( ) ) ; } static final Map < String , Class < ? > > KNOWN_CHARFILTERS = new HashMap < String , Class < ? > > ( ) { { put ( <str> , HtmlStripCharFilterFactory . class ) ; put ( <str> , MappingCharFilterFactory . class ) ; put ( <str> , PatternReplaceCharFilterFactory . class ) ; put ( <str> , Void . class ) ; } } ; public void testCharFilters ( ) { Set < String > missing = new TreeSet < String > ( org . apache . lucene . analysis . util . CharFilterFactory . availableCharFilters ( ) ) ; missing . removeAll ( KNOWN_CHARFILTERS . keySet ( ) ) ; assertTrue ( <str> + missing . toString ( ) , missing . isEmpty ( ) ) ; } } 
