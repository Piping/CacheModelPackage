package org . apache . cassandra . db . filter ; import java . nio . ByteBuffer ; import org . apache . cassandra . config . CFMetaData ; import org . apache . cassandra . db . * ; import org . apache . cassandra . db . marshal . * ; public class TombstoneOverwhelmingException extends RuntimeException { public TombstoneOverwhelmingException ( int numTombstones , String query , CFMetaData metadata , DecoratedKey lastPartitionKey , ClusteringPrefix lastClustering ) { super ( String . format ( <str> , numTombstones , query , makePKString ( metadata , lastPartitionKey . getKey ( ) , lastClustering ) ) ) ; } private static String makePKString ( CFMetaData metadata , ByteBuffer partitionKey , ClusteringPrefix clustering ) { StringBuilder sb = new StringBuilder ( ) ; if ( clustering . size ( ) > <int> ) sb . append ( <str> ) ; AbstractType < ? > pkType = metadata . getKeyValidator ( ) ; if ( pkType instanceof CompositeType ) { CompositeType ct = ( CompositeType ) pkType ; ByteBuffer [ ] values = ct . split ( partitionKey ) ; for ( int i = <int> ; i < values . length ; i + + ) { if ( i > <int> ) sb . append ( <str> ) ; sb . append ( ct . types . get ( i ) . getString ( values [ i ] ) ) ; } } else { sb . append ( pkType . getString ( partitionKey ) ) ; } if ( clustering . size ( ) > <int> ) sb . append ( <str> ) ; for ( int i = <int> ; i < clustering . size ( ) ; i + + ) sb . append ( <str> ) . append ( metadata . comparator . subtype ( i ) . getString ( clustering . get ( i ) ) ) ; return sb . toString ( ) ; } } 
