package org . apache . cassandra . tools . nodetool ; import static com . google . common . base . Preconditions . checkArgument ; import io . airlift . command . Arguments ; import io . airlift . command . Command ; import java . net . InetAddress ; import java . util . ArrayList ; import java . util . List ; import org . apache . cassandra . tools . NodeProbe ; import org . apache . cassandra . tools . NodeTool . NodeToolCmd ; @Command ( name = <str> , description = <str> ) public class GetEndpoints extends NodeToolCmd { @Arguments ( usage = <str> , description = <str> ) private List < String > args = new ArrayList < > ( ) ; @Override public void execute ( NodeProbe probe ) { checkArgument ( args . size ( ) = = <int> , <str> ) ; String ks = args . get ( <int> ) ; String table = args . get ( <int> ) ; String key = args . get ( <int> ) ; List < InetAddress > endpoints = probe . getEndpoints ( ks , table , key ) ; for ( InetAddress endpoint : endpoints ) { System . out . println ( endpoint . getHostAddress ( ) ) ; } } } 
