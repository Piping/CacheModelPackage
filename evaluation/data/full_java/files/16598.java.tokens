package org . junit . tests . experimental . categories ; import org . junit . Test ; import org . junit . experimental . categories . Categories ; import org . junit . experimental . categories . Category ; import org . junit . runner . JUnitCore ; import org . junit . runner . Result ; import org . junit . runner . RunWith ; import org . junit . runners . Suite ; import static org . hamcrest . core . Is . is ; import static org . junit . Assert . assertThat ; import static org . junit . Assert . assertTrue ; import static org . junit . Assert . fail ; public class JavadocTest { public static interface FastTests { } public static interface SlowTests { } public static interface SmokeTests { } public static class A { public void a ( ) { fail ( ) ; } @Category ( SlowTests . class ) @Test public void b ( ) { } @Category ( { FastTests . class , SmokeTests . class } ) @Test public void c ( ) { } } @Category ( { SlowTests . class , FastTests . class } ) public static class B { @Test public void d ( ) { } } @RunWith ( Categories . class ) @Categories.IncludeCategory ( SlowTests . class ) @Suite.SuiteClasses ( { A . class , B . class } ) public static class SlowTestSuite { } @RunWith ( Categories . class ) @Categories.IncludeCategory ( { FastTests . class , SmokeTests . class } ) @Suite.SuiteClasses ( { A . class , B . class } ) public static class FastOrSmokeTestSuite { } @Test public void slowTests ( ) { Result testResult = JUnitCore . runClasses ( SlowTestSuite . class ) ; assertTrue ( testResult . wasSuccessful ( ) ) ; assertThat ( <str> , testResult . getRunCount ( ) , is ( <int> ) ) ; assertThat ( <str> , testResult . getFailureCount ( ) , is ( <int> ) ) ; } @Test public void fastSmokeTests ( ) { Result testResult = JUnitCore . runClasses ( FastOrSmokeTestSuite . class ) ; assertTrue ( testResult . wasSuccessful ( ) ) ; assertThat ( <str> , testResult . getRunCount ( ) , is ( <int> ) ) ; assertThat ( <str> , testResult . getFailureCount ( ) , is ( <int> ) ) ; } } 
