package org . elasticsearch . routing ; import org . elasticsearch . action . search . SearchResponse ; import org . elasticsearch . action . search . SearchType ; import org . elasticsearch . common . xcontent . XContentFactory ; import org . elasticsearch . index . query . QueryBuilders ; import org . elasticsearch . test . ESIntegTestCase ; import static org . elasticsearch . cluster . metadata . AliasAction . newAddAliasAction ; import static org . elasticsearch . test . hamcrest . ElasticsearchAssertions . assertAcked ; import static org . hamcrest . Matchers . equalTo ; public class AliasRoutingIT extends ESIntegTestCase { @Override protected int minimumNumberOfShards ( ) { return <int> ; } public void testAliasCrudRouting ( ) throws Exception { createIndex ( <str> ) ; ensureGreen ( ) ; assertAcked ( admin ( ) . indices ( ) . prepareAliases ( ) . addAliasAction ( newAddAliasAction ( <str> , <str> ) . routing ( <str> ) ) ) ; logger . info ( <str> ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( false ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . setRouting ( <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( true ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( true ) ) ; } logger . info ( <str> ) ; client ( ) . prepareUpdate ( <str> , <str> , <str> ) . setUpsert ( XContentFactory . jsonBuilder ( ) . startObject ( ) . field ( <str> , <int> ) . endObject ( ) ) . setDoc ( <str> , <str> ) . execute ( ) . actionGet ( ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( true ) ) ; assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . execute ( ) . actionGet ( ) . getSourceAsMap ( ) . get ( <str> ) . toString ( ) , equalTo ( <str> ) ) ; } logger . info ( <str> ) ; client ( ) . prepareDelete ( <str> , <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( false ) ) ; assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . setRouting ( <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( true ) ) ; assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( true ) ) ; } logger . info ( <str> ) ; client ( ) . prepareDelete ( <str> , <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( false ) ) ; assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . setRouting ( <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( false ) ) ; assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( false ) ) ; } logger . info ( <str> ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( false ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . setRouting ( <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( true ) ) ; assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( true ) ) ; } } public void testAliasSearchRouting ( ) throws Exception { createIndex ( <str> ) ; ensureGreen ( ) ; assertAcked ( admin ( ) . indices ( ) . prepareAliases ( ) . addAliasAction ( newAddAliasAction ( <str> , <str> ) ) . addAliasAction ( newAddAliasAction ( <str> , <str> ) . routing ( <str> ) ) . addAliasAction ( newAddAliasAction ( <str> , <str> ) . routing ( <str> ) ) . addAliasAction ( newAddAliasAction ( <str> , <str> ) . searchRouting ( <str> ) ) ) ; logger . info ( <str> ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( false ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( true ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareSearch ( ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareSearch ( ) . setRouting ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> l ) ) ; assertThat ( client ( ) . prepareSearch ( ) . setSize ( <int> ) . setRouting ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> l ) ) ; assertThat ( client ( ) . prepareSearch ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> l ) ) ; assertThat ( client ( ) . prepareSearch ( <str> ) . setSize ( <int> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> l ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareSearch ( ) . setRouting ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( ) . setSize ( <int> ) . setRouting ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( <str> ) . setSize ( <int> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; } logger . info ( <str> ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareSearch ( ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( ) . setSize ( <int> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareSearch ( ) . setRouting ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( ) . setSize ( <int> ) . setRouting ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( <str> ) . setSize ( <int> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareSearch ( ) . setRouting ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( ) . setSize ( <int> ) . setRouting ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( <str> ) . setSize ( <int> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareSearch ( ) . setRouting ( <str> , <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( ) . setSize ( <int> ) . setRouting ( <str> , <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( <str> ) . setSize ( <int> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareSearch ( <str> , <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( <str> , <str> ) . setSize ( <int> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareSearch ( <str> , <str> , <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( <str> , <str> , <str> ) . setSize ( <int> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareSearch ( <str> , <str> , <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( <str> , <str> , <str> ) . setSize ( <int> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; } } public void testAliasSearchRoutingWithTwoIndices ( ) throws Exception { createIndex ( <str> ) ; createIndex ( <str> ) ; ensureGreen ( ) ; assertAcked ( admin ( ) . indices ( ) . prepareAliases ( ) . addAliasAction ( newAddAliasAction ( <str> , <str> ) . routing ( <str> ) ) . addAliasAction ( newAddAliasAction ( <str> , <str> ) . routing ( <str> ) ) . addAliasAction ( newAddAliasAction ( <str> , <str> ) . routing ( <str> ) ) . addAliasAction ( newAddAliasAction ( <str> , <str> ) . routing ( <str> ) ) . addAliasAction ( newAddAliasAction ( <str> , <str> ) . searchRouting ( <str> ) ) . addAliasAction ( newAddAliasAction ( <str> , <str> ) . searchRouting ( <str> ) ) ) ; ensureGreen ( ) ; logger . info ( <str> ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( false ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( true ) ) ; } logger . info ( <str> ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( false ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( true ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareSearch ( <str> , <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> l ) ) ; assertThat ( client ( ) . prepareSearch ( <str> , <str> ) . setSize ( <int> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> l ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareSearch ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( <str> ) . setSize ( <int> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; } logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareSearch ( <str> , <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( <str> , <str> ) . setSize ( <int> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; } } public void testAliasSearchRoutingWithConcreteAndAliasedIndices_issue2682 ( ) throws Exception { createIndex ( <str> , <str> ) ; ensureGreen ( ) ; assertAcked ( admin ( ) . indices ( ) . prepareAliases ( ) . addAliasAction ( newAddAliasAction ( <str> , <str> ) . routing ( <str> ) ) ) ; logger . info ( <str> ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareSearch ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; } } public void testAliasSearchRoutingWithConcreteAndAliasedIndices_issue3268 ( ) throws Exception { createIndex ( <str> , <str> ) ; ensureGreen ( ) ; assertAcked ( admin ( ) . indices ( ) . prepareAliases ( ) . addAliasAction ( newAddAliasAction ( <str> , <str> ) . routing ( <str> ) ) ) ; logger . info ( <str> ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; SearchResponse searchResponse = client ( ) . prepareSearch ( <str> ) . setSearchType ( SearchType . QUERY_THEN_FETCH ) . setSize ( <int> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; assertThat ( searchResponse . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( searchResponse . getHits ( ) . getHits ( ) . length , equalTo ( <int> ) ) ; } public void testIndexingAliasesOverTime ( ) throws Exception { createIndex ( <str> ) ; ensureGreen ( ) ; logger . info ( <str> ) ; assertAcked ( admin ( ) . indices ( ) . prepareAliases ( ) . addAliasAction ( newAddAliasAction ( <str> , <str> ) . routing ( <str> ) ) ) ; logger . info ( <str> ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . setRouting ( <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( true ) ) ; assertThat ( client ( ) . prepareSearch ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( <str> ) . setSize ( <int> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; } logger . info ( <str> ) ; assertAcked ( admin ( ) . indices ( ) . prepareAliases ( ) . addAliasAction ( newAddAliasAction ( <str> , <str> ) . routing ( <str> ) ) ) ; logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareSearch ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> l ) ) ; assertThat ( client ( ) . prepareSearch ( <str> ) . setSize ( <int> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> l ) ) ; } logger . info ( <str> ) ; assertAcked ( client ( ) . admin ( ) . indices ( ) . prepareAliases ( ) . addAliasAction ( newAddAliasAction ( <str> , <str> ) . searchRouting ( <str> ) . indexRouting ( <str> ) ) ) ; logger . info ( <str> ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; logger . info ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . setRouting ( <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( true ) ) ; assertThat ( client ( ) . prepareGet ( <str> , <str> , <str> ) . setRouting ( <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( true ) ) ; assertThat ( client ( ) . prepareSearch ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; assertThat ( client ( ) . prepareSearch ( <str> ) . setSize ( <int> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) . execute ( ) . actionGet ( ) . getHits ( ) . totalHits ( ) , equalTo ( <int> ) ) ; } } } 
