package org . apache . cassandra . db ; import java . io . * ; import java . nio . ByteBuffer ; import java . util . List ; import org . apache . cassandra . config . CFMetaData ; import org . apache . cassandra . db . marshal . CompositeType ; import org . apache . cassandra . io . ISerializer ; import org . apache . cassandra . io . util . DataInputPlus ; import org . apache . cassandra . io . util . DataOutputPlus ; import org . apache . cassandra . io . sstable . format . Version ; import org . apache . cassandra . utils . ByteBufferUtil ; import static org . apache . cassandra . io . sstable . IndexHelper . IndexInfo ; public class Serializers { private final CFMetaData metadata ; public Serializers ( CFMetaData metadata ) { this . metadata = metadata ; } public ISerializer < ClusteringPrefix > indexEntryClusteringPrefixSerializer ( final Version version , final SerializationHeader header ) { if ( ! version . storeRows ( ) ) { return new ISerializer < ClusteringPrefix > ( ) { public void serialize ( ClusteringPrefix clustering , DataOutputPlus out ) throws IOException { throw new UnsupportedOperationException ( ) ; } public ClusteringPrefix deserialize ( DataInputPlus in ) throws IOException { ByteBuffer bb = ByteBufferUtil . readWithShortLength ( in ) ; assert bb . hasRemaining ( ) ; int clusteringSize = metadata . clusteringColumns ( ) . size ( ) ; if ( clusteringSize = = <int> ) return Clustering . EMPTY ; if ( ! metadata . isCompound ( ) ) return new Clustering ( bb ) ; List < ByteBuffer > components = CompositeType . splitName ( bb ) ; byte eoc = CompositeType . lastEOC ( bb ) ; if ( eoc = = <int> | | components . size ( ) > = clusteringSize ) { if ( components . size ( ) > clusteringSize ) components = components . subList ( <int> , clusteringSize ) ; return new Clustering ( components . toArray ( new ByteBuffer [ clusteringSize ] ) ) ; } else { Slice . Bound . Kind boundKind = eoc > <int> ? Slice . Bound . Kind . EXCL_START_BOUND : Slice . Bound . Kind . INCL_START_BOUND ; return Slice . Bound . create ( boundKind , components . toArray ( new ByteBuffer [ components . size ( ) ] ) ) ; } } public long serializedSize ( ClusteringPrefix clustering ) { throw new UnsupportedOperationException ( ) ; } } ; } return new ISerializer < ClusteringPrefix > ( ) { public void serialize ( ClusteringPrefix clustering , DataOutputPlus out ) throws IOException { ClusteringPrefix . serializer . serialize ( clustering , out , version . correspondingMessagingVersion ( ) , header . clusteringTypes ( ) ) ; } public ClusteringPrefix deserialize ( DataInputPlus in ) throws IOException { return ClusteringPrefix . serializer . deserialize ( in , version . correspondingMessagingVersion ( ) , header . clusteringTypes ( ) ) ; } public long serializedSize ( ClusteringPrefix clustering ) { return ClusteringPrefix . serializer . serializedSize ( clustering , version . correspondingMessagingVersion ( ) , header . clusteringTypes ( ) ) ; } } ; } } 
