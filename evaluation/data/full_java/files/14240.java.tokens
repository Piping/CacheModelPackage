package org . gradle . model ; import org . gradle . api . GradleException ; import org . gradle . api . Incubating ; import org . gradle . internal . exceptions . Contextual ; import org . gradle . model . internal . core . rule . describe . ModelRuleDescriptor ; @Incubating @Contextual public class InvalidModelRuleDeclarationException extends GradleException { public InvalidModelRuleDeclarationException ( String message ) { super ( message ) ; } public InvalidModelRuleDeclarationException ( String message , Throwable cause ) { super ( message , cause ) ; } public InvalidModelRuleDeclarationException ( ModelRuleDescriptor descriptor , Throwable cause ) { super ( <str> + descriptor . toString ( ) + <str> , cause ) ; if ( cause = = null ) { throw new IllegalArgumentException ( <str> ) ; } } public InvalidModelRuleDeclarationException ( ModelRuleDescriptor descriptor , String message ) { super ( String . format ( <str> , descriptor , message ) ) ; } public InvalidModelRuleDeclarationException ( ModelRuleDescriptor descriptor , String message , Throwable cause ) { super ( String . format ( <str> , descriptor , message ) , cause ) ; } } 
