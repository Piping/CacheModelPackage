package org . gradle . initialization ; import org . gradle . api . Nullable ; import org . gradle . internal . SystemProperties ; import java . io . File ; import static org . gradle . util . GFileUtils . canonicalise ; public class BuildLayoutParameters { public static final String GRADLE_USER_HOME_PROPERTY_KEY = <str> ; private static final File DEFAULT_GRADLE_USER_HOME = new File ( SystemProperties . getInstance ( ) . getUserHome ( ) + <str> ) ; private boolean searchUpwards = true ; private File currentDir = canonicalise ( SystemProperties . getInstance ( ) . getCurrentDir ( ) ) ; private File projectDir ; private File gradleUserHomeDir ; public BuildLayoutParameters ( ) { String gradleUserHome = System . getProperty ( GRADLE_USER_HOME_PROPERTY_KEY ) ; if ( gradleUserHome = = null ) { gradleUserHome = System . getenv ( <str> ) ; if ( gradleUserHome = = null ) { gradleUserHome = DEFAULT_GRADLE_USER_HOME . getAbsolutePath ( ) ; } } gradleUserHomeDir = canonicalise ( new File ( gradleUserHome ) ) ; } public BuildLayoutParameters setSearchUpwards ( boolean searchUpwards ) { this . searchUpwards = searchUpwards ; return this ; } public BuildLayoutParameters setProjectDir ( File projectDir ) { this . projectDir = projectDir ; return this ; } public BuildLayoutParameters setGradleUserHomeDir ( File gradleUserHomeDir ) { this . gradleUserHomeDir = gradleUserHomeDir ; return this ; } public BuildLayoutParameters setCurrentDir ( File currentDir ) { this . currentDir = currentDir ; return this ; } public File getCurrentDir ( ) { return currentDir ; } @Nullable public File getProjectDir ( ) { return projectDir ; } public File getSearchDir ( ) { return projectDir ! = null ? projectDir : currentDir ; } public File getGradleUserHomeDir ( ) { return gradleUserHomeDir ; } public boolean getSearchUpwards ( ) { return searchUpwards ; } } 
