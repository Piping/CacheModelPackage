package io . netty . channel ; import org . junit . Test ; import static org . junit . Assert . assertFalse ; import static org . junit . Assert . assertNotNull ; import static org . junit . Assert . assertSame ; import static org . junit . Assert . assertTrue ; import static org . junit . Assert . fail ; public class ChannelOptionTest { @Test public void testExists ( ) { String name = <str> ; assertFalse ( ChannelOption . exists ( name ) ) ; ChannelOption < String > option = ChannelOption . valueOf ( name ) ; assertTrue ( ChannelOption . exists ( name ) ) ; assertNotNull ( option ) ; } @Test public void testValueOf ( ) { String name = <str> ; assertFalse ( ChannelOption . exists ( name ) ) ; ChannelOption < String > option = ChannelOption . valueOf ( name ) ; ChannelOption < String > option2 = ChannelOption . valueOf ( name ) ; assertSame ( option , option2 ) ; } @Test public void testCreateOrFail ( ) { String name = <str> ; assertFalse ( ChannelOption . exists ( name ) ) ; ChannelOption < String > option = ChannelOption . newInstance ( name ) ; assertTrue ( ChannelOption . exists ( name ) ) ; assertNotNull ( option ) ; try { ChannelOption . < String > newInstance ( name ) ; fail ( ) ; } catch ( IllegalArgumentException e ) { } } } 
