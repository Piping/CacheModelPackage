package org . elasticsearch . search . aggregations . pipeline ; import org . elasticsearch . search . aggregations . AggregatorFactory ; import java . io . IOException ; import java . util . List ; import java . util . Map ; public abstract class PipelineAggregatorFactory { protected String name ; protected String type ; protected String [ ] bucketsPaths ; protected Map < String , Object > metaData ; public PipelineAggregatorFactory ( String name , String type , String [ ] bucketsPaths ) { this . name = name ; this . type = type ; this . bucketsPaths = bucketsPaths ; } public String name ( ) { return name ; } public final void validate ( AggregatorFactory parent , AggregatorFactory [ ] factories , List < PipelineAggregatorFactory > pipelineAggregatorFactories ) { doValidate ( parent , factories , pipelineAggregatorFactories ) ; } protected abstract PipelineAggregator createInternal ( Map < String , Object > metaData ) throws IOException ; public final PipelineAggregator create ( ) throws IOException { PipelineAggregator aggregator = createInternal ( this . metaData ) ; return aggregator ; } public void doValidate ( AggregatorFactory parent , AggregatorFactory [ ] factories , List < PipelineAggregatorFactory > pipelineAggregatorFactories ) { } public void setMetaData ( Map < String , Object > metaData ) { this . metaData = metaData ; } public String getName ( ) { return name ; } public String [ ] getBucketsPaths ( ) { return bucketsPaths ; } } 
