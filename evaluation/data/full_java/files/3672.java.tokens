package org . eclipse . debug . internal . core ; import java . util . Comparator ; import org . eclipse . core . runtime . CoreException ; import org . eclipse . core . runtime . IConfigurationElement ; import org . eclipse . debug . core . DebugPlugin ; public class LaunchConfigurationComparator implements Comparator < Object > { private IConfigurationElement fConfigurationElement ; private Comparator < Object > fDelegate ; public LaunchConfigurationComparator ( IConfigurationElement element ) { fConfigurationElement = element ; } protected Comparator < Object > getComparator ( ) { if ( fDelegate = = null ) { try { @SuppressWarnings ( <str> ) Comparator < Object > delegate = ( Comparator < Object > ) fConfigurationElement . createExecutableExtension ( IConfigurationElementConstants . CLASS ) ; fDelegate = delegate ; } catch ( CoreException e ) { DebugPlugin . log ( e ) ; } } return fDelegate ; } @Override public int compare ( Object o1 , Object o2 ) { return getComparator ( ) . compare ( o1 , o2 ) ; } @Override public boolean equals ( Object obj ) { return getComparator ( ) . equals ( obj ) ; } @Override public int hashCode ( ) { return getComparator ( ) . hashCode ( ) ; } } 
