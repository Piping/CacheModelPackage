package org . gradle . build . docs . dsl . docbook ; import org . gradle . build . docs . dsl . docbook . model . DslElementDoc ; import org . w3c . dom . Document ; import org . w3c . dom . Element ; public class ElementWarningsRenderer { public void renderTo ( DslElementDoc elementDoc , String type , Element parent ) { if ( elementDoc . isDeprecated ( ) ) { Document document = parent . getOwnerDocument ( ) ; Element caution = document . createElement ( <str> ) ; parent . appendChild ( caution ) ; Element para = document . createElement ( <str> ) ; caution . appendChild ( para ) ; para . appendChild ( document . createTextNode ( String . format ( <str> , type ) ) ) ; Element link = document . createElement ( <str> ) ; para . appendChild ( link ) ; link . setAttribute ( <str> , <str> ) ; link . appendChild ( document . createTextNode ( <str> ) ) ; para . appendChild ( document . createTextNode ( <str> ) ) ; } if ( elementDoc . isIncubating ( ) ) { Document document = parent . getOwnerDocument ( ) ; Element caution = document . createElement ( <str> ) ; parent . appendChild ( caution ) ; Element para = document . createElement ( <str> ) ; caution . appendChild ( para ) ; para . appendChild ( document . createTextNode ( String . format ( <str> , type ) ) ) ; Element link = document . createElement ( <str> ) ; para . appendChild ( link ) ; link . setAttribute ( <str> , <str> ) ; link . appendChild ( document . createTextNode ( <str> ) ) ; para . appendChild ( document . createTextNode ( <str> ) ) ; } } } 
