package org . gradle . api . internal . tasks . testing . junit ; import org . gradle . api . internal . tasks . testing . TestSuiteExecutionException ; import org . junit . runner . Description ; import org . junit . runner . Request ; import org . junit . runner . Runner ; import java . util . List ; public class IgnoredTestDescriptorProvider { List < Description > getAllDescriptions ( Description description , String className ) { final AllExceptIgnoredTestRunnerBuilder allExceptIgnoredTestRunnerBuilder = new AllExceptIgnoredTestRunnerBuilder ( ) ; try { final Class < ? > testClass = description . getClass ( ) . getClassLoader ( ) . loadClass ( className ) ; Runner runner = allExceptIgnoredTestRunnerBuilder . runnerForClass ( testClass ) ; if ( runner = = null ) { runner = Request . aClass ( testClass ) . getRunner ( ) ; } final Description runnerDescription = runner . getDescription ( ) ; return runnerDescription . getChildren ( ) ; } catch ( Throwable throwable ) { throw new TestSuiteExecutionException ( String . format ( <str> , className ) , throwable ) ; } } } 
