package org . gradle . play . tasks ; import org . gradle . api . Incubating ; import org . gradle . api . artifacts . Configuration ; import org . gradle . api . artifacts . Dependency ; import org . gradle . language . base . internal . tasks . SimpleStaleClassCleaner ; import org . gradle . language . base . internal . tasks . StaleClassCleaner ; import org . gradle . plugins . javascript . coffeescript . CoffeeScriptCompile ; @Incubating public class PlayCoffeeScriptCompile extends CoffeeScriptCompile { public void setCoffeeScriptJsNotation ( String notation ) { super . setCoffeeScriptJs ( getDetachedConfiguration ( notation ) ) ; } @Override public void setCoffeeScriptJs ( Object coffeeScriptJs ) { super . setCoffeeScriptJs ( coffeeScriptJs ) ; } public void setRhinoClasspathNotation ( String notation ) { setRhinoClasspath ( getDetachedConfiguration ( notation ) ) ; } private Configuration getDetachedConfiguration ( String notation ) { Dependency dependency = getProject ( ) . getDependencies ( ) . create ( notation ) ; return getProject ( ) . getConfigurations ( ) . detachedConfiguration ( dependency ) ; } @Override public void doCompile ( ) { StaleClassCleaner cleaner = new SimpleStaleClassCleaner ( getOutputs ( ) ) ; cleaner . setDestinationDir ( getDestinationDir ( ) ) ; cleaner . execute ( ) ; super . doCompile ( ) ; } } 
