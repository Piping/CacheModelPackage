package com . badlogic . gdx . tests ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . Preferences ; import com . badlogic . gdx . tests . utils . GdxTest ; import com . badlogic . gdx . utils . GdxRuntimeException ; public class PreferencesTest extends GdxTest { public void create ( ) { Preferences prefs = Gdx . app . getPreferences ( <str> ) ; if ( prefs . contains ( <str> ) ) { if ( prefs . getBoolean ( <str> ) ! = true ) throw new GdxRuntimeException ( <str> ) ; if ( prefs . getInteger ( <str> ) ! = <int> ) throw new GdxRuntimeException ( <str> ) ; if ( prefs . getLong ( <str> ) ! = Long . MAX_VALUE ) throw new GdxRuntimeException ( <str> ) ; if ( prefs . getFloat ( <str> ) ! = <float> ) throw new GdxRuntimeException ( <str> ) ; if ( ! prefs . getString ( <str> ) . equals ( <str> ) ) throw new GdxRuntimeException ( <str> ) ; } prefs . clear ( ) ; prefs . putBoolean ( <str> , true ) ; prefs . putInteger ( <str> , <int> ) ; prefs . putLong ( <str> , Long . MAX_VALUE ) ; prefs . putFloat ( <str> , <float> ) ; prefs . putString ( <str> , <str> ) ; prefs . flush ( ) ; if ( prefs . getBoolean ( <str> ) ! = true ) throw new GdxRuntimeException ( <str> ) ; if ( prefs . getInteger ( <str> ) ! = <int> ) throw new GdxRuntimeException ( <str> ) ; if ( prefs . getLong ( <str> ) ! = Long . MAX_VALUE ) throw new GdxRuntimeException ( <str> ) ; if ( prefs . getFloat ( <str> ) ! = <float> ) throw new GdxRuntimeException ( <str> ) ; if ( ! prefs . getString ( <str> ) . equals ( <str> ) ) throw new GdxRuntimeException ( <str> ) ; } } 
