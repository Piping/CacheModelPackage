package org . elasticsearch . action . support . master ; import org . elasticsearch . action . ActionRequest ; import org . elasticsearch . cluster . ack . AckedRequest ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . common . unit . TimeValue ; import java . io . IOException ; import static org . elasticsearch . common . unit . TimeValue . readTimeValue ; import static org . elasticsearch . common . unit . TimeValue . timeValueSeconds ; public abstract class AcknowledgedRequest < T extends MasterNodeRequest > extends MasterNodeRequest < T > implements AckedRequest { public static final TimeValue DEFAULT_ACK_TIMEOUT = timeValueSeconds ( <int> ) ; protected TimeValue timeout = DEFAULT_ACK_TIMEOUT ; protected AcknowledgedRequest ( ) { } protected AcknowledgedRequest ( ActionRequest request ) { super ( request ) ; } @SuppressWarnings ( <str> ) public final T timeout ( String timeout ) { this . timeout = TimeValue . parseTimeValue ( timeout , this . timeout , getClass ( ) . getSimpleName ( ) + <str> ) ; return ( T ) this ; } @SuppressWarnings ( <str> ) public final T timeout ( TimeValue timeout ) { this . timeout = timeout ; return ( T ) this ; } public final TimeValue timeout ( ) { return timeout ; } protected void readTimeout ( StreamInput in ) throws IOException { timeout = readTimeValue ( in ) ; } protected void writeTimeout ( StreamOutput out ) throws IOException { timeout . writeTo ( out ) ; } @Override public TimeValue ackTimeout ( ) { return timeout ; } } 
