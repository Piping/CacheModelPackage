package org . nd4j . linalg . api . buffer ; import io . netty . buffer . ByteBuf ; import java . nio . ByteBuffer ; public class IntBuffer extends BaseDataBuffer { public IntBuffer ( int length ) { super ( length ) ; } public IntBuffer ( ByteBuffer buffer , int length ) { super ( buffer , length ) ; } @Override protected DataBuffer create ( int length ) { return new IntBuffer ( length ) ; } public IntBuffer ( int [ ] data ) { super ( data ) ; } public IntBuffer ( double [ ] data ) { super ( data ) ; } public IntBuffer ( float [ ] data ) { super ( data ) ; } @Override public DataBuffer create ( double [ ] data ) { return new IntBuffer ( data ) ; } @Override public DataBuffer create ( float [ ] data ) { return new IntBuffer ( data ) ; } @Override public DataBuffer create ( int [ ] data ) { return new IntBuffer ( data ) ; } public IntBuffer ( ByteBuf buf , int length ) { super ( buf , length ) ; } @Override public DataBuffer create ( ByteBuf buf , int length ) { return new IntBuffer ( buf , length ) ; } public IntBuffer ( int [ ] data , boolean copy ) { super ( data , copy ) ; } @Override public DataBuffer . Type dataType ( ) { return DataBuffer . Type . INT ; } @Override public int getElementSize ( ) { return <int> ; } } 
