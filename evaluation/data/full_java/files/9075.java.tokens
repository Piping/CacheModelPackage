package org . elasticsearch . test . rest . test ; import org . elasticsearch . common . xcontent . json . JsonXContent ; import org . elasticsearch . test . rest . spec . RestApi ; import org . elasticsearch . test . rest . spec . RestApiParser ; import static org . hamcrest . Matchers . contains ; import static org . hamcrest . Matchers . equalTo ; import static org . hamcrest . Matchers . notNullValue ; public class RestApiParserTests extends AbstractParserTestCase { public void testParseRestSpecIndexApi ( ) throws Exception { parser = JsonXContent . jsonXContent . createParser ( REST_SPEC_INDEX_API ) ; RestApi restApi = new RestApiParser ( ) . parse ( parser ) ; assertThat ( restApi , notNullValue ( ) ) ; assertThat ( restApi . getName ( ) , equalTo ( <str> ) ) ; assertThat ( restApi . getMethods ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restApi . getMethods ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getMethods ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getPaths ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restApi . getPaths ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getPaths ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getPathParts ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restApi . getPathParts ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getPathParts ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getPathParts ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restApi . getParams ( ) , contains ( <str> , <str> , <str> , <str> ) ) ; assertThat ( restApi . isBodySupported ( ) , equalTo ( true ) ) ; assertThat ( restApi . isBodyRequired ( ) , equalTo ( true ) ) ; } public void testParseRestSpecGetTemplateApi ( ) throws Exception { parser = JsonXContent . jsonXContent . createParser ( REST_SPEC_GET_TEMPLATE_API ) ; RestApi restApi = new RestApiParser ( ) . parse ( parser ) ; assertThat ( restApi , notNullValue ( ) ) ; assertThat ( restApi . getName ( ) , equalTo ( <str> ) ) ; assertThat ( restApi . getMethods ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restApi . getMethods ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getPaths ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restApi . getPaths ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getPaths ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getPathParts ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restApi . getPathParts ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restApi . isBodySupported ( ) , equalTo ( false ) ) ; assertThat ( restApi . isBodyRequired ( ) , equalTo ( false ) ) ; } public void testParseRestSpecCountApi ( ) throws Exception { parser = JsonXContent . jsonXContent . createParser ( REST_SPEC_COUNT_API ) ; RestApi restApi = new RestApiParser ( ) . parse ( parser ) ; assertThat ( restApi , notNullValue ( ) ) ; assertThat ( restApi . getName ( ) , equalTo ( <str> ) ) ; assertThat ( restApi . getMethods ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restApi . getMethods ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getMethods ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getPaths ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restApi . getPaths ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getPaths ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getPaths ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getPathParts ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restApi . getPathParts ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getPathParts ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restApi . getParams ( ) . get ( <int> ) , equalTo ( <str> ) ) ; assertThat ( restApi . isBodySupported ( ) , equalTo ( true ) ) ; assertThat ( restApi . isBodyRequired ( ) , equalTo ( false ) ) ; } private static final String REST_SPEC_COUNT_API = <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ; private static final String REST_SPEC_GET_TEMPLATE_API = <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ; private static final String REST_SPEC_INDEX_API = <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ; } 
