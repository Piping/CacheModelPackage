package org . gradle . api . tasks . scala ; import com . google . common . base . Joiner ; import org . gradle . api . tasks . compile . AbstractOptions ; import org . gradle . api . tasks . Input ; import org . gradle . api . tasks . Optional ; import org . gradle . api . tasks . InputFile ; import java . io . File ; import java . util . List ; public class ScalaDocOptions extends AbstractOptions { private boolean deprecation = true ; private boolean unchecked = true ; private String windowTitle ; private String docTitle ; private String header ; private String footer ; private String top ; private String bottom ; private File styleSheet ; private List < String > additionalParameters ; @Input public boolean isDeprecation ( ) { return deprecation ; } public void setDeprecation ( boolean deprecation ) { this . deprecation = deprecation ; } @Input public boolean isUnchecked ( ) { return unchecked ; } public void setUnchecked ( boolean unchecked ) { this . unchecked = unchecked ; } @Input @Optional public String getWindowTitle ( ) { return windowTitle ; } public void setWindowTitle ( String windowTitle ) { this . windowTitle = windowTitle ; } @Input @Optional public String getDocTitle ( ) { return docTitle ; } public void setDocTitle ( String docTitle ) { this . docTitle = docTitle ; } @Input @Optional public String getHeader ( ) { return header ; } public void setHeader ( String header ) { this . header = header ; } @Input @Optional public String getFooter ( ) { return footer ; } public void setFooter ( String footer ) { this . footer = footer ; } @Input @Optional public String getTop ( ) { return top ; } public void setTop ( String top ) { this . top = top ; } @Input @Optional public String getBottom ( ) { return bottom ; } public void setBottom ( String bottom ) { this . bottom = bottom ; } @InputFile @Optional public File getStyleSheet ( ) { return styleSheet ; } public void setStyleSheet ( File styleSheet ) { this . styleSheet = styleSheet ; } @Input @Optional public List < String > getAdditionalParameters ( ) { return additionalParameters ; } public void setAdditionalParameters ( List < String > additionalParameters ) { this . additionalParameters = additionalParameters ; } @Override protected String getAntPropertyName ( String fieldName ) { if ( fieldName . equals ( <str> ) ) { return <str> ; } return fieldName ; } @Override protected Object getAntPropertyValue ( String fieldName , Object value ) { if ( fieldName . equals ( <str> ) ) { return toOnOffString ( deprecation ) ; } if ( fieldName . equals ( <str> ) ) { return toOnOffString ( unchecked ) ; } if ( fieldName . equals ( <str> ) ) { return additionalParameters . isEmpty ( ) ? <str> : Joiner . on ( <str> ) . join ( additionalParameters ) ; } return value ; } private String toOnOffString ( boolean value ) { return value ? <str> : <str> ; } } 
