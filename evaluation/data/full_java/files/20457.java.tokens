package io . netty . channel . sctp ; import com . sun . nio . sctp . SctpStandardSocketOptions . InitMaxStreams ; import io . netty . channel . ChannelOption ; import java . net . SocketAddress ; public final class SctpChannelOption < T > extends ChannelOption < T > { @SuppressWarnings ( <str> ) private static final Class < SctpChannelOption > T = SctpChannelOption . class ; public static final ChannelOption < Boolean > SCTP_DISABLE_FRAGMENTS = valueOf ( T , <str> ) ; public static final ChannelOption < Boolean > SCTP_EXPLICIT_COMPLETE = valueOf ( T , <str> ) ; public static final ChannelOption < Integer > SCTP_FRAGMENT_INTERLEAVE = valueOf ( T , <str> ) ; public static final ChannelOption < InitMaxStreams > SCTP_INIT_MAXSTREAMS = valueOf ( T , <str> ) ; public static final ChannelOption < Boolean > SCTP_NODELAY = valueOf ( T , <str> ) ; public static final ChannelOption < SocketAddress > SCTP_PRIMARY_ADDR = valueOf ( T , <str> ) ; public static final ChannelOption < SocketAddress > SCTP_SET_PEER_PRIMARY_ADDR = valueOf ( T , <str> ) ; @SuppressWarnings ( { <str> , <str> } ) private SctpChannelOption ( ) { super ( null ) ; } } 
