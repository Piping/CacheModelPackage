package org . eclipse . debug . internal . ui . model . elements ; import org . eclipse . core . runtime . CoreException ; import org . eclipse . debug . internal . ui . viewers . model . provisional . IPresentationContext ; import org . eclipse . ui . IMemento ; public abstract class DebugElementMementoProvider extends ElementMementoProvider { protected static final String ELEMENT_NAME = <str> ; @Override protected boolean encodeElement ( Object element , IMemento memento , IPresentationContext context ) throws CoreException { if ( supportsContext ( context ) ) { String name = getElementName ( element , context ) ; memento . putString ( ELEMENT_NAME , name ) ; return true ; } return false ; } @Override protected boolean isEqual ( Object element , IMemento memento , IPresentationContext context ) throws CoreException { String mementoName = memento . getString ( ELEMENT_NAME ) ; if ( mementoName ! = null ) { String name = getElementName ( element , context ) ; if ( name ! = null ) { return name . equals ( mementoName ) ; } } return false ; } protected boolean supportsContext ( IPresentationContext context ) { return supportsContextId ( context . getId ( ) ) ; } protected boolean supportsContextId ( String id ) { return true ; } protected abstract String getElementName ( Object element , IPresentationContext context ) throws CoreException ; } 
