package org . gradle . execution . taskgraph ; import org . gradle . internal . Factory ; import org . gradle . internal . concurrent . ExecutorFactory ; public class TaskPlanExecutorFactory implements Factory < TaskPlanExecutor > { private final int parallelThreads ; private final ExecutorFactory executorFactory ; public TaskPlanExecutorFactory ( int parallelThreads , ExecutorFactory executorFactory ) { this . parallelThreads = parallelThreads ; this . executorFactory = executorFactory ; } public TaskPlanExecutor create ( ) { if ( executeProjectsInParallel ( ) ) { return new ParallelTaskPlanExecutor ( numberOfParallelThreads ( ) , executorFactory ) ; } return new DefaultTaskPlanExecutor ( ) ; } private boolean executeProjectsInParallel ( ) { return parallelThreads ! = <int> ; } private int numberOfParallelThreads ( ) { if ( parallelThreads = = - <int> ) { return Runtime . getRuntime ( ) . availableProcessors ( ) ; } return parallelThreads ; } } 
