package org . gradle . api . internal . tasks . testing . junit . result ; import org . gradle . api . tasks . testing . TestResult ; import java . util . ArrayList ; import java . util . List ; public class TestMethodResult { private final long id ; private final String name ; private TestResult . ResultType resultType ; private long duration ; private long endTime ; private List < TestFailure > failures = new ArrayList < TestFailure > ( ) ; public TestMethodResult ( long id , String name ) { this . id = id ; this . name = name ; } public TestMethodResult ( long id , String name , TestResult . ResultType resultType , long duration , long endTime ) { if ( id < <int> ) { throw new IllegalArgumentException ( <str> ) ; } this . id = id ; this . name = name ; this . resultType = resultType ; this . duration = duration ; this . endTime = endTime ; } public TestMethodResult completed ( TestResult result ) { resultType = result . getResultType ( ) ; duration = result . getEndTime ( ) - result . getStartTime ( ) ; endTime = result . getEndTime ( ) ; return this ; } public TestMethodResult addFailure ( String message , String stackTrace , String exceptionType ) { this . failures . add ( new TestFailure ( message , stackTrace , exceptionType ) ) ; return this ; } public long getId ( ) { return id ; } public String getName ( ) { return name ; } public List < TestFailure > getFailures ( ) { return failures ; } public TestResult . ResultType getResultType ( ) { return resultType ; } public long getDuration ( ) { return duration ; } public long getEndTime ( ) { return endTime ; } } 
