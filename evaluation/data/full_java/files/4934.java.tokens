package org . elasticsearch . action ; import org . elasticsearch . ElasticsearchException ; import org . elasticsearch . common . Nullable ; import org . elasticsearch . common . collect . HppcMaps ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . index . shard . ShardId ; import org . elasticsearch . rest . RestStatus ; import java . io . IOException ; public class UnavailableShardsException extends ElasticsearchException { public UnavailableShardsException ( @Nullable ShardId shardId , String message , Object . . . args ) { super ( buildMessage ( shardId , message ) , args ) ; } private static String buildMessage ( ShardId shardId , String message ) { if ( shardId = = null ) { return message ; } return <str> + shardId . index ( ) . name ( ) + <str> + shardId . id ( ) + <str> + message ; } public UnavailableShardsException ( StreamInput in ) throws IOException { super ( in ) ; } @Override public RestStatus status ( ) { return RestStatus . SERVICE_UNAVAILABLE ; } } 
