package org . gradle . api . internal . artifacts . ivyservice . ivyresolve ; import org . gradle . api . internal . artifacts . repositories . resolver . ExternalResourceResolver ; import org . gradle . internal . hash . HashUtil ; import org . gradle . util . CollectionUtils ; import java . util . ArrayList ; import java . util . List ; public class DependencyResolverIdentifier { public static String forExternalResourceResolver ( ExternalResourceResolver resolver ) { List < String > parts = new ArrayList < String > ( ) ; parts . add ( resolver . getClass ( ) . getName ( ) ) ; parts . add ( joinPatterns ( resolver . getIvyPatterns ( ) ) ) ; parts . add ( joinPatterns ( resolver . getArtifactPatterns ( ) ) ) ; if ( resolver . isM2compatible ( ) ) { parts . add ( <str> ) ; } return calculateId ( parts ) ; } private static String joinPatterns ( List < String > patterns ) { return CollectionUtils . join ( <str> , patterns ) ; } private static String calculateId ( List < String > parts ) { String idString = CollectionUtils . join ( <str> , parts ) ; return HashUtil . createHash ( idString , <str> ) . asHexString ( ) ; } } 
