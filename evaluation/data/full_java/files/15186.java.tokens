package org . gradle . play . internal . twirl ; import org . gradle . play . internal . platform . PlayMajorVersion ; import org . gradle . play . platform . PlayPlatform ; public class TwirlCompilerFactory { public static TwirlCompiler create ( PlayPlatform playPlatform ) { return new TwirlCompiler ( createAdapter ( playPlatform ) ) ; } public static VersionedTwirlCompilerAdapter createAdapter ( PlayPlatform playPlatform ) { String playVersion = playPlatform . getPlayVersion ( ) ; String scalaCompatibilityVersion = playPlatform . getScalaPlatform ( ) . getScalaCompatibilityVersion ( ) ; switch ( PlayMajorVersion . forPlatform ( playPlatform ) ) { case PLAY_2_2_X : return new TwirlCompilerAdapterV22X ( <str> , scalaCompatibilityVersion ) ; case PLAY_2_3_X : return new TwirlCompilerAdapterV10X ( <str> , scalaCompatibilityVersion ) ; case PLAY_2_4_X : return new TwirlCompilerAdapterV10X ( <str> , scalaCompatibilityVersion ) ; default : throw new RuntimeException ( <str> + playVersion ) ; } } } 
