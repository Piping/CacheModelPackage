package org . nd4j . linalg . api . ops ; import org . nd4j . linalg . api . complex . IComplexNumber ; import org . nd4j . linalg . api . ndarray . INDArray ; public interface Op { String name ( ) ; INDArray x ( ) ; INDArray y ( ) ; INDArray z ( ) ; int n ( ) ; IComplexNumber op ( IComplexNumber origin , double other ) ; IComplexNumber op ( IComplexNumber origin , float other ) ; IComplexNumber op ( IComplexNumber origin , IComplexNumber other ) ; float op ( float origin , float other ) ; double op ( double origin , double other ) ; double op ( double origin ) ; float op ( float origin ) ; IComplexNumber op ( IComplexNumber origin ) ; Op opForDimension ( int index , int dimension ) ; Op opForDimension ( int index , int . . . dimension ) ; void init ( INDArray x , INDArray y , INDArray z , int n ) ; int numProcessed ( ) ; Object [ ] extraArgs ( ) ; void setX ( INDArray x ) ; void setZ ( INDArray z ) ; void setY ( INDArray y ) ; boolean isPassThrough ( ) ; void exec ( ) ; void exec ( int . . . dimensions ) ; void setN ( int n ) ; } 
