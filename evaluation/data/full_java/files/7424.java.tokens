package org . elasticsearch . search . aggregations . pipeline . movavg ; import org . elasticsearch . common . xcontent . XContentBuilder ; import org . elasticsearch . search . aggregations . pipeline . BucketHelpers . GapPolicy ; import org . elasticsearch . search . aggregations . pipeline . PipelineAggregatorBuilder ; import org . elasticsearch . search . aggregations . pipeline . movavg . models . MovAvgModelBuilder ; import java . io . IOException ; import java . util . Map ; public class MovAvgBuilder extends PipelineAggregatorBuilder < MovAvgBuilder > { private String format ; private GapPolicy gapPolicy ; private MovAvgModelBuilder modelBuilder ; private Integer window ; private Integer predict ; private Boolean minimize ; private Map < String , Object > settings ; public MovAvgBuilder ( String name ) { super ( name , MovAvgPipelineAggregator . TYPE . name ( ) ) ; } public MovAvgBuilder format ( String format ) { this . format = format ; return this ; } public MovAvgBuilder gapPolicy ( GapPolicy gapPolicy ) { this . gapPolicy = gapPolicy ; return this ; } public MovAvgBuilder modelBuilder ( MovAvgModelBuilder modelBuilder ) { this . modelBuilder = modelBuilder ; return this ; } public MovAvgBuilder window ( int window ) { this . window = window ; return this ; } public MovAvgBuilder predict ( int numPredictions ) { this . predict = numPredictions ; return this ; } public MovAvgBuilder minimize ( boolean minimize ) { this . minimize = minimize ; return this ; } public MovAvgBuilder settings ( Map < String , Object > settings ) { this . settings = settings ; return this ; } @Override protected XContentBuilder internalXContent ( XContentBuilder builder , Params params ) throws IOException { if ( format ! = null ) { builder . field ( MovAvgParser . FORMAT . getPreferredName ( ) , format ) ; } if ( gapPolicy ! = null ) { builder . field ( MovAvgParser . GAP_POLICY . getPreferredName ( ) , gapPolicy . getName ( ) ) ; } if ( modelBuilder ! = null ) { modelBuilder . toXContent ( builder , params ) ; } if ( window ! = null ) { builder . field ( MovAvgParser . WINDOW . getPreferredName ( ) , window ) ; } if ( predict ! = null ) { builder . field ( MovAvgParser . PREDICT . getPreferredName ( ) , predict ) ; } if ( minimize ! = null ) { builder . field ( MovAvgParser . MINIMIZE . getPreferredName ( ) , minimize ) ; } if ( settings ! = null ) { builder . field ( MovAvgParser . SETTINGS . getPreferredName ( ) , settings ) ; } return builder ; } } 
