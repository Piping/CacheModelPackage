package org . nd4j . linalg . api . instrumentation ; import org . nd4j . linalg . api . buffer . DataBuffer ; import org . nd4j . linalg . api . ndarray . INDArray ; import java . util . Arrays ; import java . util . Collection ; public class LogEntry extends DataBufferLogEntry { private String id ; private int [ ] shape ; private int [ ] stride ; private String ndArrayType ; public LogEntry ( ) { } public LogEntry ( INDArray toLog , String status ) { this . shape = toLog . shape ( ) ; this . stride = toLog . stride ( ) ; this . ndArrayType = toLog . getClass ( ) . getName ( ) ; this . length = toLog . length ( ) ; this . references = toLog . data ( ) . references ( ) ; this . dataType = toLog . data ( ) . dataType ( ) = = DataBuffer . Type . DOUBLE ? <str> : <str> ; this . timestamp = System . currentTimeMillis ( ) ; this . stackTraceElements = Thread . currentThread ( ) . getStackTrace ( ) ; this . status = status ; } public LogEntry ( INDArray toLog , StackTraceElement [ ] stackTraceElements , String status ) { this . shape = toLog . shape ( ) ; this . stride = toLog . stride ( ) ; this . ndArrayType = toLog . getClass ( ) . getName ( ) ; this . length = toLog . length ( ) ; this . references = toLog . data ( ) . references ( ) ; this . dataType = toLog . data ( ) . dataType ( ) = = DataBuffer . Type . DOUBLE ? <str> : <str> ; this . timestamp = System . currentTimeMillis ( ) ; this . stackTraceElements = stackTraceElements ; this . status = status ; } public LogEntry ( INDArray toLog , StackTraceElement [ ] stackTraceElements ) { this ( toLog , stackTraceElements , <str> ) ; } public LogEntry ( INDArray toLog ) { this ( toLog , Thread . currentThread ( ) . getStackTrace ( ) ) ; } @Override public boolean equals ( Object o ) { if ( this = = o ) return true ; if ( ! ( o instanceof LogEntry ) ) return false ; LogEntry logEntry = ( LogEntry ) o ; if ( length ! = logEntry . length ) return false ; if ( dataType ! = null ? ! dataType . equals ( logEntry . dataType ) : logEntry . dataType ! = null ) return false ; if ( id ! = null ? ! id . equals ( logEntry . id ) : logEntry . id ! = null ) return false ; if ( ndArrayType ! = null ? ! ndArrayType . equals ( logEntry . ndArrayType ) : logEntry . ndArrayType ! = null ) return false ; if ( references ! = null ? ! references . equals ( logEntry . references ) : logEntry . references ! = null ) return false ; if ( ! Arrays . equals ( shape , logEntry . shape ) ) return false ; if ( ! Arrays . equals ( stackTraceElements , logEntry . stackTraceElements ) ) return false ; if ( ! Arrays . equals ( stride , logEntry . stride ) ) return false ; return true ; } @Override public int hashCode ( ) { int result = id ! = null ? id . hashCode ( ) : <int> ; result = <int> * result + ( shape ! = null ? Arrays . hashCode ( shape ) : <int> ) ; result = <int> * result + ( stride ! = null ? Arrays . hashCode ( stride ) : <int> ) ; result = <int> * result + ( int ) ( length ^ ( length > > > <int> ) ) ; result = <int> * result + ( ndArrayType ! = null ? ndArrayType . hashCode ( ) : <int> ) ; result = <int> * result + ( references ! = null ? references . hashCode ( ) : <int> ) ; result = <int> * result + ( dataType ! = null ? dataType . hashCode ( ) : <int> ) ; result = <int> * result + ( stackTraceElements ! = null ? Arrays . hashCode ( stackTraceElements ) : <int> ) ; return result ; } @Override public String toString ( ) { return <str> + <str> + id + <str> + <str> + Arrays . toString ( shape ) + <str> + Arrays . toString ( stride ) + <str> + length + <str> + ndArrayType + <str> + <str> + references + <str> + dataType + <str> + <str> + Arrays . toString ( stackTraceElements ) + <str> ; } public String getId ( ) { return id ; } public void setId ( String id ) { this . id = id ; } public int [ ] getShape ( ) { return shape ; } public void setShape ( int [ ] shape ) { this . shape = shape ; } public int [ ] getStride ( ) { return stride ; } public void setStride ( int [ ] stride ) { this . stride = stride ; } public long length ( ) { return length ; } public void setLength ( long length ) { this . length = length ; } public String getNdArrayType ( ) { return ndArrayType ; } public void setNdArrayType ( String ndArrayType ) { this . ndArrayType = ndArrayType ; } public Collection < String > getReferences ( ) { return references ; } public void setReferences ( Collection < String > numReferences ) { this . references = numReferences ; } public String getDataType ( ) { return dataType ; } public void setDataType ( String dataType ) { this . dataType = dataType ; } public StackTraceElement [ ] getStackTraceElements ( ) { return stackTraceElements ; } public void setStackTraceElements ( StackTraceElement [ ] stackTraceElements ) { this . stackTraceElements = stackTraceElements ; } } 
