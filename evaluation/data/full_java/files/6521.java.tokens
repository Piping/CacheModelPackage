package org . elasticsearch . index . mapper ; public class ContentPath { public enum Type { JUST_NAME , FULL , } private Type pathType ; private final char delimiter ; private final StringBuilder sb ; private final int offset ; private int index = <int> ; private String [ ] path = new String [ <int> ] ; public ContentPath ( ) { this ( <int> ) ; } public ContentPath ( int offset ) { this . delimiter = <str> ; this . sb = new StringBuilder ( ) ; this . offset = offset ; reset ( ) ; } public void reset ( ) { this . index = <int> ; } public void add ( String name ) { path [ index + + ] = name ; if ( index = = path . length ) { String [ ] newPath = new String [ path . length + <int> ] ; System . arraycopy ( path , <int> , newPath , <int> , path . length ) ; path = newPath ; } } public void remove ( ) { path [ index - - ] = null ; } public String pathAsText ( String name ) { if ( pathType = = Type . JUST_NAME ) { return name ; } return fullPathAsText ( name ) ; } public String fullPathAsText ( String name ) { sb . setLength ( <int> ) ; for ( int i = offset ; i < index ; i + + ) { sb . append ( path [ i ] ) . append ( delimiter ) ; } sb . append ( name ) ; return sb . toString ( ) ; } public Type pathType ( ) { return pathType ; } public void pathType ( Type type ) { this . pathType = type ; } } 
