package org . gradle . external . javadoc . internal ; import org . gradle . internal . SystemProperties ; import java . io . File ; import java . io . IOException ; import java . io . Writer ; import java . util . Collection ; import java . util . Iterator ; public class JavadocOptionFileWriterContext { private final Writer writer ; public JavadocOptionFileWriterContext ( Writer writer ) { this . writer = writer ; } public JavadocOptionFileWriterContext write ( String string ) throws IOException { writer . write ( string ) ; return this ; } public JavadocOptionFileWriterContext newLine ( ) throws IOException { writer . write ( SystemProperties . getInstance ( ) . getLineSeparator ( ) ) ; return this ; } public JavadocOptionFileWriterContext writeOptionHeader ( String option ) throws IOException { write ( <str> ) ; write ( option ) ; write ( <str> ) ; return this ; } public JavadocOptionFileWriterContext writeOption ( String option ) throws IOException { writeOptionHeader ( option ) ; newLine ( ) ; return this ; } public JavadocOptionFileWriterContext writeValueOption ( String option , String value ) throws IOException { writeOptionHeader ( option ) ; writeValue ( value ) ; newLine ( ) ; return this ; } public JavadocOptionFileWriterContext writeValue ( String value ) throws IOException { write ( <str> ) ; write ( value . replaceAll ( <str> , <str> ) . replaceAll ( SystemProperties . getInstance ( ) . getLineSeparator ( ) , <str> + SystemProperties . getInstance ( ) . getLineSeparator ( ) ) ) ; write ( <str> ) ; return this ; } public JavadocOptionFileWriterContext writeValuesOption ( String option , Collection < String > values , String joinValuesBy ) throws IOException { StringBuilder builder = new StringBuilder ( ) ; Iterator < String > valuesIt = values . iterator ( ) ; while ( valuesIt . hasNext ( ) ) { builder . append ( valuesIt . next ( ) ) ; if ( valuesIt . hasNext ( ) ) { builder . append ( joinValuesBy ) ; } } writeValueOption ( option , builder . toString ( ) ) ; return this ; } public JavadocOptionFileWriterContext writeMultilineValuesOption ( String option , Collection < String > values ) throws IOException { for ( String value : values ) { writeValueOption ( option , value ) ; } return this ; } public JavadocOptionFileWriterContext writePathOption ( String option , Collection < File > files , String joinValuesBy ) throws IOException { StringBuilder builder = new StringBuilder ( ) ; Iterator < File > filesIt = files . iterator ( ) ; while ( filesIt . hasNext ( ) ) { builder . append ( filesIt . next ( ) . getAbsolutePath ( ) ) ; if ( filesIt . hasNext ( ) ) { builder . append ( joinValuesBy ) ; } } writeValueOption ( option , builder . toString ( ) ) ; return this ; } } 
