package org . elasticsearch . cluster . routing ; public enum Preference { SHARDS ( <str> ) , PREFER_NODE ( <str> ) , LOCAL ( <str> ) , PRIMARY ( <str> ) , REPLICA ( <str> ) , PRIMARY_FIRST ( <str> ) , REPLICA_FIRST ( <str> ) , ONLY_LOCAL ( <str> ) , ONLY_NODE ( <str> ) , ONLY_NODES ( <str> ) ; private final String type ; Preference ( String type ) { this . type = type ; } public String type ( ) { return type ; } public static Preference parse ( String preference ) { String preferenceType ; int colonIndex = preference . indexOf ( <str> ) ; if ( colonIndex = = - <int> ) { preferenceType = preference ; } else { preferenceType = preference . substring ( <int> , colonIndex ) ; } switch ( preferenceType ) { case <str> : return SHARDS ; case <str> : return PREFER_NODE ; case <str> : return ONLY_NODE ; case <str> : return LOCAL ; case <str> : return PRIMARY ; case <str> : return REPLICA ; case <str> : case <str> : return PRIMARY_FIRST ; case <str> : case <str> : return REPLICA_FIRST ; case <str> : case <str> : return ONLY_LOCAL ; case <str> : return ONLY_NODES ; default : throw new IllegalArgumentException ( <str> + preferenceType + <str> ) ; } } } 
