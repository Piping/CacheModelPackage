package org . gradle . profile ; import org . gradle . util . CollectionUtils ; import java . util . HashMap ; import java . util . List ; public class ProjectProfile extends Operation { private HashMap < String , TaskExecution > tasks = new HashMap < String , TaskExecution > ( ) ; private final ContinuousOperation configurationOperation ; private String projectPath ; public ProjectProfile ( String projectPath ) { this . projectPath = projectPath ; this . configurationOperation = new ContinuousOperation ( projectPath ) ; } public TaskExecution getTaskProfile ( String taskPath ) { TaskExecution result = tasks . get ( taskPath ) ; if ( result = = null ) { result = new TaskExecution ( taskPath ) ; tasks . put ( taskPath , result ) ; } return result ; } public CompositeOperation < TaskExecution > getTasks ( ) { List < TaskExecution > taskExecutions = CollectionUtils . sort ( tasks . values ( ) , Operation . slowestFirst ( ) ) ; return new CompositeOperation < TaskExecution > ( taskExecutions ) ; } public String getPath ( ) { return projectPath ; } public ContinuousOperation getConfigurationOperation ( ) { return configurationOperation ; } public String toString ( ) { return projectPath ; } public String getDescription ( ) { return projectPath ; } long getElapsedTime ( ) { return getTasks ( ) . getElapsedTime ( ) ; } } 
