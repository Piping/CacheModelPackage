package org . elasticsearch . index . fielddata . plain ; import org . apache . lucene . index . DocValues ; import org . apache . lucene . index . SortedNumericDocValues ; import org . apache . lucene . util . Accountable ; import org . elasticsearch . index . fielddata . AtomicNumericFieldData ; import org . elasticsearch . index . fielddata . FieldData ; import org . elasticsearch . index . fielddata . ScriptDocValues ; import org . elasticsearch . index . fielddata . SortedBinaryDocValues ; import org . elasticsearch . index . fielddata . SortedNumericDoubleValues ; import java . util . Collection ; import java . util . Collections ; abstract class AtomicLongFieldData implements AtomicNumericFieldData { private final long ramBytesUsed ; AtomicLongFieldData ( long ramBytesUsed ) { this . ramBytesUsed = ramBytesUsed ; } @Override public long ramBytesUsed ( ) { return ramBytesUsed ; } @Override public final ScriptDocValues getScriptValues ( ) { return new ScriptDocValues . Longs ( getLongValues ( ) ) ; } @Override public final SortedBinaryDocValues getBytesValues ( ) { return FieldData . toString ( getLongValues ( ) ) ; } @Override public final SortedNumericDoubleValues getDoubleValues ( ) { return FieldData . castToDouble ( getLongValues ( ) ) ; } public static AtomicNumericFieldData empty ( final int maxDoc ) { return new AtomicLongFieldData ( <int> ) { @Override public SortedNumericDocValues getLongValues ( ) { return DocValues . emptySortedNumeric ( maxDoc ) ; } @Override public Collection < Accountable > getChildResources ( ) { return Collections . emptyList ( ) ; } } ; } @Override public void close ( ) { } } 
