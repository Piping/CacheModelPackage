package org . gradle . internal . serialize ; import java . util . Collection ; public class AbstractCollectionSerializer < T > { protected final Serializer < T > entrySerializer ; public AbstractCollectionSerializer ( Serializer < T > entrySerializer ) { this . entrySerializer = entrySerializer ; } protected void readValues ( Decoder decoder , Collection < T > values ) throws Exception { int size = decoder . readInt ( ) ; for ( int i = <int> ; i < size ; i + + ) { values . add ( entrySerializer . read ( decoder ) ) ; } } protected void writeValues ( Encoder encoder , Collection < T > value ) throws Exception { encoder . writeInt ( value . size ( ) ) ; for ( T t : value ) { entrySerializer . write ( encoder , t ) ; } } } 
