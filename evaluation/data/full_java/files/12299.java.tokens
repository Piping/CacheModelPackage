package org . gradle . profile ; import com . google . common . collect . Lists ; import java . util . ArrayList ; import java . util . Iterator ; import java . util . List ; public class CompositeOperation < T extends Operation > extends Operation implements Iterable < T > { private List < T > children = new ArrayList < T > ( ) ; public CompositeOperation ( Iterable < ? extends T > children ) { this . children = Lists . newArrayList ( children ) ; } public List < T > getOperations ( ) { return children ; } public Iterator < T > iterator ( ) { return children . iterator ( ) ; } @Override long getElapsedTime ( ) { long sum = <int> ; for ( T child : children ) { sum + = child . getElapsedTime ( ) ; } return sum ; } public String getDescription ( ) { return <str> ; } } 
