package org . gradle . language . scala . tasks ; import org . gradle . api . Incubating ; import org . gradle . api . internal . tasks . scala . ScalaJavaJointCompileSpec ; import org . gradle . language . base . internal . compile . Compiler ; import org . gradle . language . base . internal . compile . CompilerUtil ; import org . gradle . language . scala . internal . toolchain . ScalaToolChainInternal ; import org . gradle . language . scala . ScalaPlatform ; import javax . inject . Inject ; @Incubating public class PlatformScalaCompile extends AbstractScalaCompile { private ScalaPlatform platform ; @Inject public PlatformScalaCompile ( ) { super ( new BaseScalaCompileOptions ( ) ) ; } public ScalaPlatform getPlatform ( ) { return platform ; } public void setPlatform ( ScalaPlatform platform ) { this . platform = platform ; } @Inject protected ScalaToolChainInternal getToolChain ( ) { throw new UnsupportedOperationException ( ) ; } @Override protected Compiler < ScalaJavaJointCompileSpec > getCompiler ( ScalaJavaJointCompileSpec spec ) { return CompilerUtil . castCompiler ( getToolChain ( ) . select ( getPlatform ( ) ) . newCompiler ( spec . getClass ( ) ) ) ; } } 
