package org . eclipse . debug . tests . launching ; import org . eclipse . core . runtime . CoreException ; import org . eclipse . core . runtime . NullProgressMonitor ; import org . eclipse . debug . core . ILaunchConfiguration ; import org . eclipse . debug . core . ILaunchConfigurationWorkingCopy ; import org . eclipse . debug . core . ILaunchManager ; import org . eclipse . debug . internal . ui . DebugUIPlugin ; import org . eclipse . debug . internal . ui . launchConfigurations . LaunchHistory ; import org . eclipse . debug . ui . IDebugUIConstants ; public class LaunchHistoryTests extends AbstractLaunchTest { public LaunchHistoryTests ( String name ) { super ( name ) ; } private LaunchHistory getRunLaunchHistory ( ) { return getLaunchConfigurationManager ( ) . getLaunchHistory ( IDebugUIConstants . ID_RUN_LAUNCH_GROUP ) ; } private int getMaxHistorySize ( ) { return DebugUIPlugin . getDefault ( ) . getPreferenceStore ( ) . getInt ( IDebugUIConstants . PREF_MAX_HISTORY_SIZE ) ; } private void setMaxHistorySize ( int value ) { DebugUIPlugin . getDefault ( ) . getPreferenceStore ( ) . setValue ( IDebugUIConstants . PREF_MAX_HISTORY_SIZE , value ) ; } private LaunchHistory getDebugLaunchHistory ( ) { return getLaunchConfigurationManager ( ) . getLaunchHistory ( IDebugUIConstants . ID_DEBUG_LAUNCH_GROUP ) ; } public void testHistoryAddition ( ) throws CoreException { LaunchHistory runhistory = getRunLaunchHistory ( ) ; assertNotNull ( <str> , runhistory ) ; ILaunchConfiguration config = getLaunchConfiguration ( <str> ) ; assertNotNull ( <str> , config ) ; config . launch ( ILaunchManager . RUN_MODE , new NullProgressMonitor ( ) ) ; assertTrue ( <str> , runhistory . contains ( config ) ) ; assertEquals ( <str> , runhistory . getRecentLaunch ( ) , config ) ; } public void testHistoriesInSync ( ) throws CoreException { LaunchHistory runhistory = getRunLaunchHistory ( ) ; assertNotNull ( <str> , runhistory ) ; LaunchHistory debughistory = getDebugLaunchHistory ( ) ; assertNotNull ( <str> , debughistory ) ; ILaunchConfiguration config = getLaunchConfiguration ( <str> ) ; assertNotNull ( <str> , config ) ; config . launch ( ILaunchManager . RUN_MODE , new NullProgressMonitor ( ) ) ; assertTrue ( <str> , runhistory . contains ( config ) ) ; assertEquals ( <str> , runhistory . getRecentLaunch ( ) , config ) ; assertTrue ( <str> , debughistory . contains ( config ) ) ; assertEquals ( <str> , debughistory . getRecentLaunch ( ) , config ) ; } public void testHistoryReodering ( ) throws CoreException { LaunchHistory runhistory = getRunLaunchHistory ( ) ; assertNotNull ( <str> , runhistory ) ; ILaunchConfiguration config = getLaunchConfiguration ( <str> ) ; assertNotNull ( <str> , config ) ; config . launch ( ILaunchManager . RUN_MODE , new NullProgressMonitor ( ) ) ; assertTrue ( <str> , runhistory . contains ( config ) ) ; assertEquals ( <str> , runhistory . getRecentLaunch ( ) , config ) ; config = getLaunchConfiguration ( <str> ) ; assertNotNull ( <str> , config ) ; config . launch ( ILaunchManager . RUN_MODE , new NullProgressMonitor ( ) ) ; assertTrue ( <str> , runhistory . contains ( config ) ) ; assertEquals ( <str> , runhistory . getRecentLaunch ( ) , config ) ; config = getLaunchConfiguration ( <str> ) ; assertNotNull ( <str> , config ) ; config . launch ( ILaunchManager . RUN_MODE , new NullProgressMonitor ( ) ) ; assertTrue ( <str> , runhistory . contains ( config ) ) ; assertEquals ( <str> , runhistory . getRecentLaunch ( ) , config ) ; } public void testRenameConfigHistoryUpdate ( ) throws CoreException { LaunchHistory runhistory = getRunLaunchHistory ( ) ; assertNotNull ( <str> , runhistory ) ; ILaunchConfiguration config = getLaunchConfiguration ( <str> ) ; assertNotNull ( <str> , config ) ; config . launch ( ILaunchManager . RUN_MODE , new NullProgressMonitor ( ) ) ; assertTrue ( <str> , runhistory . contains ( config ) ) ; assertEquals ( <str> , runhistory . getRecentLaunch ( ) , config ) ; ILaunchConfigurationWorkingCopy copy = config . getWorkingCopy ( ) ; copy . rename ( <str> ) ; config = copy . doSave ( ) ; assertEquals ( <str> , runhistory . getRecentLaunch ( ) , config ) ; copy = config . getWorkingCopy ( ) ; copy . rename ( <str> ) ; config = copy . doSave ( ) ; } public void testDeleteLaunchConfigurationHistoryUpdate ( ) throws CoreException { LaunchHistory runhistory = getRunLaunchHistory ( ) ; assertNotNull ( <str> , runhistory ) ; ILaunchConfiguration config = getLaunchConfiguration ( <str> ) ; assertNotNull ( <str> , config ) ; config . launch ( ILaunchManager . RUN_MODE , new NullProgressMonitor ( ) ) ; assertTrue ( <str> , runhistory . contains ( config ) ) ; assertEquals ( <str> , runhistory . getRecentLaunch ( ) , config ) ; config = getLaunchConfiguration ( <str> ) ; assertNotNull ( <str> , config ) ; config . launch ( ILaunchManager . RUN_MODE , new NullProgressMonitor ( ) ) ; assertTrue ( <str> , runhistory . contains ( config ) ) ; assertEquals ( <str> , runhistory . getRecentLaunch ( ) , config ) ; config . delete ( ) ; config = getLaunchConfiguration ( <str> ) ; assertEquals ( <str> , runhistory . getRecentLaunch ( ) , config ) ; } public void testLaunchHistorySize ( ) throws CoreException { LaunchHistory runhistory = getRunLaunchHistory ( ) ; assertNotNull ( <str> , runhistory ) ; int oldsize = getMaxHistorySize ( ) ; setMaxHistorySize ( <int> ) ; assertTrue ( <str> , getMaxHistorySize ( ) = = <int> ) ; ILaunchConfiguration config = getLaunchConfiguration ( <str> ) ; assertNotNull ( <str> , config ) ; config . launch ( ILaunchManager . RUN_MODE , new NullProgressMonitor ( ) ) ; config = getLaunchConfiguration ( <str> ) ; assertNotNull ( <str> , config ) ; config . launch ( ILaunchManager . RUN_MODE , new NullProgressMonitor ( ) ) ; assertTrue ( <str> , runhistory . getHistory ( ) . length = = getMaxHistorySize ( ) ) ; assertTrue ( <str> , runhistory . getCompleteLaunchHistory ( ) . length > = runhistory . getHistory ( ) . length ) ; setMaxHistorySize ( oldsize ) ; } } 
