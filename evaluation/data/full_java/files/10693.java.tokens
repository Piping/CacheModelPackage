package org . gradle . build . docs . dsl . docbook ; import org . gradle . build . docs . dsl . docbook . model . ClassDoc ; public class ClassDocBuilder { private final ClassDocCommentBuilder commentBuilder ; private final ClassDocPropertiesBuilder propertiesBuilder ; private final ClassDocMethodsBuilder methodsBuilder ; private final ClassDocExtensionsBuilder extensionsBuilder ; private final ClassDocSuperTypeBuilder superTypeBuilder ; private final GenerationListener listener = new DefaultGenerationListener ( ) ; public ClassDocBuilder ( DslDocModel model , JavadocConverter javadocConverter ) { commentBuilder = new ClassDocCommentBuilder ( javadocConverter , listener ) ; propertiesBuilder = new ClassDocPropertiesBuilder ( javadocConverter , listener ) ; methodsBuilder = new ClassDocMethodsBuilder ( javadocConverter , listener ) ; extensionsBuilder = new ClassDocExtensionsBuilder ( model , listener ) ; superTypeBuilder = new ClassDocSuperTypeBuilder ( model , listener ) ; } void build ( ClassDoc classDoc ) { listener . start ( String . format ( <str> , classDoc . getName ( ) ) ) ; try { superTypeBuilder . build ( classDoc ) ; commentBuilder . build ( classDoc ) ; propertiesBuilder . build ( classDoc ) ; methodsBuilder . build ( classDoc ) ; extensionsBuilder . build ( classDoc ) ; classDoc . mergeContent ( ) ; } finally { listener . finish ( ) ; } } } 
