package org . gradle . api . internal . artifacts ; import org . apache . ivy . core . module . id . ModuleRevisionId ; import org . gradle . api . artifacts . ModuleVersionIdentifier ; import org . gradle . api . artifacts . ModuleVersionSelector ; public class DefaultModuleVersionSelector implements ModuleVersionSelector { private String group ; private String name ; private String version ; public DefaultModuleVersionSelector ( String group , String name , String version ) { this . group = group ; this . name = name ; this . version = version ; } public String getGroup ( ) { return group ; } public DefaultModuleVersionSelector setGroup ( String group ) { this . group = group ; return this ; } public String getName ( ) { return name ; } public DefaultModuleVersionSelector setName ( String name ) { this . name = name ; return this ; } public String getVersion ( ) { return version ; } public boolean matchesStrictly ( ModuleVersionIdentifier identifier ) { return new ModuleVersionSelectorStrictSpec ( this ) . isSatisfiedBy ( identifier ) ; } public DefaultModuleVersionSelector setVersion ( String version ) { this . version = version ; return this ; } @Override public String toString ( ) { return String . format ( <str> , group , name , version ) ; } @Override public boolean equals ( Object o ) { if ( this = = o ) { return true ; } if ( ! ( o instanceof DefaultModuleVersionSelector ) ) { return false ; } DefaultModuleVersionSelector that = ( DefaultModuleVersionSelector ) o ; if ( group ! = null ? ! group . equals ( that . group ) : that . group ! = null ) { return false ; } if ( name ! = null ? ! name . equals ( that . name ) : that . name ! = null ) { return false ; } if ( version ! = null ? ! version . equals ( that . version ) : that . version ! = null ) { return false ; } return true ; } @Override public int hashCode ( ) { int result = group ! = null ? group . hashCode ( ) : <int> ; result = <int> * result + ( name ! = null ? name . hashCode ( ) : <int> ) ; result = <int> * result + ( version ! = null ? version . hashCode ( ) : <int> ) ; return result ; } public static ModuleVersionSelector newSelector ( String group , String name , String version ) { return new DefaultModuleVersionSelector ( group , name , version ) ; } public static ModuleVersionSelector newSelector ( ModuleRevisionId module ) { return newSelector ( module . getOrganisation ( ) , module . getName ( ) , module . getRevision ( ) ) ; } } 
