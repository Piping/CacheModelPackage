package org . elasticsearch . index . analysis ; import org . apache . lucene . analysis . TokenStream ; import org . apache . lucene . analysis . hunspell . Dictionary ; import org . apache . lucene . analysis . hunspell . HunspellStemFilter ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . index . IndexSettings ; import org . elasticsearch . indices . analysis . HunspellService ; import java . util . Locale ; public class HunspellTokenFilterFactory extends AbstractTokenFilterFactory { private final Dictionary dictionary ; private final boolean dedup ; private final boolean longestOnly ; public HunspellTokenFilterFactory ( IndexSettings indexSettings , String name , Settings settings , HunspellService hunspellService ) { super ( indexSettings , name , settings ) ; String locale = settings . get ( <str> , settings . get ( <str> , settings . get ( <str> , null ) ) ) ; if ( locale = = null ) { throw new IllegalArgumentException ( <str> ) ; } dictionary = hunspellService . getDictionary ( locale ) ; if ( dictionary = = null ) { throw new IllegalArgumentException ( String . format ( Locale . ROOT , <str> , locale ) ) ; } dedup = settings . getAsBoolean ( <str> , true ) ; longestOnly = settings . getAsBoolean ( <str> , false ) ; } @Override public TokenStream create ( TokenStream tokenStream ) { return new HunspellStemFilter ( tokenStream , dictionary , dedup , longestOnly ) ; } public boolean dedup ( ) { return dedup ; } public boolean longestOnly ( ) { return longestOnly ; } } 
