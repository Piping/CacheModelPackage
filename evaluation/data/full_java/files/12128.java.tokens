package org . gradle . internal . service . scopes ; import org . gradle . api . internal . TaskInternal ; import org . gradle . api . internal . TaskOutputsInternal ; import org . gradle . api . internal . project . ProjectInternal ; import org . gradle . api . internal . tasks . DefaultTaskInputs ; import org . gradle . api . internal . tasks . DefaultTaskOutputs ; import org . gradle . api . internal . tasks . TaskMutator ; import org . gradle . api . tasks . TaskInputs ; import org . gradle . internal . service . DefaultServiceRegistry ; import org . gradle . internal . service . ServiceRegistry ; import org . gradle . logging . LoggingManagerInternal ; public class TaskScopeServices extends DefaultServiceRegistry { private final ProjectInternal project ; private final TaskInternal taskInternal ; public TaskScopeServices ( ServiceRegistry parent , final ProjectInternal project , TaskInternal taskInternal ) { super ( parent ) ; this . project = project ; this . taskInternal = taskInternal ; } protected TaskInputs createTaskInputs ( ) { return new DefaultTaskInputs ( project . getFileResolver ( ) , taskInternal , get ( TaskMutator . class ) ) ; } protected TaskOutputsInternal createTaskOutputs ( ) { return new DefaultTaskOutputs ( project . getFileResolver ( ) , taskInternal , get ( TaskMutator . class ) ) ; } protected TaskMutator createTaskStatusNagger ( ) { return new TaskMutator ( taskInternal ) ; } protected LoggingManagerInternal createLoggingManager ( ) { return getFactory ( LoggingManagerInternal . class ) . create ( ) ; } } 
