package org . gradle . api . java . archives . internal ; import org . gradle . api . java . archives . Attributes ; import org . gradle . api . java . archives . ManifestException ; import java . util . Collection ; import java . util . LinkedHashMap ; import java . util . Map ; import java . util . Set ; public class DefaultAttributes implements Attributes { protected Map < String , Object > attributes = new LinkedHashMap < String , Object > ( ) ; public int size ( ) { return attributes . size ( ) ; } public boolean isEmpty ( ) { return attributes . isEmpty ( ) ; } public boolean containsKey ( Object key ) { return attributes . containsKey ( key ) ; } public boolean containsValue ( Object value ) { return attributes . containsValue ( value ) ; } public Object get ( Object key ) { return attributes . get ( key ) ; } public Object put ( String key , Object value ) { if ( key = = null ) { throw new ManifestException ( <str> ) ; } if ( value = = null ) { throw new ManifestException ( String . format ( <str> , key ) ) ; } try { new java . util . jar . Attributes . Name ( key ) ; } catch ( IllegalArgumentException e ) { throw new ManifestException ( String . format ( <str> , key ) ) ; } return attributes . put ( key , value ) ; } public Object remove ( Object key ) { return attributes . remove ( key ) ; } public void putAll ( Map < ? extends String , ? extends Object > m ) { for ( Entry < ? extends String , ? extends Object > entry : m . entrySet ( ) ) { put ( entry . getKey ( ) , entry . getValue ( ) ) ; } } public void clear ( ) { attributes . clear ( ) ; } public Set < String > keySet ( ) { return attributes . keySet ( ) ; } public Collection < Object > values ( ) { return attributes . values ( ) ; } public Set < Entry < String , Object > > entrySet ( ) { return attributes . entrySet ( ) ; } public boolean equals ( Object o ) { return attributes . equals ( o ) ; } public int hashCode ( ) { return attributes . hashCode ( ) ; } } 
