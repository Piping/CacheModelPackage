package org . gradle . model . dsl . internal . transform ; import net . jcip . annotations . ThreadSafe ; import org . codehaus . groovy . ast . ClassHelper ; import org . codehaus . groovy . ast . ClassNode ; import org . gradle . api . Action ; @ThreadSafe public class ClosureCreationInterceptingVerifier implements Action < ClassNode > { public static final Action < ClassNode > INSTANCE = new ClosureCreationInterceptingVerifier ( ) ; public void execute ( ClassNode node ) { if ( node . implementsInterface ( ClassHelper . GENERATED_CLOSURE_Type ) ) { RulesVisitor . visitGeneratedClosure ( node ) ; RuleVisitor . visitGeneratedClosure ( node ) ; } } } 
