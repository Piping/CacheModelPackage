package org . gradle . api . internal . file . copy ; import org . gradle . api . internal . file . CopyActionProcessingStreamAction ; import org . gradle . api . internal . file . FileResolver ; import org . gradle . api . internal . tasks . SimpleWorkResult ; import org . gradle . api . tasks . WorkResult ; import java . io . File ; public class FileCopyAction implements CopyAction { private final FileResolver fileResolver ; public FileCopyAction ( FileResolver fileResolver ) { this . fileResolver = fileResolver ; } public WorkResult execute ( CopyActionProcessingStream stream ) { FileCopyDetailsInternalAction action = new FileCopyDetailsInternalAction ( ) ; stream . process ( action ) ; return new SimpleWorkResult ( action . didWork ) ; } private class FileCopyDetailsInternalAction implements CopyActionProcessingStreamAction { private boolean didWork ; public void processFile ( FileCopyDetailsInternal details ) { File target = fileResolver . resolve ( details . getRelativePath ( ) . getPathString ( ) ) ; boolean copied = details . copyTo ( target ) ; if ( copied ) { didWork = true ; } } } } 
