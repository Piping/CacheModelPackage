package io . netty . handler . codec . http ; import io . netty . buffer . ByteBuf ; import io . netty . channel . ChannelPipeline ; import io . netty . handler . codec . TooLongFrameException ; public class HttpResponseDecoder extends HttpObjectDecoder { private static final HttpResponseStatus UNKNOWN_STATUS = new HttpResponseStatus ( <int> , <str> ) ; public HttpResponseDecoder ( ) { } public HttpResponseDecoder ( int maxInitialLineLength , int maxHeaderSize , int maxChunkSize ) { super ( maxInitialLineLength , maxHeaderSize , maxChunkSize , true ) ; } public HttpResponseDecoder ( int maxInitialLineLength , int maxHeaderSize , int maxChunkSize , boolean validateHeaders ) { super ( maxInitialLineLength , maxHeaderSize , maxChunkSize , true , validateHeaders ) ; } @Override protected HttpMessage createMessage ( String [ ] initialLine ) { return new DefaultHttpResponse ( HttpVersion . valueOf ( initialLine [ <int> ] ) , new HttpResponseStatus ( Integer . parseInt ( initialLine [ <int> ] ) , initialLine [ <int> ] ) , validateHeaders ) ; } @Override protected HttpMessage createInvalidMessage ( ) { return new DefaultFullHttpResponse ( HttpVersion . HTTP_1_0 , UNKNOWN_STATUS , validateHeaders ) ; } @Override protected boolean isDecodingRequest ( ) { return false ; } } 
