package io . netty . handler . ssl ; import org . apache . tomcat . jni . SSL ; import org . apache . tomcat . jni . SSLContext ; public final class OpenSslServerSessionContext extends OpenSslSessionContext { OpenSslServerSessionContext ( long context ) { super ( context ) ; } @Override public void setSessionTimeout ( int seconds ) { if ( seconds < <int> ) { throw new IllegalArgumentException ( ) ; } SSLContext . setSessionCacheTimeout ( context , seconds ) ; } @Override public int getSessionTimeout ( ) { return ( int ) SSLContext . getSessionCacheTimeout ( context ) ; } @Override public void setSessionCacheSize ( int size ) { if ( size < <int> ) { throw new IllegalArgumentException ( ) ; } SSLContext . setSessionCacheSize ( context , size ) ; } @Override public int getSessionCacheSize ( ) { return ( int ) SSLContext . getSessionCacheSize ( context ) ; } @Override public void setSessionCacheEnabled ( boolean enabled ) { long mode = enabled ? SSL . SSL_SESS_CACHE_SERVER : SSL . SSL_SESS_CACHE_OFF ; SSLContext . setSessionCacheMode ( context , mode ) ; } @Override public boolean isSessionCacheEnabled ( ) { return SSLContext . getSessionCacheMode ( context ) = = SSL . SSL_SESS_CACHE_SERVER ; } public boolean setSessionIdContext ( byte [ ] sidCtx ) { return SSLContext . setSessionIdContext ( context , sidCtx ) ; } } 
