package org . elasticsearch . indices . exists . indices ; import org . elasticsearch . action . support . IndicesOptions ; import org . elasticsearch . cluster . block . ClusterBlockException ; import org . elasticsearch . cluster . metadata . IndexMetaData ; import org . elasticsearch . test . ESIntegTestCase ; import java . util . Arrays ; import static org . elasticsearch . cluster . metadata . IndexMetaData . SETTING_BLOCKS_READ ; import static org . elasticsearch . cluster . metadata . IndexMetaData . SETTING_BLOCKS_WRITE ; import static org . elasticsearch . cluster . metadata . IndexMetaData . SETTING_READ_ONLY ; import static org . hamcrest . Matchers . equalTo ; public class IndicesExistsIT extends ESIntegTestCase { public void testIndicesExists ( ) throws Exception { assertThat ( client ( ) . admin ( ) . indices ( ) . prepareExists ( <str> ) . get ( ) . isExists ( ) , equalTo ( false ) ) ; assertThat ( client ( ) . admin ( ) . indices ( ) . prepareExists ( <str> ) . setIndicesOptions ( IndicesOptions . lenientExpandOpen ( ) ) . get ( ) . isExists ( ) , equalTo ( true ) ) ; assertThat ( client ( ) . admin ( ) . indices ( ) . prepareExists ( <str> ) . get ( ) . isExists ( ) , equalTo ( false ) ) ; assertThat ( client ( ) . admin ( ) . indices ( ) . prepareExists ( <str> ) . setIndicesOptions ( IndicesOptions . fromOptions ( false , true , true , false ) ) . get ( ) . isExists ( ) , equalTo ( true ) ) ; assertThat ( client ( ) . admin ( ) . indices ( ) . prepareExists ( <str> ) . get ( ) . isExists ( ) , equalTo ( false ) ) ; createIndex ( <str> , <str> , <str> , <str> ) ; ensureYellow ( ) ; assertThat ( client ( ) . admin ( ) . indices ( ) . prepareExists ( <str> ) . get ( ) . isExists ( ) , equalTo ( true ) ) ; assertThat ( client ( ) . admin ( ) . indices ( ) . prepareExists ( <str> ) . get ( ) . isExists ( ) , equalTo ( true ) ) ; assertThat ( client ( ) . admin ( ) . indices ( ) . prepareExists ( <str> ) . get ( ) . isExists ( ) , equalTo ( true ) ) ; assertThat ( client ( ) . admin ( ) . indices ( ) . prepareExists ( <str> ) . get ( ) . isExists ( ) , equalTo ( true ) ) ; assertThat ( client ( ) . admin ( ) . indices ( ) . prepareExists ( <str> ) . get ( ) . isExists ( ) , equalTo ( true ) ) ; } public void testIndicesExistsWithBlocks ( ) { createIndex ( <str> ) ; ensureYellow ( ) ; for ( String blockSetting : Arrays . asList ( SETTING_BLOCKS_READ , SETTING_BLOCKS_WRITE , SETTING_READ_ONLY ) ) { try { enableIndexBlock ( <str> , blockSetting ) ; assertThat ( client ( ) . admin ( ) . indices ( ) . prepareExists ( <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( true ) ) ; } finally { disableIndexBlock ( <str> , blockSetting ) ; } } try { enableIndexBlock ( <str> , IndexMetaData . SETTING_BLOCKS_METADATA ) ; assertThat ( client ( ) . admin ( ) . indices ( ) . prepareExists ( <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( true ) ) ; fail ( <str> + IndexMetaData . SETTING_BLOCKS_METADATA + <str> ) ; } catch ( ClusterBlockException e ) { } finally { disableIndexBlock ( <str> , IndexMetaData . SETTING_BLOCKS_METADATA ) ; } } } 
