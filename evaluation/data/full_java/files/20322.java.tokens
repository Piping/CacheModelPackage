package io . netty . channel . socket . oio ; import io . netty . buffer . ByteBufAllocator ; import io . netty . channel . ChannelConfig ; import io . netty . channel . ChannelOption ; import io . netty . channel . MessageSizeEstimator ; import io . netty . channel . RecvByteBufAllocator ; import io . netty . channel . socket . SocketChannelConfig ; public interface OioSocketChannelConfig extends SocketChannelConfig { OioSocketChannelConfig setSoTimeout ( int timeout ) ; int getSoTimeout ( ) ; @Override OioSocketChannelConfig setTcpNoDelay ( boolean tcpNoDelay ) ; @Override OioSocketChannelConfig setSoLinger ( int soLinger ) ; @Override OioSocketChannelConfig setSendBufferSize ( int sendBufferSize ) ; @Override OioSocketChannelConfig setReceiveBufferSize ( int receiveBufferSize ) ; @Override OioSocketChannelConfig setKeepAlive ( boolean keepAlive ) ; @Override OioSocketChannelConfig setTrafficClass ( int trafficClass ) ; @Override OioSocketChannelConfig setReuseAddress ( boolean reuseAddress ) ; @Override OioSocketChannelConfig setPerformancePreferences ( int connectionTime , int latency , int bandwidth ) ; @Override OioSocketChannelConfig setAllowHalfClosure ( boolean allowHalfClosure ) ; @Override OioSocketChannelConfig setConnectTimeoutMillis ( int connectTimeoutMillis ) ; @Override @Deprecated OioSocketChannelConfig setMaxMessagesPerRead ( int maxMessagesPerRead ) ; @Override OioSocketChannelConfig setWriteSpinCount ( int writeSpinCount ) ; @Override OioSocketChannelConfig setAllocator ( ByteBufAllocator allocator ) ; @Override OioSocketChannelConfig setRecvByteBufAllocator ( RecvByteBufAllocator allocator ) ; @Override OioSocketChannelConfig setAutoRead ( boolean autoRead ) ; @Override OioSocketChannelConfig setAutoClose ( boolean autoClose ) ; @Override OioSocketChannelConfig setWriteBufferHighWaterMark ( int writeBufferHighWaterMark ) ; @Override OioSocketChannelConfig setWriteBufferLowWaterMark ( int writeBufferLowWaterMark ) ; @Override OioSocketChannelConfig setMessageSizeEstimator ( MessageSizeEstimator estimator ) ; } 
