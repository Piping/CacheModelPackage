package org . gradle . internal . component . model ; import com . google . common . collect . Sets ; import org . gradle . api . artifacts . ClientModule ; import org . gradle . api . artifacts . ModuleDependency ; import org . gradle . internal . component . local . model . DslOriginDependencyMetaData ; import java . util . Collections ; import java . util . Set ; public class DefaultComponentOverrideMetadata implements ComponentOverrideMetadata { private final boolean changing ; private final Set < IvyArtifactName > artifacts ; private final ClientModule clientModule ; public static ComponentOverrideMetadata forDependency ( DependencyMetaData dependencyMetaData ) { return new DefaultComponentOverrideMetadata ( dependencyMetaData . isChanging ( ) , dependencyMetaData . getArtifacts ( ) , extractClientModule ( dependencyMetaData ) ) ; } public DefaultComponentOverrideMetadata ( ) { this ( false , Collections . < IvyArtifactName > emptySet ( ) , null ) ; } private DefaultComponentOverrideMetadata ( boolean changing , Set < IvyArtifactName > artifacts , ClientModule clientModule ) { this . changing = changing ; this . artifacts = Sets . newHashSet ( artifacts ) ; this . clientModule = clientModule ; } private static ClientModule extractClientModule ( DependencyMetaData dependencyMetaData ) { if ( dependencyMetaData instanceof DslOriginDependencyMetaData ) { ModuleDependency source = ( ( DslOriginDependencyMetaData ) dependencyMetaData ) . getSource ( ) ; if ( source instanceof ClientModule ) { return ( ClientModule ) source ; } } return null ; } @Override public ComponentOverrideMetadata withChanging ( ) { return new DefaultComponentOverrideMetadata ( true , artifacts , clientModule ) ; } @Override public Set < IvyArtifactName > getArtifacts ( ) { return artifacts ; } @Override public boolean isChanging ( ) { return changing ; } @Override public ClientModule getClientModule ( ) { return clientModule ; } } 
