package org . elasticsearch . index . analysis ; import org . elasticsearch . Version ; import org . elasticsearch . cluster . metadata . IndexMetaData ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . indices . analysis . PreBuiltTokenizers ; import org . elasticsearch . test . ESTestCase ; import java . io . IOException ; import static org . hamcrest . CoreMatchers . is ; import static org . hamcrest . CoreMatchers . not ; public class PreBuiltTokenizerFactoryFactoryTests extends ESTestCase { public void testThatDifferentVersionsCanBeLoaded ( ) throws IOException { PreBuiltTokenizerFactoryFactory factory = new PreBuiltTokenizerFactoryFactory ( PreBuiltTokenizers . STANDARD . getTokenizerFactory ( Version . CURRENT ) ) ; TokenizerFactory former090TokenizerFactory = factory . get ( null , null , <str> , Settings . settingsBuilder ( ) . put ( IndexMetaData . SETTING_VERSION_CREATED , Version . V_0_90_1 ) . build ( ) ) ; TokenizerFactory former090TokenizerFactoryCopy = factory . get ( null , null , <str> , Settings . settingsBuilder ( ) . put ( IndexMetaData . SETTING_VERSION_CREATED , Version . V_0_90_2 ) . build ( ) ) ; TokenizerFactory currentTokenizerFactory = factory . get ( null , null , <str> , Settings . settingsBuilder ( ) . put ( IndexMetaData . SETTING_VERSION_CREATED , Version . CURRENT ) . build ( ) ) ; assertThat ( currentTokenizerFactory , is ( not ( former090TokenizerFactory ) ) ) ; assertThat ( currentTokenizerFactory , is ( not ( former090TokenizerFactoryCopy ) ) ) ; assertThat ( former090TokenizerFactory , is ( former090TokenizerFactoryCopy ) ) ; } } 
