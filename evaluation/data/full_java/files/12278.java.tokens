package org . gradle . process . internal ; import org . gradle . api . Action ; import org . gradle . api . internal . file . FileResolver ; import org . gradle . api . logging . LogLevel ; import org . gradle . util . GUtil ; import java . io . File ; import java . util . Arrays ; import java . util . HashSet ; import java . util . LinkedHashSet ; import java . util . Set ; public abstract class WorkerProcessBuilder { private final JavaExecHandleBuilder javaCommand ; private final Set < String > packages = new HashSet < String > ( ) ; private final Set < File > applicationClasspath = new LinkedHashSet < File > ( ) ; private Action < ? super WorkerProcessContext > action ; private LogLevel logLevel = LogLevel . LIFECYCLE ; private boolean loadApplicationInSystemClassLoader ; private String baseName = <str> ; private File gradleUserHomeDir ; public WorkerProcessBuilder ( FileResolver fileResolver ) { javaCommand = new JavaExecHandleBuilder ( fileResolver ) ; } public WorkerProcessBuilder setBaseName ( String baseName ) { this . baseName = baseName ; return this ; } public String getBaseName ( ) { return baseName ; } public WorkerProcessBuilder applicationClasspath ( Iterable < File > files ) { GUtil . addToCollection ( applicationClasspath , files ) ; return this ; } public Set < File > getApplicationClasspath ( ) { return applicationClasspath ; } public WorkerProcessBuilder sharedPackages ( String . . . packages ) { sharedPackages ( Arrays . asList ( packages ) ) ; return this ; } public WorkerProcessBuilder sharedPackages ( Iterable < String > packages ) { GUtil . addToCollection ( this . packages , packages ) ; return this ; } public Set < String > getSharedPackages ( ) { return packages ; } public WorkerProcessBuilder worker ( Action < ? super WorkerProcessContext > action ) { this . action = action ; return this ; } public Action < ? super WorkerProcessContext > getWorker ( ) { return action ; } public JavaExecHandleBuilder getJavaCommand ( ) { return javaCommand ; } public LogLevel getLogLevel ( ) { return logLevel ; } public void setLogLevel ( LogLevel logLevel ) { this . logLevel = logLevel ; } public boolean isLoadApplicationInSystemClassLoader ( ) { return loadApplicationInSystemClassLoader ; } public void setLoadApplicationInSystemClassLoader ( boolean loadApplicationInSystemClassLoader ) { this . loadApplicationInSystemClassLoader = loadApplicationInSystemClassLoader ; } public File getGradleUserHomeDir ( ) { return gradleUserHomeDir ; } public void setGradleUserHomeDir ( File gradleUserHomeDir ) { this . gradleUserHomeDir = gradleUserHomeDir ; } public abstract WorkerProcess build ( ) ; } 
