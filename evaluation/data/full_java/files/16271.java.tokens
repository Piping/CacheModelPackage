package org . gradle . openapi . wrappers . foundation ; import org . gradle . gradleplugin . foundation . GradlePluginLord ; import org . gradle . gradleplugin . foundation . request . ExecutionRequest ; import org . gradle . gradleplugin . foundation . request . RefreshTaskListRequest ; import org . gradle . gradleplugin . foundation . request . Request ; import org . gradle . openapi . external . foundation . RequestObserverVersion1 ; public class RequestObserverWrapper implements GradlePluginLord . RequestObserver { private RequestObserverVersion1 requestObserver ; public RequestObserverWrapper ( RequestObserverVersion1 requestObserver ) { this . requestObserver = requestObserver ; } public void executionRequestAdded ( ExecutionRequest request ) { requestObserver . executionRequestAdded ( new RequestWrapper ( request ) ) ; } public void refreshRequestAdded ( RefreshTaskListRequest request ) { requestObserver . refreshRequestAdded ( new RequestWrapper ( request ) ) ; } public void aboutToExecuteRequest ( Request request ) { requestObserver . aboutToExecuteRequest ( new RequestWrapper ( request ) ) ; } public void requestExecutionComplete ( Request request , int result , String output ) { requestObserver . requestExecutionComplete ( new RequestWrapper ( request ) , result , output ) ; } @Override public int hashCode ( ) { return requestObserver . hashCode ( ) ; } @Override public boolean equals ( Object otherObject ) { if ( ! ( otherObject instanceof RequestObserverWrapper ) ) { return false ; } return ( ( RequestObserverWrapper ) otherObject ) . requestObserver . equals ( requestObserver ) ; } } 
