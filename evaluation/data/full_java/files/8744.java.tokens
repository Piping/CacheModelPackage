package org . elasticsearch . discovery . ec2 ; import org . elasticsearch . action . admin . cluster . settings . ClusterUpdateSettingsResponse ; import org . elasticsearch . cloud . aws . AbstractAwsTestCase ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . plugin . discovery . ec2 . Ec2DiscoveryPlugin ; import org . elasticsearch . test . ESIntegTestCase . ClusterScope ; import org . elasticsearch . test . ESIntegTestCase . Scope ; import static org . elasticsearch . common . settings . Settings . settingsBuilder ; import static org . hamcrest . CoreMatchers . is ; @ClusterScope ( scope = Scope . TEST , numDataNodes = <int> , numClientNodes = <int> , transportClientRatio = <float> ) public class Ec2DiscoveryUpdateSettingsTests extends AbstractAwsTestCase { public void testMinimumMasterNodesStart ( ) { Settings nodeSettings = settingsBuilder ( ) . put ( <str> , Ec2DiscoveryPlugin . class . getName ( ) ) . put ( <str> , true ) . put ( <str> , <str> ) . build ( ) ; internalCluster ( ) . startNode ( nodeSettings ) ; ClusterUpdateSettingsResponse response = client ( ) . admin ( ) . cluster ( ) . prepareUpdateSettings ( ) . setPersistentSettings ( settingsBuilder ( ) . put ( <str> , <int> ) ) . setTransientSettings ( settingsBuilder ( ) . put ( <str> , <int> ) ) . get ( ) ; Integer min = response . getPersistentSettings ( ) . getAsInt ( <str> , null ) ; assertThat ( min , is ( <int> ) ) ; } } 
