package io . netty . channel . embedded ; import java . io . IOException ; import java . io . ObjectInputStream ; import java . io . ObjectOutputStream ; import org . junit . Assert ; import org . junit . Test ; import io . netty . buffer . ByteBufInputStream ; import io . netty . buffer . ByteBufOutputStream ; import io . netty . buffer . Unpooled ; import io . netty . channel . ChannelId ; public class EmbeddedChannelIdTest { @Test public void testSerialization ( ) throws IOException , ClassNotFoundException { ChannelId normalInstance = EmbeddedChannelId . INSTANCE ; ByteBufOutputStream buffer = new ByteBufOutputStream ( Unpooled . buffer ( ) ) ; ObjectOutputStream outStream = new ObjectOutputStream ( buffer ) ; outStream . writeObject ( normalInstance ) ; outStream . close ( ) ; ObjectInputStream inStream = new ObjectInputStream ( new ByteBufInputStream ( buffer . buffer ( ) ) ) ; ChannelId deserializedInstance = ( ChannelId ) inStream . readObject ( ) ; inStream . close ( ) ; Assert . assertEquals ( normalInstance , deserializedInstance ) ; Assert . assertEquals ( normalInstance . hashCode ( ) , deserializedInstance . hashCode ( ) ) ; Assert . assertEquals ( <int> , normalInstance . compareTo ( deserializedInstance ) ) ; } } 
