package org . elasticsearch . action . admin . indices . flush ; import org . elasticsearch . action . ActionRequest ; import org . elasticsearch . action . support . broadcast . BroadcastRequest ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import java . io . IOException ; public class FlushRequest extends BroadcastRequest < FlushRequest > { private boolean force = false ; private boolean waitIfOngoing = false ; public FlushRequest ( ) { } public FlushRequest ( ActionRequest originalRequest ) { super ( originalRequest ) ; } public FlushRequest ( String . . . indices ) { super ( indices ) ; } public boolean waitIfOngoing ( ) { return this . waitIfOngoing ; } public FlushRequest waitIfOngoing ( boolean waitIfOngoing ) { this . waitIfOngoing = waitIfOngoing ; return this ; } public boolean force ( ) { return force ; } public FlushRequest force ( boolean force ) { this . force = force ; return this ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeBoolean ( force ) ; out . writeBoolean ( waitIfOngoing ) ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; force = in . readBoolean ( ) ; waitIfOngoing = in . readBoolean ( ) ; } @Override public String toString ( ) { return <str> + <str> + waitIfOngoing + <str> + force + <str> ; } } 
