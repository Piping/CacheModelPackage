package com . badlogic . gdx . backends . android ; import android . content . Context ; import android . view . InputDevice ; import android . view . MotionEvent ; import android . view . View ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . Input . Buttons ; import com . badlogic . gdx . backends . android . AndroidInput . TouchEvent ; public class AndroidMouseHandler { private int deltaX = <int> ; private int deltaY = <int> ; public boolean onGenericMotion ( MotionEvent event , AndroidInput input ) { if ( ( event . getSource ( ) & InputDevice . SOURCE_CLASS_POINTER ) = = <int> ) return false ; final int action = event . getAction ( ) & MotionEvent . ACTION_MASK ; int x = <int> , y = <int> ; int scrollAmount = <int> ; long timeStamp = System . nanoTime ( ) ; synchronized ( input ) { switch ( action ) { case MotionEvent . ACTION_HOVER_MOVE : x = ( int ) event . getX ( ) ; y = ( int ) event . getY ( ) ; if ( ( x ! = deltaX ) | | ( y ! = deltaY ) ) { postTouchEvent ( input , TouchEvent . TOUCH_MOVED , x , y , <int> , timeStamp ) ; deltaX = x ; deltaY = y ; } break ; case MotionEvent . ACTION_SCROLL : scrollAmount = ( int ) - Math . signum ( event . getAxisValue ( MotionEvent . AXIS_VSCROLL ) ) ; postTouchEvent ( input , TouchEvent . TOUCH_SCROLLED , <int> , <int> , scrollAmount , timeStamp ) ; } } Gdx . app . getGraphics ( ) . requestRendering ( ) ; return true ; } private void logAction ( int action ) { String actionStr = <str> ; if ( action = = MotionEvent . ACTION_HOVER_ENTER ) actionStr = <str> ; else if ( action = = MotionEvent . ACTION_HOVER_MOVE ) actionStr = <str> ; else if ( action = = MotionEvent . ACTION_HOVER_EXIT ) actionStr = <str> ; else if ( action = = MotionEvent . ACTION_SCROLL ) actionStr = <str> ; else actionStr = <str> + action + <str> ; Gdx . app . log ( <str> , <str> + actionStr ) ; } private void postTouchEvent ( AndroidInput input , int type , int x , int y , int scrollAmount , long timeStamp ) { TouchEvent event = input . usedTouchEvents . obtain ( ) ; event . timeStamp = timeStamp ; event . x = x ; event . y = y ; event . type = type ; event . scrollAmount = scrollAmount ; input . touchEvents . add ( event ) ; } } 
