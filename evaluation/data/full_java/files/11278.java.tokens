package org . gradle . api . internal ; import groovy . lang . Closure ; import org . gradle . api . DefaultTask ; import org . gradle . api . Task ; import java . util . concurrent . Callable ; public abstract class ConventionTask extends DefaultTask implements IConventionAware { private ConventionMapping conventionMapping ; protected ConventionTask ( ) { conventionMapping = new ConventionAwareHelper ( this , getProject ( ) . getConvention ( ) ) ; } public Task conventionMapping ( String property , Callable < ? > mapping ) { conventionMapping . map ( property , mapping ) ; return this ; } public Task conventionMapping ( String property , Closure mapping ) { conventionMapping . map ( property , mapping ) ; return this ; } public ConventionMapping getConventionMapping ( ) { return conventionMapping ; } } 
