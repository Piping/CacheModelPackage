package org . elasticsearch . search . suggest . phrase ; import java . io . IOException ; import java . util . Arrays ; import java . util . Comparator ; import org . apache . lucene . util . BytesRef ; import org . elasticsearch . search . suggest . phrase . DirectCandidateGenerator . Candidate ; import org . elasticsearch . search . suggest . phrase . DirectCandidateGenerator . CandidateSet ; public final class MultiCandidateGeneratorWrapper extends CandidateGenerator { private final CandidateGenerator [ ] candidateGenerator ; private int numCandidates ; public MultiCandidateGeneratorWrapper ( int numCandidates , CandidateGenerator . . . candidateGenerators ) { this . candidateGenerator = candidateGenerators ; this . numCandidates = numCandidates ; } @Override public boolean isKnownWord ( BytesRef term ) throws IOException { return candidateGenerator [ <int> ] . isKnownWord ( term ) ; } @Override public long frequency ( BytesRef term ) throws IOException { return candidateGenerator [ <int> ] . frequency ( term ) ; } @Override public CandidateSet drawCandidates ( CandidateSet set ) throws IOException { for ( CandidateGenerator generator : candidateGenerator ) { generator . drawCandidates ( set ) ; } return reduce ( set , numCandidates ) ; } private final CandidateSet reduce ( CandidateSet set , int numCandidates ) { if ( set . candidates . length > numCandidates ) { Candidate [ ] candidates = set . candidates ; Arrays . sort ( candidates , new Comparator < Candidate > ( ) { @Override public int compare ( Candidate left , Candidate right ) { return Double . compare ( right . score , left . score ) ; } } ) ; Candidate [ ] newSet = new Candidate [ numCandidates ] ; System . arraycopy ( candidates , <int> , newSet , <int> , numCandidates ) ; set . candidates = newSet ; } return set ; } @Override public Candidate createCandidate ( BytesRef term , long frequency , double channelScore , boolean userInput ) throws IOException { return candidateGenerator [ <int> ] . createCandidate ( term , frequency , channelScore , userInput ) ; } } 
