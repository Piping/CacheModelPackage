package com . google . common . collect . testing . testers ; import com . google . common . annotations . GwtCompatible ; import com . google . gwt . core . client . GWT ; @GwtCompatible ( emulated = true ) final class Platform { static int listListIteratorTesterNumIterations ( ) { return GWT . isProdMode ( ) ? <int> : <int> ; } static int collectionIteratorTesterNumIterations ( ) { return GWT . isProdMode ( ) ? <int> : <int> ; } static String format ( String template , Object . . . args ) { StringBuilder builder = new StringBuilder ( template . length ( ) + <int> * args . length ) ; int templateStart = <int> ; int i = <int> ; while ( i < args . length ) { int placeholderStart = template . indexOf ( <str> , templateStart ) ; if ( placeholderStart = = - <int> ) { break ; } builder . append ( template . substring ( templateStart , placeholderStart ) ) ; builder . append ( args [ i + + ] ) ; templateStart = placeholderStart + <int> ; } builder . append ( template . substring ( templateStart ) ) ; if ( i < args . length ) { builder . append ( <str> ) ; builder . append ( args [ i + + ] ) ; while ( i < args . length ) { builder . append ( <str> ) ; builder . append ( args [ i + + ] ) ; } builder . append ( <str> ) ; } return builder . toString ( ) ; } private Platform ( ) { } } 
