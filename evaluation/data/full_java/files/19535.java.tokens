package io . netty . handler . codec . socksx . v5 ; import io . netty . handler . codec . DecoderResult ; import io . netty . util . internal . StringUtil ; import java . util . ArrayList ; import java . util . Collections ; import java . util . List ; public class DefaultSocks5InitialRequest extends AbstractSocks5Message implements Socks5InitialRequest { private final List < Socks5AuthMethod > authMethods ; public DefaultSocks5InitialRequest ( Socks5AuthMethod . . . authMethods ) { if ( authMethods = = null ) { throw new NullPointerException ( <str> ) ; } List < Socks5AuthMethod > list = new ArrayList < Socks5AuthMethod > ( authMethods . length ) ; for ( Socks5AuthMethod m : authMethods ) { if ( m = = null ) { break ; } list . add ( m ) ; } if ( list . isEmpty ( ) ) { throw new IllegalArgumentException ( <str> ) ; } this . authMethods = Collections . unmodifiableList ( list ) ; } public DefaultSocks5InitialRequest ( Iterable < Socks5AuthMethod > authMethods ) { if ( authMethods = = null ) { throw new NullPointerException ( <str> ) ; } List < Socks5AuthMethod > list = new ArrayList < Socks5AuthMethod > ( ) ; for ( Socks5AuthMethod m : authMethods ) { if ( m = = null ) { break ; } list . add ( m ) ; } if ( list . isEmpty ( ) ) { throw new IllegalArgumentException ( <str> ) ; } this . authMethods = Collections . unmodifiableList ( list ) ; } @Override public List < Socks5AuthMethod > authMethods ( ) { return authMethods ; } @Override public String toString ( ) { StringBuilder buf = new StringBuilder ( StringUtil . simpleClassName ( this ) ) ; DecoderResult decoderResult = decoderResult ( ) ; if ( ! decoderResult . isSuccess ( ) ) { buf . append ( <str> ) ; buf . append ( decoderResult ) ; buf . append ( <str> ) ; } else { buf . append ( <str> ) ; } buf . append ( authMethods ( ) ) ; buf . append ( <str> ) ; return buf . toString ( ) ; } } 
