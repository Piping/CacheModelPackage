package org . elasticsearch . index . fielddata . plain ; import org . apache . lucene . index . DocValues ; import org . apache . lucene . index . LeafReader ; import org . apache . lucene . index . RandomAccessOrds ; import org . apache . lucene . util . Accountable ; import org . elasticsearch . index . fielddata . AtomicFieldData ; import org . elasticsearch . index . fielddata . FieldData ; import java . io . IOException ; import java . util . Collection ; import java . util . Collections ; public final class SortedSetDVBytesAtomicFieldData extends AbstractAtomicOrdinalsFieldData { private final LeafReader reader ; private final String field ; SortedSetDVBytesAtomicFieldData ( LeafReader reader , String field ) { this . reader = reader ; this . field = field ; } @Override public RandomAccessOrds getOrdinalsValues ( ) { try { return FieldData . maybeSlowRandomAccessOrds ( DocValues . getSortedSet ( reader , field ) ) ; } catch ( IOException e ) { throw new IllegalStateException ( <str> , e ) ; } } @Override public void close ( ) { } @Override public long ramBytesUsed ( ) { return <int> ; } @Override public Collection < Accountable > getChildResources ( ) { return Collections . emptyList ( ) ; } } 
