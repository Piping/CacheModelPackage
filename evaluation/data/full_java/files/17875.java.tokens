package com . badlogic . gdx . tools . particleeditor ; import java . awt . Dimension ; import java . awt . GridBagConstraints ; import java . awt . Insets ; import java . awt . event . ActionEvent ; import java . awt . event . ActionListener ; import javax . swing . DefaultComboBoxModel ; import javax . swing . JCheckBox ; import javax . swing . JComboBox ; import javax . swing . JLabel ; import javax . swing . JPanel ; import com . badlogic . gdx . graphics . g2d . ParticleEmitter . SpawnEllipseSide ; import com . badlogic . gdx . graphics . g2d . ParticleEmitter . SpawnShape ; import com . badlogic . gdx . graphics . g2d . ParticleEmitter . SpawnShapeValue ; class SpawnPanel extends EditorPanel { JComboBox shapeCombo ; JCheckBox edgesCheckbox ; JLabel edgesLabel ; JComboBox sideCombo ; JLabel sideLabel ; public SpawnPanel ( final ParticleEditor editor , final SpawnShapeValue spawnShapeValue , String name , String description ) { super ( null , name , description ) ; initializeComponents ( ) ; edgesCheckbox . setSelected ( spawnShapeValue . isEdges ( ) ) ; sideCombo . setSelectedItem ( spawnShapeValue . getShape ( ) ) ; shapeCombo . addActionListener ( new ActionListener ( ) { public void actionPerformed ( ActionEvent event ) { SpawnShape shape = ( SpawnShape ) shapeCombo . getSelectedItem ( ) ; spawnShapeValue . setShape ( shape ) ; switch ( shape ) { case line : case square : setEdgesVisible ( false ) ; editor . setVisible ( <str> , true ) ; editor . setVisible ( <str> , true ) ; break ; case ellipse : setEdgesVisible ( true ) ; editor . setVisible ( <str> , true ) ; editor . setVisible ( <str> , true ) ; break ; case point : setEdgesVisible ( false ) ; editor . setVisible ( <str> , false ) ; editor . setVisible ( <str> , false ) ; break ; } } } ) ; edgesCheckbox . addActionListener ( new ActionListener ( ) { public void actionPerformed ( ActionEvent event ) { spawnShapeValue . setEdges ( edgesCheckbox . isSelected ( ) ) ; setEdgesVisible ( true ) ; } } ) ; sideCombo . addActionListener ( new ActionListener ( ) { public void actionPerformed ( ActionEvent event ) { SpawnEllipseSide side = ( SpawnEllipseSide ) sideCombo . getSelectedItem ( ) ; spawnShapeValue . setSide ( side ) ; } } ) ; shapeCombo . setSelectedItem ( spawnShapeValue . getShape ( ) ) ; } public void update ( ParticleEditor editor ) { shapeCombo . setSelectedItem ( editor . getEmitter ( ) . getSpawnShape ( ) . getShape ( ) ) ; } void setEdgesVisible ( boolean visible ) { edgesCheckbox . setVisible ( visible ) ; edgesLabel . setVisible ( visible ) ; visible = visible & & edgesCheckbox . isSelected ( ) ; sideCombo . setVisible ( visible ) ; sideLabel . setVisible ( visible ) ; } private void initializeComponents ( ) { JPanel contentPanel = getContentPanel ( ) ; { JLabel label = new JLabel ( <str> ) ; contentPanel . add ( label , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . EAST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { shapeCombo = new JComboBox ( ) ; shapeCombo . setModel ( new DefaultComboBoxModel ( SpawnShape . values ( ) ) ) ; contentPanel . add ( shapeCombo , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { edgesLabel = new JLabel ( <str> ) ; contentPanel . add ( edgesLabel , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . EAST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { edgesCheckbox = new JCheckBox ( ) ; contentPanel . add ( edgesCheckbox , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { sideLabel = new JLabel ( <str> ) ; contentPanel . add ( sideLabel , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . EAST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { sideCombo = new JComboBox ( ) ; sideCombo . setModel ( new DefaultComboBoxModel ( SpawnEllipseSide . values ( ) ) ) ; contentPanel . add ( sideCombo , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { JPanel spacer = new JPanel ( ) ; spacer . setPreferredSize ( new Dimension ( ) ) ; contentPanel . add ( spacer , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } } } 
