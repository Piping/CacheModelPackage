package org . elasticsearch . index . store ; import org . elasticsearch . common . inject . AbstractModule ; import org . elasticsearch . env . ShardLock ; import org . elasticsearch . index . shard . ShardPath ; public class StoreModule extends AbstractModule { private final ShardLock lock ; private final Store . OnClose closeCallback ; private final ShardPath path ; private final Class < ? extends DirectoryService > shardDirectory ; public StoreModule ( Class < ? extends DirectoryService > shardDirectory , ShardLock lock , Store . OnClose closeCallback , ShardPath path ) { this . shardDirectory = shardDirectory ; this . lock = lock ; this . closeCallback = closeCallback ; this . path = path ; } @Override protected void configure ( ) { bind ( DirectoryService . class ) . to ( shardDirectory ) . asEagerSingleton ( ) ; bind ( Store . class ) . asEagerSingleton ( ) ; bind ( ShardLock . class ) . toInstance ( lock ) ; bind ( Store . OnClose . class ) . toInstance ( closeCallback ) ; bind ( ShardPath . class ) . toInstance ( path ) ; } } 
