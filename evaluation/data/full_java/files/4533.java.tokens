package org . eclipse . debug . internal . ui . views . launch ; import org . eclipse . debug . internal . core . IInternalDebugCoreConstants ; import org . eclipse . debug . internal . ui . DebugPluginImages ; import org . eclipse . debug . internal . ui . IDebugHelpContextIds ; import org . eclipse . debug . internal . ui . IInternalDebugUIConstants ; import org . eclipse . debug . internal . ui . preferences . IDebugPreferenceConstants ; import org . eclipse . debug . ui . IDebugUIConstants ; import org . eclipse . jface . action . Action ; import org . eclipse . swt . widgets . Composite ; import org . eclipse . ui . PlatformUI ; class DebugViewModeAction extends Action { private final LaunchView fLaunchView ; private final Composite fParent ; private final String fMode ; public DebugViewModeAction ( LaunchView view , String mode , Composite parent ) { super ( IInternalDebugCoreConstants . EMPTY_STRING , AS_RADIO_BUTTON ) ; fLaunchView = view ; fParent = parent ; fMode = mode ; if ( mode = = IDebugPreferenceConstants . DEBUG_VIEW_MODE_AUTO ) { setText ( LaunchViewMessages . DebugViewModeAction_Auto_label ) ; setToolTipText ( LaunchViewMessages . DebugViewModeAction_Auto_tooltip ) ; setImageDescriptor ( DebugPluginImages . getImageDescriptor ( IInternalDebugUIConstants . IMG_ELCL_DETAIL_PANE_AUTO ) ) ; setHoverImageDescriptor ( DebugPluginImages . getImageDescriptor ( IInternalDebugUIConstants . IMG_ELCL_DETAIL_PANE_AUTO ) ) ; setDescription ( LaunchViewMessages . DebugViewModeAction_Auto_description ) ; PlatformUI . getWorkbench ( ) . getHelpSystem ( ) . setHelp ( this , IDebugHelpContextIds . DEBUG_VIEW_MODE_AUTO_ACTION ) ; } else if ( mode = = IDebugPreferenceConstants . DEBUG_VIEW_MODE_FULL ) { setText ( LaunchViewMessages . DebugViewModeAction_Full_label ) ; setToolTipText ( LaunchViewMessages . DebugViewModeAction_Full_tooltip ) ; setImageDescriptor ( DebugPluginImages . getImageDescriptor ( IInternalDebugUIConstants . IMG_ELCL_DETAIL_PANE_HIDE ) ) ; setHoverImageDescriptor ( DebugPluginImages . getImageDescriptor ( IDebugUIConstants . IMG_LCL_DETAIL_PANE_HIDE ) ) ; setDescription ( LaunchViewMessages . DebugViewModeAction_Full_description ) ; PlatformUI . getWorkbench ( ) . getHelpSystem ( ) . setHelp ( this , IDebugHelpContextIds . DEBUG_VIEW_MODE_FULL_ACTION ) ; } else { setText ( LaunchViewMessages . DebugViewModeAction_Compact_label ) ; setToolTipText ( LaunchViewMessages . DebugViewModeAction_Compact_tooltip ) ; setDescription ( LaunchViewMessages . DebugViewModeAction_Compact_description ) ; setImageDescriptor ( DebugPluginImages . getImageDescriptor ( IInternalDebugUIConstants . IMG_ELCL_DEBUG_VIEW_COMPACT_LAYOUT ) ) ; setHoverImageDescriptor ( DebugPluginImages . getImageDescriptor ( IInternalDebugUIConstants . IMG_ELCL_DEBUG_VIEW_COMPACT_LAYOUT ) ) ; PlatformUI . getWorkbench ( ) . getHelpSystem ( ) . setHelp ( this , IDebugHelpContextIds . DEBUG_VIEW_MODE_COMPACT_ACTION ) ; } } @Override public void run ( ) { fLaunchView . setViewMode ( fMode , fParent ) ; } public String getMode ( ) { return fMode ; } } 
