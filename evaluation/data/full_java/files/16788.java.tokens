package com . badlogic . gdx . backends . lwjgl ; import static com . badlogic . gdx . utils . SharedLibraryLoader . * ; import com . badlogic . gdx . files . FileHandle ; import com . badlogic . gdx . utils . GdxNativesLoader ; import com . badlogic . gdx . utils . GdxRuntimeException ; import com . badlogic . gdx . utils . SharedLibraryLoader ; import java . io . File ; import java . lang . reflect . Method ; public final class LwjglNativesLoader { static public boolean load = true ; static { System . setProperty ( <str> , <str> ) ; try { Method method = Class . forName ( <str> ) . getDeclaredMethod ( <str> , new Class [ ] { String . class } ) ; method . invoke ( null , <str> ) ; load = false ; } catch ( Throwable ex ) { load = true ; } } static public void load ( ) { GdxNativesLoader . load ( ) ; if ( GdxNativesLoader . disableNativesLoading ) return ; if ( ! load ) return ; SharedLibraryLoader loader = new SharedLibraryLoader ( ) ; File nativesDir = null ; try { if ( isWindows ) { nativesDir = loader . extractFile ( is64Bit ? <str> : <str> , null ) . getParentFile ( ) ; if ( ! LwjglApplicationConfiguration . disableAudio ) loader . extractFileTo ( is64Bit ? <str> : <str> , nativesDir ) ; } else if ( isMac ) { nativesDir = loader . extractFile ( <str> , null ) . getParentFile ( ) ; if ( ! LwjglApplicationConfiguration . disableAudio ) loader . extractFileTo ( <str> , nativesDir ) ; } else if ( isLinux ) { nativesDir = loader . extractFile ( is64Bit ? <str> : <str> , null ) . getParentFile ( ) ; if ( ! LwjglApplicationConfiguration . disableAudio ) loader . extractFileTo ( is64Bit ? <str> : <str> , nativesDir ) ; } } catch ( Throwable ex ) { throw new GdxRuntimeException ( <str> , ex ) ; } System . setProperty ( <str> , nativesDir . getAbsolutePath ( ) ) ; load = false ; } } 
