package com . badlogic . gdx . physics . box2d . joints ; import com . badlogic . gdx . math . Vector2 ; import com . badlogic . gdx . physics . box2d . Joint ; import com . badlogic . gdx . physics . box2d . World ; public class DistanceJoint extends Joint { private final float [ ] tmp = new float [ <int> ] ; private final Vector2 localAnchorA = new Vector2 ( ) ; private final Vector2 localAnchorB = new Vector2 ( ) ; public DistanceJoint ( World world , long addr ) { super ( world , addr ) ; } public Vector2 getLocalAnchorA ( ) { jniGetLocalAnchorA ( addr , tmp ) ; localAnchorA . set ( tmp [ <int> ] , tmp [ <int> ] ) ; return localAnchorA ; } private native void jniGetLocalAnchorA ( long addr , float [ ] anchor ) ; public Vector2 getLocalAnchorB ( ) { jniGetLocalAnchorB ( addr , tmp ) ; localAnchorB . set ( tmp [ <int> ] , tmp [ <int> ] ) ; return localAnchorB ; } private native void jniGetLocalAnchorB ( long addr , float [ ] anchor ) ; public void setLength ( float length ) { jniSetLength ( addr , length ) ; } private native void jniSetLength ( long addr , float length ) ; public float getLength ( ) { return jniGetLength ( addr ) ; } private native float jniGetLength ( long addr ) ; public void setFrequency ( float hz ) { jniSetFrequency ( addr , hz ) ; } private native void jniSetFrequency ( long addr , float hz ) ; public float getFrequency ( ) { return jniGetFrequency ( addr ) ; } private native float jniGetFrequency ( long addr ) ; public void setDampingRatio ( float ratio ) { jniSetDampingRatio ( addr , ratio ) ; } private native void jniSetDampingRatio ( long addr , float ratio ) ; public float getDampingRatio ( ) { return jniGetDampingRatio ( addr ) ; } private native float jniGetDampingRatio ( long addr ) ; } 
