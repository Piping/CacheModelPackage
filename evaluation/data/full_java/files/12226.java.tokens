package org . gradle . logging . internal . progress ; import org . gradle . api . Nullable ; import org . gradle . internal . progress . OperationIdentifier ; import java . util . HashMap ; import java . util . Map ; public class ProgressOperations { private final Map < OperationIdentifier , ProgressOperation > operationsById = new HashMap < OperationIdentifier , ProgressOperation > ( ) ; public ProgressOperation start ( String description , String status , OperationIdentifier operationId , @Nullable OperationIdentifier parentOperationId ) { ProgressOperation parent = null ; if ( parentOperationId ! = null ) { parent = operationsById . get ( parentOperationId ) ; } ProgressOperation operation = new ProgressOperation ( description , status , parent ) ; operationsById . put ( operationId , operation ) ; return operation ; } public ProgressOperation progress ( String description , OperationIdentifier operationId ) { ProgressOperation op = operationsById . get ( operationId ) ; if ( op = = null ) { throw new IllegalStateException ( <str> + operationId + <str> ) ; } op . setStatus ( description ) ; return op ; } public ProgressOperation complete ( OperationIdentifier operationId ) { ProgressOperation op = operationsById . remove ( operationId ) ; if ( op = = null ) { throw new IllegalStateException ( <str> + operationId + <str> ) ; } return op ; } } 
