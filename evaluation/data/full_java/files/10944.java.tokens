package org . gradle . api . plugins . buildcomparison . compare . internal ; import org . gradle . api . plugins . buildcomparison . outcome . internal . BuildOutcome ; import org . gradle . api . plugins . buildcomparison . outcome . internal . BuildOutcomeAssociator ; import java . util . HashSet ; import java . util . Set ; public class BuildComparisonSpecFactory { private final BuildOutcomeAssociator associator ; public BuildComparisonSpecFactory ( BuildOutcomeAssociator associator ) { this . associator = associator ; } public BuildComparisonSpec createSpec ( Set < BuildOutcome > from , Set < BuildOutcome > to ) { BuildComparisonSpecBuilder builder = new DefaultBuildComparisonSpecBuilder ( ) ; Set < BuildOutcome > toCopy = new HashSet < BuildOutcome > ( to ) ; for ( BuildOutcome fromBuildOutcome : from ) { BuildOutcome toBuildOutcome = null ; Class < ? extends BuildOutcome > associationType = null ; for ( BuildOutcome buildOutcome : toCopy ) { toBuildOutcome = buildOutcome ; associationType = associator . findAssociationType ( fromBuildOutcome , toBuildOutcome ) ; if ( associationType ! = null ) { break ; } } if ( associationType = = null ) { builder . addUnassociatedFrom ( fromBuildOutcome ) ; } else { builder . associate ( associationType . cast ( fromBuildOutcome ) , associationType . cast ( toBuildOutcome ) , ( Class < BuildOutcome > ) associationType ) ; toCopy . remove ( toBuildOutcome ) ; } } for ( BuildOutcome buildOutcome : toCopy ) { builder . addUnassociatedTo ( buildOutcome ) ; } return builder . build ( ) ; } } 
