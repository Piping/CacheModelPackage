package com . google . common . collect . testing . google ; import com . google . common . annotations . GwtCompatible ; import com . google . common . collect . ListMultimap ; import com . google . common . collect . testing . Helpers ; import com . google . common . collect . testing . SampleElements ; import java . util . Collection ; import java . util . List ; import java . util . Map ; import java . util . Map . Entry ; @GwtCompatible public abstract class TestStringListMultimapGenerator implements TestListMultimapGenerator < String , String > { @Override public SampleElements < Map . Entry < String , String > > samples ( ) { return new SampleElements < Map . Entry < String , String > > ( Helpers . mapEntry ( <str> , <str> ) , Helpers . mapEntry ( <str> , <str> ) , Helpers . mapEntry ( <str> , <str> ) , Helpers . mapEntry ( <str> , <str> ) , Helpers . mapEntry ( <str> , <str> ) ) ; } @Override public SampleElements < String > sampleKeys ( ) { return new SampleElements < String > ( <str> , <str> , <str> , <str> , <str> ) ; } @Override public SampleElements < String > sampleValues ( ) { return new SampleElements < String > ( <str> , <str> , <str> , <str> , <str> ) ; } @Override public Collection < String > createCollection ( Iterable < ? extends String > values ) { return Helpers . copyToList ( values ) ; } @Override public final ListMultimap < String , String > create ( Object . . . entries ) { @SuppressWarnings ( <str> ) Entry < String , String > [ ] array = new Entry [ entries . length ] ; int i = <int> ; for ( Object o : entries ) { @SuppressWarnings ( <str> ) Entry < String , String > e = ( Entry < String , String > ) o ; array [ i + + ] = e ; } return create ( array ) ; } protected abstract ListMultimap < String , String > create ( Entry < String , String > [ ] entries ) ; @Override @SuppressWarnings ( <str> ) public final Entry < String , String > [ ] createArray ( int length ) { return new Entry [ length ] ; } @Override public final String [ ] createKeyArray ( int length ) { return new String [ length ] ; } @Override public final String [ ] createValueArray ( int length ) { return new String [ length ] ; } @Override public Iterable < Entry < String , String > > order ( List < Entry < String , String > > insertionOrder ) { return insertionOrder ; } } 
