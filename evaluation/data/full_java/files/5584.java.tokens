package org . elasticsearch . cluster . routing ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import java . io . IOException ; public class IllegalShardRoutingStateException extends RoutingException { private final ShardRouting shard ; public IllegalShardRoutingStateException ( ShardRouting shard , String message ) { this ( shard , message , null ) ; } public IllegalShardRoutingStateException ( ShardRouting shard , String message , Throwable cause ) { super ( shard . shortSummary ( ) + <str> + message , cause ) ; this . shard = shard ; } public IllegalShardRoutingStateException ( StreamInput in ) throws IOException { super ( in ) ; shard = ShardRouting . readShardRoutingEntry ( in ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; shard . writeTo ( out ) ; } public ShardRouting shard ( ) { return shard ; } } 
