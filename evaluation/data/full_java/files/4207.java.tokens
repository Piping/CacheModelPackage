package org . eclipse . debug . internal . ui . launchConfigurations ; import org . eclipse . debug . internal . ui . DebugUIPlugin ; import org . eclipse . debug . internal . ui . IInternalDebugUIConstants ; import org . eclipse . debug . internal . ui . SWTFactory ; import org . eclipse . jface . action . Action ; import org . eclipse . jface . action . ActionContributionItem ; import org . eclipse . jface . action . IAction ; import org . eclipse . jface . action . IMenuCreator ; import org . eclipse . jface . preference . IPreferenceStore ; import org . eclipse . swt . SWT ; import org . eclipse . swt . widgets . Control ; import org . eclipse . swt . widgets . Menu ; import org . eclipse . swt . widgets . MenuItem ; public class FilterDropDownMenuCreator implements IMenuCreator { class FilterAction extends Action { private IPreferenceStore fStore = null ; private String fKey = null ; public FilterAction ( Menu menu , IPreferenceStore store , String name , String key ) { super ( name , IAction . AS_CHECK_BOX ) ; fStore = store ; fKey = key ; setChecked ( fStore . getBoolean ( fKey ) ) ; fillIntoMenu ( menu , this ) ; } public FilterAction ( Menu menu , String name , IMenuCreator creator ) { super ( name , IAction . AS_DROP_DOWN_MENU ) ; setMenuCreator ( creator ) ; fillIntoMenu ( menu , this ) ; } private void fillIntoMenu ( Menu menu , IAction action ) { ActionContributionItem item = new ActionContributionItem ( action ) ; item . fill ( menu , - <int> ) ; } @Override public void run ( ) { if ( fStore ! = null ) { fStore . setValue ( fKey , isChecked ( ) ) ; } } } private Menu fCreatedMenu = null ; private IPreferenceStore getDebugPrefStore ( ) { return DebugUIPlugin . getDefault ( ) . getPreferenceStore ( ) ; } @Override public void dispose ( ) { fCreatedMenu = null ; } @Override public Menu getMenu ( Control parent ) { if ( fCreatedMenu ! = null ) { fCreatedMenu . dispose ( ) ; } fCreatedMenu = new Menu ( parent ) ; new FilterAction ( fCreatedMenu , getDebugPrefStore ( ) , LaunchConfigurationsMessages . FilterDropDownMenuCreator_0 , IInternalDebugUIConstants . PREF_FILTER_LAUNCH_CLOSED ) ; new FilterAction ( fCreatedMenu , getDebugPrefStore ( ) , LaunchConfigurationsMessages . FilterDropDownMenuCreator_1 , IInternalDebugUIConstants . PREF_FILTER_LAUNCH_DELETED ) ; new FilterAction ( fCreatedMenu , getDebugPrefStore ( ) , LaunchConfigurationsMessages . FilterDropDownMenuCreator_2 , IInternalDebugUIConstants . PREF_FILTER_LAUNCH_TYPES ) ; new FilterAction ( fCreatedMenu , getDebugPrefStore ( ) , LaunchConfigurationsMessages . FilterDropDownMenuCreator_4 , IInternalDebugUIConstants . PREF_FILTER_WORKING_SETS ) ; new MenuItem ( fCreatedMenu , SWT . SEPARATOR ) ; IAction action = new Action ( LaunchConfigurationsMessages . FilterDropDownMenuCreator_3 ) { @Override public void run ( ) { SWTFactory . showPreferencePage ( <str> ) ; } } ; new ActionContributionItem ( action ) . fill ( fCreatedMenu , - <int> ) ; return fCreatedMenu ; } @Override public Menu getMenu ( Menu parent ) { return fCreatedMenu ; } } 
