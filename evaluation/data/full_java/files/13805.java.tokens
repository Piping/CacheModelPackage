package org . gradle . launcher . daemon . client ; import org . gradle . api . internal . DocumentationRegistry ; import org . gradle . api . internal . specs . ExplainingSpec ; import org . gradle . api . internal . specs . ExplainingSpecs ; import org . gradle . internal . concurrent . ExecutorFactory ; import org . gradle . internal . id . IdGenerator ; import org . gradle . internal . service . ServiceRegistry ; import org . gradle . launcher . daemon . configuration . DaemonParameters ; import org . gradle . launcher . daemon . context . DaemonContext ; import org . gradle . logging . internal . OutputEventListener ; import java . io . InputStream ; public class SingleUseDaemonClientServices extends DaemonClientServices { public SingleUseDaemonClientServices ( ServiceRegistry loggingServices , DaemonParameters daemonParameters , InputStream buildStandardInput ) { super ( loggingServices , daemonParameters , buildStandardInput ) ; } @Override protected DaemonClient createDaemonClient ( ) { ExplainingSpec < DaemonContext > matchNone = ExplainingSpecs . satisfyNone ( ) ; return new SingleUseDaemonClient ( get ( DaemonConnector . class ) , get ( OutputEventListener . class ) , matchNone , getBuildStandardInput ( ) , get ( ExecutorFactory . class ) , get ( IdGenerator . class ) , get ( DocumentationRegistry . class ) ) ; } } 
