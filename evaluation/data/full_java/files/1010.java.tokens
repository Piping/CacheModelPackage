package org . apache . cassandra . streaming . management ; import java . net . InetAddress ; import java . net . UnknownHostException ; import java . util . HashMap ; import java . util . Map ; import java . util . UUID ; import javax . management . openmbean . * ; import com . google . common . base . Throwables ; import org . apache . cassandra . streaming . ProgressInfo ; public class ProgressInfoCompositeData { private static final String [ ] ITEM_NAMES = new String [ ] { <str> , <str> , <str> , <str> , <str> , <str> , <str> } ; private static final String [ ] ITEM_DESCS = new String [ ] { <str> , <str> , <str> , <str> , <str> , <str> , <str> } ; private static final OpenType < ? > [ ] ITEM_TYPES = new OpenType [ ] { SimpleType . STRING , SimpleType . STRING , SimpleType . INTEGER , SimpleType . STRING , SimpleType . STRING , SimpleType . LONG , SimpleType . LONG } ; public static final CompositeType COMPOSITE_TYPE ; static { try { COMPOSITE_TYPE = new CompositeType ( ProgressInfo . class . getName ( ) , <str> , ITEM_NAMES , ITEM_DESCS , ITEM_TYPES ) ; } catch ( OpenDataException e ) { throw Throwables . propagate ( e ) ; } } public static CompositeData toCompositeData ( UUID planId , ProgressInfo progressInfo ) { Map < String , Object > valueMap = new HashMap < > ( ) ; valueMap . put ( ITEM_NAMES [ <int> ] , planId . toString ( ) ) ; valueMap . put ( ITEM_NAMES [ <int> ] , progressInfo . peer . getHostAddress ( ) ) ; valueMap . put ( ITEM_NAMES [ <int> ] , progressInfo . sessionIndex ) ; valueMap . put ( ITEM_NAMES [ <int> ] , progressInfo . fileName ) ; valueMap . put ( ITEM_NAMES [ <int> ] , progressInfo . direction . name ( ) ) ; valueMap . put ( ITEM_NAMES [ <int> ] , progressInfo . currentBytes ) ; valueMap . put ( ITEM_NAMES [ <int> ] , progressInfo . totalBytes ) ; try { return new CompositeDataSupport ( COMPOSITE_TYPE , valueMap ) ; } catch ( OpenDataException e ) { throw Throwables . propagate ( e ) ; } } public static ProgressInfo fromCompositeData ( CompositeData cd ) { Object [ ] values = cd . getAll ( ITEM_NAMES ) ; try { return new ProgressInfo ( InetAddress . getByName ( ( String ) values [ <int> ] ) , ( int ) values [ <int> ] , ( String ) values [ <int> ] , ProgressInfo . Direction . valueOf ( ( String ) values [ <int> ] ) , ( long ) values [ <int> ] , ( long ) values [ <int> ] ) ; } catch ( UnknownHostException e ) { throw Throwables . propagate ( e ) ; } } } 
