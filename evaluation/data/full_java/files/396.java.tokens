package org . apache . cassandra . db . compaction ; import java . util . Map ; import org . apache . cassandra . exceptions . ConfigurationException ; public final class SizeTieredCompactionStrategyOptions { protected static final long DEFAULT_MIN_SSTABLE_SIZE = <int> * <int> * <int> ; protected static final double DEFAULT_BUCKET_LOW = <float> ; protected static final double DEFAULT_BUCKET_HIGH = <float> ; protected static final String MIN_SSTABLE_SIZE_KEY = <str> ; protected static final String BUCKET_LOW_KEY = <str> ; protected static final String BUCKET_HIGH_KEY = <str> ; protected long minSSTableSize ; protected double bucketLow ; protected double bucketHigh ; public SizeTieredCompactionStrategyOptions ( Map < String , String > options ) { String optionValue = options . get ( MIN_SSTABLE_SIZE_KEY ) ; minSSTableSize = optionValue = = null ? DEFAULT_MIN_SSTABLE_SIZE : Long . parseLong ( optionValue ) ; optionValue = options . get ( BUCKET_LOW_KEY ) ; bucketLow = optionValue = = null ? DEFAULT_BUCKET_LOW : Double . parseDouble ( optionValue ) ; optionValue = options . get ( BUCKET_HIGH_KEY ) ; bucketHigh = optionValue = = null ? DEFAULT_BUCKET_HIGH : Double . parseDouble ( optionValue ) ; } public SizeTieredCompactionStrategyOptions ( ) { minSSTableSize = DEFAULT_MIN_SSTABLE_SIZE ; bucketLow = DEFAULT_BUCKET_LOW ; bucketHigh = DEFAULT_BUCKET_HIGH ; } private static double parseDouble ( Map < String , String > options , String key , double defaultValue ) throws ConfigurationException { String optionValue = options . get ( key ) ; try { return optionValue = = null ? defaultValue : Double . parseDouble ( optionValue ) ; } catch ( NumberFormatException e ) { throw new ConfigurationException ( String . format ( <str> , optionValue , key ) , e ) ; } } public static Map < String , String > validateOptions ( Map < String , String > options , Map < String , String > uncheckedOptions ) throws ConfigurationException { String optionValue = options . get ( MIN_SSTABLE_SIZE_KEY ) ; try { long minSSTableSize = optionValue = = null ? DEFAULT_MIN_SSTABLE_SIZE : Long . parseLong ( optionValue ) ; if ( minSSTableSize < <int> ) { throw new ConfigurationException ( String . format ( <str> , MIN_SSTABLE_SIZE_KEY , minSSTableSize ) ) ; } } catch ( NumberFormatException e ) { throw new ConfigurationException ( String . format ( <str> , optionValue , MIN_SSTABLE_SIZE_KEY ) , e ) ; } double bucketLow = parseDouble ( options , BUCKET_LOW_KEY , DEFAULT_BUCKET_LOW ) ; double bucketHigh = parseDouble ( options , BUCKET_HIGH_KEY , DEFAULT_BUCKET_HIGH ) ; if ( bucketHigh < = bucketLow ) { throw new ConfigurationException ( String . format ( <str> , BUCKET_HIGH_KEY , bucketHigh , BUCKET_LOW_KEY , bucketLow ) ) ; } uncheckedOptions . remove ( MIN_SSTABLE_SIZE_KEY ) ; uncheckedOptions . remove ( BUCKET_LOW_KEY ) ; uncheckedOptions . remove ( BUCKET_HIGH_KEY ) ; return uncheckedOptions ; } } 
