package org . gradle . api . internal . artifacts . ivyservice . moduleconverter . dependencies ; import org . gradle . api . artifacts . ExternalModuleDependency ; import org . gradle . api . artifacts . ModuleDependency ; import org . gradle . api . artifacts . ModuleVersionSelector ; import org . gradle . api . artifacts . component . ModuleComponentSelector ; import org . gradle . api . internal . artifacts . DefaultModuleVersionSelector ; import org . gradle . internal . component . external . model . DefaultModuleComponentSelector ; import org . gradle . internal . component . local . model . DslOriginDependencyMetaData ; import org . gradle . internal . component . local . model . DslOriginDependencyMetaDataWrapper ; import org . gradle . internal . component . model . LocalComponentDependencyMetaData ; public class ExternalModuleIvyDependencyDescriptorFactory extends AbstractIvyDependencyDescriptorFactory { public ExternalModuleIvyDependencyDescriptorFactory ( ExcludeRuleConverter excludeRuleConverter ) { super ( excludeRuleConverter ) ; } public DslOriginDependencyMetaData createDependencyDescriptor ( String configuration , ModuleDependency dependency ) { ExternalModuleDependency externalModuleDependency = ( ExternalModuleDependency ) dependency ; boolean force = externalModuleDependency . isForce ( ) ; boolean changing = externalModuleDependency . isChanging ( ) ; boolean transitive = externalModuleDependency . isTransitive ( ) ; ModuleVersionSelector requested = new DefaultModuleVersionSelector ( nullToEmpty ( dependency . getGroup ( ) ) , nullToEmpty ( dependency . getName ( ) ) , nullToEmpty ( dependency . getVersion ( ) ) ) ; ModuleComponentSelector selector = DefaultModuleComponentSelector . newSelector ( requested ) ; LocalComponentDependencyMetaData dependencyMetaData = new LocalComponentDependencyMetaData ( selector , requested , configuration , dependency . getConfiguration ( ) , convertArtifacts ( dependency . getArtifacts ( ) ) , convertExcludeRules ( configuration , dependency . getExcludeRules ( ) ) , force , changing , transitive ) ; return new DslOriginDependencyMetaDataWrapper ( dependencyMetaData , dependency ) ; } private String nullToEmpty ( String input ) { return input = = null ? <str> : input ; } public boolean canConvert ( ModuleDependency dependency ) { return dependency instanceof ExternalModuleDependency ; } } 
