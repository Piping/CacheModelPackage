package org . gradle . api . internal . file . pattern ; public class GreedyPathMatcher implements PathMatcher { private final PathMatcher next ; public GreedyPathMatcher ( PathMatcher next ) { this . next = next ; } public int getMaxSegments ( ) { return Integer . MAX_VALUE ; } public int getMinSegments ( ) { return next . getMinSegments ( ) ; } public boolean matches ( String [ ] segments , int startIndex ) { int pos = segments . length - next . getMinSegments ( ) ; int minPos = Math . max ( startIndex , segments . length - next . getMaxSegments ( ) ) ; for ( ; pos > = minPos ; pos - - ) { if ( next . matches ( segments , pos ) ) { return true ; } } return false ; } public boolean isPrefix ( String [ ] segments , int startIndex ) { return true ; } } 
