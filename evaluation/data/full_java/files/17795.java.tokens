package com . badlogic . gdx . setup ; import static java . awt . GridBagConstraints . BOTH ; import static java . awt . GridBagConstraints . CENTER ; import static java . awt . GridBagConstraints . HORIZONTAL ; import static java . awt . GridBagConstraints . NONE ; import static java . awt . GridBagConstraints . NORTH ; import static java . awt . GridBagConstraints . SOUTH ; import static java . awt . GridBagConstraints . SOUTHEAST ; import static java . awt . GridBagConstraints . WEST ; import java . awt . Color ; import java . awt . Cursor ; import java . awt . Desktop ; import java . awt . GridBagConstraints ; import java . awt . GridBagLayout ; import java . awt . Insets ; import java . awt . event . ActionEvent ; import java . awt . event . ActionListener ; import java . awt . event . MouseAdapter ; import java . awt . event . MouseEvent ; import java . io . IOException ; import java . net . URI ; import java . net . URISyntaxException ; import java . util . ArrayList ; import java . util . List ; import javax . swing . BorderFactory ; import javax . swing . JDialog ; import javax . swing . JLabel ; import javax . swing . JOptionPane ; import javax . swing . JPanel ; import javax . swing . JSeparator ; import javax . swing . JTextField ; import javax . swing . border . Border ; import javax . swing . border . CompoundBorder ; import javax . swing . border . EmptyBorder ; import com . badlogic . gdx . setup . GdxSetupUI . SetupButton ; import com . badlogic . gdx . setup . GdxSetupUI . SetupCheckBox ; public class SettingsDialog extends JDialog { private JPanel contentPane ; private SetupButton buttonOK ; private SetupButton buttonCancel ; private JLabel linkText ; private JPanel content ; private JPanel bottomPanel ; private JPanel buttonPanel ; private JTextField mavenTextField ; private SetupCheckBox ideaBox ; private SetupCheckBox eclipseBox ; SetupCheckBox offlineBox ; private String mavenSnapshot ; private boolean ideaSnapshot ; private boolean eclipseSnapshot ; private boolean offlineSnapshot ; public SettingsDialog ( ) { contentPane = new JPanel ( new GridBagLayout ( ) ) ; setContentPane ( contentPane ) ; setModal ( true ) ; getRootPane ( ) . setDefaultButton ( buttonOK ) ; uiLayout ( ) ; uiStyle ( ) ; buttonOK . addActionListener ( new ActionListener ( ) { public void actionPerformed ( ActionEvent e ) { if ( offlineBox . isSelected ( ) ) { int value = JOptionPane . showConfirmDialog ( null , <str> , <str> , JOptionPane . YES_NO_OPTION ) ; if ( value = = <int> ) { onOK ( ) ; } } else { onOK ( ) ; } } } ) ; buttonCancel . addActionListener ( new ActionListener ( ) { @Override public void actionPerformed ( ActionEvent e ) { onCancel ( ) ; } } ) ; linkText . setCursor ( Cursor . getPredefinedCursor ( Cursor . HAND_CURSOR ) ) ; linkText . addMouseListener ( new MouseAdapter ( ) { public void mouseClicked ( MouseEvent e ) { if ( e . getClickCount ( ) > <int> ) { if ( Desktop . isDesktopSupported ( ) ) { Desktop desktop = Desktop . getDesktop ( ) ; try { URI uri = new URI ( <str> ) ; desktop . browse ( uri ) ; } catch ( IOException ex ) { ex . printStackTrace ( ) ; } catch ( URISyntaxException ex ) { ex . printStackTrace ( ) ; } } } } } ) ; setTitle ( <str> ) ; setSize ( <int> , <int> ) ; setLocationRelativeTo ( null ) ; } private void uiLayout ( ) { content = new JPanel ( new GridBagLayout ( ) ) ; content . setBorder ( BorderFactory . createEmptyBorder ( <int> , <int> , <int> , <int> ) ) ; bottomPanel = new JPanel ( new GridBagLayout ( ) ) ; buttonPanel = new JPanel ( new GridBagLayout ( ) ) ; buttonPanel . setBorder ( BorderFactory . createEmptyBorder ( <int> , <int> , <int> , <int> ) ) ; buttonOK = new SetupButton ( <str> ) ; buttonCancel = new SetupButton ( <str> ) ; buttonPanel . add ( buttonOK , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , CENTER , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; buttonPanel . add ( buttonCancel , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , CENTER , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; contentPane . add ( content , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , NORTH , BOTH , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; JLabel settings = new JLabel ( <str> ) ; JLabel description = new JLabel ( <str> ) ; settings . setForeground ( new Color ( <int> , <int> , <int> ) ) ; description . setForeground ( new Color ( <int> , <int> , <int> ) ) ; settings . setHorizontalAlignment ( JLabel . CENTER ) ; description . setHorizontalAlignment ( JLabel . CENTER ) ; content . add ( settings , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , NORTH , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; content . add ( description , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , NORTH , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; JLabel mavenLabel = new JLabel ( <str> ) ; JLabel mavenDesc = new JLabel ( <str> ) ; mavenTextField = new JTextField ( <int> ) ; mavenTextField . setMinimumSize ( mavenTextField . getPreferredSize ( ) ) ; mavenLabel . setForeground ( new Color ( <int> , <int> , <int> ) ) ; mavenDesc . setForeground ( new Color ( <int> , <int> , <int> ) ) ; JLabel ideaLabel = new JLabel ( <str> ) ; JLabel ideaDesc = new JLabel ( <str> ) ; ideaBox = new SetupCheckBox ( ) ; ideaLabel . setForeground ( new Color ( <int> , <int> , <int> ) ) ; ideaDesc . setForeground ( new Color ( <int> , <int> , <int> ) ) ; ideaBox . setBackground ( new Color ( <int> , <int> , <int> ) ) ; JLabel eclipseLabel = new JLabel ( <str> ) ; JLabel eclipseDesc = new JLabel ( <str> ) ; eclipseBox = new SetupCheckBox ( ) ; eclipseLabel . setForeground ( new Color ( <int> , <int> , <int> ) ) ; eclipseDesc . setForeground ( new Color ( <int> , <int> , <int> ) ) ; eclipseBox . setBackground ( new Color ( <int> , <int> , <int> ) ) ; JLabel offlineLabel = new JLabel ( <str> ) ; JLabel offlineDesc = new JLabel ( <str> ) ; offlineBox = new SetupCheckBox ( ) ; offlineLabel . setForeground ( new Color ( <int> , <int> , <int> ) ) ; offlineDesc . setForeground ( new Color ( <int> , <int> , <int> ) ) ; offlineBox . setBackground ( new Color ( <int> , <int> , <int> ) ) ; JSeparator separator = new JSeparator ( ) ; separator . setForeground ( new Color ( <int> , <int> , <int> ) ) ; separator . setBackground ( new Color ( <int> , <int> , <int> ) ) ; content . add ( separator , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , NORTH , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; content . add ( mavenLabel , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , NORTH , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; content . add ( mavenTextField , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , NORTH , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; content . add ( mavenDesc , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , NORTH , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; content . add ( ideaLabel , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , NORTH , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; content . add ( ideaBox , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , NORTH , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; content . add ( ideaDesc , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , NORTH , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; content . add ( eclipseLabel , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , NORTH , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; content . add ( eclipseBox , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , NORTH , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; content . add ( eclipseDesc , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , NORTH , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; content . add ( offlineLabel , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , NORTH , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; content . add ( offlineBox , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , NORTH , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; content . add ( offlineDesc , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , NORTH , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; String text = <str> ; linkText = new JLabel ( <str> + text + <str> ) ; bottomPanel . add ( linkText , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , WEST , NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; bottomPanel . add ( buttonPanel , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , SOUTHEAST , NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; contentPane . add ( bottomPanel , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , SOUTH , HORIZONTAL , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } private void uiStyle ( ) { content . setBackground ( new Color ( <int> , <int> , <int> ) ) ; content . setForeground ( new Color ( <int> , <int> , <int> ) ) ; bottomPanel . setBackground ( new Color ( <int> , <int> , <int> ) ) ; bottomPanel . setForeground ( new Color ( <int> , <int> , <int> ) ) ; buttonPanel . setBackground ( new Color ( <int> , <int> , <int> ) ) ; buttonPanel . setForeground ( new Color ( <int> , <int> , <int> ) ) ; linkText . setForeground ( new Color ( <int> , <int> , <int> ) ) ; contentPane . setBackground ( new Color ( <int> , <int> , <int> ) ) ; Border line = BorderFactory . createLineBorder ( new Color ( <int> , <int> , <int> ) ) ; Border empty = new EmptyBorder ( <int> , <int> , <int> , <int> ) ; CompoundBorder border = new CompoundBorder ( line , empty ) ; mavenTextField . setBorder ( border ) ; mavenTextField . setCaretColor ( new Color ( <int> , <int> , <int> ) ) ; mavenTextField . setBackground ( new Color ( <int> , <int> , <int> ) ) ; mavenTextField . setForeground ( new Color ( <int> , <int> , <int> ) ) ; } public void showDialog ( ) { takeSnapshot ( ) ; setVisible ( true ) ; } public List < String > getGradleArgs ( ) { List < String > list = new ArrayList < String > ( ) ; list . add ( <str> ) ; if ( offlineBox . isSelected ( ) ) { list . add ( <str> ) ; } if ( eclipseBox . isSelected ( ) ) { list . add ( <str> ) ; list . add ( <str> ) ; } if ( ideaBox . isSelected ( ) ) { list . add ( <str> ) ; } return list ; } void onOK ( ) { if ( mavenTextField . getText ( ) . isEmpty ( ) ) { DependencyBank . mavenCentral = <str> ; } else { DependencyBank . mavenCentral = <str> + mavenTextField . getText ( ) + <str> ; } setVisible ( false ) ; } void onCancel ( ) { setVisible ( false ) ; restore ( ) ; } private void takeSnapshot ( ) { mavenSnapshot = mavenTextField . getText ( ) ; ideaSnapshot = ideaBox . isSelected ( ) ; eclipseSnapshot = eclipseBox . isSelected ( ) ; offlineSnapshot = offlineBox . isSelected ( ) ; } private void restore ( ) { mavenTextField . setText ( mavenSnapshot ) ; ideaBox . setSelected ( ideaSnapshot ) ; eclipseBox . setSelected ( eclipseSnapshot ) ; offlineBox . setSelected ( offlineSnapshot ) ; } } 
