package org . gradle . external . javadoc . internal ; import org . jmock . Expectations ; import org . jmock . integration . junit4 . JUnit4Mockery ; import org . jmock . lib . legacy . ClassImposteriser ; import org . junit . Before ; import org . junit . Test ; import java . io . IOException ; public class StringJavadocOptionFileOptionTest { private final JUnit4Mockery context = new JUnit4Mockery ( ) ; private JavadocOptionFileWriterContext writerContextMock ; private final String optionName = <str> ; private StringJavadocOptionFileOption stringOption ; @Before public void setUp ( ) { context . setImposteriser ( ClassImposteriser . INSTANCE ) ; writerContextMock = context . mock ( JavadocOptionFileWriterContext . class ) ; stringOption = new StringJavadocOptionFileOption ( optionName ) ; } @Test public void testWriteNullValue ( ) throws IOException { stringOption . write ( writerContextMock ) ; } @Test public void testWriteNoneNullValue ( ) throws IOException { final String testValue = <str> ; stringOption . setValue ( testValue ) ; context . checking ( new Expectations ( ) { { one ( writerContextMock ) . writeValueOption ( optionName , testValue ) ; } } ) ; stringOption . write ( writerContextMock ) ; } } 
