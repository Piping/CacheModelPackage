package io . netty . util . internal ; import java . io . Serializable ; import java . util . concurrent . atomic . AtomicReferenceFieldUpdater ; abstract class MpscLinkedQueueHeadRef < E > extends MpscLinkedQueuePad0 < E > implements Serializable { private static final long serialVersionUID = <int> ; @SuppressWarnings ( <str> ) private static final AtomicReferenceFieldUpdater < MpscLinkedQueueHeadRef , MpscLinkedQueueNode > UPDATER ; static { @SuppressWarnings ( <str> ) AtomicReferenceFieldUpdater < MpscLinkedQueueHeadRef , MpscLinkedQueueNode > updater ; updater = PlatformDependent . newAtomicReferenceFieldUpdater ( MpscLinkedQueueHeadRef . class , <str> ) ; if ( updater = = null ) { updater = AtomicReferenceFieldUpdater . newUpdater ( MpscLinkedQueueHeadRef . class , MpscLinkedQueueNode . class , <str> ) ; } UPDATER = updater ; } private transient volatile MpscLinkedQueueNode < E > headRef ; protected final MpscLinkedQueueNode < E > headRef ( ) { return headRef ; } protected final void setHeadRef ( MpscLinkedQueueNode < E > headRef ) { this . headRef = headRef ; } protected final void lazySetHeadRef ( MpscLinkedQueueNode < E > headRef ) { UPDATER . lazySet ( this , headRef ) ; } } 
