package org . elasticsearch . plugin . example ; import org . elasticsearch . common . component . LifecycleComponent ; import org . elasticsearch . common . inject . AbstractModule ; import org . elasticsearch . common . inject . Module ; import org . elasticsearch . common . inject . multibindings . Multibinder ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . plugins . Plugin ; import org . elasticsearch . repositories . RepositoriesModule ; import org . elasticsearch . rest . action . cat . AbstractCatAction ; import java . io . Closeable ; import java . util . ArrayList ; import java . util . Collection ; import java . util . Collections ; public class JvmExamplePlugin extends Plugin { private final Settings settings ; public JvmExamplePlugin ( Settings settings ) { this . settings = settings ; } @Override public String name ( ) { return <str> ; } @Override public String description ( ) { return <str> ; } @Override public Collection < Module > nodeModules ( ) { return Collections . < Module > singletonList ( new ConfiguredExampleModule ( ) ) ; } @Override public Collection < Class < ? extends LifecycleComponent > > nodeServices ( ) { Collection < Class < ? extends LifecycleComponent > > services = new ArrayList < > ( ) ; return services ; } @Override public Settings additionalSettings ( ) { return Settings . EMPTY ; } public void onModule ( RepositoriesModule repositoriesModule ) { } public static class ConfiguredExampleModule extends AbstractModule { @Override protected void configure ( ) { bind ( ExamplePluginConfiguration . class ) . asEagerSingleton ( ) ; Multibinder < AbstractCatAction > catActionMultibinder = Multibinder . newSetBinder ( binder ( ) , AbstractCatAction . class ) ; catActionMultibinder . addBinding ( ) . to ( ExampleCatAction . class ) . asEagerSingleton ( ) ; } } } 
