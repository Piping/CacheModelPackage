package org . nd4j . linalg . cpu . complex ; import org . nd4j . linalg . api . buffer . DataBuffer ; import org . nd4j . linalg . api . complex . BaseComplexNDArray ; import org . nd4j . linalg . api . complex . IComplexNDArray ; import org . nd4j . linalg . api . complex . IComplexNumber ; import org . nd4j . linalg . api . ndarray . INDArray ; import org . nd4j . linalg . cpu . NDArray ; import java . util . List ; public class ComplexNDArray extends BaseComplexNDArray { public void close ( ) { } public ComplexNDArray ( float [ ] data , int [ ] shape , char ordering ) { super ( data , shape , ordering ) ; } public ComplexNDArray ( int [ ] shape , int offset , char ordering ) { super ( shape , offset , ordering ) ; } public ComplexNDArray ( int [ ] shape ) { super ( shape ) ; } public ComplexNDArray ( float [ ] data , int [ ] shape , int [ ] stride , char ordering ) { super ( data , shape , stride , ordering ) ; } public ComplexNDArray ( int [ ] shape , char ordering ) { super ( shape , ordering ) ; } public ComplexNDArray ( INDArray m , int [ ] stride , char ordering ) { super ( m , stride , ordering ) ; } public ComplexNDArray ( INDArray m , char ordering ) { super ( m , ordering ) ; } public ComplexNDArray ( INDArray m ) { super ( m ) ; } public ComplexNDArray ( INDArray m , int [ ] stride ) { super ( m , stride ) ; } public ComplexNDArray ( List < IComplexNDArray > slices , int [ ] shape , int [ ] stride ) { super ( slices , shape , stride ) ; } public ComplexNDArray ( List < IComplexNDArray > slices , int [ ] shape , int [ ] stride , char ordering ) { super ( slices , shape , stride , ordering ) ; } public ComplexNDArray ( List < IComplexNDArray > slices , int [ ] shape , char ordering ) { super ( slices , shape , ordering ) ; } public ComplexNDArray ( List < IComplexNDArray > slices , int [ ] shape ) { super ( slices , shape ) ; } public ComplexNDArray ( IComplexNumber [ ] newData , int [ ] shape ) { super ( newData , shape ) ; } public ComplexNDArray ( IComplexNumber [ ] newData , int [ ] shape , int [ ] stride ) { super ( newData , shape , stride ) ; } public ComplexNDArray ( IComplexNumber [ ] newData , int [ ] shape , char ordering ) { super ( newData , shape , ordering ) ; } public ComplexNDArray ( float [ ] data , int [ ] shape , int [ ] stride ) { super ( data , shape , stride ) ; } public ComplexNDArray ( float [ ] data , int [ ] shape , int [ ] stride , int offset , char ordering ) { super ( data , shape , stride , offset , ordering ) ; } public ComplexNDArray ( float [ ] data , int [ ] shape , int [ ] stride , int offset ) { super ( data , shape , stride , offset ) ; } public ComplexNDArray ( float [ ] data , int [ ] shape ) { super ( data , shape ) ; } public ComplexNDArray ( float [ ] data , int [ ] shape , int offset , char ordering ) { super ( data , shape , offset , ordering ) ; } public ComplexNDArray ( float [ ] data , int [ ] shape , int offset ) { super ( data , shape , offset ) ; } public ComplexNDArray ( int [ ] shape , int [ ] stride , int offset ) { super ( shape , stride , offset ) ; } public ComplexNDArray ( int [ ] shape , int [ ] stride , int offset , char ordering ) { super ( shape , stride , offset , ordering ) ; } public ComplexNDArray ( int [ ] shape , int [ ] stride , char ordering ) { super ( shape , stride , ordering ) ; } public ComplexNDArray ( int [ ] shape , int [ ] stride ) { super ( shape , stride ) ; } public ComplexNDArray ( int [ ] shape , int offset ) { super ( shape , offset ) ; } public ComplexNDArray ( int newRows , int newColumns ) { super ( newRows , newColumns ) ; } public ComplexNDArray ( int newRows , int newColumns , char ordering ) { super ( newRows , newColumns , ordering ) ; } public ComplexNDArray ( float [ ] doubles ) { super ( doubles ) ; } public ComplexNDArray ( float [ ] [ ] floats ) { this ( new NDArray ( floats ) ) ; } public ComplexNDArray ( DataBuffer data ) { super ( data ) ; } public ComplexNDArray ( DataBuffer data , int [ ] shape , int [ ] stride , int offset ) { super ( data , shape , stride , offset ) ; } public ComplexNDArray ( IComplexNumber [ ] data , int [ ] shape , int [ ] stride , int offset , char ordering ) { super ( data , shape , stride , offset , ordering ) ; } public ComplexNDArray ( DataBuffer data , int [ ] newDims , int [ ] newStrides , int offset , char ordering ) { super ( data , newDims , newStrides , offset , ordering ) ; } public ComplexNDArray ( DataBuffer data , int [ ] shape ) { super ( data , shape ) ; } public ComplexNDArray ( DataBuffer data , int [ ] shape , int [ ] stride ) { super ( data , shape , stride ) ; } public ComplexNDArray ( float [ ] data , Character order ) { super ( data , order ) ; } } 
