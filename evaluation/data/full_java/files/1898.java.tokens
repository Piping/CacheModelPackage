package clojure . lang ; import java . io . PushbackReader ; import java . io . Reader ; import java . io . LineNumberReader ; import java . io . IOException ; public class LineNumberingPushbackReader extends PushbackReader { private static final int newline = ( int ) <str> ; private boolean _atLineStart = true ; private boolean _prev ; private int _columnNumber = <int> ; public LineNumberingPushbackReader ( Reader r ) { super ( new LineNumberReader ( r ) ) ; } public LineNumberingPushbackReader ( Reader r , int size ) { super ( new LineNumberReader ( r , size ) ) ; } public int getLineNumber ( ) { return ( ( LineNumberReader ) in ) . getLineNumber ( ) + <int> ; } public void setLineNumber ( int line ) { ( ( LineNumberReader ) in ) . setLineNumber ( line - <int> ) ; } public int getColumnNumber ( ) { return _columnNumber ; } public int read ( ) throws IOException { int c = super . read ( ) ; _prev = _atLineStart ; if ( ( c = = newline ) | | ( c = = - <int> ) ) { _atLineStart = true ; _columnNumber = <int> ; } else { _atLineStart = false ; _columnNumber + + ; } return c ; } public void unread ( int c ) throws IOException { super . unread ( c ) ; _atLineStart = _prev ; _columnNumber - - ; } public String readLine ( ) throws IOException { int c = read ( ) ; String line ; switch ( c ) { case - <int> : line = null ; break ; case newline : line = <str> ; break ; default : String first = String . valueOf ( ( char ) c ) ; String rest = ( ( LineNumberReader ) in ) . readLine ( ) ; line = ( rest = = null ) ? first : first + rest ; _prev = false ; _atLineStart = true ; _columnNumber = <int> ; break ; } return line ; } public boolean atLineStart ( ) { return _atLineStart ; } } 
