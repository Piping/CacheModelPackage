package org . gradle . nativeplatform . test . internal ; import org . gradle . api . tasks . diagnostics . internal . text . TextReportBuilder ; import org . gradle . model . internal . manage . schema . ModelSchemaStore ; import org . gradle . nativeplatform . internal . AbstractNativeBinaryRenderer ; import org . gradle . nativeplatform . test . NativeTestSuiteBinarySpec ; import javax . inject . Inject ; public class NativeTestSuiteBinaryRenderer extends AbstractNativeBinaryRenderer < NativeTestSuiteBinarySpec > { @Inject public NativeTestSuiteBinaryRenderer ( ModelSchemaStore schemaStore ) { super ( schemaStore ) ; } @Override public Class < NativeTestSuiteBinarySpec > getTargetType ( ) { return NativeTestSuiteBinarySpec . class ; } @Override protected void renderTasks ( NativeTestSuiteBinarySpec binary , TextReportBuilder builder ) { builder . item ( <str> , binary . getTasks ( ) . getInstall ( ) . getPath ( ) ) ; builder . item ( <str> , binary . getTasks ( ) . getRun ( ) . getPath ( ) ) ; } @Override protected void renderOutputs ( NativeTestSuiteBinarySpec binary , TextReportBuilder builder ) { builder . item ( <str> , binary . getExecutableFile ( ) ) ; } } 
