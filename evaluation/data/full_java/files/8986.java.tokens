package org . elasticsearch . test . disruption ; import org . elasticsearch . plugins . Plugin ; import org . elasticsearch . test . ESIntegTestCase ; import org . elasticsearch . test . InternalTestCluster ; import org . elasticsearch . test . transport . MockTransportService ; import java . io . IOException ; import java . util . Collection ; public class NetworkPartitionIT extends ESIntegTestCase { @Override protected Collection < Class < ? extends Plugin > > nodePlugins ( ) { return pluginList ( MockTransportService . TestPlugin . class ) ; } public void testNetworkPartitionWithNodeShutdown ( ) throws IOException { internalCluster ( ) . ensureAtLeastNumDataNodes ( <int> ) ; String [ ] nodeNames = internalCluster ( ) . getNodeNames ( ) ; NetworkPartition networkPartition = new NetworkUnresponsivePartition ( nodeNames [ <int> ] , nodeNames [ <int> ] , getRandom ( ) ) ; internalCluster ( ) . setDisruptionScheme ( networkPartition ) ; networkPartition . startDisrupting ( ) ; internalCluster ( ) . stopRandomNode ( InternalTestCluster . nameFilter ( nodeNames [ <int> ] ) ) ; internalCluster ( ) . clearDisruptionScheme ( ) ; } } 
