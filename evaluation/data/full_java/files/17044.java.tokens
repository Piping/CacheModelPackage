package com . badlogic . gdx . physics . box2d ; import com . badlogic . gdx . math . Vector2 ; public class PolygonShape extends Shape { public PolygonShape ( ) { addr = newPolygonShape ( ) ; } protected PolygonShape ( long addr ) { this . addr = addr ; } private native long newPolygonShape ( ) ; @Override public Type getType ( ) { return Type . Polygon ; } public void set ( Vector2 [ ] vertices ) { float [ ] verts = new float [ vertices . length * <int> ] ; for ( int i = <int> , j = <int> ; i < vertices . length * <int> ; i + = <int> , j + + ) { verts [ i ] = vertices [ j ] . x ; verts [ i + <int> ] = vertices [ j ] . y ; } jniSet ( addr , verts , <int> , verts . length ) ; } public void set ( float [ ] vertices ) { jniSet ( addr , vertices , <int> , vertices . length ) ; } public void set ( float [ ] vertices , int offset , int len ) { jniSet ( addr , vertices , offset , len ) ; } private native void jniSet ( long addr , float [ ] verts , int offset , int len ) ; public void setAsBox ( float hx , float hy ) { jniSetAsBox ( addr , hx , hy ) ; } private native void jniSetAsBox ( long addr , float hx , float hy ) ; public void setAsBox ( float hx , float hy , Vector2 center , float angle ) { jniSetAsBox ( addr , hx , hy , center . x , center . y , angle ) ; } private native void jniSetAsBox ( long addr , float hx , float hy , float centerX , float centerY , float angle ) ; public int getVertexCount ( ) { return jniGetVertexCount ( addr ) ; } private native int jniGetVertexCount ( long addr ) ; private static float [ ] verts = new float [ <int> ] ; public void getVertex ( int index , Vector2 vertex ) { jniGetVertex ( addr , index , verts ) ; vertex . x = verts [ <int> ] ; vertex . y = verts [ <int> ] ; } private native void jniGetVertex ( long addr , int index , float [ ] verts ) ; } 
