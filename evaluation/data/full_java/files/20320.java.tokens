package io . netty . channel . socket . oio ; import io . netty . buffer . ByteBufAllocator ; import io . netty . channel . ChannelOption ; import io . netty . channel . MessageSizeEstimator ; import io . netty . channel . RecvByteBufAllocator ; import io . netty . channel . socket . ServerSocketChannelConfig ; public interface OioServerSocketChannelConfig extends ServerSocketChannelConfig { OioServerSocketChannelConfig setSoTimeout ( int timeout ) ; int getSoTimeout ( ) ; @Override OioServerSocketChannelConfig setBacklog ( int backlog ) ; @Override OioServerSocketChannelConfig setReuseAddress ( boolean reuseAddress ) ; @Override OioServerSocketChannelConfig setReceiveBufferSize ( int receiveBufferSize ) ; @Override OioServerSocketChannelConfig setPerformancePreferences ( int connectionTime , int latency , int bandwidth ) ; @Override OioServerSocketChannelConfig setConnectTimeoutMillis ( int connectTimeoutMillis ) ; @Override @Deprecated OioServerSocketChannelConfig setMaxMessagesPerRead ( int maxMessagesPerRead ) ; @Override OioServerSocketChannelConfig setWriteSpinCount ( int writeSpinCount ) ; @Override OioServerSocketChannelConfig setAllocator ( ByteBufAllocator allocator ) ; @Override OioServerSocketChannelConfig setRecvByteBufAllocator ( RecvByteBufAllocator allocator ) ; @Override OioServerSocketChannelConfig setAutoRead ( boolean autoRead ) ; @Override OioServerSocketChannelConfig setAutoClose ( boolean autoClose ) ; @Override OioServerSocketChannelConfig setWriteBufferHighWaterMark ( int writeBufferHighWaterMark ) ; @Override OioServerSocketChannelConfig setWriteBufferLowWaterMark ( int writeBufferLowWaterMark ) ; @Override OioServerSocketChannelConfig setMessageSizeEstimator ( MessageSizeEstimator estimator ) ; } 
