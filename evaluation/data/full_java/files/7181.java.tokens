package org . elasticsearch . search . aggregations . bucket . histogram ; import org . elasticsearch . common . unit . TimeValue ; import org . elasticsearch . common . xcontent . XContentBuilder ; import org . elasticsearch . search . aggregations . ValuesSourceAggregationBuilder ; import org . elasticsearch . search . builder . SearchSourceBuilderException ; import org . joda . time . DateTime ; import java . io . IOException ; public class DateHistogramBuilder extends ValuesSourceAggregationBuilder < DateHistogramBuilder > { private Object interval ; private Histogram . Order order ; private Long minDocCount ; private Object extendedBoundsMin ; private Object extendedBoundsMax ; private String timeZone ; private String format ; private String offset ; public DateHistogramBuilder ( String name ) { super ( name , InternalDateHistogram . TYPE . name ( ) ) ; } public DateHistogramBuilder interval ( long interval ) { this . interval = interval ; return this ; } public DateHistogramBuilder interval ( DateHistogramInterval interval ) { this . interval = interval ; return this ; } public DateHistogramBuilder order ( Histogram . Order order ) { this . order = order ; return this ; } public DateHistogramBuilder minDocCount ( long minDocCount ) { this . minDocCount = minDocCount ; return this ; } public DateHistogramBuilder timeZone ( String timeZone ) { this . timeZone = timeZone ; return this ; } public DateHistogramBuilder offset ( String offset ) { this . offset = offset ; return this ; } public DateHistogramBuilder format ( String format ) { this . format = format ; return this ; } public DateHistogramBuilder extendedBounds ( Long min , Long max ) { extendedBoundsMin = min ; extendedBoundsMax = max ; return this ; } public DateHistogramBuilder extendedBounds ( String min , String max ) { extendedBoundsMin = min ; extendedBoundsMax = max ; return this ; } public DateHistogramBuilder extendedBounds ( DateTime min , DateTime max ) { extendedBoundsMin = min ; extendedBoundsMax = max ; return this ; } @Override protected XContentBuilder doInternalXContent ( XContentBuilder builder , Params params ) throws IOException { if ( interval = = null ) { throw new SearchSourceBuilderException ( <str> + getName ( ) + <str> ) ; } if ( interval instanceof Number ) { interval = TimeValue . timeValueMillis ( ( ( Number ) interval ) . longValue ( ) ) . toString ( ) ; } builder . field ( <str> , interval ) ; if ( minDocCount ! = null ) { builder . field ( <str> , minDocCount ) ; } if ( order ! = null ) { builder . field ( <str> ) ; order . toXContent ( builder , params ) ; } if ( timeZone ! = null ) { builder . field ( <str> , timeZone ) ; } if ( offset ! = null ) { builder . field ( <str> , offset ) ; } if ( format ! = null ) { builder . field ( <str> , format ) ; } if ( extendedBoundsMin ! = null | | extendedBoundsMax ! = null ) { builder . startObject ( DateHistogramParser . EXTENDED_BOUNDS . getPreferredName ( ) ) ; if ( extendedBoundsMin ! = null ) { builder . field ( <str> , extendedBoundsMin ) ; } if ( extendedBoundsMax ! = null ) { builder . field ( <str> , extendedBoundsMax ) ; } builder . endObject ( ) ; } return builder ; } } 
