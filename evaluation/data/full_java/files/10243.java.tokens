package com . google . common . base ; import com . google . common . annotations . GwtCompatible ; import com . google . common . annotations . GwtIncompatible ; import junit . framework . TestCase ; import java . nio . charset . Charset ; import java . util . Arrays ; @GwtCompatible ( emulated = true ) public class CharsetsTest extends TestCase { @GwtIncompatible ( <str> ) public void testUsAscii ( ) { assertEquals ( Charset . forName ( <str> ) , Charsets . US_ASCII ) ; } @GwtIncompatible ( <str> ) public void testIso88591 ( ) { assertEquals ( Charset . forName ( <str> ) , Charsets . ISO_8859_1 ) ; } public void testUtf8 ( ) { assertEquals ( Charset . forName ( <str> ) , Charsets . UTF_8 ) ; } @GwtIncompatible ( <str> ) public void testUtf16be ( ) { assertEquals ( Charset . forName ( <str> ) , Charsets . UTF_16BE ) ; } @GwtIncompatible ( <str> ) public void testUtf16le ( ) { assertEquals ( Charset . forName ( <str> ) , Charsets . UTF_16LE ) ; } @GwtIncompatible ( <str> ) public void testUtf16 ( ) { assertEquals ( Charset . forName ( <str> ) , Charsets . UTF_16 ) ; } @GwtIncompatible ( <str> ) public void testWhyUsAsciiIsDangerous ( ) { byte [ ] b1 = <str> . getBytes ( Charsets . US_ASCII ) ; byte [ ] b2 = <str> . getBytes ( Charsets . US_ASCII ) ; byte [ ] b3 = <str> . getBytes ( Charsets . US_ASCII ) ; byte [ ] b4 = <str> . getBytes ( Charsets . US_ASCII ) ; byte [ ] b5 = <str> . getBytes ( Charsets . US_ASCII ) ; assertTrue ( Arrays . equals ( b1 , b2 ) ) ; assertTrue ( Arrays . equals ( b2 , b3 ) ) ; assertTrue ( Arrays . equals ( b3 , b4 ) ) ; assertTrue ( Arrays . equals ( b4 , b5 ) ) ; } } 
