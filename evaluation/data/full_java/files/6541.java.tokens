package org . elasticsearch . index . mapper ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . index . mapper . object . RootObjectMapper ; import java . io . IOException ; import java . util . Map ; public abstract class MetadataFieldMapper extends FieldMapper { public static interface TypeParser extends Mapper . TypeParser { @Override MetadataFieldMapper . Builder < ? , ? > parse ( String name , Map < String , Object > node , ParserContext parserContext ) throws MapperParsingException ; MetadataFieldMapper getDefault ( Settings indexSettings , MappedFieldType fieldType , String typeName ) ; } public abstract static class Builder < T extends Builder , Y extends MetadataFieldMapper > extends FieldMapper . Builder < T , Y > { public Builder ( String name , MappedFieldType fieldType ) { super ( name , fieldType ) ; } } protected MetadataFieldMapper ( String simpleName , MappedFieldType fieldType , MappedFieldType defaultFieldType , Settings indexSettings ) { super ( simpleName , fieldType , defaultFieldType , indexSettings , MultiFields . empty ( ) , null ) ; } public abstract void preParse ( ParseContext context ) throws IOException ; public abstract void postParse ( ParseContext context ) throws IOException ; } 
