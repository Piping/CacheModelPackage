package org . elasticsearch . search ; import org . elasticsearch . ElasticsearchException ; import org . elasticsearch . ElasticsearchWrapperException ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import java . io . IOException ; public class SearchException extends ElasticsearchException implements ElasticsearchWrapperException { private final SearchShardTarget shardTarget ; public SearchException ( SearchShardTarget shardTarget , String msg ) { this ( shardTarget , msg , null ) ; } public SearchException ( SearchShardTarget shardTarget , String msg , Throwable cause ) { super ( msg , cause ) ; this . shardTarget = shardTarget ; } public SearchException ( StreamInput in ) throws IOException { super ( in ) ; if ( in . readBoolean ( ) ) { shardTarget = SearchShardTarget . readSearchShardTarget ( in ) ; } else { shardTarget = null ; } } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeOptionalStreamable ( shardTarget ) ; } public SearchShardTarget shard ( ) { return this . shardTarget ; } } 
