package org . eclipse . debug . internal . core . sourcelookup ; import org . eclipse . core . runtime . CoreException ; import org . eclipse . core . runtime . IConfigurationElement ; import org . eclipse . core . runtime . IStatus ; import org . eclipse . core . runtime . Status ; import org . eclipse . debug . core . DebugPlugin ; import org . eclipse . debug . core . sourcelookup . ISourceContainer ; import org . eclipse . debug . core . sourcelookup . ISourceContainerType ; import org . eclipse . debug . core . sourcelookup . ISourceContainerTypeDelegate ; import org . eclipse . debug . internal . core . IConfigurationElementConstants ; public class SourceContainerType implements ISourceContainerType { private ISourceContainerTypeDelegate fDelegate = null ; private IConfigurationElement fElement = null ; public SourceContainerType ( IConfigurationElement element ) { fElement = element ; } @Override public ISourceContainer createSourceContainer ( String memento ) throws CoreException { return getDelegate ( ) . createSourceContainer ( memento ) ; } @Override public String getMemento ( ISourceContainer container ) throws CoreException { if ( this . equals ( container . getType ( ) ) ) { return getDelegate ( ) . getMemento ( container ) ; } IStatus status = new Status ( IStatus . ERROR , DebugPlugin . getUniqueIdentifier ( ) , DebugPlugin . ERROR , SourceLookupMessages . SourceContainerType_0 , null ) ; throw new CoreException ( status ) ; } @Override public String getName ( ) { return fElement . getAttribute ( IConfigurationElementConstants . NAME ) ; } @Override public String getId ( ) { return fElement . getAttribute ( IConfigurationElementConstants . ID ) ; } private ISourceContainerTypeDelegate getDelegate ( ) throws CoreException { if ( fDelegate = = null ) { fDelegate = ( ISourceContainerTypeDelegate ) fElement . createExecutableExtension ( IConfigurationElementConstants . CLASS ) ; } return fDelegate ; } @Override public String getDescription ( ) { return fElement . getAttribute ( IConfigurationElementConstants . DESCRIPTION ) ; } } 
