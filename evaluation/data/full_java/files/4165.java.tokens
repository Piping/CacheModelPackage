package org . eclipse . debug . internal . ui . elements . adapters ; import org . eclipse . debug . core . DebugException ; import org . eclipse . debug . core . model . IVariable ; import org . eclipse . debug . internal . ui . DebugUIPlugin ; import org . eclipse . debug . internal . ui . DefaultLabelProvider ; import org . eclipse . debug . internal . ui . actions . variables . details . DetailPaneAssignValueAction ; import org . eclipse . jface . viewers . ICellModifier ; @SuppressWarnings ( <str> ) public class DefaultVariableCellModifier implements ICellModifier { @Override public boolean canModify ( Object element , String property ) { if ( VariableColumnPresentation . COLUMN_VARIABLE_VALUE . equals ( property ) ) { if ( element instanceof IVariable ) { return ( ( IVariable ) element ) . supportsValueModification ( ) ; } } return false ; } @Override public Object getValue ( Object element , String property ) { if ( VariableColumnPresentation . COLUMN_VARIABLE_VALUE . equals ( property ) ) { if ( element instanceof IVariable ) { IVariable variable = ( IVariable ) element ; try { return DefaultLabelProvider . escapeSpecialChars ( variable . getValue ( ) . getValueString ( ) ) ; } catch ( DebugException e ) { DebugUIPlugin . log ( e ) ; } } } return null ; } @Override public void modify ( Object element , String property , Object value ) { Object oldValue = getValue ( element , property ) ; if ( ! value . equals ( oldValue ) ) { if ( VariableColumnPresentation . COLUMN_VARIABLE_VALUE . equals ( property ) ) { if ( element instanceof IVariable ) { if ( value instanceof String ) { String valueExpression = DefaultLabelProvider . encodeEsacpedChars ( ( String ) value ) ; IVariable variable = ( IVariable ) element ; DetailPaneAssignValueAction . assignValue ( DebugUIPlugin . getShell ( ) , variable , valueExpression ) ; } } } } } } 
