package com . google . common . collect . testing . testers ; import static com . google . common . collect . testing . features . CollectionFeature . ALLOWS_NULL_VALUES ; import static com . google . common . collect . testing . features . CollectionFeature . SUPPORTS_ADD ; import com . google . common . annotations . GwtCompatible ; import com . google . common . collect . testing . features . CollectionFeature ; @SuppressWarnings ( <str> ) @GwtCompatible public class QueueOfferTester < E > extends AbstractQueueTester < E > { @CollectionFeature.Require ( SUPPORTS_ADD ) public void testOffer_supportedNotPresent ( ) { assertTrue ( <str> , getQueue ( ) . offer ( e3 ( ) ) ) ; expectAdded ( e3 ( ) ) ; } @CollectionFeature.Require ( { SUPPORTS_ADD , ALLOWS_NULL_VALUES } ) public void testOffer_nullSupported ( ) { assertTrue ( <str> , getQueue ( ) . offer ( null ) ) ; expectAdded ( ( E ) null ) ; } @CollectionFeature.Require ( value = SUPPORTS_ADD , absent = ALLOWS_NULL_VALUES ) public void testOffer_nullUnsupported ( ) { try { getQueue ( ) . offer ( null ) ; fail ( <str> ) ; } catch ( NullPointerException expected ) { } expectUnchanged ( ) ; expectNullMissingWhenNullUnsupported ( <str> ) ; } } 
