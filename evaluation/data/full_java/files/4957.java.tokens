package org . elasticsearch . action . admin . cluster . node . liveness ; import org . elasticsearch . action . ActionResponse ; import org . elasticsearch . cluster . ClusterName ; import org . elasticsearch . cluster . node . DiscoveryNode ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import java . io . IOException ; public final class LivenessResponse extends ActionResponse { private DiscoveryNode node ; private ClusterName clusterName ; public LivenessResponse ( ) { } public LivenessResponse ( ClusterName clusterName , DiscoveryNode node ) { this . node = node ; this . clusterName = clusterName ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; clusterName = ClusterName . readClusterName ( in ) ; if ( in . readBoolean ( ) ) { node = DiscoveryNode . readNode ( in ) ; } else { node = null ; } } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; clusterName . writeTo ( out ) ; out . writeOptionalStreamable ( node ) ; } public ClusterName getClusterName ( ) { return clusterName ; } public DiscoveryNode getDiscoveryNode ( ) { return node ; } } 
