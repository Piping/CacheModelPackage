package com . google . common . escape . testing ; import static com . google . common . escape . Escapers . computeReplacement ; import com . google . common . annotations . Beta ; import com . google . common . annotations . GwtCompatible ; import com . google . common . escape . CharEscaper ; import com . google . common . escape . Escaper ; import com . google . common . escape . UnicodeEscaper ; import junit . framework . Assert ; import java . io . IOException ; @Beta @GwtCompatible public final class EscaperAsserts { private EscaperAsserts ( ) { } public static void assertBasic ( Escaper escaper ) throws IOException { Assert . assertEquals ( <str> , escaper . escape ( <str> ) ) ; try { escaper . escape ( ( String ) null ) ; Assert . fail ( <str> ) ; } catch ( NullPointerException e ) { } } public static void assertEscaping ( CharEscaper escaper , String expected , char c ) { String escaped = computeReplacement ( escaper , c ) ; Assert . assertNotNull ( escaped ) ; Assert . assertEquals ( expected , escaped ) ; } public static void assertUnescaped ( CharEscaper escaper , char c ) { Assert . assertNull ( computeReplacement ( escaper , c ) ) ; } public static void assertEscaping ( UnicodeEscaper escaper , String expected , int cp ) { String escaped = computeReplacement ( escaper , cp ) ; Assert . assertNotNull ( escaped ) ; Assert . assertEquals ( expected , escaped ) ; } public static void assertUnescaped ( UnicodeEscaper escaper , int cp ) { Assert . assertNull ( computeReplacement ( escaper , cp ) ) ; } public static void assertUnicodeEscaping ( UnicodeEscaper escaper , String expected , char hi , char lo ) { int cp = Character . toCodePoint ( hi , lo ) ; String escaped = computeReplacement ( escaper , cp ) ; Assert . assertNotNull ( escaped ) ; Assert . assertEquals ( expected , escaped ) ; } } 
