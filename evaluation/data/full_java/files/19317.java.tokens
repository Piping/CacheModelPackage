package io . netty . handler . codec . http2 ; import static io . netty . util . internal . ObjectUtil . checkNotNull ; import io . netty . buffer . ByteBuf ; import io . netty . channel . ChannelHandlerContext ; import java . util . List ; public class DecoratingHttp2ConnectionDecoder implements Http2ConnectionDecoder { private final Http2ConnectionDecoder delegate ; public DecoratingHttp2ConnectionDecoder ( Http2ConnectionDecoder delegate ) { this . delegate = checkNotNull ( delegate , <str> ) ; } @Override public void lifecycleManager ( Http2LifecycleManager lifecycleManager ) { delegate . lifecycleManager ( lifecycleManager ) ; } @Override public Http2Connection connection ( ) { return delegate . connection ( ) ; } @Override public Http2LocalFlowController flowController ( ) { return delegate . flowController ( ) ; } @Override public void frameListener ( Http2FrameListener listener ) { delegate . frameListener ( listener ) ; } @Override public Http2FrameListener frameListener ( ) { return delegate . frameListener ( ) ; } @Override public void decodeFrame ( ChannelHandlerContext ctx , ByteBuf in , List < Object > out ) throws Http2Exception { delegate . decodeFrame ( ctx , in , out ) ; } @Override public Http2Settings localSettings ( ) { return delegate . localSettings ( ) ; } @Override public void localSettings ( Http2Settings settings ) throws Http2Exception { delegate . localSettings ( settings ) ; } @Override public boolean prefaceReceived ( ) { return delegate . prefaceReceived ( ) ; } @Override public void close ( ) { delegate . close ( ) ; } } 
