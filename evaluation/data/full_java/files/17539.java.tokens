package com . badlogic . gdx . physics . bullet . dynamics ; import com . badlogic . gdx . physics . bullet . BulletBase ; import com . badlogic . gdx . physics . bullet . linearmath . * ; import com . badlogic . gdx . physics . bullet . collision . * ; import com . badlogic . gdx . math . Vector3 ; import com . badlogic . gdx . math . Quaternion ; import com . badlogic . gdx . math . Matrix3 ; import com . badlogic . gdx . math . Matrix4 ; public class btDynamicsWorldDoubleData extends BulletBase { private long swigCPtr ; protected btDynamicsWorldDoubleData ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , cPtr , cMemoryOwn ) ; swigCPtr = cPtr ; } public btDynamicsWorldDoubleData ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( swigCPtr = cPtr , cMemoryOwn ) ; } public static long getCPtr ( btDynamicsWorldDoubleData obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; DynamicsJNI . delete_btDynamicsWorldDoubleData ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } public void setSolverInfo ( btContactSolverInfoDoubleData value ) { DynamicsJNI . btDynamicsWorldDoubleData_solverInfo_set ( swigCPtr , this , btContactSolverInfoDoubleData . getCPtr ( value ) , value ) ; } public btContactSolverInfoDoubleData getSolverInfo ( ) { long cPtr = DynamicsJNI . btDynamicsWorldDoubleData_solverInfo_get ( swigCPtr , this ) ; return ( cPtr = = <int> ) ? null : new btContactSolverInfoDoubleData ( cPtr , false ) ; } public void setGravity ( btVector3DoubleData value ) { DynamicsJNI . btDynamicsWorldDoubleData_gravity_set ( swigCPtr , this , btVector3DoubleData . getCPtr ( value ) , value ) ; } public btVector3DoubleData getGravity ( ) { long cPtr = DynamicsJNI . btDynamicsWorldDoubleData_gravity_get ( swigCPtr , this ) ; return ( cPtr = = <int> ) ? null : new btVector3DoubleData ( cPtr , false ) ; } public btDynamicsWorldDoubleData ( ) { this ( DynamicsJNI . new_btDynamicsWorldDoubleData ( ) , true ) ; } } 
