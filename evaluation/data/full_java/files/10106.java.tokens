package com . google . common . collect . testing . testers ; import static com . google . common . collect . testing . features . CollectionFeature . ALLOWS_NULL_VALUES ; import static com . google . common . collect . testing . features . CollectionFeature . SUPPORTS_ADD ; import static com . google . common . collect . testing . features . CollectionSize . ZERO ; import com . google . common . annotations . GwtCompatible ; import com . google . common . annotations . GwtIncompatible ; import com . google . common . collect . testing . Helpers ; import com . google . common . collect . testing . features . CollectionFeature ; import com . google . common . collect . testing . features . CollectionSize ; import java . lang . reflect . Method ; @GwtCompatible ( emulated = true ) public class SetAddTester < E > extends AbstractSetTester < E > { @CollectionFeature.Require ( SUPPORTS_ADD ) @CollectionSize.Require ( absent = ZERO ) public void testAdd_supportedPresent ( ) { assertFalse ( <str> , getSet ( ) . add ( e0 ( ) ) ) ; expectUnchanged ( ) ; } @CollectionFeature.Require ( value = { SUPPORTS_ADD , ALLOWS_NULL_VALUES } ) @CollectionSize.Require ( absent = ZERO ) public void testAdd_supportedNullPresent ( ) { E [ ] array = createArrayWithNullElement ( ) ; collection = getSubjectGenerator ( ) . create ( array ) ; assertFalse ( <str> , getSet ( ) . add ( null ) ) ; expectContents ( array ) ; } @GwtIncompatible ( <str> ) public static Method getAddSupportedNullPresentMethod ( ) { return Helpers . getMethod ( SetAddTester . class , <str> ) ; } } 
