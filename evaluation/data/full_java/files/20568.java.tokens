package com . nostra13 . universalimageloader . core . download ; import com . nostra13 . universalimageloader . core . DisplayImageOptions ; import java . io . IOException ; import java . io . InputStream ; import java . util . Locale ; public interface ImageDownloader { InputStream getStream ( String imageUri , Object extra ) throws IOException ; public enum Scheme { HTTP ( <str> ) , HTTPS ( <str> ) , FILE ( <str> ) , CONTENT ( <str> ) , ASSETS ( <str> ) , DRAWABLE ( <str> ) , UNKNOWN ( <str> ) ; private String scheme ; private String uriPrefix ; Scheme ( String scheme ) { this . scheme = scheme ; uriPrefix = scheme + <str> ; } public static Scheme ofUri ( String uri ) { if ( uri ! = null ) { for ( Scheme s : values ( ) ) { if ( s . belongsTo ( uri ) ) { return s ; } } } return UNKNOWN ; } private boolean belongsTo ( String uri ) { return uri . toLowerCase ( Locale . US ) . startsWith ( uriPrefix ) ; } public String wrap ( String path ) { return uriPrefix + path ; } public String crop ( String uri ) { if ( ! belongsTo ( uri ) ) { throw new IllegalArgumentException ( String . format ( <str> , uri , scheme ) ) ; } return uri . substring ( uriPrefix . length ( ) ) ; } } } 
