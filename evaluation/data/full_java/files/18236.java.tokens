package com . badlogic . gdx . scenes . scene2d . actions ; import com . badlogic . gdx . scenes . scene2d . Action ; import com . badlogic . gdx . scenes . scene2d . Actor ; import com . badlogic . gdx . utils . Array ; public class AfterAction extends DelegateAction { private Array < Action > waitForActions = new Array ( false , <int> ) ; public void setTarget ( Actor target ) { if ( target ! = null ) waitForActions . addAll ( target . getActions ( ) ) ; super . setTarget ( target ) ; } public void restart ( ) { super . restart ( ) ; waitForActions . clear ( ) ; } protected boolean delegate ( float delta ) { Array < Action > currentActions = target . getActions ( ) ; if ( currentActions . size = = <int> ) waitForActions . clear ( ) ; for ( int i = waitForActions . size - <int> ; i > = <int> ; i - - ) { Action action = waitForActions . get ( i ) ; int index = currentActions . indexOf ( action , true ) ; if ( index = = - <int> ) waitForActions . removeIndex ( i ) ; } if ( waitForActions . size > <int> ) return false ; return action . act ( delta ) ; } } 
