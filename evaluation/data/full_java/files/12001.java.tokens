package org . gradle . initialization ; import org . gradle . api . logging . StandardOutputListener ; import org . gradle . util . Clock ; public class DefaultBuildRequestContext implements BuildRequestContext { private final BuildCancellationToken token ; private final BuildEventConsumer buildEventConsumer ; private final BuildRequestMetaData metaData ; private final StandardOutputListener outputListener ; private final StandardOutputListener errorListener ; public DefaultBuildRequestContext ( BuildRequestMetaData metaData , BuildCancellationToken token , BuildEventConsumer buildEventConsumer , StandardOutputListener outputListener , StandardOutputListener errorListener ) { this . metaData = metaData ; this . token = token ; this . buildEventConsumer = buildEventConsumer ; this . outputListener = outputListener ; this . errorListener = errorListener ; } public DefaultBuildRequestContext ( BuildRequestMetaData metaData , BuildCancellationToken token , BuildEventConsumer buildEventConsumer ) { this ( metaData , token , buildEventConsumer , new NoOpListener ( ) , new NoOpListener ( ) ) ; } @Override public BuildEventConsumer getEventConsumer ( ) { return buildEventConsumer ; } @Override public BuildCancellationToken getCancellationToken ( ) { return token ; } @Override public BuildClientMetaData getClient ( ) { return metaData . getClient ( ) ; } @Override public Clock getBuildTimeClock ( ) { return metaData . getBuildTimeClock ( ) ; } @Override public StandardOutputListener getErrorListener ( ) { return errorListener ; } @Override public StandardOutputListener getOutputListener ( ) { return outputListener ; } private static class NoOpListener implements StandardOutputListener { @Override public void onOutput ( CharSequence output ) { } } } 
