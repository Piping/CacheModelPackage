package org . elasticsearch . index . snapshots ; import java . util . concurrent . atomic . AtomicInteger ; import java . util . concurrent . atomic . AtomicLong ; public class IndexShardSnapshotStatus { public static enum Stage { INIT , STARTED , FINALIZE , DONE , FAILURE } private Stage stage = Stage . INIT ; private long startTime ; private long time ; private int numberOfFiles ; private volatile int processedFiles ; private long totalSize ; private volatile long processedSize ; private long indexVersion ; private boolean aborted ; private String failure ; public Stage stage ( ) { return this . stage ; } public void updateStage ( Stage stage ) { this . stage = stage ; } public long startTime ( ) { return this . startTime ; } public void startTime ( long startTime ) { this . startTime = startTime ; } public long time ( ) { return this . time ; } public void time ( long time ) { this . time = time ; } public boolean aborted ( ) { return this . aborted ; } public void abort ( ) { this . aborted = true ; } public void files ( int numberOfFiles , long totalSize ) { this . numberOfFiles = numberOfFiles ; this . totalSize = totalSize ; } public synchronized void processedFiles ( int numberOfFiles , long totalSize ) { processedFiles = numberOfFiles ; processedSize = totalSize ; } public synchronized void addProcessedFile ( long size ) { processedFiles + + ; processedSize + = size ; } public int numberOfFiles ( ) { return numberOfFiles ; } public long totalSize ( ) { return totalSize ; } public int processedFiles ( ) { return processedFiles ; } public long processedSize ( ) { return processedSize ; } public void indexVersion ( long indexVersion ) { this . indexVersion = indexVersion ; } public long indexVersion ( ) { return indexVersion ; } public void failure ( String failure ) { this . failure = failure ; } public String failure ( ) { return failure ; } } 
