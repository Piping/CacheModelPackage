package org . elasticsearch . index . engine ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . index . shard . ShardId ; import org . elasticsearch . rest . RestStatus ; import java . io . IOException ; public class VersionConflictEngineException extends EngineException { public VersionConflictEngineException ( ShardId shardId , String type , String id , String explanation ) { this ( shardId , null , type , id , explanation ) ; } public VersionConflictEngineException ( ShardId shardId , Throwable cause , String type , String id , String explanation ) { this ( shardId , <str> , cause , type , id , explanation ) ; } public VersionConflictEngineException ( ShardId shardId , String msg , Throwable cause , Object . . . params ) { super ( shardId , msg , cause , params ) ; } @Override public RestStatus status ( ) { return RestStatus . CONFLICT ; } public VersionConflictEngineException ( StreamInput in ) throws IOException { super ( in ) ; } } 
