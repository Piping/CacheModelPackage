package org . elasticsearch . search . internal ; import org . elasticsearch . action . search . SearchScrollRequest ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . search . Scroll ; import org . elasticsearch . transport . TransportRequest ; import java . io . IOException ; import static org . elasticsearch . search . Scroll . readScroll ; public class InternalScrollSearchRequest extends TransportRequest { private long id ; private Scroll scroll ; public InternalScrollSearchRequest ( ) { } public InternalScrollSearchRequest ( SearchScrollRequest request , long id ) { super ( request ) ; this . id = id ; this . scroll = request . scroll ( ) ; } public long id ( ) { return id ; } public Scroll scroll ( ) { return scroll ; } public InternalScrollSearchRequest scroll ( Scroll scroll ) { this . scroll = scroll ; return this ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; id = in . readLong ( ) ; if ( in . readBoolean ( ) ) { scroll = readScroll ( in ) ; } } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeLong ( id ) ; if ( scroll = = null ) { out . writeBoolean ( false ) ; } else { out . writeBoolean ( true ) ; scroll . writeTo ( out ) ; } } } 
