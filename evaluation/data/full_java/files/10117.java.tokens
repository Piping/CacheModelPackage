package com . google . common . testing ; import com . google . common . annotations . GwtCompatible ; import java . util . ArrayList ; import java . util . Collection ; import java . util . Collections ; @GwtCompatible final class ClusterException extends RuntimeException { public final Collection < ? extends Throwable > exceptions ; private ClusterException ( Collection < ? extends Throwable > exceptions ) { super ( exceptions . size ( ) + <str> , exceptions . iterator ( ) . next ( ) ) ; ArrayList < Throwable > temp = new ArrayList < Throwable > ( ) ; temp . addAll ( exceptions ) ; this . exceptions = Collections . unmodifiableCollection ( temp ) ; } public static RuntimeException create ( Throwable . . . exceptions ) { ArrayList < Throwable > temp = new ArrayList < Throwable > ( ) ; for ( Throwable exception : exceptions ) { temp . add ( exception ) ; } return create ( temp ) ; } public static RuntimeException create ( Collection < ? extends Throwable > exceptions ) { if ( exceptions . size ( ) = = <int> ) { throw new IllegalArgumentException ( <str> ) ; } if ( exceptions . size ( ) = = <int> ) { Throwable temp = exceptions . iterator ( ) . next ( ) ; if ( temp instanceof RuntimeException ) { return ( RuntimeException ) temp ; } else { return new RuntimeException ( temp ) ; } } return new ClusterException ( exceptions ) ; } } 
