package org . elasticsearch . cluster . routing . allocation . decider ; import org . elasticsearch . cluster . routing . ShardRouting ; import org . elasticsearch . cluster . routing . allocation . RoutingAllocation ; import org . elasticsearch . common . inject . Inject ; import org . elasticsearch . common . settings . Settings ; public class RebalanceOnlyWhenActiveAllocationDecider extends AllocationDecider { public static final String NAME = <str> ; @Inject public RebalanceOnlyWhenActiveAllocationDecider ( Settings settings ) { super ( settings ) ; } @Override public Decision canRebalance ( ShardRouting shardRouting , RoutingAllocation allocation ) { if ( ! allocation . routingNodes ( ) . allReplicasActive ( shardRouting ) ) { return allocation . decision ( Decision . NO , NAME , <str> ) ; } return allocation . decision ( Decision . YES , NAME , <str> ) ; } } 
