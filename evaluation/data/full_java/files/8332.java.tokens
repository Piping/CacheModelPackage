package org . elasticsearch . indices . exists . types ; import org . elasticsearch . action . admin . cluster . health . ClusterHealthResponse ; import org . elasticsearch . action . admin . indices . exists . types . TypesExistsResponse ; import org . elasticsearch . client . Client ; import org . elasticsearch . cluster . metadata . IndexMetaData ; import org . elasticsearch . index . IndexNotFoundException ; import org . elasticsearch . test . ESIntegTestCase ; import java . io . IOException ; import java . util . Arrays ; import static org . elasticsearch . cluster . metadata . IndexMetaData . SETTING_BLOCKS_READ ; import static org . elasticsearch . cluster . metadata . IndexMetaData . SETTING_BLOCKS_WRITE ; import static org . elasticsearch . cluster . metadata . IndexMetaData . SETTING_READ_ONLY ; import static org . elasticsearch . common . xcontent . XContentFactory . jsonBuilder ; import static org . elasticsearch . test . hamcrest . ElasticsearchAssertions . assertAcked ; import static org . elasticsearch . test . hamcrest . ElasticsearchAssertions . assertBlocked ; import static org . hamcrest . Matchers . equalTo ; public class TypesExistsIT extends ESIntegTestCase { public void testSimple ( ) throws Exception { Client client = client ( ) ; client . admin ( ) . indices ( ) . prepareCreate ( <str> ) . addMapping ( <str> , jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . endObject ( ) . endObject ( ) ) . addMapping ( <str> , jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . endObject ( ) . endObject ( ) ) . execute ( ) . actionGet ( ) ; client . admin ( ) . indices ( ) . prepareCreate ( <str> ) . addMapping ( <str> , jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . endObject ( ) . endObject ( ) ) . execute ( ) . actionGet ( ) ; client . admin ( ) . indices ( ) . prepareAliases ( ) . addAlias ( <str> , <str> ) . execute ( ) . actionGet ( ) ; ClusterHealthResponse healthResponse = client . admin ( ) . cluster ( ) . prepareHealth ( <str> , <str> ) . setWaitForYellowStatus ( ) . execute ( ) . actionGet ( ) ; assertThat ( healthResponse . isTimedOut ( ) , equalTo ( false ) ) ; TypesExistsResponse response = client . admin ( ) . indices ( ) . prepareTypesExists ( <str> ) . setTypes ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( response . isExists ( ) , equalTo ( true ) ) ; response = client . admin ( ) . indices ( ) . prepareTypesExists ( <str> ) . setTypes ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( response . isExists ( ) , equalTo ( true ) ) ; response = client . admin ( ) . indices ( ) . prepareTypesExists ( <str> ) . setTypes ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( response . isExists ( ) , equalTo ( false ) ) ; try { client . admin ( ) . indices ( ) . prepareTypesExists ( <str> ) . setTypes ( <str> ) . execute ( ) . actionGet ( ) ; fail ( <str> ) ; } catch ( IndexNotFoundException e ) { } try { client . admin ( ) . indices ( ) . prepareTypesExists ( <str> ) . setTypes ( <str> ) . execute ( ) . actionGet ( ) ; fail ( <str> ) ; } catch ( IndexNotFoundException e ) { } response = client . admin ( ) . indices ( ) . prepareTypesExists ( <str> ) . setTypes ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( response . isExists ( ) , equalTo ( true ) ) ; response = client . admin ( ) . indices ( ) . prepareTypesExists ( <str> ) . setTypes ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( response . isExists ( ) , equalTo ( true ) ) ; response = client . admin ( ) . indices ( ) . prepareTypesExists ( <str> , <str> ) . setTypes ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( response . isExists ( ) , equalTo ( true ) ) ; response = client . admin ( ) . indices ( ) . prepareTypesExists ( <str> , <str> ) . setTypes ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( response . isExists ( ) , equalTo ( false ) ) ; } public void testTypesExistsWithBlocks ( ) throws IOException { assertAcked ( prepareCreate ( <str> ) . addMapping ( <str> , jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . endObject ( ) . endObject ( ) ) ) ; ensureGreen ( <str> ) ; for ( String block : Arrays . asList ( SETTING_BLOCKS_READ , SETTING_BLOCKS_WRITE , SETTING_READ_ONLY ) ) { try { enableIndexBlock ( <str> , block ) ; assertThat ( client ( ) . admin ( ) . indices ( ) . prepareTypesExists ( <str> ) . setTypes ( <str> ) . execute ( ) . actionGet ( ) . isExists ( ) , equalTo ( true ) ) ; } finally { disableIndexBlock ( <str> , block ) ; } } try { enableIndexBlock ( <str> , IndexMetaData . SETTING_BLOCKS_METADATA ) ; assertBlocked ( client ( ) . admin ( ) . indices ( ) . prepareTypesExists ( <str> ) . setTypes ( <str> ) ) ; } finally { disableIndexBlock ( <str> , IndexMetaData . SETTING_BLOCKS_METADATA ) ; } } } 
