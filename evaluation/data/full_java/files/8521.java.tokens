package org . elasticsearch . search . msearch ; import org . elasticsearch . action . search . MultiSearchResponse ; import org . elasticsearch . index . query . QueryBuilders ; import org . elasticsearch . test . ESIntegTestCase ; import static org . elasticsearch . test . hamcrest . ElasticsearchAssertions . assertFirstHit ; import static org . elasticsearch . test . hamcrest . ElasticsearchAssertions . assertHitCount ; import static org . elasticsearch . test . hamcrest . ElasticsearchAssertions . assertNoFailures ; import static org . elasticsearch . test . hamcrest . ElasticsearchAssertions . hasId ; import static org . hamcrest . Matchers . equalTo ; public class SimpleMultiSearchIT extends ESIntegTestCase { public void testSimpleMultiSearch ( ) { createIndex ( <str> ) ; ensureGreen ( ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . execute ( ) . actionGet ( ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . execute ( ) . actionGet ( ) ; refresh ( ) ; MultiSearchResponse response = client ( ) . prepareMultiSearch ( ) . add ( client ( ) . prepareSearch ( <str> ) . setQuery ( QueryBuilders . termQuery ( <str> , <str> ) ) ) . add ( client ( ) . prepareSearch ( <str> ) . setQuery ( QueryBuilders . termQuery ( <str> , <str> ) ) ) . add ( client ( ) . prepareSearch ( <str> ) . setQuery ( QueryBuilders . matchAllQuery ( ) ) ) . execute ( ) . actionGet ( ) ; for ( MultiSearchResponse . Item item : response ) { assertNoFailures ( item . getResponse ( ) ) ; } assertThat ( response . getResponses ( ) . length , equalTo ( <int> ) ) ; assertHitCount ( response . getResponses ( ) [ <int> ] . getResponse ( ) , <int> ) ; assertHitCount ( response . getResponses ( ) [ <int> ] . getResponse ( ) , <int> ) ; assertHitCount ( response . getResponses ( ) [ <int> ] . getResponse ( ) , <int> ) ; assertFirstHit ( response . getResponses ( ) [ <int> ] . getResponse ( ) , hasId ( <str> ) ) ; assertFirstHit ( response . getResponses ( ) [ <int> ] . getResponse ( ) , hasId ( <str> ) ) ; } } 
