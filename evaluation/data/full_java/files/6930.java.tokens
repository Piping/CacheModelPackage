package org . elasticsearch . repositories ; import org . elasticsearch . ElasticsearchException ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import java . io . IOException ; public class RepositoryException extends ElasticsearchException { private final String repository ; public RepositoryException ( String repository , String msg ) { this ( repository , msg , null ) ; } public RepositoryException ( String repository , String msg , Throwable cause ) { super ( <str> + ( repository = = null ? <str> : repository ) + <str> + msg , cause ) ; this . repository = repository ; } public String repository ( ) { return repository ; } public RepositoryException ( StreamInput in ) throws IOException { super ( in ) ; repository = in . readOptionalString ( ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeOptionalString ( repository ) ; } } 
