package com . badlogic . gdx . physics . bullet . collision ; import com . badlogic . gdx . physics . bullet . BulletBase ; import com . badlogic . gdx . physics . bullet . linearmath . * ; import com . badlogic . gdx . math . Vector3 ; import com . badlogic . gdx . math . Quaternion ; import com . badlogic . gdx . math . Matrix3 ; import com . badlogic . gdx . math . Matrix4 ; public class btConvexConcaveCollisionAlgorithm extends btActivatingCollisionAlgorithm { private long swigCPtr ; protected btConvexConcaveCollisionAlgorithm ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , CollisionJNI . btConvexConcaveCollisionAlgorithm_SWIGUpcast ( cPtr ) , cMemoryOwn ) ; swigCPtr = cPtr ; } public btConvexConcaveCollisionAlgorithm ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( CollisionJNI . btConvexConcaveCollisionAlgorithm_SWIGUpcast ( swigCPtr = cPtr ) , cMemoryOwn ) ; } public static long getCPtr ( btConvexConcaveCollisionAlgorithm obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; CollisionJNI . delete_btConvexConcaveCollisionAlgorithm ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } public btConvexConcaveCollisionAlgorithm ( btCollisionAlgorithmConstructionInfo ci , btCollisionObjectWrapper body0Wrap , btCollisionObjectWrapper body1Wrap , boolean isSwapped ) { this ( CollisionJNI . new_btConvexConcaveCollisionAlgorithm ( btCollisionAlgorithmConstructionInfo . getCPtr ( ci ) , ci , btCollisionObjectWrapper . getCPtr ( body0Wrap ) , body0Wrap , btCollisionObjectWrapper . getCPtr ( body1Wrap ) , body1Wrap , isSwapped ) , true ) ; } public void clearCache ( ) { CollisionJNI . btConvexConcaveCollisionAlgorithm_clearCache ( swigCPtr , this ) ; } static public class CreateFunc extends BulletBase { private long swigCPtr ; protected CreateFunc ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , cPtr , cMemoryOwn ) ; swigCPtr = cPtr ; } public CreateFunc ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( swigCPtr = cPtr , cMemoryOwn ) ; } public static long getCPtr ( CreateFunc obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; CollisionJNI . delete_btConvexConcaveCollisionAlgorithm_CreateFunc ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } public btCollisionAlgorithm CreateCollisionAlgorithm ( btCollisionAlgorithmConstructionInfo ci , btCollisionObjectWrapper body0Wrap , btCollisionObjectWrapper body1Wrap ) { long cPtr = CollisionJNI . btConvexConcaveCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm ( swigCPtr , this , btCollisionAlgorithmConstructionInfo . getCPtr ( ci ) , ci , btCollisionObjectWrapper . getCPtr ( body0Wrap ) , body0Wrap , btCollisionObjectWrapper . getCPtr ( body1Wrap ) , body1Wrap ) ; return ( cPtr = = <int> ) ? null : new btCollisionAlgorithm ( cPtr , false ) ; } public CreateFunc ( ) { this ( CollisionJNI . new_btConvexConcaveCollisionAlgorithm_CreateFunc ( ) , true ) ; } } static public class SwappedCreateFunc extends BulletBase { private long swigCPtr ; protected SwappedCreateFunc ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , cPtr , cMemoryOwn ) ; swigCPtr = cPtr ; } public SwappedCreateFunc ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( swigCPtr = cPtr , cMemoryOwn ) ; } public static long getCPtr ( SwappedCreateFunc obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; CollisionJNI . delete_btConvexConcaveCollisionAlgorithm_SwappedCreateFunc ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } public btCollisionAlgorithm CreateCollisionAlgorithm ( btCollisionAlgorithmConstructionInfo ci , btCollisionObjectWrapper body0Wrap , btCollisionObjectWrapper body1Wrap ) { long cPtr = CollisionJNI . btConvexConcaveCollisionAlgorithm_SwappedCreateFunc_CreateCollisionAlgorithm ( swigCPtr , this , btCollisionAlgorithmConstructionInfo . getCPtr ( ci ) , ci , btCollisionObjectWrapper . getCPtr ( body0Wrap ) , body0Wrap , btCollisionObjectWrapper . getCPtr ( body1Wrap ) , body1Wrap ) ; return ( cPtr = = <int> ) ? null : new btCollisionAlgorithm ( cPtr , false ) ; } public SwappedCreateFunc ( ) { this ( CollisionJNI . new_btConvexConcaveCollisionAlgorithm_SwappedCreateFunc ( ) , true ) ; } } } 
