package org . gradle . api . invocation ; import groovy . lang . Closure ; import org . gradle . BuildListener ; import org . gradle . StartParameter ; import org . gradle . api . Action ; import org . gradle . api . Project ; import org . gradle . api . ProjectEvaluationListener ; import org . gradle . api . execution . TaskExecutionGraph ; import org . gradle . internal . HasInternalProtocol ; import org . gradle . api . plugins . PluginAware ; import java . io . File ; @HasInternalProtocol public interface Gradle extends PluginAware { String getGradleVersion ( ) ; File getGradleUserHomeDir ( ) ; File getGradleHomeDir ( ) ; Gradle getParent ( ) ; Project getRootProject ( ) throws IllegalStateException ; void rootProject ( Action < ? super Project > action ) ; void allprojects ( Action < ? super Project > action ) ; TaskExecutionGraph getTaskGraph ( ) ; StartParameter getStartParameter ( ) ; ProjectEvaluationListener addProjectEvaluationListener ( ProjectEvaluationListener listener ) ; void removeProjectEvaluationListener ( ProjectEvaluationListener listener ) ; void beforeProject ( Closure closure ) ; void afterProject ( Closure closure ) ; void buildStarted ( Closure closure ) ; void settingsEvaluated ( Closure closure ) ; void projectsLoaded ( Closure closure ) ; void projectsEvaluated ( Closure closure ) ; void buildFinished ( Closure closure ) ; void addBuildListener ( BuildListener buildListener ) ; public void addListener ( Object listener ) ; public void removeListener ( Object listener ) ; public void useLogger ( Object logger ) ; Gradle getGradle ( ) ; } 
