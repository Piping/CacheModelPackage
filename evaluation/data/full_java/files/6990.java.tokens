package org . elasticsearch . rest . action . admin . indices . delete ; import org . elasticsearch . action . admin . indices . delete . DeleteIndexRequest ; import org . elasticsearch . action . admin . indices . delete . DeleteIndexResponse ; import org . elasticsearch . action . support . IndicesOptions ; import org . elasticsearch . client . Client ; import org . elasticsearch . common . Strings ; import org . elasticsearch . common . inject . Inject ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . rest . * ; import org . elasticsearch . rest . action . support . AcknowledgedRestListener ; public class RestDeleteIndexAction extends BaseRestHandler { @Inject public RestDeleteIndexAction ( Settings settings , RestController controller , Client client ) { super ( settings , controller , client ) ; controller . registerHandler ( RestRequest . Method . DELETE , <str> , this ) ; controller . registerHandler ( RestRequest . Method . DELETE , <str> , this ) ; } @Override public void handleRequest ( final RestRequest request , final RestChannel channel , final Client client ) { DeleteIndexRequest deleteIndexRequest = new DeleteIndexRequest ( Strings . splitStringByCommaToArray ( request . param ( <str> ) ) ) ; deleteIndexRequest . timeout ( request . paramAsTime ( <str> , deleteIndexRequest . timeout ( ) ) ) ; deleteIndexRequest . masterNodeTimeout ( request . paramAsTime ( <str> , deleteIndexRequest . masterNodeTimeout ( ) ) ) ; deleteIndexRequest . indicesOptions ( IndicesOptions . fromRequest ( request , deleteIndexRequest . indicesOptions ( ) ) ) ; client . admin ( ) . indices ( ) . delete ( deleteIndexRequest , new AcknowledgedRestListener < DeleteIndexResponse > ( channel ) ) ; } } 
