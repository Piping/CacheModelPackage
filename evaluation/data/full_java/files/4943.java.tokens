package org . elasticsearch . action . admin . cluster . node . hotthreads ; import org . elasticsearch . action . support . nodes . BaseNodeResponse ; import org . elasticsearch . cluster . node . DiscoveryNode ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import java . io . IOException ; public class NodeHotThreads extends BaseNodeResponse { private String hotThreads ; NodeHotThreads ( ) { } public NodeHotThreads ( DiscoveryNode node , String hotThreads ) { super ( node ) ; this . hotThreads = hotThreads ; } public String getHotThreads ( ) { return this . hotThreads ; } public static NodeHotThreads readNodeHotThreads ( StreamInput in ) throws IOException { NodeHotThreads node = new NodeHotThreads ( ) ; node . readFrom ( in ) ; return node ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; hotThreads = in . readString ( ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeString ( hotThreads ) ; } } 
