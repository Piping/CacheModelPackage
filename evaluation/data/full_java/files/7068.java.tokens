package org . elasticsearch . rest . action . template ; import org . elasticsearch . client . Client ; import org . elasticsearch . common . inject . Inject ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . rest . * ; import org . elasticsearch . rest . action . script . RestPutIndexedScriptAction ; import org . elasticsearch . script . Template ; import static org . elasticsearch . rest . RestRequest . Method . POST ; import static org . elasticsearch . rest . RestRequest . Method . PUT ; public class RestPutSearchTemplateAction extends RestPutIndexedScriptAction { @Inject public RestPutSearchTemplateAction ( Settings settings , RestController controller , Client client ) { super ( settings , controller , false , client ) ; controller . registerHandler ( POST , <str> , this ) ; controller . registerHandler ( PUT , <str> , this ) ; controller . registerHandler ( PUT , <str> , new CreateHandler ( settings , controller , client ) ) ; controller . registerHandler ( POST , <str> , new CreateHandler ( settings , controller , client ) ) ; } final class CreateHandler extends BaseRestHandler { protected CreateHandler ( Settings settings , RestController controller , Client client ) { super ( settings , controller , client ) ; } @Override public void handleRequest ( RestRequest request , RestChannel channel , final Client client ) { request . params ( ) . put ( <str> , <str> ) ; RestPutSearchTemplateAction . this . handleRequest ( request , channel , client ) ; } } @Override protected String getScriptLang ( RestRequest request ) { return Template . DEFAULT_LANG ; } } 
