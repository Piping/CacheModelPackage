package org . gradle . cache . internal ; import org . gradle . internal . Factory ; import org . gradle . internal . UncheckedException ; import java . util . concurrent . Callable ; public abstract class AbstractFileAccess implements FileAccess { public < T > T readFile ( final Callable < ? extends T > action ) throws LockTimeoutException , FileIntegrityViolationException { return readFile ( new Factory < T > ( ) { public T create ( ) { try { return action . call ( ) ; } catch ( Exception e ) { throw UncheckedException . throwAsUncheckedException ( e ) ; } } } ) ; } } 
