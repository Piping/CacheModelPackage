package org . elasticsearch . index . fielddata . plain ; import org . apache . lucene . index . LeafReaderContext ; import org . elasticsearch . index . Index ; import org . elasticsearch . index . fielddata . FieldDataType ; import org . elasticsearch . index . fielddata . IndexFieldData ; import org . elasticsearch . index . fielddata . IndexFieldData . XFieldComparatorSource . Nested ; import org . elasticsearch . index . fielddata . fieldcomparator . BytesRefFieldComparatorSource ; import org . elasticsearch . index . mapper . MappedFieldType . Names ; import org . elasticsearch . search . MultiValueMode ; public class BinaryDVIndexFieldData extends DocValuesIndexFieldData implements IndexFieldData < BinaryDVAtomicFieldData > { public BinaryDVIndexFieldData ( Index index , Names fieldNames , FieldDataType fieldDataType ) { super ( index , fieldNames , fieldDataType ) ; } @Override public BinaryDVAtomicFieldData load ( LeafReaderContext context ) { return new BinaryDVAtomicFieldData ( context . reader ( ) , fieldNames . indexName ( ) ) ; } @Override public BinaryDVAtomicFieldData loadDirect ( LeafReaderContext context ) throws Exception { return load ( context ) ; } @Override public org . elasticsearch . index . fielddata . IndexFieldData . XFieldComparatorSource comparatorSource ( Object missingValue , MultiValueMode sortMode , Nested nested ) { return new BytesRefFieldComparatorSource ( this , missingValue , sortMode , nested ) ; } } 
