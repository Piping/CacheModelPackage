package io . netty . handler . codec . http . cookie ; import static io . netty . handler . codec . http . cookie . CookieUtil . firstInvalidCookieNameOctet ; import static io . netty . handler . codec . http . cookie . CookieUtil . firstInvalidCookieValueOctet ; import static io . netty . handler . codec . http . cookie . CookieUtil . unwrapValue ; public abstract class CookieEncoder { protected final boolean strict ; protected CookieEncoder ( boolean strict ) { this . strict = strict ; } protected void validateCookie ( String name , String value ) { if ( strict ) { int pos ; if ( ( pos = firstInvalidCookieNameOctet ( name ) ) > = <int> ) { throw new IllegalArgumentException ( <str> + name . charAt ( pos ) ) ; } CharSequence unwrappedValue = unwrapValue ( value ) ; if ( unwrappedValue = = null ) { throw new IllegalArgumentException ( <str> + value ) ; } if ( ( pos = firstInvalidCookieValueOctet ( unwrappedValue ) ) > = <int> ) { throw new IllegalArgumentException ( <str> + value . charAt ( pos ) ) ; } } } } 
