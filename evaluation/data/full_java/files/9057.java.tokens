package org . elasticsearch . test . rest . section ; import java . util . ArrayList ; import java . util . List ; public class TestSection implements Comparable < TestSection > { private final String name ; private SkipSection skipSection ; private final List < ExecutableSection > executableSections ; public TestSection ( String name ) { this . name = name ; this . executableSections = new ArrayList < > ( ) ; } public String getName ( ) { return name ; } public SkipSection getSkipSection ( ) { return skipSection ; } public void setSkipSection ( SkipSection skipSection ) { this . skipSection = skipSection ; } public List < ExecutableSection > getExecutableSections ( ) { return executableSections ; } public void addExecutableSection ( ExecutableSection executableSection ) { this . executableSections . add ( executableSection ) ; } @Override public boolean equals ( Object o ) { if ( this = = o ) return true ; if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) return false ; TestSection that = ( TestSection ) o ; if ( name ! = null ? ! name . equals ( that . name ) : that . name ! = null ) return false ; return true ; } @Override public int hashCode ( ) { return name ! = null ? name . hashCode ( ) : <int> ; } @Override public int compareTo ( TestSection o ) { return name . compareTo ( o . getName ( ) ) ; } } 
