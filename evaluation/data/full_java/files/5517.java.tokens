package org . elasticsearch . cluster ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . common . io . stream . Streamable ; import org . elasticsearch . common . settings . Settings ; import java . io . IOException ; public class ClusterName implements Streamable { public static final String SETTING = <str> ; public static final ClusterName DEFAULT = new ClusterName ( <str> . intern ( ) ) ; private String value ; public static ClusterName clusterNameFromSettings ( Settings settings ) { return new ClusterName ( settings . get ( <str> , ClusterName . DEFAULT . value ( ) ) ) ; } private ClusterName ( ) { } public ClusterName ( String value ) { this . value = value . intern ( ) ; } public String value ( ) { return this . value ; } public static ClusterName readClusterName ( StreamInput in ) throws IOException { ClusterName clusterName = new ClusterName ( ) ; clusterName . readFrom ( in ) ; return clusterName ; } @Override public void readFrom ( StreamInput in ) throws IOException { value = in . readString ( ) . intern ( ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { out . writeString ( value ) ; } @Override public boolean equals ( Object o ) { if ( this = = o ) return true ; if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) return false ; ClusterName that = ( ClusterName ) o ; if ( value ! = null ? ! value . equals ( that . value ) : that . value ! = null ) return false ; return true ; } @Override public int hashCode ( ) { return value ! = null ? value . hashCode ( ) : <int> ; } @Override public String toString ( ) { return <str> + value + <str> ; } } 
