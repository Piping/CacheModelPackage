package org . gradle . api . internal ; import groovy . lang . Closure ; import org . gradle . api . PolymorphicDomainObjectContainer ; public class PolymorphicDomainObjectContainerConfigureDelegate extends ConfigureDelegate { private final PolymorphicDomainObjectContainer _container ; public PolymorphicDomainObjectContainerConfigureDelegate ( Object owner , PolymorphicDomainObjectContainer container ) { super ( owner , container ) ; this . _container = container ; } @Override protected boolean _isConfigureMethod ( String name , Object [ ] params ) { return params . length = = <int> & & params [ <int> ] instanceof Closure | | params . length = = <int> & & params [ <int> ] instanceof Class | | params . length = = <int> & & params [ <int> ] instanceof Class & & params [ <int> ] instanceof Closure ; } @Override @SuppressWarnings ( <str> ) protected Object _configure ( String name , Object [ ] params ) { if ( params . length = = <int> ) { return _container . create ( name ) ; } else if ( params . length = = <int> & & params [ <int> ] instanceof Closure ) { return _container . create ( name , ( Closure ) params [ <int> ] ) ; } else if ( params . length = = <int> & & params [ <int> ] instanceof Class ) { return _container . create ( name , ( Class ) params [ <int> ] ) ; } else { return _container . create ( name , ( Class ) params [ <int> ] , new ClosureBackedAction ( ( Closure ) params [ <int> ] ) ) ; } } } 
