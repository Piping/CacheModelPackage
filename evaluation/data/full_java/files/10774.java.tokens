package org . gradle . api . plugins . antlr . internal ; import org . gradle . api . Action ; import org . gradle . process . internal . WorkerProcessContext ; import org . slf4j . Logger ; import org . slf4j . LoggerFactory ; import java . io . Serializable ; public class AntlrWorkerServer implements Action < WorkerProcessContext > , Serializable { private static final Logger LOGGER = LoggerFactory . getLogger ( AntlrWorkerServer . class ) ; private AntlrSpec spec ; public AntlrWorkerServer ( AntlrSpec spec ) { this . spec = spec ; } public void execute ( WorkerProcessContext context ) { final AntlrResult result = execute ( ) ; final AntlrWorkerClientProtocol clientProtocol = context . getServerConnection ( ) . addOutgoing ( AntlrWorkerClientProtocol . class ) ; context . getServerConnection ( ) . connect ( ) ; clientProtocol . executed ( result ) ; } public AntlrResult execute ( ) { LOGGER . debug ( <str> ) ; try { AntlrExecuter antlrExecuter = new AntlrExecuter ( ) ; return antlrExecuter . runAntlr ( spec ) ; } catch ( Exception e ) { return new AntlrResult ( <int> , e ) ; } } } 
