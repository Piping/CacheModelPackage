package org . gradle . api . internal . artifacts . ivyservice . ivyresolve . memcache ; import org . gradle . api . artifacts . component . ComponentArtifactIdentifier ; import org . gradle . internal . resolve . result . BuildableArtifactResolveResult ; import java . io . File ; import java . util . HashMap ; import java . util . Map ; class InMemoryArtifactsCache { private final Map < ComponentArtifactIdentifier , File > artifacts = new HashMap < ComponentArtifactIdentifier , File > ( ) ; private InMemoryCacheStats stats ; InMemoryArtifactsCache ( InMemoryCacheStats stats ) { this . stats = stats ; } public boolean supplyArtifact ( ComponentArtifactIdentifier id , BuildableArtifactResolveResult result ) { File fromCache = artifacts . get ( id ) ; if ( fromCache ! = null ) { result . resolved ( fromCache ) ; stats . artifactsServed + + ; return true ; } return false ; } public void newArtifact ( ComponentArtifactIdentifier id , BuildableArtifactResolveResult result ) { if ( result . hasResult ( ) & & result . getFailure ( ) = = null ) { artifacts . put ( id , result . getFile ( ) ) ; } } } 
