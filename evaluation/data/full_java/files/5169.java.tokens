package org . elasticsearch . action . admin . indices . refresh ; import org . elasticsearch . action . ReplicationResponse ; import org . elasticsearch . action . ShardOperationFailedException ; import org . elasticsearch . action . support . ActionFilters ; import org . elasticsearch . action . support . replication . ReplicationRequest ; import org . elasticsearch . action . support . replication . TransportBroadcastReplicationAction ; import org . elasticsearch . cluster . ClusterService ; import org . elasticsearch . cluster . metadata . IndexNameExpressionResolver ; import org . elasticsearch . common . inject . Inject ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . index . shard . ShardId ; import org . elasticsearch . threadpool . ThreadPool ; import org . elasticsearch . transport . TransportService ; import java . util . List ; public class TransportRefreshAction extends TransportBroadcastReplicationAction < RefreshRequest , RefreshResponse , ReplicationRequest , ReplicationResponse > { @Inject public TransportRefreshAction ( Settings settings , ThreadPool threadPool , ClusterService clusterService , TransportService transportService , ActionFilters actionFilters , IndexNameExpressionResolver indexNameExpressionResolver , TransportShardRefreshAction shardRefreshAction ) { super ( RefreshAction . NAME , RefreshRequest : : new , settings , threadPool , clusterService , transportService , actionFilters , indexNameExpressionResolver , shardRefreshAction ) ; } @Override protected ReplicationResponse newShardResponse ( ) { return new ReplicationResponse ( ) ; } @Override protected ReplicationRequest newShardRequest ( RefreshRequest request , ShardId shardId ) { return new ReplicationRequest ( request , shardId ) ; } @Override protected RefreshResponse newResponse ( int successfulShards , int failedShards , int totalNumCopies , List < ShardOperationFailedException > shardFailures ) { return new RefreshResponse ( totalNumCopies , successfulShards , failedShards , shardFailures ) ; } } 
