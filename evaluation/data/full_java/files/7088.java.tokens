package org . elasticsearch . script ; import org . elasticsearch . common . Strings ; public interface ScriptContext { String getKey ( ) ; enum Standard implements ScriptContext { AGGS ( <str> ) , SEARCH ( <str> ) , UPDATE ( <str> ) ; private final String key ; Standard ( String key ) { this . key = key ; } @Override public String getKey ( ) { return key ; } @Override public String toString ( ) { return getKey ( ) ; } } final class Plugin implements ScriptContext { private final String pluginName ; private final String operation ; private final String key ; public Plugin ( String pluginName , String operation ) { if ( Strings . hasLength ( pluginName ) = = false ) { throw new IllegalArgumentException ( <str> ) ; } if ( Strings . hasLength ( operation ) = = false ) { throw new IllegalArgumentException ( <str> ) ; } this . pluginName = pluginName ; this . operation = operation ; this . key = pluginName + <str> + operation ; } public final String getPluginName ( ) { return pluginName ; } public final String getOperation ( ) { return operation ; } @Override public final String getKey ( ) { return key ; } @Override public final String toString ( ) { return getKey ( ) ; } } } 
