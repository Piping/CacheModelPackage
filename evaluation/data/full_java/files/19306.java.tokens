package io . netty . handler . codec . http . websocketx ; import io . netty . channel . embedded . EmbeddedChannel ; import io . netty . handler . codec . http . FullHttpResponse ; import io . netty . handler . codec . http . HttpHeaderNames ; import io . netty . handler . codec . http . HttpUtil ; import io . netty . handler . codec . http . HttpResponseStatus ; import io . netty . util . ReferenceCountUtil ; import org . junit . Test ; import static org . junit . Assert . * ; public class WebSocketServerHandshakerFactoryTest { @Test public void testUnsupportedVersion ( ) throws Exception { EmbeddedChannel ch = new EmbeddedChannel ( ) ; WebSocketServerHandshakerFactory . sendUnsupportedVersionResponse ( ch ) ; ch . runPendingTasks ( ) ; Object msg = ch . readOutbound ( ) ; if ( ! ( msg instanceof FullHttpResponse ) ) { fail ( <str> + msg ) ; } FullHttpResponse response = ( FullHttpResponse ) msg ; assertEquals ( HttpResponseStatus . UPGRADE_REQUIRED , response . status ( ) ) ; assertEquals ( WebSocketVersion . V13 . toHttpHeaderValue ( ) , response . headers ( ) . get ( HttpHeaderNames . SEC_WEBSOCKET_VERSION ) ) ; assertTrue ( HttpUtil . isContentLengthSet ( response ) ) ; assertEquals ( <int> , HttpUtil . getContentLength ( response ) ) ; ReferenceCountUtil . release ( response ) ; assertFalse ( ch . finish ( ) ) ; } } 
