package org . apache . lucene . store ; import java . io . FilterOutputStream ; import java . io . IOException ; import java . nio . channels . Channels ; import java . nio . file . Files ; import java . nio . file . StandardOpenOption ; public final class SmbDirectoryWrapper extends FilterDirectory { private final FSDirectory fsDirectory ; public SmbDirectoryWrapper ( FSDirectory in ) { super ( in ) ; fsDirectory = in ; } @Override public IndexOutput createOutput ( String name , IOContext context ) throws IOException { fsDirectory . ensureOpen ( ) ; fsDirectory . ensureCanWrite ( name ) ; return new SmbFSIndexOutput ( name ) ; } final class SmbFSIndexOutput extends OutputStreamIndexOutput { static final int CHUNK_SIZE = <int> ; private final String name ; public SmbFSIndexOutput ( String name ) throws IOException { super ( <str> + fsDirectory . getDirectory ( ) . resolve ( name ) + <str> , new FilterOutputStream ( Channels . newOutputStream ( Files . newByteChannel ( fsDirectory . getDirectory ( ) . resolve ( name ) , StandardOpenOption . CREATE , StandardOpenOption . TRUNCATE_EXISTING , StandardOpenOption . READ , StandardOpenOption . WRITE ) ) ) { @Override public void write ( byte [ ] b , int offset , int length ) throws IOException { while ( length > <int> ) { final int chunk = Math . min ( length , CHUNK_SIZE ) ; out . write ( b , offset , chunk ) ; length - = chunk ; offset + = chunk ; } } } , CHUNK_SIZE ) ; this . name = name ; } } } 
