package org . apache . cassandra . index ; import java . util . Collection ; import java . util . Optional ; import java . util . Set ; import java . util . concurrent . Callable ; import java . util . function . BiFunction ; import org . apache . cassandra . config . ColumnDefinition ; import org . apache . cassandra . cql3 . Operator ; import org . apache . cassandra . db . * ; import org . apache . cassandra . db . compaction . OperationType ; import org . apache . cassandra . db . filter . RowFilter ; import org . apache . cassandra . db . marshal . AbstractType ; import org . apache . cassandra . db . partitions . PartitionIterator ; import org . apache . cassandra . db . partitions . PartitionUpdate ; import org . apache . cassandra . db . partitions . UnfilteredPartitionIterator ; import org . apache . cassandra . db . rows . Row ; import org . apache . cassandra . exceptions . InvalidRequestException ; import org . apache . cassandra . index . internal . CollatedViewIndexBuilder ; import org . apache . cassandra . index . transactions . IndexTransaction ; import org . apache . cassandra . io . sstable . Descriptor ; import org . apache . cassandra . io . sstable . ReducingKeyIterator ; import org . apache . cassandra . io . sstable . format . SSTableFlushObserver ; import org . apache . cassandra . io . sstable . format . SSTableReader ; import org . apache . cassandra . schema . IndexMetadata ; import org . apache . cassandra . utils . concurrent . OpOrder ; public interface Index { interface IndexBuildingSupport { SecondaryIndexBuilder getIndexBuildTask ( ColumnFamilyStore cfs , Set < Index > indexes , Collection < SSTableReader > sstables ) ; } public static class CollatedViewIndexBuildingSupport implements IndexBuildingSupport { public SecondaryIndexBuilder getIndexBuildTask ( ColumnFamilyStore cfs , Set < Index > indexes , Collection < SSTableReader > sstables ) { return new CollatedViewIndexBuilder ( cfs , indexes , new ReducingKeyIterator ( sstables ) ) ; } } public static final CollatedViewIndexBuildingSupport INDEX_BUILDER_SUPPORT = new CollatedViewIndexBuildingSupport ( ) ; default IndexBuildingSupport getBuildTaskSupport ( ) { return INDEX_BUILDER_SUPPORT ; } public Callable < ? > getInitializationTask ( ) ; public IndexMetadata getIndexMetadata ( ) ; public Callable < ? > getMetadataReloadTask ( IndexMetadata indexMetadata ) ; public void register ( IndexRegistry registry ) ; public Optional < ColumnFamilyStore > getBackingTable ( ) ; public Callable < ? > getBlockingFlushTask ( ) ; public Callable < ? > getInvalidateTask ( ) ; public Callable < ? > getTruncateTask ( long truncatedAt ) ; public boolean shouldBuildBlocking ( ) ; default SSTableFlushObserver getFlushObserver ( Descriptor descriptor , OperationType opType ) { return null ; } public boolean dependsOn ( ColumnDefinition column ) ; public boolean supportsExpression ( ColumnDefinition column , Operator operator ) ; public AbstractType < ? > customExpressionValueType ( ) ; public RowFilter getPostIndexQueryFilter ( RowFilter filter ) ; public long getEstimatedResultRows ( ) ; public void validate ( PartitionUpdate update ) throws InvalidRequestException ; public Indexer indexerFor ( DecoratedKey key , PartitionColumns columns , int nowInSec , OpOrder . Group opGroup , IndexTransaction . Type transactionType ) ; public interface Indexer { public void begin ( ) ; public void partitionDelete ( DeletionTime deletionTime ) ; public void rangeTombstone ( RangeTombstone tombstone ) ; public void insertRow ( Row row ) ; public void updateRow ( Row oldRowData , Row newRowData ) ; public void removeRow ( Row row ) ; public void finish ( ) ; } public BiFunction < PartitionIterator , ReadCommand , PartitionIterator > postProcessorFor ( ReadCommand command ) ; public Searcher searcherFor ( ReadCommand command ) throws InvalidRequestException ; public interface Searcher { public UnfilteredPartitionIterator search ( ReadExecutionController executionController ) ; } } 
