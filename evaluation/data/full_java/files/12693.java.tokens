package org . gradle . api . internal . artifacts . ivyservice . resolveengine . oldresult ; import org . gradle . api . artifacts . ModuleDependency ; import org . gradle . api . artifacts . UnresolvedDependency ; import org . gradle . api . internal . artifacts . ResolvedConfigurationIdentifier ; import java . util . Map ; import java . util . Set ; public class DefaultResolvedGraphResults implements ResolvedGraphResults { private final Set < UnresolvedDependency > unresolvedDependencies ; private final Map < ResolvedConfigurationIdentifier , ModuleDependency > modulesMap ; public DefaultResolvedGraphResults ( Set < UnresolvedDependency > unresolvedDependencies , Map < ResolvedConfigurationIdentifier , ModuleDependency > modulesMap ) { this . unresolvedDependencies = unresolvedDependencies ; this . modulesMap = modulesMap ; } @Override public boolean hasError ( ) { return ! unresolvedDependencies . isEmpty ( ) ; } @Override public Set < UnresolvedDependency > getUnresolvedDependencies ( ) { return unresolvedDependencies ; } @Override public ModuleDependency getModuleDependency ( ResolvedConfigurationIdentifier id ) { ModuleDependency m = modulesMap . get ( id ) ; assert m ! = null : <str> + id ; return m ; } } 
