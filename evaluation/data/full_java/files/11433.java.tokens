package org . gradle . api . internal . classpath ; import org . gradle . util . GUtil ; import org . slf4j . Logger ; import org . slf4j . LoggerFactory ; import java . util . LinkedHashSet ; import java . util . Properties ; import java . util . Set ; public class DefaultPluginModuleRegistry implements PluginModuleRegistry { private static final Logger LOGGER = LoggerFactory . getLogger ( DefaultPluginModuleRegistry . class ) ; private final ModuleRegistry moduleRegistry ; public DefaultPluginModuleRegistry ( ModuleRegistry moduleRegistry ) { this . moduleRegistry = moduleRegistry ; } public Set < Module > getPluginModules ( ) { Set < Module > modules = new LinkedHashSet < Module > ( ) ; Properties properties = loadPluginProperties ( ) ; for ( String pluginModule : properties . getProperty ( <str> ) . split ( <str> ) ) { try { modules . add ( moduleRegistry . getModule ( pluginModule ) ) ; } catch ( UnknownModuleException e ) { LOGGER . debug ( <str> , pluginModule ) ; } } return modules ; } private Properties loadPluginProperties ( ) { return GUtil . loadProperties ( getClass ( ) . getResource ( <str> ) ) ; } } 
