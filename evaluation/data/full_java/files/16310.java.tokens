package junit . extensions ; import junit . framework . Test ; import junit . framework . TestResult ; public class RepeatedTest extends TestDecorator { private int fTimesRepeat ; public RepeatedTest ( Test test , int repeat ) { super ( test ) ; if ( repeat < <int> ) { throw new IllegalArgumentException ( <str> ) ; } fTimesRepeat = repeat ; } @Override public int countTestCases ( ) { return super . countTestCases ( ) * fTimesRepeat ; } @Override public void run ( TestResult result ) { for ( int i = <int> ; i < fTimesRepeat ; i + + ) { if ( result . shouldStop ( ) ) { break ; } super . run ( result ) ; } } @Override public String toString ( ) { return super . toString ( ) + <str> ; } } 
