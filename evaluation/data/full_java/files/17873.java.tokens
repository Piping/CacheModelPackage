package com . badlogic . gdx . tools . particleeditor ; import java . awt . Dimension ; import java . awt . GridBagConstraints ; import java . awt . GridBagLayout ; import java . awt . Insets ; import java . awt . event . ActionEvent ; import java . awt . event . ActionListener ; import javax . swing . BorderFactory ; import javax . swing . JButton ; import javax . swing . JCheckBox ; import javax . swing . JLabel ; import javax . swing . JPanel ; import javax . swing . event . ChangeEvent ; import javax . swing . event . ChangeListener ; import com . badlogic . gdx . graphics . g2d . ParticleEmitter . ScaledNumericValue ; class ScaledNumericPanel extends EditorPanel { final ScaledNumericValue value ; Slider lowMinSlider , lowMaxSlider ; Slider highMinSlider , highMaxSlider ; JCheckBox relativeCheckBox ; Chart chart ; JPanel formPanel ; JButton expandButton ; JButton lowRangeButton ; JButton highRangeButton ; public ScaledNumericPanel ( final ScaledNumericValue value , String chartTitle , String name , String description ) { super ( value , name , description ) ; this . value = value ; initializeComponents ( chartTitle ) ; lowMinSlider . setValue ( value . getLowMin ( ) ) ; lowMaxSlider . setValue ( value . getLowMax ( ) ) ; highMinSlider . setValue ( value . getHighMin ( ) ) ; highMaxSlider . setValue ( value . getHighMax ( ) ) ; chart . setValues ( value . getTimeline ( ) , value . getScaling ( ) ) ; relativeCheckBox . setSelected ( value . isRelative ( ) ) ; lowMinSlider . addChangeListener ( new ChangeListener ( ) { public void stateChanged ( ChangeEvent event ) { value . setLowMin ( ( Float ) lowMinSlider . getValue ( ) ) ; if ( ! lowMaxSlider . isVisible ( ) ) value . setLowMax ( ( Float ) lowMinSlider . getValue ( ) ) ; } } ) ; lowMaxSlider . addChangeListener ( new ChangeListener ( ) { public void stateChanged ( ChangeEvent event ) { value . setLowMax ( ( Float ) lowMaxSlider . getValue ( ) ) ; } } ) ; highMinSlider . addChangeListener ( new ChangeListener ( ) { public void stateChanged ( ChangeEvent event ) { value . setHighMin ( ( Float ) highMinSlider . getValue ( ) ) ; if ( ! highMaxSlider . isVisible ( ) ) value . setHighMax ( ( Float ) highMinSlider . getValue ( ) ) ; } } ) ; highMaxSlider . addChangeListener ( new ChangeListener ( ) { public void stateChanged ( ChangeEvent event ) { value . setHighMax ( ( Float ) highMaxSlider . getValue ( ) ) ; } } ) ; relativeCheckBox . addActionListener ( new ActionListener ( ) { public void actionPerformed ( ActionEvent event ) { value . setRelative ( relativeCheckBox . isSelected ( ) ) ; } } ) ; lowRangeButton . addActionListener ( new ActionListener ( ) { public void actionPerformed ( ActionEvent event ) { boolean visible = ! lowMaxSlider . isVisible ( ) ; lowMaxSlider . setVisible ( visible ) ; lowRangeButton . setText ( visible ? <str> : <str> ) ; GridBagLayout layout = ( GridBagLayout ) formPanel . getLayout ( ) ; GridBagConstraints constraints = layout . getConstraints ( lowRangeButton ) ; constraints . gridx = visible ? <int> : <int> ; layout . setConstraints ( lowRangeButton , constraints ) ; Slider slider = visible ? lowMaxSlider : lowMinSlider ; value . setLowMax ( ( Float ) slider . getValue ( ) ) ; } } ) ; highRangeButton . addActionListener ( new ActionListener ( ) { public void actionPerformed ( ActionEvent event ) { boolean visible = ! highMaxSlider . isVisible ( ) ; highMaxSlider . setVisible ( visible ) ; highRangeButton . setText ( visible ? <str> : <str> ) ; GridBagLayout layout = ( GridBagLayout ) formPanel . getLayout ( ) ; GridBagConstraints constraints = layout . getConstraints ( highRangeButton ) ; constraints . gridx = visible ? <int> : <int> ; layout . setConstraints ( highRangeButton , constraints ) ; Slider slider = visible ? highMaxSlider : highMinSlider ; value . setHighMax ( ( Float ) slider . getValue ( ) ) ; } } ) ; expandButton . addActionListener ( new ActionListener ( ) { public void actionPerformed ( ActionEvent event ) { chart . setExpanded ( ! chart . isExpanded ( ) ) ; boolean expanded = chart . isExpanded ( ) ; GridBagLayout layout = ( GridBagLayout ) getContentPanel ( ) . getLayout ( ) ; GridBagConstraints chartConstraints = layout . getConstraints ( chart ) ; GridBagConstraints expandButtonConstraints = layout . getConstraints ( expandButton ) ; if ( expanded ) { chart . setPreferredSize ( new Dimension ( <int> , <int> ) ) ; expandButton . setText ( <str> ) ; chartConstraints . weightx = <int> ; expandButtonConstraints . weightx = <int> ; } else { chart . setPreferredSize ( new Dimension ( <int> , <int> ) ) ; expandButton . setText ( <str> ) ; chartConstraints . weightx = <int> ; expandButtonConstraints . weightx = <int> ; } layout . setConstraints ( chart , chartConstraints ) ; layout . setConstraints ( expandButton , expandButtonConstraints ) ; relativeCheckBox . setVisible ( ! expanded ) ; formPanel . setVisible ( ! expanded ) ; chart . revalidate ( ) ; } } ) ; if ( value . getLowMin ( ) = = value . getLowMax ( ) ) lowRangeButton . doClick ( <int> ) ; if ( value . getHighMin ( ) = = value . getHighMax ( ) ) highRangeButton . doClick ( <int> ) ; } public JPanel getFormPanel ( ) { return formPanel ; } private void initializeComponents ( String chartTitle ) { JPanel contentPanel = getContentPanel ( ) ; { formPanel = new JPanel ( new GridBagLayout ( ) ) ; contentPanel . add ( formPanel , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . EAST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; { JLabel label = new JLabel ( <str> ) ; formPanel . add ( label , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . EAST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { highMinSlider = new Slider ( <int> , - <int> , <int> , <float> , - <int> , <int> ) ; formPanel . add ( highMinSlider , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { highMaxSlider = new Slider ( <int> , - <int> , <int> , <float> , - <int> , <int> ) ; formPanel . add ( highMaxSlider , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { highRangeButton = new JButton ( <str> ) ; highRangeButton . setBorder ( BorderFactory . createEmptyBorder ( <int> , <int> , <int> , <int> ) ) ; formPanel . add ( highRangeButton , new GridBagConstraints ( <int> , <int> , <int> , <int> , <float> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { JLabel label = new JLabel ( <str> ) ; formPanel . add ( label , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . EAST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { lowMinSlider = new Slider ( <int> , - <int> , <int> , <float> , - <int> , <int> ) ; formPanel . add ( lowMinSlider , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { lowMaxSlider = new Slider ( <int> , - <int> , <int> , <float> , - <int> , <int> ) ; formPanel . add ( lowMaxSlider , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { lowRangeButton = new JButton ( <str> ) ; lowRangeButton . setBorder ( BorderFactory . createEmptyBorder ( <int> , <int> , <int> , <int> ) ) ; formPanel . add ( lowRangeButton , new GridBagConstraints ( <int> , <int> , <int> , <int> , <float> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } } { chart = new Chart ( chartTitle ) { public void pointsChanged ( ) { value . setTimeline ( chart . getValuesX ( ) ) ; value . setScaling ( chart . getValuesY ( ) ) ; } } ; contentPanel . add ( chart , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . CENTER , GridBagConstraints . BOTH , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; chart . setPreferredSize ( new Dimension ( <int> , <int> ) ) ; } { expandButton = new JButton ( <str> ) ; contentPanel . add ( expandButton , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . SOUTHWEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; expandButton . setBorder ( BorderFactory . createEmptyBorder ( <int> , <int> , <int> , <int> ) ) ; } { relativeCheckBox = new JCheckBox ( <str> ) ; contentPanel . add ( relativeCheckBox , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . NORTHWEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } } } 
