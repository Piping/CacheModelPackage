package org . eclipse . debug . internal . ui . views . variables ; import org . eclipse . debug . internal . ui . DebugPluginImages ; import org . eclipse . debug . internal . ui . DebugUIPlugin ; import org . eclipse . debug . internal . ui . IDebugHelpContextIds ; import org . eclipse . debug . internal . ui . IInternalDebugUIConstants ; import org . eclipse . jface . action . Action ; import org . eclipse . jface . action . IAction ; import org . eclipse . swt . custom . BusyIndicator ; import org . eclipse . ui . PlatformUI ; public class ToggleLogicalStructureAction extends Action { private VariablesView fView ; public ToggleLogicalStructureAction ( VariablesView view ) { super ( null , IAction . AS_CHECK_BOX ) ; setView ( view ) ; setToolTipText ( VariablesViewMessages . ToggleObjectBrowsersAction_1 ) ; setHoverImageDescriptor ( DebugPluginImages . getImageDescriptor ( IInternalDebugUIConstants . IMG_LCL_SHOW_LOGICAL_STRUCTURE ) ) ; setDisabledImageDescriptor ( DebugPluginImages . getImageDescriptor ( IInternalDebugUIConstants . IMG_DLCL_SHOW_LOGICAL_STRUCTURE ) ) ; setImageDescriptor ( DebugPluginImages . getImageDescriptor ( IInternalDebugUIConstants . IMG_ELCL_SHOW_LOGICAL_STRUCTURE ) ) ; setId ( DebugUIPlugin . getUniqueIdentifier ( ) + <str> ) ; PlatformUI . getWorkbench ( ) . getHelpSystem ( ) . setHelp ( this , IDebugHelpContextIds . VARIABLES_CONTENT_PROVIDERS_ACTION ) ; } @Override public void run ( ) { if ( ! getView ( ) . isAvailable ( ) ) { return ; } getView ( ) . setShowLogicalStructure ( isChecked ( ) ) ; BusyIndicator . showWhile ( getView ( ) . getViewer ( ) . getControl ( ) . getDisplay ( ) , new Runnable ( ) { @Override public void run ( ) { getView ( ) . getViewer ( ) . refresh ( ) ; } } ) ; } @Override public void setChecked ( boolean value ) { super . setChecked ( value ) ; } protected VariablesView getView ( ) { return fView ; } protected void setView ( VariablesView view ) { fView = view ; } } 
