package org . elasticsearch ; import org . elasticsearch . cluster . metadata . IndexMetaData ; import org . elasticsearch . common . Strings ; import org . elasticsearch . common . SuppressForbidden ; import org . elasticsearch . common . inject . AbstractModule ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . common . lucene . Lucene ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . monitor . jvm . JvmInfo ; import java . io . IOException ; @SuppressWarnings ( <str> ) public class Version { public static final org . apache . lucene . util . Version LUCENE_3_EMULATION_VERSION = org . apache . lucene . util . Version . LUCENE_4_0_0 ; public static final int V_0_18_0_ID = <int> ; public static final Version V_0_18_0 = new Version ( V_0_18_0_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_18_1_ID = <int> ; public static final Version V_0_18_1 = new Version ( V_0_18_1_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_18_2_ID = <int> ; public static final Version V_0_18_2 = new Version ( V_0_18_2_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_18_3_ID = <int> ; public static final Version V_0_18_3 = new Version ( V_0_18_3_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_18_4_ID = <int> ; public static final Version V_0_18_4 = new Version ( V_0_18_4_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_18_5_ID = <int> ; public static final Version V_0_18_5 = new Version ( V_0_18_5_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_18_6_ID = <int> ; public static final Version V_0_18_6 = new Version ( V_0_18_6_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_18_7_ID = <int> ; public static final Version V_0_18_7 = new Version ( V_0_18_7_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_18_8_ID = <int> ; public static final Version V_0_18_8 = new Version ( V_0_18_8_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_19_0_RC1_ID = <int> ; public static final Version V_0_19_0_RC1 = new Version ( V_0_19_0_RC1_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_19_0_RC2_ID = <int> ; public static final Version V_0_19_0_RC2 = new Version ( V_0_19_0_RC2_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_19_0_RC3_ID = <int> ; public static final Version V_0_19_0_RC3 = new Version ( V_0_19_0_RC3_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_19_0_ID = <int> ; public static final Version V_0_19_0 = new Version ( V_0_19_0_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_19_1_ID = <int> ; public static final Version V_0_19_1 = new Version ( V_0_19_1_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_19_2_ID = <int> ; public static final Version V_0_19_2 = new Version ( V_0_19_2_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_19_3_ID = <int> ; public static final Version V_0_19_3 = new Version ( V_0_19_3_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_19_4_ID = <int> ; public static final Version V_0_19_4 = new Version ( V_0_19_4_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_19_5_ID = <int> ; public static final Version V_0_19_5 = new Version ( V_0_19_5_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_19_6_ID = <int> ; public static final Version V_0_19_6 = new Version ( V_0_19_6_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_19_7_ID = <int> ; public static final Version V_0_19_7 = new Version ( V_0_19_7_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_19_8_ID = <int> ; public static final Version V_0_19_8 = new Version ( V_0_19_8_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_19_9_ID = <int> ; public static final Version V_0_19_9 = new Version ( V_0_19_9_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_19_10_ID = <int> ; public static final Version V_0_19_10 = new Version ( V_0_19_10_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_19_11_ID = <int> ; public static final Version V_0_19_11 = new Version ( V_0_19_11_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_19_12_ID = <int> ; public static final Version V_0_19_12 = new Version ( V_0_19_12_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_19_13_ID = <int> ; public static final Version V_0_19_13 = new Version ( V_0_19_13_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_20_0_RC1_ID = <int> ; public static final Version V_0_20_0_RC1 = new Version ( V_0_20_0_RC1_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_20_0_ID = <int> ; public static final Version V_0_20_0 = new Version ( V_0_20_0_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_20_1_ID = <int> ; public static final Version V_0_20_1 = new Version ( V_0_20_1_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_20_2_ID = <int> ; public static final Version V_0_20_2 = new Version ( V_0_20_2_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_20_3_ID = <int> ; public static final Version V_0_20_3 = new Version ( V_0_20_3_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_20_4_ID = <int> ; public static final Version V_0_20_4 = new Version ( V_0_20_4_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_20_5_ID = <int> ; public static final Version V_0_20_5 = new Version ( V_0_20_5_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_20_6_ID = <int> ; public static final Version V_0_20_6 = new Version ( V_0_20_6_ID , false , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_20_7_ID = <int> ; public static final Version V_0_20_7 = new Version ( V_0_20_7_ID , true , LUCENE_3_EMULATION_VERSION ) ; public static final int V_0_90_0_Beta1_ID = <int> ; public static final Version V_0_90_0_Beta1 = new Version ( V_0_90_0_Beta1_ID , false , org . apache . lucene . util . Version . LUCENE_4_1 ) ; public static final int V_0_90_0_RC1_ID = <int> ; public static final Version V_0_90_0_RC1 = new Version ( V_0_90_0_RC1_ID , false , org . apache . lucene . util . Version . LUCENE_4_1 ) ; public static final int V_0_90_0_RC2_ID = <int> ; public static final Version V_0_90_0_RC2 = new Version ( V_0_90_0_RC2_ID , false , org . apache . lucene . util . Version . LUCENE_4_2 ) ; public static final int V_0_90_0_ID = <int> ; public static final Version V_0_90_0 = new Version ( V_0_90_0_ID , false , org . apache . lucene . util . Version . LUCENE_4_2 ) ; public static final int V_0_90_1_ID = <int> ; public static final Version V_0_90_1 = new Version ( V_0_90_1_ID , false , org . apache . lucene . util . Version . LUCENE_4_3 ) ; public static final int V_0_90_2_ID = <int> ; public static final Version V_0_90_2 = new Version ( V_0_90_2_ID , false , org . apache . lucene . util . Version . LUCENE_4_3 ) ; public static final int V_0_90_3_ID = <int> ; public static final Version V_0_90_3 = new Version ( V_0_90_3_ID , false , org . apache . lucene . util . Version . LUCENE_4_4 ) ; public static final int V_0_90_4_ID = <int> ; public static final Version V_0_90_4 = new Version ( V_0_90_4_ID , false , org . apache . lucene . util . Version . LUCENE_4_4 ) ; public static final int V_0_90_5_ID = <int> ; public static final Version V_0_90_5 = new Version ( V_0_90_5_ID , false , org . apache . lucene . util . Version . LUCENE_4_4 ) ; public static final int V_0_90_6_ID = <int> ; public static final Version V_0_90_6 = new Version ( V_0_90_6_ID , false , org . apache . lucene . util . Version . LUCENE_4_5 ) ; public static final int V_0_90_7_ID = <int> ; public static final Version V_0_90_7 = new Version ( V_0_90_7_ID , false , org . apache . lucene . util . Version . LUCENE_4_5 ) ; public static final int V_0_90_8_ID = <int> ; public static final Version V_0_90_8 = new Version ( V_0_90_8_ID , false , org . apache . lucene . util . Version . LUCENE_4_6 ) ; public static final int V_0_90_9_ID = <int> ; public static final Version V_0_90_9 = new Version ( V_0_90_9_ID , false , org . apache . lucene . util . Version . LUCENE_4_6 ) ; public static final int V_0_90_10_ID = <int> ; public static final Version V_0_90_10 = new Version ( V_0_90_10_ID , false , org . apache . lucene . util . Version . LUCENE_4_6 ) ; public static final int V_0_90_11_ID = <int> ; public static final Version V_0_90_11 = new Version ( V_0_90_11_ID , false , org . apache . lucene . util . Version . LUCENE_4_6 ) ; public static final int V_0_90_12_ID = <int> ; public static final Version V_0_90_12 = new Version ( V_0_90_12_ID , false , org . apache . lucene . util . Version . LUCENE_4_6 ) ; public static final int V_0_90_13_ID = <int> ; public static final Version V_0_90_13 = new Version ( V_0_90_13_ID , false , org . apache . lucene . util . Version . LUCENE_4_6 ) ; public static final int V_0_90_14_ID = <int> ; public static final Version V_0_90_14 = new Version ( V_0_90_14_ID , true , org . apache . lucene . util . Version . LUCENE_4_6 ) ; public static final int V_1_0_0_Beta1_ID = <int> ; public static final Version V_1_0_0_Beta1 = new Version ( V_1_0_0_Beta1_ID , false , org . apache . lucene . util . Version . LUCENE_4_5 ) ; public static final int V_1_0_0_Beta2_ID = <int> ; public static final Version V_1_0_0_Beta2 = new Version ( V_1_0_0_Beta2_ID , false , org . apache . lucene . util . Version . LUCENE_4_6 ) ; public static final int V_1_0_0_RC1_ID = <int> ; public static final Version V_1_0_0_RC1 = new Version ( V_1_0_0_RC1_ID , false , org . apache . lucene . util . Version . LUCENE_4_6 ) ; public static final int V_1_0_0_RC2_ID = <int> ; public static final Version V_1_0_0_RC2 = new Version ( V_1_0_0_RC2_ID , false , org . apache . lucene . util . Version . LUCENE_4_6 ) ; public static final int V_1_0_0_ID = <int> ; public static final Version V_1_0_0 = new Version ( V_1_0_0_ID , false , org . apache . lucene . util . Version . LUCENE_4_6 ) ; public static final int V_1_0_1_ID = <int> ; public static final Version V_1_0_1 = new Version ( V_1_0_1_ID , false , org . apache . lucene . util . Version . LUCENE_4_6 ) ; public static final int V_1_0_2_ID = <int> ; public static final Version V_1_0_2 = new Version ( V_1_0_2_ID , false , org . apache . lucene . util . Version . LUCENE_4_6 ) ; public static final int V_1_0_3_ID = <int> ; public static final Version V_1_0_3 = new Version ( V_1_0_3_ID , false , org . apache . lucene . util . Version . LUCENE_4_6 ) ; public static final int V_1_0_4_ID = <int> ; public static final Version V_1_0_4 = new Version ( V_1_0_4_ID , true , org . apache . lucene . util . Version . LUCENE_4_6 ) ; public static final int V_1_1_0_ID = <int> ; public static final Version V_1_1_0 = new Version ( V_1_1_0_ID , false , org . apache . lucene . util . Version . LUCENE_4_7 ) ; public static final int V_1_1_1_ID = <int> ; public static final Version V_1_1_1 = new Version ( V_1_1_1_ID , false , org . apache . lucene . util . Version . LUCENE_4_7 ) ; public static final int V_1_1_2_ID = <int> ; public static final Version V_1_1_2 = new Version ( V_1_1_2_ID , false , org . apache . lucene . util . Version . LUCENE_4_7 ) ; public static final int V_1_2_0_ID = <int> ; public static final Version V_1_2_0 = new Version ( V_1_2_0_ID , false , org . apache . lucene . util . Version . LUCENE_4_8 ) ; public static final int V_1_2_1_ID = <int> ; public static final Version V_1_2_1 = new Version ( V_1_2_1_ID , false , org . apache . lucene . util . Version . LUCENE_4_8 ) ; public static final int V_1_2_2_ID = <int> ; public static final Version V_1_2_2 = new Version ( V_1_2_2_ID , false , org . apache . lucene . util . Version . LUCENE_4_8 ) ; public static final int V_1_2_3_ID = <int> ; public static final Version V_1_2_3 = new Version ( V_1_2_3_ID , false , org . apache . lucene . util . Version . LUCENE_4_8 ) ; public static final int V_1_2_4_ID = <int> ; public static final Version V_1_2_4 = new Version ( V_1_2_4_ID , false , org . apache . lucene . util . Version . LUCENE_4_8 ) ; public static final int V_1_2_5_ID = <int> ; public static final Version V_1_2_5 = new Version ( V_1_2_5_ID , true , org . apache . lucene . util . Version . LUCENE_4_8 ) ; public static final int V_1_3_0_ID = <int> ; public static final Version V_1_3_0 = new Version ( V_1_3_0_ID , false , org . apache . lucene . util . Version . LUCENE_4_9 ) ; public static final int V_1_3_1_ID = <int> ; public static final Version V_1_3_1 = new Version ( V_1_3_1_ID , false , org . apache . lucene . util . Version . LUCENE_4_9 ) ; public static final int V_1_3_2_ID = <int> ; public static final Version V_1_3_2 = new Version ( V_1_3_2_ID , false , org . apache . lucene . util . Version . LUCENE_4_9 ) ; public static final int V_1_3_3_ID = <int> ; public static final Version V_1_3_3 = new Version ( V_1_3_3_ID , false , org . apache . lucene . util . Version . LUCENE_4_9 ) ; public static final int V_1_3_4_ID = <int> ; public static final Version V_1_3_4 = new Version ( V_1_3_4_ID , false , org . apache . lucene . util . Version . LUCENE_4_9 ) ; public static final int V_1_3_5_ID = <int> ; public static final Version V_1_3_5 = new Version ( V_1_3_5_ID , false , org . apache . lucene . util . Version . LUCENE_4_9 ) ; public static final int V_1_3_6_ID = <int> ; public static final Version V_1_3_6 = new Version ( V_1_3_6_ID , false , org . apache . lucene . util . Version . LUCENE_4_9 ) ; public static final int V_1_3_7_ID = <int> ; public static final Version V_1_3_7 = new Version ( V_1_3_7_ID , false , org . apache . lucene . util . Version . LUCENE_4_9 ) ; public static final int V_1_3_8_ID = <int> ; public static final Version V_1_3_8 = new Version ( V_1_3_8_ID , false , org . apache . lucene . util . Version . LUCENE_4_9 ) ; public static final int V_1_3_9_ID = <int> ; public static final Version V_1_3_9 = new Version ( V_1_3_9_ID , false , org . apache . lucene . util . Version . LUCENE_4_9 ) ; public static final int V_1_3_10_ID = <int> ; public static final Version V_1_3_10 = new Version ( V_1_3_10_ID , true , org . apache . lucene . util . Version . LUCENE_4_9 ) ; public static final int V_1_4_0_Beta1_ID = <int> ; public static final Version V_1_4_0_Beta1 = new Version ( V_1_4_0_Beta1_ID , false , org . apache . lucene . util . Version . LUCENE_4_10_1 ) ; public static final int V_1_4_0_ID = <int> ; public static final Version V_1_4_0 = new Version ( V_1_4_0_ID , false , org . apache . lucene . util . Version . LUCENE_4_10_2 ) ; public static final int V_1_4_1_ID = <int> ; public static final Version V_1_4_1 = new Version ( V_1_4_1_ID , false , org . apache . lucene . util . Version . LUCENE_4_10_2 ) ; public static final int V_1_4_2_ID = <int> ; public static final Version V_1_4_2 = new Version ( V_1_4_2_ID , false , org . apache . lucene . util . Version . LUCENE_4_10_2 ) ; public static final int V_1_4_3_ID = <int> ; public static final Version V_1_4_3 = new Version ( V_1_4_3_ID , false , org . apache . lucene . util . Version . LUCENE_4_10_3 ) ; public static final int V_1_4_4_ID = <int> ; public static final Version V_1_4_4 = new Version ( V_1_4_4_ID , false , org . apache . lucene . util . Version . LUCENE_4_10_3 ) ; public static final int V_1_4_5_ID = <int> ; public static final Version V_1_4_5 = new Version ( V_1_4_5_ID , false , org . apache . lucene . util . Version . LUCENE_4_10_4 ) ; public static final int V_1_4_6_ID = <int> ; public static final Version V_1_4_6 = new Version ( V_1_4_6_ID , true , org . apache . lucene . util . Version . LUCENE_4_10_4 ) ; public static final int V_1_5_0_ID = <int> ; public static final Version V_1_5_0 = new Version ( V_1_5_0_ID , false , org . apache . lucene . util . Version . LUCENE_4_10_4 ) ; public static final int V_1_5_1_ID = <int> ; public static final Version V_1_5_1 = new Version ( V_1_5_1_ID , false , org . apache . lucene . util . Version . LUCENE_4_10_4 ) ; public static final int V_1_5_2_ID = <int> ; public static final Version V_1_5_2 = new Version ( V_1_5_2_ID , false , org . apache . lucene . util . Version . LUCENE_4_10_4 ) ; public static final int V_1_5_3_ID = <int> ; public static final Version V_1_5_3 = new Version ( V_1_5_3_ID , true , org . apache . lucene . util . Version . LUCENE_4_10_4 ) ; public static final int V_1_6_0_ID = <int> ; public static final Version V_1_6_0 = new Version ( V_1_6_0_ID , false , org . apache . lucene . util . Version . LUCENE_4_10_4 ) ; public static final int V_1_6_1_ID = <int> ; public static final Version V_1_6_1 = new Version ( V_1_6_1_ID , false , org . apache . lucene . util . Version . LUCENE_4_10_4 ) ; public static final int V_1_6_2_ID = <int> ; public static final Version V_1_6_2 = new Version ( V_1_6_2_ID , false , org . apache . lucene . util . Version . LUCENE_4_10_4 ) ; public static final int V_1_6_3_ID = <int> ; public static final Version V_1_6_3 = new Version ( V_1_6_3_ID , true , org . apache . lucene . util . Version . LUCENE_4_10_4 ) ; public static final int V_1_7_0_ID = <int> ; public static final Version V_1_7_0 = new Version ( V_1_7_0_ID , false , org . apache . lucene . util . Version . LUCENE_4_10_4 ) ; public static final int V_1_7_1_ID = <int> ; public static final Version V_1_7_1 = new Version ( V_1_7_1_ID , false , org . apache . lucene . util . Version . LUCENE_4_10_4 ) ; public static final int V_1_7_2_ID = <int> ; public static final Version V_1_7_2 = new Version ( V_1_7_2_ID , false , org . apache . lucene . util . Version . LUCENE_4_10_4 ) ; public static final int V_1_7_3_ID = <int> ; public static final Version V_1_7_3 = new Version ( V_1_7_3_ID , false , org . apache . lucene . util . Version . LUCENE_4_10_4 ) ; public static final int V_1_7_4_ID = <int> ; public static final Version V_1_7_4 = new Version ( V_1_7_4_ID , true , org . apache . lucene . util . Version . LUCENE_4_10_4 ) ; public static final int V_2_0_0_beta1_ID = <int> ; public static final Version V_2_0_0_beta1 = new Version ( V_2_0_0_beta1_ID , false , org . apache . lucene . util . Version . LUCENE_5_2_1 ) ; public static final int V_2_0_0_beta2_ID = <int> ; public static final Version V_2_0_0_beta2 = new Version ( V_2_0_0_beta2_ID , false , org . apache . lucene . util . Version . LUCENE_5_2_1 ) ; public static final int V_2_0_0_rc1_ID = <int> ; public static final Version V_2_0_0_rc1 = new Version ( V_2_0_0_rc1_ID , false , org . apache . lucene . util . Version . LUCENE_5_2_1 ) ; public static final int V_2_0_0_ID = <int> ; public static final Version V_2_0_0 = new Version ( V_2_0_0_ID , false , org . apache . lucene . util . Version . LUCENE_5_2_1 ) ; public static final int V_2_0_1_ID = <int> ; public static final Version V_2_0_1 = new Version ( V_2_0_1_ID , false , org . apache . lucene . util . Version . LUCENE_5_2_1 ) ; public static final int V_2_0_2_ID = <int> ; public static final Version V_2_0_2 = new Version ( V_2_0_2_ID , true , org . apache . lucene . util . Version . LUCENE_5_2_1 ) ; public static final int V_2_1_0_ID = <int> ; public static final Version V_2_1_0 = new Version ( V_2_1_0_ID , false , org . apache . lucene . util . Version . LUCENE_5_3_1 ) ; public static final int V_2_1_1_ID = <int> ; public static final Version V_2_1_1 = new Version ( V_2_1_1_ID , true , org . apache . lucene . util . Version . LUCENE_5_3_1 ) ; public static final int V_2_2_0_ID = <int> ; public static final Version V_2_2_0 = new Version ( V_2_2_0_ID , true , org . apache . lucene . util . Version . LUCENE_5_4_0 ) ; public static final int V_3_0_0_ID = <int> ; public static final Version V_3_0_0 = new Version ( V_3_0_0_ID , true , org . apache . lucene . util . Version . LUCENE_5_5_0 ) ; public static final Version CURRENT = V_3_0_0 ; static { assert CURRENT . luceneVersion . equals ( Lucene . VERSION ) : <str> + Lucene . VERSION + <str> + CURRENT . luceneVersion + <str> ; } public static Version readVersion ( StreamInput in ) throws IOException { return fromId ( in . readVInt ( ) ) ; } public static Version fromId ( int id ) { switch ( id ) { case V_3_0_0_ID : return V_3_0_0 ; case V_2_2_0_ID : return V_2_2_0 ; case V_2_1_1_ID : return V_2_1_1 ; case V_2_1_0_ID : return V_2_1_0 ; case V_2_0_2_ID : return V_2_0_2 ; case V_2_0_1_ID : return V_2_0_1 ; case V_2_0_0_ID : return V_2_0_0 ; case V_2_0_0_rc1_ID : return V_2_0_0_rc1 ; case V_2_0_0_beta2_ID : return V_2_0_0_beta2 ; case V_2_0_0_beta1_ID : return V_2_0_0_beta1 ; case V_1_7_4_ID : return V_1_7_4 ; case V_1_7_3_ID : return V_1_7_3 ; case V_1_7_2_ID : return V_1_7_2 ; case V_1_7_1_ID : return V_1_7_1 ; case V_1_7_0_ID : return V_1_7_0 ; case V_1_6_3_ID : return V_1_6_3 ; case V_1_6_2_ID : return V_1_6_2 ; case V_1_6_1_ID : return V_1_6_1 ; case V_1_6_0_ID : return V_1_6_0 ; case V_1_5_3_ID : return V_1_5_3 ; case V_1_5_2_ID : return V_1_5_2 ; case V_1_5_1_ID : return V_1_5_1 ; case V_1_5_0_ID : return V_1_5_0 ; case V_1_4_6_ID : return V_1_4_6 ; case V_1_4_5_ID : return V_1_4_5 ; case V_1_4_4_ID : return V_1_4_4 ; case V_1_4_3_ID : return V_1_4_3 ; case V_1_4_2_ID : return V_1_4_2 ; case V_1_4_1_ID : return V_1_4_1 ; case V_1_4_0_ID : return V_1_4_0 ; case V_1_4_0_Beta1_ID : return V_1_4_0_Beta1 ; case V_1_3_10_ID : return V_1_3_10 ; case V_1_3_9_ID : return V_1_3_9 ; case V_1_3_8_ID : return V_1_3_8 ; case V_1_3_7_ID : return V_1_3_7 ; case V_1_3_6_ID : return V_1_3_6 ; case V_1_3_5_ID : return V_1_3_5 ; case V_1_3_4_ID : return V_1_3_4 ; case V_1_3_3_ID : return V_1_3_3 ; case V_1_3_2_ID : return V_1_3_2 ; case V_1_3_1_ID : return V_1_3_1 ; case V_1_3_0_ID : return V_1_3_0 ; case V_1_2_5_ID : return V_1_2_5 ; case V_1_2_4_ID : return V_1_2_4 ; case V_1_2_3_ID : return V_1_2_3 ; case V_1_2_2_ID : return V_1_2_2 ; case V_1_2_1_ID : return V_1_2_1 ; case V_1_2_0_ID : return V_1_2_0 ; case V_1_1_2_ID : return V_1_1_2 ; case V_1_1_1_ID : return V_1_1_1 ; case V_1_1_0_ID : return V_1_1_0 ; case V_1_0_4_ID : return V_1_0_4 ; case V_1_0_3_ID : return V_1_0_3 ; case V_1_0_2_ID : return V_1_0_2 ; case V_1_0_1_ID : return V_1_0_1 ; case V_1_0_0_ID : return V_1_0_0 ; case V_1_0_0_RC2_ID : return V_1_0_0_RC2 ; case V_1_0_0_RC1_ID : return V_1_0_0_RC1 ; case V_1_0_0_Beta2_ID : return V_1_0_0_Beta2 ; case V_1_0_0_Beta1_ID : return V_1_0_0_Beta1 ; case V_0_90_14_ID : return V_0_90_14 ; case V_0_90_13_ID : return V_0_90_13 ; case V_0_90_12_ID : return V_0_90_12 ; case V_0_90_11_ID : return V_0_90_11 ; case V_0_90_10_ID : return V_0_90_10 ; case V_0_90_9_ID : return V_0_90_9 ; case V_0_90_8_ID : return V_0_90_8 ; case V_0_90_7_ID : return V_0_90_7 ; case V_0_90_6_ID : return V_0_90_6 ; case V_0_90_5_ID : return V_0_90_5 ; case V_0_90_4_ID : return V_0_90_4 ; case V_0_90_3_ID : return V_0_90_3 ; case V_0_90_2_ID : return V_0_90_2 ; case V_0_90_1_ID : return V_0_90_1 ; case V_0_90_0_ID : return V_0_90_0 ; case V_0_90_0_RC2_ID : return V_0_90_0_RC2 ; case V_0_90_0_RC1_ID : return V_0_90_0_RC1 ; case V_0_90_0_Beta1_ID : return V_0_90_0_Beta1 ; case V_0_20_7_ID : return V_0_20_7 ; case V_0_20_6_ID : return V_0_20_6 ; case V_0_20_5_ID : return V_0_20_5 ; case V_0_20_4_ID : return V_0_20_4 ; case V_0_20_3_ID : return V_0_20_3 ; case V_0_20_2_ID : return V_0_20_2 ; case V_0_20_1_ID : return V_0_20_1 ; case V_0_20_0_ID : return V_0_20_0 ; case V_0_20_0_RC1_ID : return V_0_20_0_RC1 ; case V_0_19_0_RC1_ID : return V_0_19_0_RC1 ; case V_0_19_0_RC2_ID : return V_0_19_0_RC2 ; case V_0_19_0_RC3_ID : return V_0_19_0_RC3 ; case V_0_19_0_ID : return V_0_19_0 ; case V_0_19_1_ID : return V_0_19_1 ; case V_0_19_2_ID : return V_0_19_2 ; case V_0_19_3_ID : return V_0_19_3 ; case V_0_19_4_ID : return V_0_19_4 ; case V_0_19_5_ID : return V_0_19_5 ; case V_0_19_6_ID : return V_0_19_6 ; case V_0_19_7_ID : return V_0_19_7 ; case V_0_19_8_ID : return V_0_19_8 ; case V_0_19_9_ID : return V_0_19_9 ; case V_0_19_10_ID : return V_0_19_10 ; case V_0_19_11_ID : return V_0_19_11 ; case V_0_19_12_ID : return V_0_19_12 ; case V_0_19_13_ID : return V_0_19_13 ; case V_0_18_0_ID : return V_0_18_0 ; case V_0_18_1_ID : return V_0_18_1 ; case V_0_18_2_ID : return V_0_18_2 ; case V_0_18_3_ID : return V_0_18_3 ; case V_0_18_4_ID : return V_0_18_4 ; case V_0_18_5_ID : return V_0_18_5 ; case V_0_18_6_ID : return V_0_18_6 ; case V_0_18_7_ID : return V_0_18_7 ; case V_0_18_8_ID : return V_0_18_8 ; default: return new Version ( id , false , Lucene . VERSION ) ; } } public static Version indexCreated ( Settings indexSettings ) { final Version indexVersion = indexSettings . getAsVersion ( IndexMetaData . SETTING_VERSION_CREATED , null ) ; if ( indexVersion = = null ) { throw new IllegalStateException ( <str> + IndexMetaData . SETTING_VERSION_CREATED + <str> + indexSettings . get ( IndexMetaData . SETTING_INDEX_UUID ) + <str> ) ; } return indexVersion ; } public static void writeVersion ( Version version , StreamOutput out ) throws IOException { out . writeVInt ( version . id ) ; } public static Version smallest ( Version version1 , Version version2 ) { return version1 . id < version2 . id ? version1 : version2 ; } public static Version fromString ( String version ) { if ( ! Strings . hasLength ( version ) ) { return Version . CURRENT ; } final boolean snapshot ; if ( snapshot = version . endsWith ( <str> ) ) { version = version . substring ( <int> , version . length ( ) - <int> ) ; } String [ ] parts = version . split ( <str> ) ; if ( parts . length < <int> | | parts . length > <int> ) { throw new IllegalArgumentException ( <str> + version ) ; } try { final int major = Integer . parseInt ( parts [ <int> ] ) * <int> ; final int minor = Integer . parseInt ( parts [ <int> ] ) * <int> ; final int revision = Integer . parseInt ( parts [ <int> ] ) * <int> ; int build = <int> ; if ( parts . length = = <int> ) { String buildStr = parts [ <int> ] ; if ( buildStr . startsWith ( <str> ) | | buildStr . startsWith ( <str> ) ) { build = Integer . parseInt ( buildStr . substring ( <int> ) ) ; } if ( buildStr . startsWith ( <str> ) | | buildStr . startsWith ( <str> ) ) { build = Integer . parseInt ( buildStr . substring ( <int> ) ) + <int> ; } } final Version versionFromId = fromId ( major + minor + revision + build ) ; if ( snapshot ! = versionFromId . snapshot ( ) ) { return new Version ( versionFromId . id , snapshot , versionFromId . luceneVersion ) ; } return versionFromId ; } catch ( NumberFormatException e ) { throw new IllegalArgumentException ( <str> + version , e ) ; } } public final int id ; public final byte major ; public final byte minor ; public final byte revision ; public final byte build ; public final Boolean snapshot ; public final org . apache . lucene . util . Version luceneVersion ; Version ( int id , boolean snapshot , org . apache . lucene . util . Version luceneVersion ) { this . id = id ; this . major = ( byte ) ( ( id / <int> ) % <int> ) ; this . minor = ( byte ) ( ( id / <int> ) % <int> ) ; this . revision = ( byte ) ( ( id / <int> ) % <int> ) ; this . build = ( byte ) ( id % <int> ) ; this . snapshot = snapshot ; this . luceneVersion = luceneVersion ; } public boolean snapshot ( ) { return snapshot ; } public boolean after ( Version version ) { return version . id < id ; } public boolean onOrAfter ( Version version ) { return version . id < = id ; } public boolean before ( Version version ) { return version . id > id ; } public boolean onOrBefore ( Version version ) { return version . id > = id ; } public Version minimumCompatibilityVersion ( ) { return Version . smallest ( this , fromId ( major * <int> + <int> ) ) ; } public String number ( ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( major ) . append ( <str> ) . append ( minor ) . append ( <str> ) . append ( revision ) ; if ( isBeta ( ) ) { if ( major > = <int> ) { sb . append ( <str> ) ; } else { sb . append ( <str> ) ; } sb . append ( build ) ; } else if ( build < <int> ) { if ( major > = <int> ) { sb . append ( <str> ) ; } else { sb . append ( <str> ) ; } sb . append ( build - <int> ) ; } return sb . toString ( ) ; } @SuppressForbidden ( reason = <str> ) public static void main ( String [ ] args ) { System . out . println ( <str> + Version . CURRENT + <str> + Build . CURRENT . shortHash ( ) + <str> + Build . CURRENT . date ( ) + <str> + JvmInfo . jvmInfo ( ) . version ( ) ) ; } @Override public String toString ( ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( number ( ) ) ; if ( snapshot ( ) ) { sb . append ( <str> ) ; } return sb . toString ( ) ; } @Override public boolean equals ( Object o ) { if ( this = = o ) { return true ; } if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) { return false ; } Version version = ( Version ) o ; if ( id ! = version . id ) { return false ; } return true ; } @Override public int hashCode ( ) { return id ; } public boolean isBeta ( ) { return build < <int> ; } public boolean isRC ( ) { return build > <int> & & build < <int> ; } public static class Module extends AbstractModule { private final Version version ; public Module ( Version version ) { this . version = version ; } @Override protected void configure ( ) { bind ( Version . class ) . toInstance ( version ) ; } } } 
