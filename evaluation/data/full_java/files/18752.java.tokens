package io . netty . buffer ; import io . netty . util . ByteProcessor ; public interface ByteBufProcessor extends ByteProcessor { ByteBufProcessor FIND_NUL = new ByteBufProcessor ( ) { @Override public boolean process ( byte value ) throws Exception { return value ! = <int> ; } } ; ByteBufProcessor FIND_NON_NUL = new ByteBufProcessor ( ) { @Override public boolean process ( byte value ) throws Exception { return value = = <int> ; } } ; ByteBufProcessor FIND_CR = new ByteBufProcessor ( ) { @Override public boolean process ( byte value ) throws Exception { return value ! = <str> ; } } ; ByteBufProcessor FIND_NON_CR = new ByteBufProcessor ( ) { @Override public boolean process ( byte value ) throws Exception { return value = = <str> ; } } ; ByteBufProcessor FIND_LF = new ByteBufProcessor ( ) { @Override public boolean process ( byte value ) throws Exception { return value ! = <str> ; } } ; ByteBufProcessor FIND_NON_LF = new ByteBufProcessor ( ) { @Override public boolean process ( byte value ) throws Exception { return value = = <str> ; } } ; ByteBufProcessor FIND_CRLF = new ByteBufProcessor ( ) { @Override public boolean process ( byte value ) throws Exception { return value ! = <str> & & value ! = <str> ; } } ; ByteBufProcessor FIND_NON_CRLF = new ByteBufProcessor ( ) { @Override public boolean process ( byte value ) throws Exception { return value = = <str> | | value = = <str> ; } } ; ByteBufProcessor FIND_LINEAR_WHITESPACE = new ByteBufProcessor ( ) { @Override public boolean process ( byte value ) throws Exception { return value ! = <str> & & value ! = <str> ; } } ; ByteBufProcessor FIND_NON_LINEAR_WHITESPACE = new ByteBufProcessor ( ) { @Override public boolean process ( byte value ) throws Exception { return value = = <str> | | value = = <str> ; } } ; } 
