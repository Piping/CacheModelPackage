package org . elasticsearch . common . hash ; import org . elasticsearch . ElasticsearchException ; import java . security . MessageDigest ; import java . security . NoSuchAlgorithmException ; public class MessageDigests { private static final MessageDigest MD5_DIGEST ; private static final MessageDigest SHA_1_DIGEST ; private static final MessageDigest SHA_256_DIGEST ; static { try { MD5_DIGEST = MessageDigest . getInstance ( <str> ) ; SHA_1_DIGEST = MessageDigest . getInstance ( <str> ) ; SHA_256_DIGEST = MessageDigest . getInstance ( <str> ) ; } catch ( NoSuchAlgorithmException e ) { throw new ElasticsearchException ( <str> , e ) ; } } public static MessageDigest md5 ( ) { return clone ( MD5_DIGEST ) ; } public static MessageDigest sha1 ( ) { return clone ( SHA_1_DIGEST ) ; } public static MessageDigest sha256 ( ) { return clone ( SHA_256_DIGEST ) ; } private static MessageDigest clone ( MessageDigest messageDigest ) { try { return ( MessageDigest ) messageDigest . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new ElasticsearchException ( <str> , e ) ; } } private static final char [ ] HEX_DIGITS = <str> . toCharArray ( ) ; public static String toHexString ( byte [ ] bytes ) { if ( bytes = = null ) { throw new NullPointerException ( <str> ) ; } StringBuilder sb = new StringBuilder ( <int> * bytes . length ) ; for ( int i = <int> ; i < bytes . length ; i + + ) { byte b = bytes [ i ] ; sb . append ( HEX_DIGITS [ b > > <int> & <hex> ] ) . append ( HEX_DIGITS [ b & <hex> ] ) ; } return sb . toString ( ) ; } } 
