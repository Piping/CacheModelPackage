package io . netty . handler . codec . http ; import org . junit . Test ; import java . text . ParseException ; import java . util . Date ; import static org . junit . Assert . * ; public class HttpHeaderDateFormatTest { private static final Date DATE = new Date ( <int> ) ; @Test public void testParse ( ) throws ParseException { HttpHeaderDateFormat format = HttpHeaderDateFormat . get ( ) ; final Date parsedDateWithSingleDigitDay = format . parse ( <str> ) ; assertNotNull ( parsedDateWithSingleDigitDay ) ; assertEquals ( DATE , parsedDateWithSingleDigitDay ) ; final Date parsedDateWithDoubleDigitDay = format . parse ( <str> ) ; assertNotNull ( parsedDateWithDoubleDigitDay ) ; assertEquals ( DATE , parsedDateWithDoubleDigitDay ) ; final Date parsedDateWithDashSeparatorSingleDigitDay = format . parse ( <str> ) ; assertNotNull ( parsedDateWithDashSeparatorSingleDigitDay ) ; assertEquals ( DATE , parsedDateWithDashSeparatorSingleDigitDay ) ; final Date parsedDateWithSingleDoubleDigitDay = format . parse ( <str> ) ; assertNotNull ( parsedDateWithSingleDoubleDigitDay ) ; assertEquals ( DATE , parsedDateWithSingleDoubleDigitDay ) ; final Date parsedDateWithoutGMT = format . parse ( <str> ) ; assertNotNull ( parsedDateWithoutGMT ) ; assertEquals ( DATE , parsedDateWithoutGMT ) ; } @Test public void testFormat ( ) { HttpHeaderDateFormat format = HttpHeaderDateFormat . get ( ) ; final String formatted = format . format ( DATE ) ; assertNotNull ( formatted ) ; assertEquals ( <str> , formatted ) ; } } 
