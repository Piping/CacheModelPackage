package org . elasticsearch . action . support . master ; import org . elasticsearch . action . ActionRequest ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . common . unit . TimeValue ; import java . io . IOException ; public abstract class MasterNodeRequest < T extends MasterNodeRequest > extends ActionRequest < T > { public static final TimeValue DEFAULT_MASTER_NODE_TIMEOUT = TimeValue . timeValueSeconds ( <int> ) ; protected TimeValue masterNodeTimeout = DEFAULT_MASTER_NODE_TIMEOUT ; protected MasterNodeRequest ( ) { } protected MasterNodeRequest ( ActionRequest request ) { super ( request ) ; } @SuppressWarnings ( <str> ) public final T masterNodeTimeout ( TimeValue timeout ) { this . masterNodeTimeout = timeout ; return ( T ) this ; } public final T masterNodeTimeout ( String timeout ) { return masterNodeTimeout ( TimeValue . parseTimeValue ( timeout , null , getClass ( ) . getSimpleName ( ) + <str> ) ) ; } public final TimeValue masterNodeTimeout ( ) { return this . masterNodeTimeout ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; masterNodeTimeout = TimeValue . readTimeValue ( in ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; masterNodeTimeout . writeTo ( out ) ; } } 
