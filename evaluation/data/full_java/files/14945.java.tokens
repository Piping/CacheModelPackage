package org . gradle . nativeplatform . internal . prebuilt ; import org . gradle . api . file . FileCollection ; import org . gradle . nativeplatform . BuildType ; import org . gradle . nativeplatform . Flavor ; import org . gradle . nativeplatform . PrebuiltLibrary ; import org . gradle . nativeplatform . PrebuiltSharedLibraryBinary ; import org . gradle . nativeplatform . platform . NativePlatform ; import java . io . File ; public class DefaultPrebuiltSharedLibraryBinary extends AbstractPrebuiltLibraryBinary implements PrebuiltSharedLibraryBinary { private File sharedLibraryFile ; private File sharedLibraryLinkFile ; public DefaultPrebuiltSharedLibraryBinary ( String name , PrebuiltLibrary library , BuildType buildType , NativePlatform targetPlatform , Flavor flavor ) { super ( name , library , buildType , targetPlatform , flavor ) ; } public String getDisplayName ( ) { return String . format ( <str> , getName ( ) ) ; } public void setSharedLibraryFile ( File sharedLibraryFile ) { this . sharedLibraryFile = sharedLibraryFile ; } public File getSharedLibraryFile ( ) { return sharedLibraryFile ; } public void setSharedLibraryLinkFile ( File sharedLibraryLinkFile ) { this . sharedLibraryLinkFile = sharedLibraryLinkFile ; } public File getSharedLibraryLinkFile ( ) { if ( sharedLibraryLinkFile ! = null ) { return sharedLibraryLinkFile ; } return sharedLibraryFile ; } public FileCollection getLinkFiles ( ) { return createFileCollection ( getSharedLibraryLinkFile ( ) , <str> ) ; } public FileCollection getRuntimeFiles ( ) { return createFileCollection ( getSharedLibraryFile ( ) , <str> ) ; } } 
