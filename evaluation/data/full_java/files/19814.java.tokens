package io . netty . example . http . upload ; import io . netty . channel . ChannelInitializer ; import io . netty . channel . ChannelPipeline ; import io . netty . channel . socket . SocketChannel ; import io . netty . handler . codec . http . HttpClientCodec ; import io . netty . handler . codec . http . HttpContentDecompressor ; import io . netty . handler . ssl . SslContext ; import io . netty . handler . stream . ChunkedWriteHandler ; public class HttpUploadClientIntializer extends ChannelInitializer < SocketChannel > { private final SslContext sslCtx ; public HttpUploadClientIntializer ( SslContext sslCtx ) { this . sslCtx = sslCtx ; } @Override public void initChannel ( SocketChannel ch ) { ChannelPipeline pipeline = ch . pipeline ( ) ; if ( sslCtx ! = null ) { pipeline . addLast ( <str> , sslCtx . newHandler ( ch . alloc ( ) ) ) ; } pipeline . addLast ( <str> , new HttpClientCodec ( ) ) ; pipeline . addLast ( <str> , new HttpContentDecompressor ( ) ) ; pipeline . addLast ( <str> , new ChunkedWriteHandler ( ) ) ; pipeline . addLast ( <str> , new HttpUploadClientHandler ( ) ) ; } } 
