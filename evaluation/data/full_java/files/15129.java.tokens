package org . gradle . play . internal ; import org . gradle . api . internal . TaskOutputsInternal ; import org . gradle . api . tasks . WorkResult ; import org . gradle . language . base . internal . compile . Compiler ; import org . gradle . language . base . internal . tasks . SimpleStaleClassCleaner ; import org . gradle . play . internal . spec . PlayCompileSpec ; public class CleaningPlayToolCompiler < T extends PlayCompileSpec > implements Compiler < T > { private final Compiler < T > delegate ; private TaskOutputsInternal taskOutputs ; public CleaningPlayToolCompiler ( Compiler < T > delegate , TaskOutputsInternal taskOutputs ) { this . delegate = delegate ; this . taskOutputs = taskOutputs ; } public WorkResult execute ( T spec ) { SimpleStaleClassCleaner cleaner = new SimpleStaleClassCleaner ( taskOutputs ) ; cleaner . setDestinationDir ( spec . getDestinationDir ( ) ) ; cleaner . execute ( ) ; return delegate . execute ( spec ) ; } } 
