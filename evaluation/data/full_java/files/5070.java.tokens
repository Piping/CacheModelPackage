package org . elasticsearch . action . admin . indices . alias . get ; import org . elasticsearch . action . ActionRequestValidationException ; import org . elasticsearch . action . AliasesRequest ; import org . elasticsearch . action . support . IndicesOptions ; import org . elasticsearch . action . support . master . MasterNodeReadRequest ; import org . elasticsearch . common . Strings ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import java . io . IOException ; public class GetAliasesRequest extends MasterNodeReadRequest < GetAliasesRequest > implements AliasesRequest { private String [ ] indices = Strings . EMPTY_ARRAY ; private String [ ] aliases = Strings . EMPTY_ARRAY ; private IndicesOptions indicesOptions = IndicesOptions . strictExpandOpen ( ) ; public GetAliasesRequest ( String [ ] aliases ) { this . aliases = aliases ; } public GetAliasesRequest ( String alias ) { this . aliases = new String [ ] { alias } ; } public GetAliasesRequest ( ) { } @Override public GetAliasesRequest indices ( String . . . indices ) { this . indices = indices ; return this ; } @Override public GetAliasesRequest aliases ( String . . . aliases ) { this . aliases = aliases ; return this ; } public GetAliasesRequest indicesOptions ( IndicesOptions indicesOptions ) { this . indicesOptions = indicesOptions ; return this ; } @Override public String [ ] indices ( ) { return indices ; } @Override public String [ ] aliases ( ) { return aliases ; } @Override public boolean expandAliasesWildcards ( ) { return true ; } @Override public IndicesOptions indicesOptions ( ) { return indicesOptions ; } @Override public ActionRequestValidationException validate ( ) { return null ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; indices = in . readStringArray ( ) ; aliases = in . readStringArray ( ) ; indicesOptions = IndicesOptions . readIndicesOptions ( in ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeStringArray ( indices ) ; out . writeStringArray ( aliases ) ; indicesOptions . writeIndicesOptions ( out ) ; } } 
