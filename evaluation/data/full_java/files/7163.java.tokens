package org . elasticsearch . search . aggregations . bucket . filter ; import org . apache . lucene . search . MatchAllDocsQuery ; import org . elasticsearch . common . lucene . search . Queries ; import org . elasticsearch . common . xcontent . XContentParser ; import org . elasticsearch . index . query . ParsedQuery ; import org . elasticsearch . search . aggregations . Aggregator ; import org . elasticsearch . search . aggregations . AggregatorFactory ; import org . elasticsearch . search . internal . SearchContext ; import java . io . IOException ; public class FilterParser implements Aggregator . Parser { @Override public String type ( ) { return InternalFilter . TYPE . name ( ) ; } @Override public AggregatorFactory parse ( String aggregationName , XContentParser parser , SearchContext context ) throws IOException { ParsedQuery filter = context . indexShard ( ) . getQueryShardContext ( ) . parseInnerFilter ( parser ) ; return new FilterAggregator . Factory ( aggregationName , filter = = null ? new MatchAllDocsQuery ( ) : filter . query ( ) ) ; } } 
