package org . gradle . api . internal . tasks . compile . incremental . jar ; import java . io . File ; import java . util . Collections ; import java . util . Map ; import java . util . Set ; public class JarClasspathSnapshot { private final Map < File , JarSnapshot > jarSnapshots ; private final JarClasspathSnapshotData data ; public JarClasspathSnapshot ( Map < File , JarSnapshot > jarSnapshots , JarClasspathSnapshotData data ) { this . jarSnapshots = jarSnapshots ; this . data = data ; } public JarSnapshot getSnapshot ( JarArchive jarArchive ) { return jarSnapshots . get ( jarArchive . file ) ; } public boolean isAnyClassDuplicated ( Set < String > classNames ) { boolean noCommonElements = Collections . disjoint ( data . getDuplicateClasses ( ) , classNames ) ; return ! noCommonElements ; } public JarClasspathSnapshotData getData ( ) { return data ; } public boolean isAnyClassDuplicated ( JarArchive jarArchive ) { JarSnapshot snapshot = getSnapshot ( jarArchive ) ; return isAnyClassDuplicated ( snapshot . getClasses ( ) ) ; } } 
