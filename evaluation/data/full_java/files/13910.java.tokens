package org . gradle . tooling . internal . provider ; import org . gradle . api . JavaVersion ; import org . gradle . initialization . BuildCancellationToken ; import org . gradle . initialization . BuildLayoutParameters ; import org . gradle . initialization . DefaultBuildCancellationToken ; import org . gradle . internal . Cast ; import org . gradle . internal . concurrent . CompositeStoppable ; import org . gradle . internal . jvm . UnsupportedJavaRuntimeException ; import org . gradle . internal . nativeintegration . services . NativeServices ; import org . gradle . internal . service . ServiceRegistry ; import org . gradle . internal . service . ServiceRegistryBuilder ; import org . gradle . logging . LoggingServiceRegistry ; import org . gradle . tooling . UnsupportedVersionException ; import org . gradle . tooling . internal . adapter . ProtocolToModelAdapter ; import org . gradle . tooling . internal . consumer . versioning . ModelMapping ; import org . gradle . tooling . internal . protocol . * ; import org . gradle . tooling . internal . protocol . exceptions . InternalUnsupportedBuildArgumentException ; import org . gradle . tooling . internal . protocol . test . InternalTestExecutionConnection ; import org . gradle . tooling . internal . protocol . test . InternalTestExecutionRequest ; import org . gradle . tooling . internal . provider . connection . BuildLogLevelMixIn ; import org . gradle . tooling . internal . provider . connection . ProviderBuildResult ; import org . gradle . tooling . internal . provider . connection . ProviderConnectionParameters ; import org . gradle . tooling . internal . provider . connection . ProviderOperationParameters ; import org . gradle . tooling . internal . provider . test . ProviderInternalTestExecutionRequest ; import org . gradle . util . GradleVersion ; import org . slf4j . Logger ; import org . slf4j . LoggerFactory ; import java . io . File ; public class DefaultConnection implements InternalConnection , BuildActionRunner , ConfigurableConnection , ModelBuilder , InternalBuildActionExecutor , InternalCancellableConnection , StoppableConnection , InternalTestExecutionConnection { private static final Logger LOGGER = LoggerFactory . getLogger ( DefaultConnection . class ) ; private ProtocolToModelAdapter adapter ; private ServiceRegistry services ; private ProviderConnection connection ; public DefaultConnection ( ) { LOGGER . debug ( <str> , GradleVersion . current ( ) . getVersion ( ) ) ; } public void configure ( ConnectionParameters parameters ) { ProviderConnectionParameters providerConnectionParameters = new ProtocolToModelAdapter ( ) . adapt ( ProviderConnectionParameters . class , parameters ) ; File gradleUserHomeDir = providerConnectionParameters . getGradleUserHomeDir ( null ) ; if ( gradleUserHomeDir = = null ) { gradleUserHomeDir = new BuildLayoutParameters ( ) . getGradleUserHomeDir ( ) ; } initializeServices ( gradleUserHomeDir ) ; connection . configure ( providerConnectionParameters ) ; } private void initializeServices ( File gradleUserHomeDir ) { NativeServices . initialize ( gradleUserHomeDir ) ; LoggingServiceRegistry loggingServices = LoggingServiceRegistry . newEmbeddableLogging ( ) ; services = ServiceRegistryBuilder . builder ( ) . displayName ( <str> ) . parent ( loggingServices ) . parent ( NativeServices . getInstance ( ) ) . provider ( new ConnectionScopeServices ( loggingServices ) ) . build ( ) ; adapter = services . get ( ProtocolToModelAdapter . class ) ; connection = services . get ( ProviderConnection . class ) ; } public void configureLogging ( final boolean verboseLogging ) { } public ConnectionMetaDataVersion1 getMetaData ( ) { return new DefaultConnectionMetaData ( ) ; } @Deprecated public void stop ( ) { } public void shutdown ( ShutdownParameters parameters ) { CompositeStoppable . stoppable ( services ) . stop ( ) ; } @Deprecated public void executeBuild ( BuildParametersVersion1 buildParameters , BuildOperationParametersVersion1 operationParameters ) { throw unsupportedConnectionException ( ) ; } @Deprecated public ProjectVersion3 getModel ( Class < ? extends ProjectVersion3 > type , BuildOperationParametersVersion1 parameters ) { throw unsupportedConnectionException ( ) ; } @Deprecated public < T > T getTheModel ( Class < T > type , BuildOperationParametersVersion1 parameters ) { throw unsupportedConnectionException ( ) ; } @Deprecated public < T > BuildResult < T > run ( Class < T > type , BuildParameters buildParameters ) throws UnsupportedOperationException , IllegalStateException { validateCanRun ( ) ; ProviderOperationParameters providerParameters = toProviderParameters ( buildParameters ) ; String modelName = new ModelMapping ( ) . getModelNameFromProtocolType ( type ) ; T result = Cast . uncheckedCast ( connection . run ( modelName , new DefaultBuildCancellationToken ( ) , providerParameters ) ) ; return new ProviderBuildResult < T > ( result ) ; } public BuildResult < ? > getModel ( ModelIdentifier modelIdentifier , BuildParameters operationParameters ) throws UnsupportedOperationException , IllegalStateException { validateCanRun ( ) ; ProviderOperationParameters providerParameters = toProviderParameters ( operationParameters ) ; Object result = connection . run ( modelIdentifier . getName ( ) , new DefaultBuildCancellationToken ( ) , providerParameters ) ; return new ProviderBuildResult < Object > ( result ) ; } public BuildResult < ? > getModel ( ModelIdentifier modelIdentifier , InternalCancellationToken cancellationToken , BuildParameters operationParameters ) throws BuildExceptionVersion1 , InternalUnsupportedModelException , InternalUnsupportedBuildArgumentException , IllegalStateException { validateCanRun ( ) ; ProviderOperationParameters providerParameters = toProviderParameters ( operationParameters ) ; BuildCancellationToken buildCancellationToken = new InternalCancellationTokenAdapter ( cancellationToken ) ; Object result = connection . run ( modelIdentifier . getName ( ) , buildCancellationToken , providerParameters ) ; return new ProviderBuildResult < Object > ( result ) ; } public < T > BuildResult < T > run ( InternalBuildAction < T > action , BuildParameters operationParameters ) throws BuildExceptionVersion1 , InternalUnsupportedBuildArgumentException , IllegalStateException { validateCanRun ( ) ; ProviderOperationParameters providerParameters = toProviderParameters ( operationParameters ) ; Object results = connection . run ( action , new DefaultBuildCancellationToken ( ) , providerParameters ) ; return new ProviderBuildResult < T > ( ( T ) results ) ; } public < T > BuildResult < T > run ( InternalBuildAction < T > action , InternalCancellationToken cancellationToken , BuildParameters operationParameters ) throws BuildExceptionVersion1 , InternalUnsupportedBuildArgumentException , IllegalStateException { validateCanRun ( ) ; ProviderOperationParameters providerParameters = toProviderParameters ( operationParameters ) ; BuildCancellationToken buildCancellationToken = new InternalCancellationTokenAdapter ( cancellationToken ) ; Object results = connection . run ( action , buildCancellationToken , providerParameters ) ; return new ProviderBuildResult < T > ( ( T ) results ) ; } public BuildResult < ? > runTests ( InternalTestExecutionRequest testExecutionRequest , InternalCancellationToken cancellationToken , BuildParameters operationParameters ) throws BuildExceptionVersion1 , InternalUnsupportedBuildArgumentException , IllegalStateException { validateCanRun ( ) ; ProviderInternalTestExecutionRequest testExecutionRequestVersion2 = adapter . adapt ( ProviderInternalTestExecutionRequest . class , testExecutionRequest ) ; ProviderOperationParameters providerParameters = toProviderParameters ( operationParameters ) ; BuildCancellationToken buildCancellationToken = new InternalCancellationTokenAdapter ( cancellationToken ) ; Object results = connection . runTests ( testExecutionRequestVersion2 , buildCancellationToken , providerParameters ) ; return new ProviderBuildResult < Object > ( results ) ; } private void validateCanRun ( ) { LOGGER . info ( <str> , GradleVersion . current ( ) . getVersion ( ) ) ; if ( ! JavaVersion . current ( ) . isJava6Compatible ( ) ) { throw UnsupportedJavaRuntimeException . usingUnsupportedVersion ( <str> , JavaVersion . VERSION_1_6 ) ; } } private UnsupportedVersionException unsupportedConnectionException ( ) { return new UnsupportedVersionException ( <str> ) ; } private ProviderOperationParameters toProviderParameters ( BuildParameters buildParameters ) { return adapter . adapt ( ProviderOperationParameters . class , buildParameters , BuildLogLevelMixIn . class ) ; } } 
