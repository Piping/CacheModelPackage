package java . util . concurrent ; public class CountDownLatch { private int count ; public CountDownLatch ( int count ) { if ( count < <int> ) { throw new IllegalArgumentException ( <str> ) ; } this . count = count ; } public void await ( ) throws InterruptedException { if ( count > <int> ) { throw new IllegalStateException ( <str> + count ) ; } } public boolean await ( long timeout , TimeUnit unit ) throws InterruptedException { await ( ) ; return true ; } public void countDown ( ) { if ( count > <int> ) { count - - ; } } public long getCount ( ) { return count ; } public String toString ( ) { return super . toString ( ) + <str> + count + <str> ; } } 
