package org . elasticsearch . search . aggregations . metrics ; import org . elasticsearch . common . xcontent . XContentParser ; import org . elasticsearch . search . SearchParseException ; import org . elasticsearch . search . aggregations . Aggregator ; import org . elasticsearch . search . aggregations . AggregatorFactory ; import org . elasticsearch . search . aggregations . InternalAggregation ; import org . elasticsearch . search . aggregations . support . ValuesSource ; import org . elasticsearch . search . aggregations . support . ValuesSourceConfig ; import org . elasticsearch . search . aggregations . support . ValuesSourceParser ; import org . elasticsearch . search . internal . SearchContext ; import java . io . IOException ; public abstract class NumericValuesSourceMetricsAggregatorParser < S extends InternalNumericMetricsAggregation > implements Aggregator . Parser { protected final InternalAggregation . Type aggType ; protected NumericValuesSourceMetricsAggregatorParser ( InternalAggregation . Type aggType ) { this . aggType = aggType ; } @Override public String type ( ) { return aggType . name ( ) ; } @Override public AggregatorFactory parse ( String aggregationName , XContentParser parser , SearchContext context ) throws IOException { ValuesSourceParser < ValuesSource . Numeric > vsParser = ValuesSourceParser . numeric ( aggregationName , aggType , context ) . formattable ( true ) . build ( ) ; XContentParser . Token token ; String currentFieldName = null ; while ( ( token = parser . nextToken ( ) ) ! = XContentParser . Token . END_OBJECT ) { if ( token = = XContentParser . Token . FIELD_NAME ) { currentFieldName = parser . currentName ( ) ; } else if ( ! vsParser . token ( currentFieldName , token , parser ) ) { throw new SearchParseException ( context , <str> + token + <str> + aggregationName + <str> , parser . getTokenLocation ( ) ) ; } } return createFactory ( aggregationName , vsParser . config ( ) ) ; } protected abstract AggregatorFactory createFactory ( String aggregationName , ValuesSourceConfig < ValuesSource . Numeric > config ) ; } 
