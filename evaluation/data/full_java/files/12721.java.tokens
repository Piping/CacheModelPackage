package org . gradle . api . internal . artifacts . ivyservice . resolveengine . result ; import org . gradle . api . internal . artifacts . ivyservice . resolveengine . graph . DependencyGraphNode ; import org . gradle . api . internal . artifacts . ivyservice . resolveengine . graph . DependencyGraphVisitor ; public class ResolutionResultDependencyGraphVisitor implements DependencyGraphVisitor { private final ResolutionResultBuilder newModelBuilder ; public ResolutionResultDependencyGraphVisitor ( ResolutionResultBuilder newModelBuilder ) { this . newModelBuilder = newModelBuilder ; } public void start ( DependencyGraphNode root ) { newModelBuilder . start ( root . toId ( ) , root . getComponentId ( ) ) ; } public void visitNode ( DependencyGraphNode resolvedConfiguration ) { newModelBuilder . resolvedModuleVersion ( resolvedConfiguration . getSelection ( ) ) ; } public void visitEdge ( DependencyGraphNode resolvedConfiguration ) { newModelBuilder . resolvedConfiguration ( resolvedConfiguration . toId ( ) , resolvedConfiguration . getOutgoingEdges ( ) ) ; } public void finish ( DependencyGraphNode root ) { } } 
