package org . gradle . nativeplatform . fixtures . app ; import org . gradle . integtests . fixtures . SourceFile ; import java . util . ArrayList ; import java . util . Arrays ; import java . util . Collections ; import java . util . List ; public abstract class TestApp extends TestNativeComponent { public abstract SourceFile getMainSource ( ) ; public abstract SourceFile getLibraryHeader ( ) ; public abstract List < SourceFile > getLibrarySources ( ) ; public TestNativeComponent getLibrary ( ) { return new TestNativeComponent ( ) { @Override public List < SourceFile > getSourceFiles ( ) { return getLibrarySources ( ) ; } @Override public List < SourceFile > getHeaderFiles ( ) { return Arrays . asList ( getLibraryHeader ( ) ) ; } } ; } public TestNativeComponent getExecutable ( ) { return new TestNativeComponent ( ) { @Override public List < SourceFile > getHeaderFiles ( ) { return Collections . emptyList ( ) ; } @Override public List < SourceFile > getSourceFiles ( ) { return Arrays . asList ( getMainSource ( ) ) ; } } ; } @Override public List < SourceFile > getHeaderFiles ( ) { ArrayList < SourceFile > headerFiles = new ArrayList < SourceFile > ( ) ; headerFiles . addAll ( getExecutable ( ) . getHeaderFiles ( ) ) ; headerFiles . addAll ( getLibrary ( ) . getHeaderFiles ( ) ) ; return headerFiles ; } @Override public List < SourceFile > getSourceFiles ( ) { ArrayList < SourceFile > sourceFiles = new ArrayList < SourceFile > ( ) ; sourceFiles . addAll ( getExecutable ( ) . getSourceFiles ( ) ) ; sourceFiles . addAll ( getLibrary ( ) . getSourceFiles ( ) ) ; return sourceFiles ; } } 
