package org . gradle . api . internal . tasks . compile . incremental . jar ; import org . gradle . api . internal . tasks . compile . incremental . deps . ClassSetAnalysis ; import org . gradle . api . internal . tasks . compile . incremental . deps . DependentsSet ; import java . io . File ; import java . util . Map ; import java . util . Set ; public class PreviousCompilation { private ClassSetAnalysis analysis ; private LocalJarClasspathSnapshotStore classpathSnapshotStore ; private final JarSnapshotCache jarSnapshotCache ; private Map < File , JarSnapshot > jarSnapshots ; public PreviousCompilation ( ClassSetAnalysis analysis , LocalJarClasspathSnapshotStore classpathSnapshotStore , JarSnapshotCache jarSnapshotCache ) { this . analysis = analysis ; this . classpathSnapshotStore = classpathSnapshotStore ; this . jarSnapshotCache = jarSnapshotCache ; } public DependentsSet getDependents ( Set < String > allClasses ) { return analysis . getRelevantDependents ( allClasses ) ; } public JarSnapshot getJarSnapshot ( File file ) { if ( jarSnapshots = = null ) { JarClasspathSnapshotData data = classpathSnapshotStore . get ( ) ; jarSnapshots = jarSnapshotCache . getJarSnapshots ( data . getJarHashes ( ) ) ; } return jarSnapshots . get ( file ) ; } public DependentsSet getDependents ( String className ) { return analysis . getRelevantDependents ( className ) ; } } 
