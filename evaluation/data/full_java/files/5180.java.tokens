package org . elasticsearch . action . admin . indices . settings . get ; import org . elasticsearch . action . ActionRequestValidationException ; import org . elasticsearch . action . IndicesRequest ; import org . elasticsearch . action . ValidateActions ; import org . elasticsearch . action . support . IndicesOptions ; import org . elasticsearch . action . support . master . MasterNodeReadRequest ; import org . elasticsearch . common . Strings ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import java . io . IOException ; public class GetSettingsRequest extends MasterNodeReadRequest < GetSettingsRequest > implements IndicesRequest . Replaceable { private String [ ] indices = Strings . EMPTY_ARRAY ; private IndicesOptions indicesOptions = IndicesOptions . fromOptions ( false , true , true , true ) ; private String [ ] names = Strings . EMPTY_ARRAY ; private boolean humanReadable = false ; @Override public GetSettingsRequest indices ( String . . . indices ) { this . indices = indices ; return this ; } public GetSettingsRequest indicesOptions ( IndicesOptions indicesOptions ) { this . indicesOptions = indicesOptions ; return this ; } @Override public String [ ] indices ( ) { return indices ; } @Override public IndicesOptions indicesOptions ( ) { return indicesOptions ; } public String [ ] names ( ) { return names ; } public GetSettingsRequest names ( String . . . names ) { this . names = names ; return this ; } public boolean humanReadable ( ) { return humanReadable ; } public GetSettingsRequest humanReadable ( boolean humanReadable ) { this . humanReadable = humanReadable ; return this ; } @Override public ActionRequestValidationException validate ( ) { ActionRequestValidationException validationException = null ; if ( names = = null ) { validationException = ValidateActions . addValidationError ( <str> , validationException ) ; } return validationException ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; indices = in . readStringArray ( ) ; indicesOptions = IndicesOptions . readIndicesOptions ( in ) ; names = in . readStringArray ( ) ; humanReadable = in . readBoolean ( ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeStringArray ( indices ) ; indicesOptions . writeIndicesOptions ( out ) ; out . writeStringArray ( names ) ; out . writeBoolean ( humanReadable ) ; } } 
