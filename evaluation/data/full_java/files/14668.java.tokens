package org . gradle . language . base . internal . plugins ; import org . apache . commons . lang . StringUtils ; import org . gradle . api . Rule ; import org . gradle . api . Task ; import org . gradle . api . tasks . Delete ; import org . gradle . api . tasks . TaskContainer ; public class CleanRule implements Rule { public static final String CLEAN = <str> ; private final TaskContainer tasks ; public CleanRule ( TaskContainer tasks ) { this . tasks = tasks ; } public String getDescription ( ) { return String . format ( <str> , CLEAN ) ; } @Override public String toString ( ) { return String . format ( <str> , getDescription ( ) ) ; } public void apply ( String taskName ) { if ( ! taskName . startsWith ( CLEAN ) | | taskName . equals ( CLEAN ) ) { return ; } String targetTaskName = taskName . substring ( CLEAN . length ( ) ) ; if ( Character . isLowerCase ( targetTaskName . charAt ( <int> ) ) ) { return ; } Task task = tasks . findByName ( StringUtils . uncapitalize ( targetTaskName ) ) ; if ( task = = null ) { return ; } Delete clean = tasks . create ( taskName , Delete . class ) ; clean . delete ( task . getOutputs ( ) . getFiles ( ) ) ; } } 
