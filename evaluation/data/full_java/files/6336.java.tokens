package org . elasticsearch . index . analysis ; import org . apache . lucene . analysis . Analyzer ; import org . apache . lucene . analysis . Tokenizer ; import org . apache . lucene . analysis . TokenStream ; import org . apache . lucene . analysis . core . LowerCaseFilter ; import org . apache . lucene . analysis . core . StopFilter ; import org . apache . lucene . analysis . pattern . PatternTokenizer ; import org . apache . lucene . analysis . util . CharArraySet ; import java . util . regex . Pattern ; public final class PatternAnalyzer extends Analyzer { private final Pattern pattern ; private final boolean lowercase ; private final CharArraySet stopWords ; public PatternAnalyzer ( Pattern pattern , boolean lowercase , CharArraySet stopWords ) { this . pattern = pattern ; this . lowercase = lowercase ; this . stopWords = stopWords ; } @Override protected TokenStreamComponents createComponents ( String s ) { final Tokenizer tokenizer = new PatternTokenizer ( pattern , - <int> ) ; TokenStream stream = tokenizer ; if ( lowercase ) { stream = new LowerCaseFilter ( stream ) ; } if ( stopWords ! = null ) { stream = new StopFilter ( stream , stopWords ) ; } return new TokenStreamComponents ( tokenizer , stream ) ; } } 
