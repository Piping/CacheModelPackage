package clojure . asm ; public final class Handle { final int tag ; final String owner ; final String name ; final String desc ; public Handle ( int tag , String owner , String name , String desc ) { this . tag = tag ; this . owner = owner ; this . name = name ; this . desc = desc ; } public int getTag ( ) { return tag ; } public String getOwner ( ) { return owner ; } public String getName ( ) { return name ; } public String getDesc ( ) { return desc ; } @Override public boolean equals ( Object obj ) { if ( obj = = this ) { return true ; } if ( ! ( obj instanceof Handle ) ) { return false ; } Handle h = ( Handle ) obj ; return tag = = h . tag & & owner . equals ( h . owner ) & & name . equals ( h . name ) & & desc . equals ( h . desc ) ; } @Override public int hashCode ( ) { return tag + owner . hashCode ( ) * name . hashCode ( ) * desc . hashCode ( ) ; } @Override public String toString ( ) { return owner + <str> + name + desc + <str> + tag + <str> ; } } 
