package org . elasticsearch . test . rest . section ; import org . elasticsearch . common . logging . ESLogger ; import org . elasticsearch . common . logging . Loggers ; import static org . hamcrest . Matchers . instanceOf ; import static org . hamcrest . Matchers . lessThan ; import static org . junit . Assert . assertThat ; import static org . junit . Assert . fail ; public class LessThanAssertion extends Assertion { private static final ESLogger logger = Loggers . getLogger ( LessThanAssertion . class ) ; public LessThanAssertion ( String field , Object expectedValue ) { super ( field , expectedValue ) ; } @Override @SuppressWarnings ( <str> ) protected void doAssert ( Object actualValue , Object expectedValue ) { logger . trace ( <str> , actualValue , expectedValue , getField ( ) ) ; assertThat ( <str> + getField ( ) + <str> + safeClass ( actualValue ) + <str> , actualValue , instanceOf ( Comparable . class ) ) ; assertThat ( <str> + getField ( ) + <str> + expectedValue . getClass ( ) + <str> , expectedValue , instanceOf ( Comparable . class ) ) ; try { assertThat ( errorMessage ( ) , ( Comparable ) actualValue , lessThan ( ( Comparable ) expectedValue ) ) ; } catch ( ClassCastException e ) { fail ( <str> + errorMessage ( ) + <str> + e ) ; } } private String errorMessage ( ) { return <str> + getField ( ) + <str> + getExpectedValue ( ) + <str> ; } } 
