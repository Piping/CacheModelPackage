package org . apache . cassandra . stress . settings ; import java . io . Serializable ; import java . util . Arrays ; import java . util . List ; import java . util . Map ; public class SettingsSamples implements Serializable { public final int liveCount ; public final int historyCount ; public final int reportCount ; public SettingsSamples ( SampleOptions options ) { liveCount = ( int ) OptionDistribution . parseLong ( options . liveCount . value ( ) ) ; historyCount = ( int ) OptionDistribution . parseLong ( options . historyCount . value ( ) ) ; reportCount = ( int ) OptionDistribution . parseLong ( options . reportCount . value ( ) ) ; } private static final class SampleOptions extends GroupedOptions { final OptionSimple historyCount = new OptionSimple ( <str> , <str> , <str> , <str> , false ) ; final OptionSimple liveCount = new OptionSimple ( <str> , <str> , <str> , <str> , false ) ; final OptionSimple reportCount = new OptionSimple ( <str> , <str> , <str> , <str> , false ) ; @Override public List < ? extends Option > options ( ) { return Arrays . asList ( historyCount , liveCount , reportCount ) ; } } public static SettingsSamples get ( Map < String , String [ ] > clArgs ) { String [ ] params = clArgs . remove ( <str> ) ; if ( params = = null ) { return new SettingsSamples ( new SampleOptions ( ) ) ; } SampleOptions options = GroupedOptions . select ( params , new SampleOptions ( ) ) ; if ( options = = null ) { printHelp ( ) ; System . out . println ( <str> ) ; System . exit ( <int> ) ; } return new SettingsSamples ( options ) ; } public static void printHelp ( ) { GroupedOptions . printOptions ( System . out , <str> , new SampleOptions ( ) ) ; } public static Runnable helpPrinter ( ) { return new Runnable ( ) { @Override public void run ( ) { printHelp ( ) ; } } ; } } 
