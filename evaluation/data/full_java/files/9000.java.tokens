package org . elasticsearch . test . hamcrest ; import org . elasticsearch . common . collect . ImmutableOpenMap ; import org . hamcrest . Description ; import org . hamcrest . TypeSafeMatcher ; public class CollectionMatchers { public static class ImmutableOpenMapHasKeyMatcher extends TypeSafeMatcher < ImmutableOpenMap > { private final String key ; public ImmutableOpenMapHasKeyMatcher ( String key ) { this . key = key ; } @Override protected boolean matchesSafely ( ImmutableOpenMap item ) { return item . containsKey ( key ) ; } @Override public void describeMismatchSafely ( final ImmutableOpenMap map , final Description mismatchDescription ) { if ( map . size ( ) = = <int> ) { mismatchDescription . appendText ( <str> ) ; } else { mismatchDescription . appendText ( <str> ) . appendValue ( map ) ; } } @Override public void describeTo ( Description description ) { description . appendText ( <str> + key ) ; } } } 
