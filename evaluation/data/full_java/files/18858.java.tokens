package io . netty . handler . codec ; import static io . netty . util . internal . ObjectUtil . checkNotNull ; public final class ProtocolDetectionResult < T > { @SuppressWarnings ( { <str> , <str> } ) private static final ProtocolDetectionResult NEEDS_MORE_DATE = new ProtocolDetectionResult ( ProtocolDetectionState . NEEDS_MORE_DATA , null ) ; @SuppressWarnings ( { <str> , <str> } ) private static final ProtocolDetectionResult INVALID = new ProtocolDetectionResult ( ProtocolDetectionState . INVALID , null ) ; private final ProtocolDetectionState state ; private final T result ; @SuppressWarnings ( <str> ) public static < T > ProtocolDetectionResult < T > needsMoreData ( ) { return NEEDS_MORE_DATE ; } @SuppressWarnings ( <str> ) public static < T > ProtocolDetectionResult < T > invalid ( ) { return INVALID ; } @SuppressWarnings ( <str> ) public static < T > ProtocolDetectionResult < T > detected ( T protocol ) { return new ProtocolDetectionResult < T > ( ProtocolDetectionState . DETECTED , checkNotNull ( protocol , <str> ) ) ; } private ProtocolDetectionResult ( ProtocolDetectionState state , T result ) { this . state = state ; this . result = result ; } public ProtocolDetectionState state ( ) { return state ; } public T detectedProtocol ( ) { return result ; } } 
