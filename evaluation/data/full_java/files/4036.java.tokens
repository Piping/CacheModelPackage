package org . eclipse . debug . internal . ui . actions ; import org . eclipse . core . runtime . Assert ; import org . eclipse . core . runtime . IStatus ; import org . eclipse . debug . internal . ui . DebugUIPlugin ; public class StatusInfo implements IStatus { private String fStatusMessage ; private int fSeverity ; public StatusInfo ( ) { this ( OK , null ) ; } public StatusInfo ( int severity , String message ) { fStatusMessage = message ; fSeverity = severity ; } @Override public boolean isOK ( ) { return fSeverity = = IStatus . OK ; } public boolean isWarning ( ) { return fSeverity = = IStatus . WARNING ; } public boolean isInfo ( ) { return fSeverity = = IStatus . INFO ; } public boolean isError ( ) { return fSeverity = = IStatus . ERROR ; } @Override public String getMessage ( ) { return fStatusMessage ; } public void setError ( String errorMessage ) { Assert . isNotNull ( errorMessage ) ; fStatusMessage = errorMessage ; fSeverity = IStatus . ERROR ; } public void setWarning ( String warningMessage ) { Assert . isNotNull ( warningMessage ) ; fStatusMessage = warningMessage ; fSeverity = IStatus . WARNING ; } public void setInfo ( String infoMessage ) { Assert . isNotNull ( infoMessage ) ; fStatusMessage = infoMessage ; fSeverity = IStatus . INFO ; } public void setOK ( ) { fStatusMessage = null ; fSeverity = IStatus . OK ; } @Override public boolean matches ( int severityMask ) { return ( fSeverity & severityMask ) ! = <int> ; } @Override public boolean isMultiStatus ( ) { return false ; } @Override public int getSeverity ( ) { return fSeverity ; } @Override public String getPlugin ( ) { return DebugUIPlugin . getUniqueIdentifier ( ) ; } @Override public Throwable getException ( ) { return null ; } @Override public int getCode ( ) { return fSeverity ; } @Override public IStatus [ ] getChildren ( ) { return new IStatus [ <int> ] ; } } 
