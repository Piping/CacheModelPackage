package org . elasticsearch . index . analysis ; import org . apache . lucene . analysis . core . StopAnalyzer ; import org . apache . lucene . analysis . de . GermanAnalyzer ; import org . apache . lucene . analysis . fr . FrenchAnalyzer ; import org . apache . lucene . analysis . nl . DutchAnalyzer ; import org . apache . lucene . analysis . util . CharArraySet ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . env . Environment ; import org . elasticsearch . index . IndexSettings ; import java . util . HashMap ; import java . util . Map ; import static java . util . Collections . unmodifiableMap ; public class SnowballAnalyzerProvider extends AbstractIndexAnalyzerProvider < SnowballAnalyzer > { private static final Map < String , CharArraySet > DEFAULT_LANGUAGE_STOPWORDS ; static { Map < String , CharArraySet > defaultLanguageStopwords = new HashMap < > ( ) ; defaultLanguageStopwords . put ( <str> , StopAnalyzer . ENGLISH_STOP_WORDS_SET ) ; defaultLanguageStopwords . put ( <str> , DutchAnalyzer . getDefaultStopSet ( ) ) ; defaultLanguageStopwords . put ( <str> , GermanAnalyzer . getDefaultStopSet ( ) ) ; defaultLanguageStopwords . put ( <str> , GermanAnalyzer . getDefaultStopSet ( ) ) ; defaultLanguageStopwords . put ( <str> , FrenchAnalyzer . getDefaultStopSet ( ) ) ; DEFAULT_LANGUAGE_STOPWORDS = unmodifiableMap ( defaultLanguageStopwords ) ; } private final SnowballAnalyzer analyzer ; public SnowballAnalyzerProvider ( IndexSettings indexSettings , Environment env , String name , Settings settings ) { super ( indexSettings , name , settings ) ; String language = settings . get ( <str> , settings . get ( <str> , <str> ) ) ; CharArraySet defaultStopwords = DEFAULT_LANGUAGE_STOPWORDS . getOrDefault ( language , CharArraySet . EMPTY_SET ) ; CharArraySet stopWords = Analysis . parseStopWords ( env , settings , defaultStopwords ) ; analyzer = new SnowballAnalyzer ( language , stopWords ) ; analyzer . setVersion ( version ) ; } @Override public SnowballAnalyzer get ( ) { return this . analyzer ; } } 
