package org . apache . cassandra . stress . generate . values ; import org . apache . cassandra . db . marshal . UTF8Type ; import org . apache . cassandra . stress . generate . FasterRandom ; public class Strings extends Generator < String > { private final char [ ] chars ; private final FasterRandom rnd = new FasterRandom ( ) ; public Strings ( String name , GeneratorConfig config ) { super ( UTF8Type . instance , config , name , String . class ) ; chars = new char [ ( int ) sizeDistribution . maxValue ( ) ] ; } @Override public String generate ( ) { long seed = identityDistribution . next ( ) ; sizeDistribution . setSeed ( seed ) ; rnd . setSeed ( ~ seed ) ; int size = ( int ) sizeDistribution . next ( ) ; for ( int i = <int> ; i < size ; ) for ( long v = rnd . nextLong ( ) , n = Math . min ( size - i , Long . SIZE / Byte . SIZE ) ; n - - > <int> ; v > > = Byte . SIZE ) chars [ i + + ] = ( char ) ( ( ( v & <int> ) + <int> ) & <int> ) ; return new String ( chars , <int> , size ) ; } } 
