package org . eclipse . debug . ui . sourcelookup ; import org . eclipse . debug . core . ILaunchConfiguration ; import org . eclipse . debug . core . ILaunchConfigurationWorkingCopy ; import org . eclipse . debug . internal . ui . DebugPluginImages ; import org . eclipse . debug . internal . ui . IDebugHelpContextIds ; import org . eclipse . debug . internal . ui . IInternalDebugUIConstants ; import org . eclipse . debug . internal . ui . sourcelookup . SourceLookupPanel ; import org . eclipse . debug . internal . ui . sourcelookup . SourceLookupUIMessages ; import org . eclipse . debug . ui . AbstractLaunchConfigurationTab ; import org . eclipse . jface . dialogs . Dialog ; import org . eclipse . swt . SWT ; import org . eclipse . swt . graphics . Image ; import org . eclipse . swt . layout . GridData ; import org . eclipse . swt . layout . GridLayout ; import org . eclipse . swt . widgets . Composite ; import org . eclipse . ui . PlatformUI ; public class SourceLookupTab extends AbstractLaunchConfigurationTab { private SourceLookupPanel fSourceLookupPanel ; public SourceLookupTab ( ) { setHelpContextId ( IDebugHelpContextIds . SOURCELOOKUP_TAB ) ; } @Override public void createControl ( Composite parent ) { Composite comp = new Composite ( parent , SWT . NONE ) ; setControl ( comp ) ; PlatformUI . getWorkbench ( ) . getHelpSystem ( ) . setHelp ( getControl ( ) , getHelpContextId ( ) ) ; GridLayout topLayout = new GridLayout ( ) ; topLayout . marginWidth = <int> ; topLayout . marginHeight = <int> ; topLayout . numColumns = <int> ; comp . setLayout ( topLayout ) ; comp . setFont ( parent . getFont ( ) ) ; fSourceLookupPanel = new SourceLookupPanel ( ) ; fSourceLookupPanel . setLaunchConfigurationDialog ( getLaunchConfigurationDialog ( ) ) ; fSourceLookupPanel . createControl ( comp ) ; GridData gd = ( GridData ) fSourceLookupPanel . getControl ( ) . getLayoutData ( ) ; gd . heightHint = <int> ; gd . widthHint = <int> ; Dialog . applyDialogFont ( comp ) ; } @Override public void setDefaults ( ILaunchConfigurationWorkingCopy configuration ) { } @Override public void initializeFrom ( ILaunchConfiguration configuration ) { fSourceLookupPanel . initializeFrom ( configuration ) ; } @Override public void performApply ( ILaunchConfigurationWorkingCopy configuration ) { fSourceLookupPanel . performApply ( configuration ) ; } @Override public String getId ( ) { return <str> ; } @Override public String getName ( ) { return SourceLookupUIMessages . sourceTab_tabTitle ; } @Override public Image getImage ( ) { return DebugPluginImages . getImage ( IInternalDebugUIConstants . IMG_SRC_LOOKUP_TAB ) ; } @Override public void activated ( ILaunchConfigurationWorkingCopy workingCopy ) { fSourceLookupPanel . activated ( workingCopy ) ; } @Override public void dispose ( ) { if ( fSourceLookupPanel ! = null ) { if ( fSourceLookupPanel . getDirector ( ) ! = null ) { fSourceLookupPanel . getDirector ( ) . dispose ( ) ; } fSourceLookupPanel . dispose ( ) ; } fSourceLookupPanel = null ; super . dispose ( ) ; } @Override public String getErrorMessage ( ) { if ( fSourceLookupPanel ! = null ) { return fSourceLookupPanel . getErrorMessage ( ) ; } return super . getErrorMessage ( ) ; } @Override public String getMessage ( ) { if ( fSourceLookupPanel ! = null ) { return fSourceLookupPanel . getMessage ( ) ; } return super . getMessage ( ) ; } } 
