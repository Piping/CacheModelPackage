package com . google . common . util . concurrent ; import static com . google . common . util . concurrent . Service . State . FAILED ; import static com . google . common . util . concurrent . Service . State . NEW ; import static com . google . common . util . concurrent . Service . State . RUNNING ; import static com . google . common . util . concurrent . Service . State . STARTING ; import static com . google . common . util . concurrent . Service . State . STOPPING ; import static com . google . common . util . concurrent . Service . State . TERMINATED ; import junit . framework . TestCase ; import java . util . Locale ; public class ServiceTest extends TestCase { public void testStateOrdering ( ) { assertLessThan ( NEW , STARTING ) ; assertLessThan ( NEW , TERMINATED ) ; assertLessThan ( STARTING , RUNNING ) ; assertLessThan ( STARTING , STOPPING ) ; assertLessThan ( STARTING , FAILED ) ; assertLessThan ( RUNNING , STOPPING ) ; assertLessThan ( RUNNING , FAILED ) ; assertLessThan ( STOPPING , FAILED ) ; assertLessThan ( STOPPING , TERMINATED ) ; } private static < T extends Comparable < ? super T > > void assertLessThan ( T a , T b ) { if ( a . compareTo ( b ) > = <int> ) { fail ( String . format ( Locale . ROOT , <str> , a , b ) ) ; } } } 
