package org . apache . cassandra . tools . nodetool ; import static com . google . common . base . Preconditions . checkArgument ; import io . airlift . command . Arguments ; import io . airlift . command . Command ; import java . util . ArrayList ; import java . util . List ; import org . apache . cassandra . db . ColumnFamilyStoreMBean ; import org . apache . cassandra . tools . NodeProbe ; import org . apache . cassandra . tools . NodeTool . NodeToolCmd ; @Command ( name = <str> , description = <str> ) public class GetCompactionThreshold extends NodeToolCmd { @Arguments ( usage = <str> , description = <str> ) private List < String > args = new ArrayList < > ( ) ; @Override public void execute ( NodeProbe probe ) { checkArgument ( args . size ( ) = = <int> , <str> ) ; String ks = args . get ( <int> ) ; String cf = args . get ( <int> ) ; ColumnFamilyStoreMBean cfsProxy = probe . getCfsProxy ( ks , cf ) ; System . out . println ( <str> + ks + <str> + cf + <str> + <str> + cfsProxy . getMinimumCompactionThreshold ( ) + <str> + <str> + cfsProxy . getMaximumCompactionThreshold ( ) ) ; } } 
