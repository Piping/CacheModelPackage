package org . apache . cassandra . db . marshal ; import java . nio . ByteBuffer ; import java . util . concurrent . TimeUnit ; import org . junit . Test ; import org . apache . cassandra . serializers . TimeSerializer ; public class TimeTypeTest { @Test public void TestComparison ( ) { Long t1 = TimeSerializer . timeStringToLong ( <str> ) ; Long t2 = new Long ( ( <int> * <int> * <int> * <int> * <int> * <int> ) + <int> ) ; ByteBuffer b1 = TimeSerializer . instance . serialize ( t1 ) ; ByteBuffer b2 = TimeSerializer . instance . serialize ( t2 ) ; assert TimeType . instance . compare ( b1 , b2 ) = = <int> : <str> ; b2 = TimeSerializer . instance . serialize ( <int> ) ; assert TimeType . instance . compare ( b1 , b2 ) > <int> : <str> ; t2 = new Long ( <int> * <int> * <int> * <int> * <int> * <int> + <int> ) ; b2 = TimeSerializer . instance . serialize ( t2 ) ; assert TimeType . instance . compare ( b1 , b2 ) < <int> : <str> ; b1 = TimeSerializer . instance . serialize ( <int> L ) ; b2 = TimeSerializer . instance . serialize ( <int> L ) ; assert TimeType . instance . compare ( b1 , b2 ) = = <int> : <str> ; b1 = TimeSerializer . instance . serialize ( <int> L ) ; b2 = TimeSerializer . instance . serialize ( <int> ) ; assert TimeType . instance . compare ( b1 , b2 ) = = - <int> : <str> ; b1 = TimeSerializer . instance . serialize ( <int> L ) ; b2 = TimeSerializer . instance . serialize ( TimeUnit . DAYS . toNanos ( <int> ) ) ; assert TimeType . instance . compare ( b1 , b2 ) = = - <int> : <str> ; b1 = TimeSerializer . instance . serialize ( TimeUnit . DAYS . toNanos ( <int> ) ) ; b2 = TimeSerializer . instance . serialize ( <int> L ) ; assert TimeType . instance . compare ( b1 , b2 ) = = <int> : <str> ; } } 
