package org . elasticsearch . cluster ; import org . elasticsearch . cluster . block . ClusterBlock ; import org . elasticsearch . cluster . node . DiscoveryNode ; import org . elasticsearch . cluster . routing . OperationRouting ; import org . elasticsearch . cluster . service . PendingClusterTask ; import org . elasticsearch . common . Nullable ; import org . elasticsearch . common . component . LifecycleComponent ; import org . elasticsearch . common . unit . TimeValue ; import java . util . List ; public interface ClusterService extends LifecycleComponent < ClusterService > { DiscoveryNode localNode ( ) ; ClusterState state ( ) ; void addInitialStateBlock ( ClusterBlock block ) throws IllegalStateException ; void removeInitialStateBlock ( ClusterBlock block ) throws IllegalStateException ; OperationRouting operationRouting ( ) ; void addFirst ( ClusterStateListener listener ) ; void addLast ( ClusterStateListener listener ) ; void add ( ClusterStateListener listener ) ; void remove ( ClusterStateListener listener ) ; void add ( LocalNodeMasterListener listener ) ; void remove ( LocalNodeMasterListener listener ) ; void add ( @Nullable TimeValue timeout , TimeoutClusterStateListener listener ) ; < T > void submitStateUpdateTask ( final String source , final T task , final ClusterStateTaskConfig config , final ClusterStateTaskExecutor < T > executor , final ClusterStateTaskListener listener ) ; void submitStateUpdateTask ( final String source , final ClusterStateUpdateTask updateTask ) ; List < PendingClusterTask > pendingTasks ( ) ; int numberOfPendingTasks ( ) ; TimeValue getMaxTaskWaitTime ( ) ; } 
