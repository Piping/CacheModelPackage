package org . gradle . api . internal . resources ; import org . gradle . api . internal . file . FileOperations ; import org . gradle . api . internal . file . TemporaryFileProvider ; import org . gradle . api . internal . file . archive . compression . Bzip2Archiver ; import org . gradle . api . internal . file . archive . compression . GzipArchiver ; import org . gradle . api . resources . ResourceHandler ; import org . gradle . api . resources . TextResourceFactory ; import org . gradle . api . resources . internal . ReadableResourceInternal ; public class DefaultResourceHandler implements ResourceHandler { private final FileOperations fileOperations ; private final TextResourceFactory textResourceFactory ; public DefaultResourceHandler ( FileOperations fileOperations , TemporaryFileProvider tempFileProvider ) { this . fileOperations = fileOperations ; textResourceFactory = new DefaultTextResourceFactory ( fileOperations , tempFileProvider ) ; } public ReadableResourceInternal gzip ( Object path ) { return new GzipArchiver ( fileOperations . getFileResolver ( ) . resolveResource ( path ) ) ; } public ReadableResourceInternal bzip2 ( Object path ) { return new Bzip2Archiver ( fileOperations . getFileResolver ( ) . resolveResource ( path ) ) ; } public TextResourceFactory getText ( ) { return textResourceFactory ; } } 
