package org . eclipse . debug . internal . ui . views . memory ; import org . eclipse . debug . internal . ui . DebugUIPlugin ; import org . eclipse . jface . action . IAction ; import org . eclipse . jface . preference . IPreferenceNode ; import org . eclipse . jface . preference . PreferenceDialog ; import org . eclipse . jface . preference . PreferenceManager ; import org . eclipse . jface . preference . PreferenceNode ; import org . eclipse . jface . viewers . ISelection ; import org . eclipse . swt . custom . BusyIndicator ; import org . eclipse . ui . IViewActionDelegate ; import org . eclipse . ui . IViewPart ; public class MemoryViewPrefAction implements IViewActionDelegate { @Override public void init ( IViewPart view ) { } @Override public void run ( IAction action ) { PreferenceManager prefManager = new PreferenceManager ( ) ; ResetMemoryBlockPreferencePage page = new ResetMemoryBlockPreferencePage ( ) ; IPreferenceNode node = new PreferenceNode ( <str> , page ) ; prefManager . addToRoot ( node ) ; SetPaddedStringPreferencePage page2 = new SetPaddedStringPreferencePage ( ) ; IPreferenceNode node2 = new PreferenceNode ( <str> , page2 ) ; prefManager . addToRoot ( node2 ) ; CodePagesPreferencePage page3 = new CodePagesPreferencePage ( ) ; IPreferenceNode node3 = new PreferenceNode ( <str> , page3 ) ; prefManager . addToRoot ( node3 ) ; final PreferenceDialog dialog = new PreferenceDialog ( DebugUIPlugin . getShell ( ) , prefManager ) ; BusyIndicator . showWhile ( DebugUIPlugin . getStandardDisplay ( ) , new Runnable ( ) { @Override public void run ( ) { dialog . create ( ) ; dialog . open ( ) ; } } ) ; } @Override public void selectionChanged ( IAction action , ISelection selection ) { } } 
