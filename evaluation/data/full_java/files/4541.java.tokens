package org . eclipse . debug . internal . ui . views . launch ; import org . eclipse . core . runtime . IProgressMonitor ; import org . eclipse . jface . resource . JFaceColors ; import org . eclipse . swt . SWT ; import org . eclipse . swt . widgets . Composite ; import org . eclipse . swt . widgets . Text ; import org . eclipse . ui . IEditorInput ; import org . eclipse . ui . IEditorSite ; import org . eclipse . ui . IReusableEditor ; import org . eclipse . ui . part . EditorPart ; public class SourceNotFoundEditor extends EditorPart implements IReusableEditor { private Text fText ; @Override public void doSave ( IProgressMonitor monitor ) { } @Override public void doSaveAs ( ) { } @Override public void init ( IEditorSite site , IEditorInput input ) { setSite ( site ) ; setInput ( input ) ; } @Override public boolean isDirty ( ) { return false ; } @Override public boolean isSaveAsAllowed ( ) { return false ; } @Override public void createPartControl ( Composite parent ) { fText = new Text ( parent , SWT . MULTI | SWT . READ_ONLY | SWT . WRAP ) ; fText . setForeground ( JFaceColors . getErrorText ( fText . getDisplay ( ) ) ) ; fText . setBackground ( fText . getDisplay ( ) . getSystemColor ( SWT . COLOR_WIDGET_BACKGROUND ) ) ; if ( getEditorInput ( ) ! = null ) { setInput ( getEditorInput ( ) ) ; } } @Override public void setFocus ( ) { if ( fText ! = null ) { fText . setFocus ( ) ; } } @Override public void setInput ( IEditorInput input ) { super . setInput ( input ) ; setPartName ( input . getName ( ) ) ; if ( fText ! = null ) { fText . setText ( input . getToolTipText ( ) ) ; } } } 
