package org . gradle . api . internal . changedetection . state ; import org . gradle . api . file . FileCollection ; import org . gradle . util . ChangeListener ; public interface FileCollectionSnapshot { ChangeIterator < String > iterateChangesSince ( FileCollectionSnapshot oldSnapshot ) ; Diff changesSince ( FileCollectionSnapshot oldSnapshot ) ; FileCollection getFiles ( ) ; FileCollection getAllFiles ( ) ; FilesSnapshotSet getSnapshot ( ) ; public interface Diff { FileCollectionSnapshot applyTo ( FileCollectionSnapshot snapshot , ChangeListener < Merge > listener ) ; FileCollectionSnapshot applyTo ( FileCollectionSnapshot snapshot ) ; } public interface Merge { void ignore ( ) ; } interface ChangeIterator < T > { boolean next ( ChangeListener < T > listener ) ; } } 
