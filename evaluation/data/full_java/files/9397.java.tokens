package com . google . common . hash ; import java . nio . charset . Charset ; abstract class AbstractHasher implements Hasher { @Override public final Hasher putBoolean ( boolean b ) { return putByte ( b ? ( byte ) <int> : ( byte ) <int> ) ; } @Override public final Hasher putDouble ( double d ) { return putLong ( Double . doubleToRawLongBits ( d ) ) ; } @Override public final Hasher putFloat ( float f ) { return putInt ( Float . floatToRawIntBits ( f ) ) ; } @Override public Hasher putUnencodedChars ( CharSequence charSequence ) { for ( int i = <int> , len = charSequence . length ( ) ; i < len ; i + + ) { putChar ( charSequence . charAt ( i ) ) ; } return this ; } @Override public Hasher putString ( CharSequence charSequence , Charset charset ) { return putBytes ( charSequence . toString ( ) . getBytes ( charset ) ) ; } } 
