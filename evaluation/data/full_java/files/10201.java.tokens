package com . google . common . collect ; import static com . google . common . collect . DiscreteDomain . integers ; import com . google . caliper . BeforeExperiment ; import com . google . caliper . Benchmark ; import com . google . caliper . Param ; import java . util . Set ; public class PowerSetBenchmark { @Param ( { <str> , <str> , <str> , <str> } ) int elements ; Set < Set < Integer > > powerSet ; @BeforeExperiment void setUp ( ) { Set < Integer > set = ContiguousSet . create ( Range . closed ( <int> , elements ) , integers ( ) ) ; powerSet = Sets . powerSet ( set ) ; } @Benchmark int iteration ( int reps ) { int sum = <int> ; for ( int i = <int> ; i < reps ; i + + ) { for ( Set < Integer > subset : powerSet ) { for ( Integer value : subset ) { sum + = value ; } } } return sum ; } } 
