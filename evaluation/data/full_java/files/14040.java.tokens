package org . gradle . api . publish . maven . internal . publication ; import org . gradle . api . Action ; import org . gradle . api . XmlProvider ; import org . gradle . api . internal . UserCodeAction ; import org . gradle . api . publish . maven . internal . dependencies . MavenDependencyInternal ; import org . gradle . api . publish . maven . internal . publisher . MavenProjectIdentity ; import org . gradle . listener . ActionBroadcast ; import java . util . Set ; public class DefaultMavenPom implements MavenPomInternal { private final ActionBroadcast < XmlProvider > xmlAction = new ActionBroadcast < XmlProvider > ( ) ; private final MavenPublicationInternal mavenPublication ; private String packaging ; public DefaultMavenPom ( MavenPublicationInternal mavenPublication ) { this . mavenPublication = mavenPublication ; } public void withXml ( Action < ? super XmlProvider > action ) { xmlAction . add ( new UserCodeAction < XmlProvider > ( <str> , action ) ) ; } public Action < XmlProvider > getXmlAction ( ) { return xmlAction ; } public String getPackaging ( ) { if ( packaging = = null ) { return mavenPublication . determinePackagingFromArtifacts ( ) ; } return packaging ; } public void setPackaging ( String packaging ) { this . packaging = packaging ; } public MavenProjectIdentity getProjectIdentity ( ) { return mavenPublication . getMavenProjectIdentity ( ) ; } public Set < MavenDependencyInternal > getRuntimeDependencies ( ) { return mavenPublication . getRuntimeDependencies ( ) ; } } 
