package org . eclipse . debug . examples . ui . pda . adapters ; import java . util . HashMap ; import java . util . Map ; import org . eclipse . debug . internal . ui . viewers . model . provisional . IPresentationContext ; import org . eclipse . debug . internal . ui . viewers . model . provisional . IViewActionProvider ; import org . eclipse . debug . ui . IDebugUIConstants ; import org . eclipse . debug . ui . IDebugView ; import org . eclipse . jface . action . Action ; import org . eclipse . jface . action . IAction ; public class PDAViewActionProvider implements IViewActionProvider { Map < IPresentationContext , Action > fActions = new HashMap < IPresentationContext , Action > ( ) ; @Override public IAction getAction ( IPresentationContext presentationContext , String actionID ) { if ( presentationContext . getId ( ) . equals ( IDebugUIConstants . ID_VARIABLE_VIEW ) & & IDebugView . FIND_ACTION . equals ( actionID ) ) { Action action = fActions . get ( presentationContext ) ; if ( action = = null ) { action = new PDAVirtualFindAction ( presentationContext ) ; fActions . put ( presentationContext , action ) ; } return action ; } return null ; } } 
