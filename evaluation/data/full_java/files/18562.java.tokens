package com . badlogic . gdx . tests ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . graphics . GL20 ; import com . badlogic . gdx . graphics . g2d . SpriteBatch ; import com . badlogic . gdx . math . MathUtils ; import com . badlogic . gdx . scenes . scene2d . Stage ; import com . badlogic . gdx . scenes . scene2d . ui . Skin ; import com . badlogic . gdx . scenes . scene2d . ui . TextButton ; import com . badlogic . gdx . tests . utils . GdxTest ; public class TextButtonTest extends GdxTest { private Stage stage ; private Skin skin ; @Override public void create ( ) { stage = new Stage ( ) ; Gdx . input . setInputProcessor ( stage ) ; skin = new Skin ( Gdx . files . internal ( <str> ) ) ; for ( int i = <int> ; i < <int> ; i + + ) { TextButton t = new TextButton ( <str> + i , skin ) ; t . setX ( MathUtils . random ( <int> , Gdx . graphics . getWidth ( ) ) ) ; t . setY ( MathUtils . random ( <int> , Gdx . graphics . getHeight ( ) ) ) ; t . setWidth ( MathUtils . random ( <int> , <int> ) ) ; t . setHeight ( MathUtils . random ( <int> , <int> ) ) ; stage . addActor ( t ) ; } } @Override public void render ( ) { Gdx . gl . glClearColor ( <float> , <float> , <float> , <int> ) ; Gdx . gl . glClear ( GL20 . GL_COLOR_BUFFER_BIT ) ; stage . draw ( ) ; Gdx . app . log ( <str> , <str> + Gdx . graphics . getFramesPerSecond ( ) ) ; SpriteBatch spriteBatch = ( SpriteBatch ) stage . getBatch ( ) ; Gdx . app . log ( <str> , <str> + spriteBatch . totalRenderCalls ) ; spriteBatch . totalRenderCalls = <int> ; } @Override public void resize ( int width , int height ) { stage . getViewport ( ) . update ( width , height , true ) ; } @Override public void dispose ( ) { stage . dispose ( ) ; skin . dispose ( ) ; } } 
