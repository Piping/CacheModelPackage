package org . elasticsearch . index . query ; import org . apache . lucene . index . Term ; import org . apache . lucene . search . FuzzyQuery ; import org . apache . lucene . search . MultiTermQuery ; import org . apache . lucene . search . Query ; import org . elasticsearch . common . Strings ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . common . lucene . BytesRefs ; import org . elasticsearch . common . unit . Fuzziness ; import org . elasticsearch . common . xcontent . XContentBuilder ; import org . elasticsearch . index . mapper . MappedFieldType ; import org . elasticsearch . index . query . support . QueryParsers ; import java . io . IOException ; import java . util . Objects ; public class FuzzyQueryBuilder extends AbstractQueryBuilder < FuzzyQueryBuilder > implements MultiTermQueryBuilder < FuzzyQueryBuilder > { public static final String NAME = <str> ; public static final Fuzziness DEFAULT_FUZZINESS = Fuzziness . AUTO ; public static final int DEFAULT_PREFIX_LENGTH = FuzzyQuery . defaultPrefixLength ; public static final int DEFAULT_MAX_EXPANSIONS = FuzzyQuery . defaultMaxExpansions ; public static final boolean DEFAULT_TRANSPOSITIONS = false ; private final String fieldName ; private final Object value ; private Fuzziness fuzziness = DEFAULT_FUZZINESS ; private int prefixLength = DEFAULT_PREFIX_LENGTH ; private int maxExpansions = DEFAULT_MAX_EXPANSIONS ; private boolean transpositions = DEFAULT_TRANSPOSITIONS ; private String rewrite ; static final FuzzyQueryBuilder PROTOTYPE = new FuzzyQueryBuilder ( ) ; public FuzzyQueryBuilder ( String fieldName , String value ) { this ( fieldName , ( Object ) value ) ; } public FuzzyQueryBuilder ( String fieldName , int value ) { this ( fieldName , ( Object ) value ) ; } public FuzzyQueryBuilder ( String fieldName , long value ) { this ( fieldName , ( Object ) value ) ; } public FuzzyQueryBuilder ( String fieldName , float value ) { this ( fieldName , ( Object ) value ) ; } public FuzzyQueryBuilder ( String fieldName , double value ) { this ( fieldName , ( Object ) value ) ; } public FuzzyQueryBuilder ( String fieldName , boolean value ) { this ( fieldName , ( Object ) value ) ; } public FuzzyQueryBuilder ( String fieldName , Object value ) { if ( Strings . isEmpty ( fieldName ) ) { throw new IllegalArgumentException ( <str> ) ; } if ( value = = null ) { throw new IllegalArgumentException ( <str> ) ; } this . fieldName = fieldName ; this . value = convertToBytesRefIfString ( value ) ; } private FuzzyQueryBuilder ( ) { this . fieldName = null ; this . value = null ; } public String fieldName ( ) { return this . fieldName ; } public Object value ( ) { return convertToStringIfBytesRef ( this . value ) ; } public FuzzyQueryBuilder fuzziness ( Fuzziness fuzziness ) { this . fuzziness = ( fuzziness = = null ) ? DEFAULT_FUZZINESS : fuzziness ; return this ; } public Fuzziness fuzziness ( ) { return this . fuzziness ; } public FuzzyQueryBuilder prefixLength ( int prefixLength ) { this . prefixLength = prefixLength ; return this ; } public int prefixLength ( ) { return this . prefixLength ; } public FuzzyQueryBuilder maxExpansions ( int maxExpansions ) { this . maxExpansions = maxExpansions ; return this ; } public int maxExpansions ( ) { return this . maxExpansions ; } public FuzzyQueryBuilder transpositions ( boolean transpositions ) { this . transpositions = transpositions ; return this ; } public boolean transpositions ( ) { return this . transpositions ; } public FuzzyQueryBuilder rewrite ( String rewrite ) { this . rewrite = rewrite ; return this ; } public String rewrite ( ) { return this . rewrite ; } @Override protected void doXContent ( XContentBuilder builder , Params params ) throws IOException { builder . startObject ( NAME ) ; builder . startObject ( fieldName ) ; builder . field ( FuzzyQueryParser . VALUE_FIELD . getPreferredName ( ) , convertToStringIfBytesRef ( this . value ) ) ; fuzziness . toXContent ( builder , params ) ; builder . field ( FuzzyQueryParser . PREFIX_LENGTH_FIELD . getPreferredName ( ) , prefixLength ) ; builder . field ( FuzzyQueryParser . MAX_EXPANSIONS_FIELD . getPreferredName ( ) , maxExpansions ) ; builder . field ( FuzzyQueryParser . TRANSPOSITIONS_FIELD . getPreferredName ( ) , transpositions ) ; if ( rewrite ! = null ) { builder . field ( FuzzyQueryParser . REWRITE_FIELD . getPreferredName ( ) , rewrite ) ; } printBoostAndQueryName ( builder ) ; builder . endObject ( ) ; builder . endObject ( ) ; } @Override public String getWriteableName ( ) { return NAME ; } @Override protected Query doToQuery ( QueryShardContext context ) throws IOException { Query query = null ; String rewrite = this . rewrite ; if ( rewrite = = null & & context . isFilter ( ) ) { rewrite = QueryParsers . CONSTANT_SCORE . getPreferredName ( ) ; } MappedFieldType fieldType = context . fieldMapper ( fieldName ) ; if ( fieldType ! = null ) { query = fieldType . fuzzyQuery ( value , fuzziness , prefixLength , maxExpansions , transpositions ) ; } if ( query = = null ) { int maxEdits = fuzziness . asDistance ( BytesRefs . toString ( value ) ) ; query = new FuzzyQuery ( new Term ( fieldName , BytesRefs . toBytesRef ( value ) ) , maxEdits , prefixLength , maxExpansions , transpositions ) ; } if ( query instanceof MultiTermQuery ) { MultiTermQuery . RewriteMethod rewriteMethod = QueryParsers . parseRewriteMethod ( context . parseFieldMatcher ( ) , rewrite , null ) ; QueryParsers . setRewriteMethod ( ( MultiTermQuery ) query , rewriteMethod ) ; } return query ; } @Override protected FuzzyQueryBuilder doReadFrom ( StreamInput in ) throws IOException { FuzzyQueryBuilder fuzzyQueryBuilder = new FuzzyQueryBuilder ( in . readString ( ) , in . readGenericValue ( ) ) ; fuzzyQueryBuilder . fuzziness = Fuzziness . readFuzzinessFrom ( in ) ; fuzzyQueryBuilder . prefixLength = in . readVInt ( ) ; fuzzyQueryBuilder . maxExpansions = in . readVInt ( ) ; fuzzyQueryBuilder . transpositions = in . readBoolean ( ) ; fuzzyQueryBuilder . rewrite = in . readOptionalString ( ) ; return fuzzyQueryBuilder ; } @Override protected void doWriteTo ( StreamOutput out ) throws IOException { out . writeString ( this . fieldName ) ; out . writeGenericValue ( this . value ) ; this . fuzziness . writeTo ( out ) ; out . writeVInt ( this . prefixLength ) ; out . writeVInt ( this . maxExpansions ) ; out . writeBoolean ( this . transpositions ) ; out . writeOptionalString ( this . rewrite ) ; } @Override protected int doHashCode ( ) { return Objects . hash ( fieldName , value , fuzziness , prefixLength , maxExpansions , transpositions , rewrite ) ; } @Override protected boolean doEquals ( FuzzyQueryBuilder other ) { return Objects . equals ( fieldName , other . fieldName ) & & Objects . equals ( value , other . value ) & & Objects . equals ( fuzziness , other . fuzziness ) & & Objects . equals ( prefixLength , other . prefixLength ) & & Objects . equals ( maxExpansions , other . maxExpansions ) & & Objects . equals ( transpositions , other . transpositions ) & & Objects . equals ( rewrite , other . rewrite ) ; } } 
