package org . elasticsearch . index . query ; import org . apache . lucene . search . MatchAllDocsQuery ; import org . apache . lucene . search . Query ; import java . io . IOException ; import java . util . HashMap ; import java . util . Map ; import static org . hamcrest . CoreMatchers . instanceOf ; public class MatchAllQueryBuilderTests extends AbstractQueryTestCase < MatchAllQueryBuilder > { @Override protected MatchAllQueryBuilder doCreateTestQueryBuilder ( ) { return new MatchAllQueryBuilder ( ) ; } @Override protected Map < String , MatchAllQueryBuilder > getAlternateVersions ( ) { Map < String , MatchAllQueryBuilder > alternateVersions = new HashMap < > ( ) ; String queryAsString = <str> + <str> + <str> ; alternateVersions . put ( queryAsString , new MatchAllQueryBuilder ( ) ) ; return alternateVersions ; } @Override protected void doAssertLuceneQuery ( MatchAllQueryBuilder queryBuilder , Query query , QueryShardContext context ) throws IOException { assertThat ( query , instanceOf ( MatchAllDocsQuery . class ) ) ; } public void testFromJson ( ) throws IOException { String json = <str> + <str> + <str> + <str> + <str> ; MatchAllQueryBuilder parsed = ( MatchAllQueryBuilder ) parseQuery ( json ) ; checkGeneratedJson ( json , parsed ) ; assertEquals ( json , <float> , parsed . boost ( ) , <float> ) ; } } 
