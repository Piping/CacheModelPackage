package org . elasticsearch . common ; public class Booleans { public static boolean parseBoolean ( char [ ] text , int offset , int length , boolean defaultValue ) { if ( text = = null | | length = = <int> ) { return defaultValue ; } if ( length = = <int> ) { return text [ offset ] ! = <str> ; } if ( length = = <int> ) { return ! ( text [ offset ] = = <str> & & text [ offset + <int> ] = = <str> ) ; } if ( length = = <int> ) { return ! ( text [ offset ] = = <str> & & text [ offset + <int> ] = = <str> & & text [ offset + <int> ] = = <str> ) ; } if ( length = = <int> ) { return ! ( text [ offset ] = = <str> & & text [ offset + <int> ] = = <str> & & text [ offset + <int> ] = = <str> & & text [ offset + <int> ] = = <str> & & text [ offset + <int> ] = = <str> ) ; } return true ; } public static boolean isBoolean ( char [ ] text , int offset , int length ) { if ( text = = null | | length = = <int> ) { return false ; } if ( length = = <int> ) { return text [ offset ] = = <str> | | text [ offset ] = = <str> ; } if ( length = = <int> ) { return ( text [ offset ] = = <str> & & text [ offset + <int> ] = = <str> ) | | ( text [ offset ] = = <str> & & text [ offset + <int> ] = = <str> ) ; } if ( length = = <int> ) { return ( text [ offset ] = = <str> & & text [ offset + <int> ] = = <str> & & text [ offset + <int> ] = = <str> ) | | ( text [ offset ] = = <str> & & text [ offset + <int> ] = = <str> & & text [ offset + <int> ] = = <str> ) ; } if ( length = = <int> ) { return ( text [ offset ] = = <str> & & text [ offset + <int> ] = = <str> & & text [ offset + <int> ] = = <str> & & text [ offset + <int> ] = = <str> ) ; } if ( length = = <int> ) { return ( text [ offset ] = = <str> & & text [ offset + <int> ] = = <str> & & text [ offset + <int> ] = = <str> & & text [ offset + <int> ] = = <str> & & text [ offset + <int> ] = = <str> ) ; } return false ; } public static Boolean parseBooleanExact ( String value ) { boolean isFalse = isExplicitFalse ( value ) ; if ( isFalse ) { return false ; } boolean isTrue = isExplicitTrue ( value ) ; if ( isTrue ) { return true ; } throw new IllegalArgumentException ( <str> ) ; } public static Boolean parseBoolean ( String value , Boolean defaultValue ) { if ( value = = null ) { return defaultValue ; } return parseBoolean ( value , false ) ; } public static boolean parseBoolean ( String value , boolean defaultValue ) { if ( value = = null ) { return defaultValue ; } return ! ( value . equals ( <str> ) | | value . equals ( <str> ) | | value . equals ( <str> ) | | value . equals ( <str> ) ) ; } public static boolean isExplicitFalse ( String value ) { return value ! = null & & ( value . equals ( <str> ) | | value . equals ( <str> ) | | value . equals ( <str> ) | | value . equals ( <str> ) ) ; } public static boolean isExplicitTrue ( String value ) { return value ! = null & & ( value . equals ( <str> ) | | value . equals ( <str> ) | | value . equals ( <str> ) | | value . equals ( <str> ) ) ; } } 
