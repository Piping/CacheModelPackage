package com . badlogic . gdx . physics . bullet . collision ; import com . badlogic . gdx . physics . bullet . BulletBase ; import com . badlogic . gdx . physics . bullet . linearmath . * ; import com . badlogic . gdx . math . Vector3 ; import com . badlogic . gdx . math . Quaternion ; import com . badlogic . gdx . math . Matrix3 ; import com . badlogic . gdx . math . Matrix4 ; public class btBoxShape extends btPolyhedralConvexShape { private long swigCPtr ; protected btBoxShape ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , CollisionJNI . btBoxShape_SWIGUpcast ( cPtr ) , cMemoryOwn ) ; swigCPtr = cPtr ; } public btBoxShape ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( CollisionJNI . btBoxShape_SWIGUpcast ( swigCPtr = cPtr ) , cMemoryOwn ) ; } public static long getCPtr ( btBoxShape obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; CollisionJNI . delete_btBoxShape ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } public Vector3 getHalfExtentsWithMargin ( ) { return CollisionJNI . btBoxShape_getHalfExtentsWithMargin ( swigCPtr , this ) ; } public Vector3 getHalfExtentsWithoutMargin ( ) { return CollisionJNI . btBoxShape_getHalfExtentsWithoutMargin ( swigCPtr , this ) ; } public btBoxShape ( Vector3 boxHalfExtents ) { this ( CollisionJNI . new_btBoxShape ( boxHalfExtents ) , true ) ; } public void getPlaneEquation ( btVector4 plane , int i ) { CollisionJNI . btBoxShape_getPlaneEquation ( swigCPtr , this , btVector4 . getCPtr ( plane ) , plane , i ) ; } } 
