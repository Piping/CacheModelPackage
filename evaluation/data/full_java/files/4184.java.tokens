package org . eclipse . debug . internal . ui . importexport . breakpoints ; import org . eclipse . debug . internal . ui . DebugUIPlugin ; import org . eclipse . jface . dialogs . IDialogSettings ; import org . eclipse . jface . viewers . IStructuredSelection ; import org . eclipse . jface . wizard . Wizard ; import org . eclipse . ui . IExportWizard ; import org . eclipse . ui . IWorkbench ; public class WizardExportBreakpoints extends Wizard implements IExportWizard { private WizardExportBreakpointsPage fMainPage = null ; private IStructuredSelection fSelection = null ; private static final String EXPORT_DIALOG_SETTINGS = <str> ; public WizardExportBreakpoints ( ) { super ( ) ; DebugUIPlugin plugin = DebugUIPlugin . getDefault ( ) ; IDialogSettings workbenchSettings = plugin . getDialogSettings ( ) ; IDialogSettings section = workbenchSettings . getSection ( EXPORT_DIALOG_SETTINGS ) ; if ( section = = null ) section = workbenchSettings . addNewSection ( EXPORT_DIALOG_SETTINGS ) ; setDialogSettings ( section ) ; } @Override public void addPages ( ) { super . addPages ( ) ; fMainPage = new WizardExportBreakpointsPage ( ImportExportMessages . WizardExportBreakpoints_0 , fSelection ) ; addPage ( fMainPage ) ; } @Override public void dispose ( ) { super . dispose ( ) ; fMainPage = null ; fSelection = null ; } @Override public boolean performFinish ( ) { return fMainPage . finish ( ) ; } @Override public void init ( IWorkbench workbench , IStructuredSelection selection ) { fSelection = selection ; setWindowTitle ( ImportExportMessages . WizardExportBreakpoints_0 ) ; setNeedsProgressMonitor ( true ) ; } } 
