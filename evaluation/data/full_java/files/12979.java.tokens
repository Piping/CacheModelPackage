package org . gradle . api . tasks . diagnostics . internal . graph . nodes ; import org . gradle . api . artifacts . component . ComponentIdentifier ; import org . gradle . api . artifacts . component . ComponentSelector ; import java . util . LinkedHashSet ; import java . util . Set ; public class RequestedVersion extends AbstractRenderableDependencyResult { private final ComponentSelector requested ; private final ComponentIdentifier actual ; private final boolean resolvable ; private final String description ; private final Set < RenderableDependency > children = new LinkedHashSet < RenderableDependency > ( ) ; public RequestedVersion ( ComponentSelector requested , ComponentIdentifier actual , boolean resolvable , String description ) { this . requested = requested ; this . actual = actual ; this . resolvable = resolvable ; this . description = description ; } public void addChild ( DependencyEdge child ) { children . addAll ( child . getChildren ( ) ) ; } @Override public String getDescription ( ) { return description ; } @Override protected ComponentIdentifier getActual ( ) { return actual ; } @Override protected ComponentSelector getRequested ( ) { return requested ; } public boolean isResolvable ( ) { return resolvable ; } public Set < RenderableDependency > getChildren ( ) { return children ; } } 
