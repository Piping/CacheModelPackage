package org . elasticsearch . index . analysis ; import org . apache . lucene . analysis . TokenStream ; import org . apache . lucene . analysis . ngram . Lucene43NGramTokenFilter ; import org . apache . lucene . analysis . ngram . NGramTokenFilter ; import org . apache . lucene . util . Version ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . env . Environment ; import org . elasticsearch . index . IndexSettings ; public class NGramTokenFilterFactory extends AbstractTokenFilterFactory { private final int minGram ; private final int maxGram ; public NGramTokenFilterFactory ( IndexSettings indexSettings , Environment environment , String name , Settings settings ) { super ( indexSettings , name , settings ) ; this . minGram = settings . getAsInt ( <str> , NGramTokenFilter . DEFAULT_MIN_NGRAM_SIZE ) ; this . maxGram = settings . getAsInt ( <str> , NGramTokenFilter . DEFAULT_MAX_NGRAM_SIZE ) ; } @SuppressWarnings ( <str> ) @Override public TokenStream create ( TokenStream tokenStream ) { final Version version = this . version = = Version . LUCENE_4_3 ? Version . LUCENE_4_4 : this . version ; if ( version . onOrAfter ( Version . LUCENE_4_3 ) ) { return new NGramTokenFilter ( tokenStream , minGram , maxGram ) ; } else { return new Lucene43NGramTokenFilter ( tokenStream , minGram , maxGram ) ; } } } 
