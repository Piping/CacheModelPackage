package com . badlogic . gdx . tests ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . graphics . GL20 ; import com . badlogic . gdx . graphics . OrthographicCamera ; import com . badlogic . gdx . graphics . Pixmap ; import com . badlogic . gdx . graphics . Pixmap . Format ; import com . badlogic . gdx . graphics . Texture ; import com . badlogic . gdx . graphics . g2d . BitmapFont ; import com . badlogic . gdx . graphics . g2d . SpriteBatch ; import com . badlogic . gdx . graphics . glutils . ETC1 ; import com . badlogic . gdx . graphics . glutils . ETC1 . ETC1Data ; import com . badlogic . gdx . tests . utils . GdxTest ; import com . badlogic . gdx . tests . utils . OrthoCamController ; public class ETC1Test extends GdxTest { OrthographicCamera camera ; OrthoCamController controller ; Texture img1 ; Texture img2 ; SpriteBatch batch ; BitmapFont font ; @Override public void create ( ) { font = new BitmapFont ( ) ; camera = new OrthographicCamera ( Gdx . graphics . getWidth ( ) , Gdx . graphics . getHeight ( ) ) ; controller = new OrthoCamController ( camera ) ; Gdx . input . setInputProcessor ( controller ) ; Pixmap pixmap = new Pixmap ( <int> , <int> , Format . RGB565 ) ; pixmap . setColor ( <int> , <int> , <int> , <int> ) ; pixmap . fill ( ) ; pixmap . setColor ( <int> , <int> , <int> , <int> ) ; pixmap . drawLine ( <int> , <int> , <int> , <int> ) ; pixmap . drawLine ( <int> , <int> , <int> , <int> ) ; ETC1Data encodedImage = ETC1 . encodeImagePKM ( pixmap ) ; pixmap . dispose ( ) ; pixmap = ETC1 . decodeImage ( encodedImage , Format . RGB565 ) ; encodedImage . dispose ( ) ; img1 = new Texture ( pixmap ) ; img2 = new Texture ( <str> ) ; batch = new SpriteBatch ( ) ; pixmap . dispose ( ) ; } @Override public void render ( ) { Gdx . gl . glClear ( GL20 . GL_COLOR_BUFFER_BIT ) ; camera . update ( ) ; batch . setProjectionMatrix ( camera . combined ) ; batch . begin ( ) ; batch . draw ( img2 , - <int> , <int> ) ; batch . draw ( img1 , <int> , <int> ) ; batch . end ( ) ; batch . getProjectionMatrix ( ) . setToOrtho2D ( <int> , <int> , Gdx . graphics . getWidth ( ) , Gdx . graphics . getHeight ( ) ) ; batch . begin ( ) ; font . draw ( batch , <str> + Gdx . graphics . getFramesPerSecond ( ) , <int> , <int> ) ; batch . end ( ) ; } @Override public void dispose ( ) { batch . dispose ( ) ; font . dispose ( ) ; img1 . dispose ( ) ; img2 . dispose ( ) ; } } 
