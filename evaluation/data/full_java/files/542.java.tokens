package org . apache . cassandra . dht ; abstract class ComparableObjectToken < C extends Comparable < C > > extends Token { private static final long serialVersionUID = <int> ; final C token ; protected ComparableObjectToken ( C token ) { this . token = token ; } @Override public C getTokenValue ( ) { return token ; } @Override public String toString ( ) { return token . toString ( ) ; } @Override public boolean equals ( Object obj ) { if ( this = = obj ) return true ; if ( obj = = null | | this . getClass ( ) ! = obj . getClass ( ) ) return false ; return token . equals ( ( ( ComparableObjectToken < ? > ) obj ) . token ) ; } @Override public int hashCode ( ) { return token . hashCode ( ) ; } @Override @SuppressWarnings ( <str> ) public int compareTo ( Token o ) { if ( o . getClass ( ) ! = getClass ( ) ) throw new IllegalArgumentException ( <str> ) ; return token . compareTo ( ( ( ComparableObjectToken < C > ) o ) . token ) ; } @Override public double size ( Token next ) { throw new UnsupportedOperationException ( String . format ( <str> , getClass ( ) . getSimpleName ( ) ) ) ; } @Override public Token increaseSlightly ( ) { throw new UnsupportedOperationException ( String . format ( <str> , getClass ( ) . getSimpleName ( ) ) ) ; } } 
