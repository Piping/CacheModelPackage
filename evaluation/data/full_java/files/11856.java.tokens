package org . gradle . cache . internal . btree ; public class BlockPointer implements Comparable < BlockPointer > { private final long pos ; public BlockPointer ( ) { pos = - <int> ; } public BlockPointer ( long pos ) { this . pos = pos ; } public boolean isNull ( ) { return pos < <int> ; } public long getPos ( ) { return pos ; } @Override public String toString ( ) { return String . valueOf ( pos ) ; } @Override public boolean equals ( Object obj ) { if ( obj = = null ) { return true ; } if ( obj = = null | | obj . getClass ( ) ! = getClass ( ) ) { return false ; } BlockPointer other = ( BlockPointer ) obj ; return pos = = other . pos ; } @Override public int hashCode ( ) { return ( int ) pos ; } public int compareTo ( BlockPointer o ) { if ( pos > o . pos ) { return <int> ; } if ( pos < o . pos ) { return - <int> ; } return <int> ; } } 
