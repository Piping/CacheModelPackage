package org . gradle . foundation . ipc . gradle ; import org . gradle . foundation . ipc . basic . ClientProcess ; import org . gradle . internal . UncheckedException ; import java . io . Serializable ; public class GradleClient { private ClientProcess clientProcess ; public void start ( ClientProcess . Protocol protocol ) { String portText = System . getProperty ( ProtocolConstants . PORT_NUMBER_SYSTEM_PROPERTY ) ; if ( portText = = null ) { throw new RuntimeException ( <str> ) ; } try { int port = Integer . parseInt ( portText ) ; start ( protocol , port ) ; } catch ( NumberFormatException e ) { throw UncheckedException . throwAsUncheckedException ( e ) ; } } public void start ( ClientProcess . Protocol protocol , int port ) { clientProcess = new ClientProcess ( protocol ) ; clientProcess . start ( port ) ; } public boolean sendMessage ( String messageType , String message , Serializable data ) { return clientProcess . sendMessage ( messageType , message , data ) ; } public boolean sendMessage ( String messageType , String message ) { return sendMessage ( messageType , message , null ) ; } public void stop ( ) { clientProcess . stop ( ) ; } } 
