package org . elasticsearch . action . admin . cluster . repositories . get ; import org . elasticsearch . action . ActionRequestValidationException ; import org . elasticsearch . action . support . master . MasterNodeReadRequest ; import org . elasticsearch . common . Strings ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import java . io . IOException ; import static org . elasticsearch . action . ValidateActions . addValidationError ; public class GetRepositoriesRequest extends MasterNodeReadRequest < GetRepositoriesRequest > { private String [ ] repositories = Strings . EMPTY_ARRAY ; public GetRepositoriesRequest ( ) { } public GetRepositoriesRequest ( String [ ] repositories ) { this . repositories = repositories ; } @Override public ActionRequestValidationException validate ( ) { ActionRequestValidationException validationException = null ; if ( repositories = = null ) { validationException = addValidationError ( <str> , validationException ) ; } return validationException ; } public String [ ] repositories ( ) { return this . repositories ; } public GetRepositoriesRequest repositories ( String [ ] repositories ) { this . repositories = repositories ; return this ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; repositories = in . readStringArray ( ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeStringArray ( repositories ) ; } } 
