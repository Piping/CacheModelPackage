package org . gradle . api . internal . tasks . compile . incremental . analyzer ; import org . gradle . api . internal . hash . Hasher ; import org . gradle . internal . Factory ; import java . io . File ; public class CachingClassDependenciesAnalyzer implements ClassDependenciesAnalyzer { private final ClassDependenciesAnalyzer analyzer ; private final Hasher hasher ; private final ClassAnalysisCache cache ; public CachingClassDependenciesAnalyzer ( ClassDependenciesAnalyzer analyzer , Hasher hasher , ClassAnalysisCache cache ) { this . analyzer = analyzer ; this . hasher = hasher ; this . cache = cache ; } public ClassAnalysis getClassAnalysis ( final String className , final File classFile ) { byte [ ] hash = hasher . hash ( classFile ) ; return cache . get ( hash , new Factory < ClassAnalysis > ( ) { public ClassAnalysis create ( ) { return analyzer . getClassAnalysis ( className , classFile ) ; } } ) ; } } 
