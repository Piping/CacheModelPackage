package org . elasticsearch . search . query ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . search . SearchShardTarget ; import org . elasticsearch . transport . TransportResponse ; import java . io . IOException ; import static org . elasticsearch . search . SearchShardTarget . readSearchShardTarget ; import static org . elasticsearch . search . query . QuerySearchResult . readQuerySearchResult ; public class ScrollQuerySearchResult extends TransportResponse { private QuerySearchResult queryResult ; private SearchShardTarget shardTarget ; public ScrollQuerySearchResult ( ) { } public ScrollQuerySearchResult ( QuerySearchResult queryResult , SearchShardTarget shardTarget ) { this . queryResult = queryResult ; this . shardTarget = shardTarget ; } public QuerySearchResult queryResult ( ) { return queryResult ; } public SearchShardTarget shardTarget ( ) { return shardTarget ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; shardTarget = readSearchShardTarget ( in ) ; queryResult = readQuerySearchResult ( in ) ; queryResult . shardTarget ( shardTarget ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; shardTarget . writeTo ( out ) ; queryResult . writeTo ( out ) ; } } 
