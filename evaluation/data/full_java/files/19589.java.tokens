package io . netty . handler . codec . stomp ; import io . netty . buffer . ByteBuf ; import io . netty . buffer . Unpooled ; import io . netty . util . CharsetUtil ; public class DefaultStompFrame extends DefaultStompHeadersSubframe implements StompFrame { private final ByteBuf content ; public DefaultStompFrame ( StompCommand command ) { this ( command , Unpooled . buffer ( <int> ) ) ; } public DefaultStompFrame ( StompCommand command , ByteBuf content ) { super ( command ) ; if ( content = = null ) { throw new NullPointerException ( <str> ) ; } this . content = content ; } @Override public ByteBuf content ( ) { return content ; } @Override public StompFrame copy ( ) { return new DefaultStompFrame ( command , content . copy ( ) ) ; } @Override public StompFrame duplicate ( ) { return new DefaultStompFrame ( command , content . duplicate ( ) ) ; } @Override public int refCnt ( ) { return content . refCnt ( ) ; } @Override public StompFrame retain ( ) { content . retain ( ) ; return this ; } @Override public StompFrame retain ( int increment ) { content . retain ( ) ; return this ; } @Override public StompFrame touch ( ) { content . touch ( ) ; return this ; } @Override public StompFrame touch ( Object hint ) { content . touch ( hint ) ; return this ; } @Override public boolean release ( ) { return content . release ( ) ; } @Override public boolean release ( int decrement ) { return content . release ( decrement ) ; } @Override public String toString ( ) { return <str> + <str> + command + <str> + headers + <str> + content . toString ( CharsetUtil . UTF_8 ) + <str> ; } } 
