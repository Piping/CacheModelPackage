package org . gradle . nativeplatform . toolchain . internal . msvcpp ; import org . gradle . api . Transformer ; import org . gradle . internal . operations . BuildOperationProcessor ; import org . gradle . nativeplatform . toolchain . internal . CommandLineToolContext ; import org . gradle . nativeplatform . toolchain . internal . CommandLineToolInvocationWorker ; import org . gradle . nativeplatform . toolchain . internal . compilespec . CppPCHCompileSpec ; import java . io . File ; import java . util . Collections ; import java . util . List ; public class CppPCHCompiler extends VisualCppNativeCompiler < CppPCHCompileSpec > { public CppPCHCompiler ( BuildOperationProcessor buildOperationProcessor , CommandLineToolInvocationWorker commandLineToolInvocationWorker , CommandLineToolContext invocationContext , Transformer < CppPCHCompileSpec , CppPCHCompileSpec > specTransformer , String objectFileExtension , boolean useCommandFile ) { super ( buildOperationProcessor , commandLineToolInvocationWorker , invocationContext , new VisualCppPCHCompilerArgsTransformer < CppPCHCompileSpec > ( ) , specTransformer , objectFileExtension , useCommandFile ) ; } @Override protected List < String > getOutputArgs ( File outputFile ) { return Collections . singletonList ( <str> + outputFile . getAbsolutePath ( ) ) ; } } 
