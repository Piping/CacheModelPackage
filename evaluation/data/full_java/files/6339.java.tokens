package org . elasticsearch . index . analysis ; import org . apache . lucene . analysis . pattern . PatternReplaceCharFilter ; import org . elasticsearch . common . Strings ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . env . Environment ; import org . elasticsearch . index . IndexSettings ; import java . io . Reader ; import java . util . regex . Pattern ; public class PatternReplaceCharFilterFactory extends AbstractCharFilterFactory { private final Pattern pattern ; private final String replacement ; public PatternReplaceCharFilterFactory ( IndexSettings indexSettings , Environment env , String name , Settings settings ) { super ( indexSettings , name ) ; if ( ! Strings . hasLength ( settings . get ( <str> ) ) ) { throw new IllegalArgumentException ( <str> + name + <str> ) ; } pattern = Pattern . compile ( settings . get ( <str> ) ) ; replacement = settings . get ( <str> , <str> ) ; } public Pattern getPattern ( ) { return pattern ; } public String getReplacement ( ) { return replacement ; } @Override public Reader create ( Reader tokenStream ) { return new PatternReplaceCharFilter ( pattern , replacement , tokenStream ) ; } } 
