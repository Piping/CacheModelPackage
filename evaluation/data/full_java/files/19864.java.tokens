package io . netty . example . qotm ; import io . netty . bootstrap . Bootstrap ; import io . netty . buffer . Unpooled ; import io . netty . channel . Channel ; import io . netty . channel . ChannelOption ; import io . netty . channel . EventLoopGroup ; import io . netty . channel . nio . NioEventLoopGroup ; import io . netty . channel . socket . DatagramPacket ; import io . netty . channel . socket . nio . NioDatagramChannel ; import io . netty . util . CharsetUtil ; import java . net . InetSocketAddress ; public final class QuoteOfTheMomentClient { static final int PORT = Integer . parseInt ( System . getProperty ( <str> , <str> ) ) ; public static void main ( String [ ] args ) throws Exception { EventLoopGroup group = new NioEventLoopGroup ( ) ; try { Bootstrap b = new Bootstrap ( ) ; b . group ( group ) . channel ( NioDatagramChannel . class ) . option ( ChannelOption . SO_BROADCAST , true ) . handler ( new QuoteOfTheMomentClientHandler ( ) ) ; Channel ch = b . bind ( <int> ) . sync ( ) . channel ( ) ; ch . writeAndFlush ( new DatagramPacket ( Unpooled . copiedBuffer ( <str> , CharsetUtil . UTF_8 ) , new InetSocketAddress ( <str> , PORT ) ) ) . sync ( ) ; if ( ! ch . closeFuture ( ) . await ( <int> ) ) { System . err . println ( <str> ) ; } } finally { group . shutdownGracefully ( ) ; } } } 
