package org . eclipse . debug . internal . ui . launchConfigurations ; import org . eclipse . debug . core . ILaunchConfiguration ; import org . eclipse . debug . internal . ui . IDebugHelpContextIds ; import org . eclipse . debug . ui . IDebugUIConstants ; import org . eclipse . swt . widgets . Composite ; import org . eclipse . swt . widgets . Shell ; public class LaunchConfigurationDialog extends LaunchConfigurationPropertiesDialog { public LaunchConfigurationDialog ( Shell shell , ILaunchConfiguration launchConfiguration , LaunchGroupExtension group ) { super ( shell , launchConfiguration , group ) ; } @Override protected void createButtonsForButtonBar ( Composite parent ) { createButton ( parent , ID_LAUNCH_BUTTON , getLaunchButtonText ( ) , true ) ; createButton ( parent , ID_CLOSE_BUTTON , LaunchConfigurationsMessages . LaunchConfigurationDialog_Close_1 , false ) ; } @Override protected String getTitleAreaTitle ( ) { return LaunchConfigurationsMessages . LaunchConfigurationDialog_Modify_attributes_and_launch__1 ; } @Override protected String getHelpContextId ( ) { return IDebugHelpContextIds . SINGLE_LAUNCH_CONFIGURATION_DIALOG ; } @Override public void updateButtons ( ) { getTabViewer ( ) . refresh ( ) ; getButton ( ID_LAUNCH_BUTTON ) . setEnabled ( getTabViewer ( ) . canLaunch ( ) & getTabViewer ( ) . canLaunchWithModes ( ) & ! getTabViewer ( ) . hasDuplicateDelegates ( ) ) ; } @Override protected String getDialogSettingsSectionName ( ) { return IDebugUIConstants . PLUGIN_ID + <str> ; } } 
