package com . google . common . hash ; import com . google . caliper . BeforeExperiment ; import com . google . caliper . Benchmark ; import com . google . caliper . Param ; import java . security . MessageDigest ; public class MessageDigestCreationBenchmark { @Param ( { <str> , <str> , <str> , <str> , <str> } ) private String algorithm ; private MessageDigest md ; @BeforeExperiment void setUp ( ) throws Exception { md = MessageDigest . getInstance ( algorithm ) ; } @Benchmark int getInstance ( int reps ) throws Exception { int retValue = <int> ; for ( int i = <int> ; i < reps ; i + + ) { retValue ^ = MessageDigest . getInstance ( algorithm ) . getDigestLength ( ) ; } return retValue ; } @Benchmark int clone ( int reps ) throws Exception { int retValue = <int> ; for ( int i = <int> ; i < reps ; i + + ) { retValue ^ = ( ( MessageDigest ) md . clone ( ) ) . getDigestLength ( ) ; } return retValue ; } } 
