package java . io ; import com . google . gwt . corp . compatibility . Numbers ; public class DataOutputStream extends OutputStream implements DataOutput { OutputStream os ; public DataOutputStream ( OutputStream os ) { this . os = os ; } @Override public void write ( int b ) throws IOException { os . write ( b ) ; } public void writeBoolean ( boolean v ) throws IOException { os . write ( v ? <int> : <int> ) ; } public void writeByte ( int v ) throws IOException { os . write ( v ) ; } public void writeBytes ( String s ) throws IOException { int len = s . length ( ) ; for ( int i = <int> ; i < len ; i + + ) { os . write ( s . charAt ( i ) & <hex> ) ; } } public void writeChar ( int v ) throws IOException { os . write ( v > > <int> ) ; os . write ( v ) ; } public void writeChars ( String s ) throws IOException { throw new RuntimeException ( <str> ) ; } public void writeDouble ( double v ) throws IOException { writeLong ( Double . doubleToLongBits ( v ) ) ; } public void writeFloat ( float v ) throws IOException { writeInt ( Numbers . floatToIntBits ( v ) ) ; } public void writeInt ( int v ) throws IOException { os . write ( v > > <int> ) ; os . write ( v > > <int> ) ; os . write ( v > > <int> ) ; os . write ( v ) ; } public void writeLong ( long v ) throws IOException { writeInt ( ( int ) ( v > > <int> ) ) ; writeInt ( ( int ) v ) ; } public void writeShort ( int v ) throws IOException { os . write ( v > > <int> ) ; os . write ( v ) ; } public void writeUTF ( String s ) throws IOException { ByteArrayOutputStream baos = new ByteArrayOutputStream ( ) ; for ( int i = <int> ; i < s . length ( ) ; i + + ) { char c = s . charAt ( i ) ; if ( c > <int> & & c < <int> ) { baos . write ( c ) ; } else if ( c < <str> ) { baos . write ( <hex> | ( <hex> & ( c > > <int> ) ) ) ; baos . write ( <hex> | ( <hex> & c ) ) ; } else { baos . write ( <hex> | ( <hex> & ( c > > <int> ) ) ) ; baos . write ( <hex> | ( <hex> & ( c > > <int> ) ) ) ; baos . write ( <hex> | ( <hex> & c ) ) ; } } writeShort ( baos . count ) ; os . write ( baos . buf , <int> , baos . count ) ; } } 
