package org . apache . cassandra . auth ; import java . util . Set ; import com . google . common . base . Objects ; import org . apache . cassandra . config . DatabaseDescriptor ; public class AuthenticatedUser { public static final String SYSTEM_USERNAME = <str> ; public static final AuthenticatedUser SYSTEM_USER = new AuthenticatedUser ( SYSTEM_USERNAME ) ; public static final String ANONYMOUS_USERNAME = <str> ; public static final AuthenticatedUser ANONYMOUS_USER = new AuthenticatedUser ( ANONYMOUS_USERNAME ) ; private static final PermissionsCache permissionsCache = new PermissionsCache ( DatabaseDescriptor . getAuthorizer ( ) ) ; private final String name ; private final RoleResource role ; public AuthenticatedUser ( String name ) { this . name = name ; this . role = RoleResource . role ( name ) ; } public String getName ( ) { return name ; } public RoleResource getPrimaryRole ( ) { return role ; } public boolean isSuper ( ) { return ! isAnonymous ( ) & & Roles . hasSuperuserStatus ( role ) ; } public boolean isAnonymous ( ) { return this = = ANONYMOUS_USER ; } public boolean isSystem ( ) { return this = = SYSTEM_USER ; } public Set < RoleResource > getRoles ( ) { return Roles . getRoles ( role ) ; } public Set < Permission > getPermissions ( IResource resource ) { return permissionsCache . getPermissions ( this , resource ) ; } @Override public String toString ( ) { return String . format ( <str> , name ) ; } @Override public boolean equals ( Object o ) { if ( this = = o ) return true ; if ( ! ( o instanceof AuthenticatedUser ) ) return false ; AuthenticatedUser u = ( AuthenticatedUser ) o ; return Objects . equal ( name , u . name ) ; } @Override public int hashCode ( ) { return Objects . hashCode ( name ) ; } } 
