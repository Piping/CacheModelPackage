package org . gradle . api . internal . tasks . compile ; import org . gradle . api . tasks . compile . CompileOptions ; import org . gradle . internal . Factory ; public abstract class AbstractJavaCompileSpecFactory < T extends JavaCompileSpec > implements Factory < T > { private final CompileOptions compileOptions ; public AbstractJavaCompileSpecFactory ( CompileOptions compileOptions ) { this . compileOptions = compileOptions ; } @Override public T create ( ) { if ( compileOptions . isFork ( ) ) { if ( compileOptions . getForkOptions ( ) . getExecutable ( ) ! = null ) { return getCommandLineSpec ( ) ; } else { return getForkingSpec ( ) ; } } else { return getDefaultSpec ( ) ; } } abstract protected T getCommandLineSpec ( ) ; abstract protected T getForkingSpec ( ) ; abstract protected T getDefaultSpec ( ) ; } 
