package org . apache . cassandra . concurrent ; import java . util . concurrent . LinkedBlockingQueue ; import java . util . concurrent . TimeUnit ; import org . junit . Test ; import org . apache . cassandra . utils . WrappedRunnable ; public class DebuggableThreadPoolExecutorTest { @Test public void testSerialization ( ) { LinkedBlockingQueue < Runnable > q = new LinkedBlockingQueue < Runnable > ( <int> ) ; DebuggableThreadPoolExecutor executor = new DebuggableThreadPoolExecutor ( <int> , Integer . MAX_VALUE , TimeUnit . MILLISECONDS , q , new NamedThreadFactory ( <str> ) ) ; WrappedRunnable runnable = new WrappedRunnable ( ) { public void runMayThrow ( ) throws InterruptedException { Thread . sleep ( <int> ) ; } } ; long start = System . nanoTime ( ) ; for ( int i = <int> ; i < <int> ; i + + ) { executor . execute ( runnable ) ; } assert q . size ( ) > <int> : q . size ( ) ; while ( executor . getCompletedTaskCount ( ) < <int> ) continue ; long delta = TimeUnit . NANOSECONDS . toMillis ( System . nanoTime ( ) - start ) ; assert delta > = <int> * <int> : delta ; } } 
