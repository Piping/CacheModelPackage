package org . gradle . execution . taskgraph ; import org . gradle . api . Nullable ; import org . gradle . api . Task ; import org . gradle . api . internal . TaskInternal ; import java . util . HashMap ; import java . util . Map ; import java . util . Set ; public class TaskDependencyGraph { private final Map < Task , TaskInfo > nodes = new HashMap < Task , TaskInfo > ( ) ; public Set < Task > getTasks ( ) { return nodes . keySet ( ) ; } @Nullable public TaskInfo getNode ( Task task ) { return nodes . get ( task ) ; } public TaskInfo addNode ( Task task ) { TaskInfo node = nodes . get ( task ) ; if ( node = = null ) { node = new TaskInfo ( ( TaskInternal ) task ) ; nodes . put ( task , node ) ; } return node ; } public void clear ( ) { nodes . clear ( ) ; } } 
