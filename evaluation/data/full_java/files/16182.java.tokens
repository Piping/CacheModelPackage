package org . gradle . foundation ; import org . gradle . util . GUtil ; import java . io . Serializable ; public class TaskView implements Comparable < TaskView > , Serializable { private ProjectView project ; private String name ; private String description ; private boolean isDefault ; TaskView ( ProjectView project , String name , String description , boolean isDefault ) { this . project = project ; this . name = name ; this . isDefault = isDefault ; this . description = GUtil . elvis ( description , <str> ) ; } public ProjectView getProject ( ) { return project ; } public String getName ( ) { return name ; } public String getDescription ( ) { return description ; } public boolean hasDescription ( ) { return ! description . equals ( <str> ) ; } public boolean isDefault ( ) { return isDefault ; } public int compareTo ( TaskView otherTask ) { int projectComparison = project . compareTo ( otherTask . getProject ( ) ) ; if ( projectComparison ! = <int> ) { return projectComparison ; } return name . compareTo ( otherTask . name ) ; } public String toString ( ) { return name ; } public String getFullTaskName ( ) { return project . getFullProjectName ( ) + <str> + name ; } } 
