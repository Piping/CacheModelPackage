package org . elasticsearch . discovery ; import org . elasticsearch . cluster . node . DiscoveryNode ; import org . elasticsearch . common . logging . ESLogger ; import org . elasticsearch . common . logging . ESLoggerFactory ; import java . util . Set ; public class AckClusterStatePublishResponseHandler extends BlockingClusterStatePublishResponseHandler { private static final ESLogger logger = ESLoggerFactory . getLogger ( AckClusterStatePublishResponseHandler . class . getName ( ) ) ; private final Discovery . AckListener ackListener ; public AckClusterStatePublishResponseHandler ( Set < DiscoveryNode > publishingToNodes , Discovery . AckListener ackListener ) { super ( publishingToNodes ) ; this . ackListener = ackListener ; } @Override public void onResponse ( DiscoveryNode node ) { super . onResponse ( node ) ; onNodeAck ( ackListener , node , null ) ; } @Override public void onFailure ( DiscoveryNode node , Throwable t ) { try { super . onFailure ( node , t ) ; } finally { onNodeAck ( ackListener , node , t ) ; } } private void onNodeAck ( final Discovery . AckListener ackListener , DiscoveryNode node , Throwable t ) { try { ackListener . onNodeAck ( node , t ) ; } catch ( Throwable t1 ) { logger . debug ( <str> , t1 , node ) ; } } } 
