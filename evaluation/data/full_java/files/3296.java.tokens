package jcuda . runtime ; import jcuda . * ; public class JCuda { public static final int CUDART_VERSION = <int> ; public static final int cudaHostAllocDefault = <hex> ; public static final int cudaHostAllocPortable = <hex> ; public static final int cudaHostAllocMapped = <hex> ; public static final int cudaHostAllocWriteCombined = <hex> ; public static final int cudaHostRegisterDefault = <hex> ; public static final int cudaHostRegisterPortable = <hex> ; public static final int cudaHostRegisterMapped = <hex> ; public static final int cudaHostRegisterIoMemory = <hex> ; public static final int cudaPeerAccessDefault = <hex> ; public static final int cudaStreamDefault = <hex> ; public static final int cudaStreamNonBlocking = <hex> ; public static final int cudaEventDefault = <hex> ; public static final int cudaEventBlockingSync = <hex> ; public static final int cudaEventDisableTiming = <hex> ; public static final int cudaEventInterprocess = <hex> ; public static final int cudaDeviceScheduleAuto = <hex> ; public static final int cudaDeviceScheduleSpin = <hex> ; public static final int cudaDeviceScheduleYield = <hex> ; public static final int cudaDeviceScheduleBlockingSync = <hex> ; public static final int cudaDeviceBlockingSync = <hex> ; public static final int cudaDeviceScheduleMask = <hex> ; public static final int cudaDeviceMapHost = <hex> ; public static final int cudaDeviceLmemResizeToMax = <hex> ; public static final int cudaDeviceMask = <hex> ; public static final int cudaArrayDefault = <hex> ; public static final int cudaArrayLayered = <hex> ; public static final int cudaArraySurfaceLoadStore = <hex> ; public static final int cudaArrayCubemap = <hex> ; public static final int cudaArrayTextureGather = <hex> ; public static final int cudaIpcMemLazyEnablePeerAccess = <hex> ; public static final int cudaStreamCallbackNonblocking = <hex> ; public static final int cudaStreamCallbackBlocking = <hex> ; public static final int cudaSurfaceType1D = <hex> ; public static final int cudaSurfaceType2D = <hex> ; public static final int cudaSurfaceType3D = <hex> ; public static final int cudaSurfaceTypeCubemap = <hex> ; public static final int cudaSurfaceType1DLayered = <hex> ; public static final int cudaSurfaceType2DLayered = <hex> ; public static final int cudaSurfaceTypeCubemapLayered = <hex> ; public static final int cudaTextureType1D = <hex> ; public static final int cudaTextureType2D = <hex> ; public static final int cudaTextureType3D = <hex> ; public static final int cudaTextureTypeCubemap = <hex> ; public static final int cudaTextureType1DLayered = <hex> ; public static final int cudaTextureType2DLayered = <hex> ; public static final int cudaTextureTypeCubemapLayered = <hex> ; public static final int cudaMemAttachGlobal = <hex> ; public static final int cudaMemAttachHost = <hex> ; public static final int cudaMemAttachSingle = <hex> ; public static final int cudaOccupancyDefault = <hex> ; public static final int cudaOccupancyDisableCachingOverride = <hex> ; private static class ConstantCudaStream_t extends cudaStream_t { ConstantCudaStream_t ( long value ) { super ( value ) ; } } public static cudaStream_t cudaStreamLegacy = new ConstantCudaStream_t ( <hex> ) ; public static cudaStream_t cudaStreamPerThread = new ConstantCudaStream_t ( <hex> ) ; private static boolean initialized = false ; private static boolean exceptionsEnabled = false ; private JCuda ( ) { } static { initialize ( ) ; } public static void initialize ( ) { if ( ! initialized ) { LibUtils . loadLibrary ( <str> ) ; initialized = true ; } } public static void setLogLevel ( LogLevel logLevel ) { setLogLevel ( logLevel . ordinal ( ) ) ; } private static native void setLogLevel ( int logLevel ) ; public static void setExceptionsEnabled ( boolean enabled ) { exceptionsEnabled = enabled ; } private static int checkResult ( int result ) { if ( exceptionsEnabled & & result ! = cudaError . cudaSuccess ) { throw new CudaException ( cudaError . stringFor ( result ) ) ; } return result ; } public static int cudaGetDeviceCount ( int count [ ] ) { return checkResult ( cudaGetDeviceCountNative ( count ) ) ; } private static native int cudaGetDeviceCountNative ( int count [ ] ) ; public static int cudaSetDevice ( int device ) { return checkResult ( cudaSetDeviceNative ( device ) ) ; } private static native int cudaSetDeviceNative ( int device ) ; public static int cudaSetDeviceFlags ( int flags ) { return checkResult ( cudaSetDeviceFlagsNative ( flags ) ) ; } private static native int cudaSetDeviceFlagsNative ( int flags ) ; public static int cudaGetDeviceFlags ( int flags [ ] ) { return checkResult ( cudaGetDeviceFlagsNative ( flags ) ) ; } private static native int cudaGetDeviceFlagsNative ( int flags [ ] ) ; public static int cudaSetValidDevices ( int device_arr [ ] , int len ) { return checkResult ( cudaSetValidDevicesNative ( device_arr , len ) ) ; } private static native int cudaSetValidDevicesNative ( int device_arr [ ] , int len ) ; public static int cudaGetDevice ( int device [ ] ) { return checkResult ( cudaGetDeviceNative ( device ) ) ; } private static native int cudaGetDeviceNative ( int device [ ] ) ; public static int cudaGetDeviceProperties ( cudaDeviceProp prop , int device ) { return checkResult ( cudaGetDevicePropertiesNative ( prop , device ) ) ; } private static native int cudaGetDevicePropertiesNative ( cudaDeviceProp prop , int device ) ; public static int cudaDeviceGetAttribute ( int value [ ] , int cudaDeviceAttr_attr , int device ) { return checkResult ( cudaDeviceGetAttributeNative ( value , cudaDeviceAttr_attr , device ) ) ; } private static native int cudaDeviceGetAttributeNative ( int value [ ] , int cudaDeviceAttr_attr , int device ) ; public static int cudaChooseDevice ( int device [ ] , cudaDeviceProp prop ) { return checkResult ( cudaChooseDeviceNative ( device , prop ) ) ; } private static native int cudaChooseDeviceNative ( int device [ ] , cudaDeviceProp prop ) ; public static int cudaMalloc3D ( cudaPitchedPtr pitchDevPtr , cudaExtent extent ) { return checkResult ( cudaMalloc3DNative ( pitchDevPtr , extent ) ) ; } private static native int cudaMalloc3DNative ( cudaPitchedPtr pitchDevPtr , cudaExtent extent ) ; public static int cudaMalloc3DArray ( cudaArray arrayPtr , cudaChannelFormatDesc desc , cudaExtent extent ) { return cudaMalloc3DArray ( arrayPtr , desc , extent , <int> ) ; } public static int cudaMalloc3DArray ( cudaArray arrayPtr , cudaChannelFormatDesc desc , cudaExtent extent , int flags ) { return checkResult ( cudaMalloc3DArrayNative ( arrayPtr , desc , extent , flags ) ) ; } private static native int cudaMalloc3DArrayNative ( cudaArray arrayPtr , cudaChannelFormatDesc desc , cudaExtent extent , int flags ) ; public static int cudaMallocMipmappedArray ( cudaMipmappedArray mipmappedArray , cudaChannelFormatDesc desc , cudaExtent extent , int numLevels , int flags ) { return checkResult ( cudaMallocMipmappedArrayNative ( mipmappedArray , desc , extent , numLevels , flags ) ) ; } private static native int cudaMallocMipmappedArrayNative ( cudaMipmappedArray mipmappedArray , cudaChannelFormatDesc desc , cudaExtent extent , int numLevels , int flags ) ; public static int cudaGetMipmappedArrayLevel ( cudaArray levelArray , cudaMipmappedArray mipmappedArray , int level ) { return checkResult ( cudaGetMipmappedArrayLevelNative ( levelArray , mipmappedArray , level ) ) ; } private static native int cudaGetMipmappedArrayLevelNative ( cudaArray levelArray , cudaMipmappedArray mipmappedArray , int level ) ; public static int cudaMemset3D ( cudaPitchedPtr pitchDevPtr , int value , cudaExtent extent ) { return checkResult ( cudaMemset3DNative ( pitchDevPtr , value , extent ) ) ; } private static native int cudaMemset3DNative ( cudaPitchedPtr pitchDevPtr , int value , cudaExtent extent ) ; public static int cudaMemsetAsync ( Pointer devPtr , int value , long count , cudaStream_t stream ) { return checkResult ( cudaMemsetAsyncNative ( devPtr , value , count , stream ) ) ; } private static native int cudaMemsetAsyncNative ( Pointer devPtr , int value , long count , cudaStream_t stream ) ; public static int cudaMemset2DAsync ( Pointer devPtr , long pitch , int value , long width , long height , cudaStream_t stream ) { return checkResult ( cudaMemset2DAsyncNative ( devPtr , pitch , value , width , height , stream ) ) ; } private static native int cudaMemset2DAsyncNative ( Pointer devPtr , long pitch , int value , long width , long height , cudaStream_t stream ) ; public static int cudaMemset3DAsync ( cudaPitchedPtr pitchedDevPtr , int value , cudaExtent extent , cudaStream_t stream ) { return checkResult ( cudaMemset3DAsyncNative ( pitchedDevPtr , value , extent , stream ) ) ; } private static native int cudaMemset3DAsyncNative ( cudaPitchedPtr pitchedDevPtr , int value , cudaExtent extent , cudaStream_t stream ) ; public static int cudaMemcpy3D ( cudaMemcpy3DParms p ) { return checkResult ( cudaMemcpy3DNative ( p ) ) ; } private static native int cudaMemcpy3DNative ( cudaMemcpy3DParms p ) ; public static int cudaMemcpy3DPeer ( cudaMemcpy3DPeerParms p ) { return checkResult ( cudaMemcpy3DPeerNative ( p ) ) ; } private static native int cudaMemcpy3DPeerNative ( cudaMemcpy3DPeerParms p ) ; public static int cudaMemcpy3DAsync ( cudaMemcpy3DParms p , cudaStream_t stream ) { return checkResult ( cudaMemcpy3DAsyncNative ( p , stream ) ) ; } private static native int cudaMemcpy3DAsyncNative ( cudaMemcpy3DParms p , cudaStream_t stream ) ; public static int cudaMemcpy3DPeerAsync ( cudaMemcpy3DPeerParms p , cudaStream_t stream ) { return checkResult ( cudaMemcpy3DPeerAsyncNative ( p , stream ) ) ; } private static native int cudaMemcpy3DPeerAsyncNative ( cudaMemcpy3DPeerParms p , cudaStream_t stream ) ; public static int cudaMemGetInfo ( long free [ ] , long total [ ] ) { return checkResult ( cudaMemGetInfoNative ( free , total ) ) ; } private static native int cudaMemGetInfoNative ( long free [ ] , long total [ ] ) ; public static int cudaArrayGetInfo ( cudaChannelFormatDesc desc , cudaExtent extent , int flags [ ] , cudaArray array ) { return checkResult ( cudaArrayGetInfoNative ( desc , extent , flags , array ) ) ; } private static native int cudaArrayGetInfoNative ( cudaChannelFormatDesc desc , cudaExtent extent , int flags [ ] , cudaArray array ) ; public static int cudaHostAlloc ( Pointer ptr , long size , int flags ) { return checkResult ( cudaHostAllocNative ( ptr , size , flags ) ) ; } private static native int cudaHostAllocNative ( Pointer ptr , long size , int flags ) ; public static int cudaHostRegister ( Pointer ptr , long size , int flags ) { return checkResult ( cudaHostRegisterNative ( ptr , size , flags ) ) ; } private static native int cudaHostRegisterNative ( Pointer ptr , long size , int flags ) ; public static int cudaHostUnregister ( Pointer ptr ) { return checkResult ( cudaHostUnregisterNative ( ptr ) ) ; } private static native int cudaHostUnregisterNative ( Pointer ptr ) ; public static int cudaHostGetDevicePointer ( Pointer pDevice , Pointer pHost , int flags ) { return checkResult ( cudaHostGetDevicePointerNative ( pDevice , pHost , flags ) ) ; } private static native int cudaHostGetDevicePointerNative ( Pointer pDevice , Pointer pHost , int flags ) ; public static int cudaMallocManaged ( Pointer devPtr , long size , int flags ) { return checkResult ( cudaMallocManagedNative ( devPtr , size , flags ) ) ; } private static native int cudaMallocManagedNative ( Pointer devPtr , long size , int flags ) ; public static int cudaMalloc ( Pointer devPtr , long size ) { return checkResult ( cudaMallocNative ( devPtr , size ) ) ; } private static native int cudaMallocNative ( Pointer devPtr , long size ) ; public static int cudaMallocHost ( Pointer ptr , long size ) { return checkResult ( cudaMallocHostNative ( ptr , size ) ) ; } private static native int cudaMallocHostNative ( Pointer ptr , long size ) ; public static int cudaMallocPitch ( Pointer devPtr , long pitch [ ] , long width , long height ) { return checkResult ( cudaMallocPitchNative ( devPtr , pitch , width , height ) ) ; } private static native int cudaMallocPitchNative ( Pointer devPtr , long pitch [ ] , long width , long height ) ; public static int cudaMallocArray ( cudaArray array , cudaChannelFormatDesc desc , long width , long height ) { return cudaMallocArray ( array , desc , width , height , <int> ) ; } public static int cudaMallocArray ( cudaArray array , cudaChannelFormatDesc desc , long width , long height , int flags ) { return checkResult ( cudaMallocArrayNative ( array , desc , width , height , flags ) ) ; } private static native int cudaMallocArrayNative ( cudaArray array , cudaChannelFormatDesc desc , long width , long height , int flags ) ; public static int cudaFree ( Pointer devPtr ) { return checkResult ( cudaFreeNative ( devPtr ) ) ; } private static native int cudaFreeNative ( Pointer devPtr ) ; public static int cudaFreeHost ( Pointer ptr ) { return checkResult ( cudaFreeHostNative ( ptr ) ) ; } private static native int cudaFreeHostNative ( Pointer ptr ) ; public static int cudaFreeArray ( cudaArray array ) { return checkResult ( cudaFreeArrayNative ( array ) ) ; } private static native int cudaFreeArrayNative ( cudaArray array ) ; public static int cudaFreeMipmappedArray ( cudaMipmappedArray mipmappedArray ) { return checkResult ( cudaFreeMipmappedArrayNative ( mipmappedArray ) ) ; } private static native int cudaFreeMipmappedArrayNative ( cudaMipmappedArray mipmappedArray ) ; public static int cudaMemcpy ( Pointer dst , Pointer src , long count , int cudaMemcpyKind_kind ) { return checkResult ( cudaMemcpyNative ( dst , src , count , cudaMemcpyKind_kind ) ) ; } private static native int cudaMemcpyNative ( Pointer dst , Pointer src , long count , int cudaMemcpyKind_kind ) ; public static int cudaMemcpyPeer ( Pointer dst , int dstDevice , Pointer src , int srcDevice , long count ) { return checkResult ( cudaMemcpyPeerNative ( dst , dstDevice , src , srcDevice , count ) ) ; } private static native int cudaMemcpyPeerNative ( Pointer dst , int dstDevice , Pointer src , int srcDevice , long count ) ; public static int cudaMemcpyToArray ( cudaArray dst , long wOffset , long hOffset , Pointer src , long count , int cudaMemcpyKind_kind ) { return checkResult ( cudaMemcpyToArrayNative ( dst , wOffset , hOffset , src , count , cudaMemcpyKind_kind ) ) ; } private static native int cudaMemcpyToArrayNative ( cudaArray dst , long wOffset , long hOffset , Pointer src , long count , int cudaMemcpyKind_kind ) ; public static int cudaMemcpyFromArray ( Pointer dst , cudaArray src , long wOffset , long hOffset , long count , int cudaMemcpyKind_kind ) { return checkResult ( cudaMemcpyFromArrayNative ( dst , src , wOffset , hOffset , count , cudaMemcpyKind_kind ) ) ; } private static native int cudaMemcpyFromArrayNative ( Pointer dst , cudaArray src , long wOffset , long hOffset , long count , int cudaMemcpyKind_kind ) ; public static int cudaMemcpyArrayToArray ( cudaArray dst , long wOffsetDst , long hOffsetDst , cudaArray src , long wOffsetSrc , long hOffsetSrc , long count , int cudaMemcpyKind_kind ) { return checkResult ( cudaMemcpyArrayToArrayNative ( dst , wOffsetDst , hOffsetDst , src , wOffsetSrc , hOffsetSrc , count , cudaMemcpyKind_kind ) ) ; } private static native int cudaMemcpyArrayToArrayNative ( cudaArray dst , long wOffsetDst , long hOffsetDst , cudaArray src , long wOffsetSrc , long hOffsetSrc , long count , int cudaMemcpyKind_kind ) ; public static int cudaMemcpy2D ( Pointer dst , long dpitch , Pointer src , long spitch , long width , long height , int cudaMemcpyKind_kind ) { return checkResult ( cudaMemcpy2DNative ( dst , dpitch , src , spitch , width , height , cudaMemcpyKind_kind ) ) ; } private static native int cudaMemcpy2DNative ( Pointer dst , long dpitch , Pointer src , long spitch , long width , long height , int cudaMemcpyKind_kind ) ; public static int cudaMemcpy2DToArray ( cudaArray dst , long wOffset , long hOffset , Pointer src , long spitch , long width , long height , int cudaMemcpyKind_kind ) { return checkResult ( cudaMemcpy2DToArrayNative ( dst , wOffset , hOffset , src , spitch , width , height , cudaMemcpyKind_kind ) ) ; } private static native int cudaMemcpy2DToArrayNative ( cudaArray dst , long wOffset , long hOffset , Pointer src , long spitch , long width , long height , int cudaMemcpyKind_kind ) ; public static int cudaMemcpy2DFromArray ( Pointer dst , long dpitch , cudaArray src , long wOffset , long hOffset , long width , long height , int cudaMemcpyKind_kind ) { return checkResult ( cudaMemcpy2DFromArrayNative ( dst , dpitch , src , wOffset , hOffset , width , height , cudaMemcpyKind_kind ) ) ; } private static native int cudaMemcpy2DFromArrayNative ( Pointer dst , long dpitch , cudaArray src , long wOffset , long hOffset , long width , long height , int cudaMemcpyKind_kind ) ; public static int cudaMemcpy2DArrayToArray ( cudaArray dst , long wOffsetDst , long hOffsetDst , cudaArray src , long wOffsetSrc , long hOffsetSrc , long width , long height , int cudaMemcpyKind_kind ) { return checkResult ( cudaMemcpy2DArrayToArrayNative ( dst , wOffsetDst , hOffsetDst , src , wOffsetSrc , hOffsetSrc , width , height , cudaMemcpyKind_kind ) ) ; } private static native int cudaMemcpy2DArrayToArrayNative ( cudaArray dst , long wOffsetDst , long hOffsetDst , cudaArray src , long wOffsetSrc , long hOffsetSrc , long width , long height , int cudaMemcpyKind_kind ) ; public static int cudaMemcpyToSymbol ( String symbol , Pointer src , long count , long offset , int cudaMemcpyKind_kind ) { if ( true ) { throw new UnsupportedOperationException ( <str> ) ; } return checkResult ( cudaMemcpyToSymbolNative ( symbol , src , count , offset , cudaMemcpyKind_kind ) ) ; } private static native int cudaMemcpyToSymbolNative ( String symbol , Pointer src , long count , long offset , int cudaMemcpyKind_kind ) ; public static int cudaMemcpyFromSymbol ( Pointer dst , String symbol , long count , long offset , int cudaMemcpyKind_kind ) { if ( true ) { throw new UnsupportedOperationException ( <str> ) ; } return checkResult ( cudaMemcpyFromSymbolNative ( dst , symbol , count , offset , cudaMemcpyKind_kind ) ) ; } private static native int cudaMemcpyFromSymbolNative ( Pointer dst , String symbol , long count , long offset , int cudaMemcpyKind_kind ) ; public static int cudaMemcpyAsync ( Pointer dst , Pointer src , long count , int cudaMemcpyKind_kind , cudaStream_t stream ) { return checkResult ( cudaMemcpyAsyncNative ( dst , src , count , cudaMemcpyKind_kind , stream ) ) ; } private static native int cudaMemcpyAsyncNative ( Pointer dst , Pointer src , long count , int cudaMemcpyKind_kind , cudaStream_t stream ) ; public static int cudaMemcpyPeerAsync ( Pointer dst , int dstDevice , Pointer src , int srcDevice , long count , cudaStream_t stream ) { return checkResult ( cudaMemcpyPeerAsyncNative ( dst , dstDevice , src , srcDevice , count , stream ) ) ; } private static native int cudaMemcpyPeerAsyncNative ( Pointer dst , int dstDevice , Pointer src , int srcDevice , long count , cudaStream_t stream ) ; public static int cudaMemcpyToArrayAsync ( cudaArray dst , long wOffset , long hOffset , Pointer src , long count , int cudaMemcpyKind_kind , cudaStream_t stream ) { return checkResult ( cudaMemcpyToArrayAsyncNative ( dst , wOffset , hOffset , src , count , cudaMemcpyKind_kind , stream ) ) ; } private static native int cudaMemcpyToArrayAsyncNative ( cudaArray dst , long wOffset , long hOffset , Pointer src , long count , int cudaMemcpyKind_kind , cudaStream_t stream ) ; public static int cudaMemcpyFromArrayAsync ( Pointer dst , cudaArray src , long wOffset , long hOffset , long count , int cudaMemcpyKind_kind , cudaStream_t stream ) { return checkResult ( cudaMemcpyFromArrayAsyncNative ( dst , src , wOffset , hOffset , count , cudaMemcpyKind_kind , stream ) ) ; } private static native int cudaMemcpyFromArrayAsyncNative ( Pointer dst , cudaArray src , long wOffset , long hOffset , long count , int cudaMemcpyKind_kind , cudaStream_t stream ) ; public static int cudaMemcpy2DAsync ( Pointer dst , long dpitch , Pointer src , long spitch , long width , long height , int cudaMemcpyKind_kind , cudaStream_t stream ) { return checkResult ( cudaMemcpy2DAsyncNative ( dst , dpitch , src , spitch , width , height , cudaMemcpyKind_kind , stream ) ) ; } private static native int cudaMemcpy2DAsyncNative ( Pointer dst , long dpitch , Pointer src , long spitch , long width , long height , int cudaMemcpyKind_kind , cudaStream_t stream ) ; public static int cudaMemcpy2DToArrayAsync ( cudaArray dst , long wOffset , long hOffset , Pointer src , long spitch , long width , long height , int cudaMemcpyKind_kind , cudaStream_t stream ) { return checkResult ( cudaMemcpy2DToArrayAsyncNative ( dst , wOffset , hOffset , src , spitch , width , height , cudaMemcpyKind_kind , stream ) ) ; } private static native int cudaMemcpy2DToArrayAsyncNative ( cudaArray dst , long wOffset , long hOffset , Pointer src , long spitch , long width , long height , int cudaMemcpyKind_kind , cudaStream_t stream ) ; public static int cudaMemcpy2DFromArrayAsync ( Pointer dst , long dpitch , cudaArray src , long wOffset , long hOffset , long width , long height , int cudaMemcpyKind_kind , cudaStream_t stream ) { return checkResult ( cudaMemcpy2DFromArrayAsyncNative ( dst , dpitch , src , wOffset , hOffset , width , height , cudaMemcpyKind_kind , stream ) ) ; } private static native int cudaMemcpy2DFromArrayAsyncNative ( Pointer dst , long dpitch , cudaArray src , long wOffset , long hOffset , long width , long height , int cudaMemcpyKind_kind , cudaStream_t stream ) ; public static int cudaMemcpyToSymbolAsync ( String symbol , Pointer src , long count , long offset , int cudaMemcpyKind_kind , cudaStream_t stream ) { if ( true ) { throw new UnsupportedOperationException ( <str> ) ; } return checkResult ( cudaMemcpyToSymbolAsyncNative ( symbol , src , count , offset , cudaMemcpyKind_kind , stream ) ) ; } private static native int cudaMemcpyToSymbolAsyncNative ( String symbol , Pointer src , long count , long offset , int cudaMemcpyKind_kind , cudaStream_t stream ) ; public static int cudaMemcpyFromSymbolAsync ( Pointer dst , String symbol , long count , long offset , int cudaMemcpyKind_kind , cudaStream_t stream ) { if ( true ) { throw new UnsupportedOperationException ( <str> ) ; } return checkResult ( cudaMemcpyFromSymbolAsyncNative ( dst , symbol , count , offset , cudaMemcpyKind_kind , stream ) ) ; } private static native int cudaMemcpyFromSymbolAsyncNative ( Pointer dst , String symbol , long count , long offset , int cudaMemcpyKind_kind , cudaStream_t stream ) ; public static int cudaMemset ( Pointer mem , int c , long count ) { return checkResult ( cudaMemsetNative ( mem , c , count ) ) ; } private static native int cudaMemsetNative ( Pointer mem , int c , long count ) ; public static int cudaMemset2D ( Pointer mem , long pitch , int c , long width , long height ) { return checkResult ( cudaMemset2DNative ( mem , pitch , c , width , height ) ) ; } private static native int cudaMemset2DNative ( Pointer mem , long pitch , int c , long width , long height ) ; public static int cudaGetChannelDesc ( cudaChannelFormatDesc desc , cudaArray array ) { return checkResult ( cudaGetChannelDescNative ( desc , array ) ) ; } private static native int cudaGetChannelDescNative ( cudaChannelFormatDesc desc , cudaArray array ) ; public static cudaChannelFormatDesc cudaCreateChannelDesc ( int x , int y , int z , int w , int cudaChannelFormatKind_f ) { return cudaCreateChannelDescNative ( x , y , z , w , cudaChannelFormatKind_f ) ; } private static native cudaChannelFormatDesc cudaCreateChannelDescNative ( int x , int y , int z , int w , int cudaChannelFormatKind_f ) ; public static int cudaGetLastError ( ) { return checkResult ( cudaGetLastErrorNative ( ) ) ; } private static native int cudaGetLastErrorNative ( ) ; public static int cudaPeekAtLastError ( ) { return checkResult ( cudaPeekAtLastErrorNative ( ) ) ; } private static native int cudaPeekAtLastErrorNative ( ) ; public static String cudaGetErrorName ( int error ) { return cudaGetErrorNameNative ( error ) ; } private static native String cudaGetErrorNameNative ( int error ) ; public static String cudaGetErrorString ( int error ) { return cudaGetErrorStringNative ( error ) ; } private static native String cudaGetErrorStringNative ( int error ) ; public static int cudaStreamCreate ( cudaStream_t stream ) { return checkResult ( cudaStreamCreateNative ( stream ) ) ; } private static native int cudaStreamCreateNative ( cudaStream_t stream ) ; public static int cudaStreamCreateWithFlags ( cudaStream_t pStream , int flags ) { return checkResult ( cudaStreamCreateWithFlagsNative ( pStream , flags ) ) ; } private static native int cudaStreamCreateWithFlagsNative ( cudaStream_t pStream , int flags ) ; public static int cudaStreamCreateWithPriority ( cudaStream_t pStream , int flags , int priority ) { return checkResult ( cudaStreamCreateWithPriorityNative ( pStream , flags , priority ) ) ; } private static native int cudaStreamCreateWithPriorityNative ( cudaStream_t pStream , int flags , int priority ) ; public static int cudaStreamGetPriority ( cudaStream_t hStream , int priority [ ] ) { return checkResult ( cudaStreamGetPriorityNative ( hStream , priority ) ) ; } private static native int cudaStreamGetPriorityNative ( cudaStream_t hStream , int priority [ ] ) ; public static int cudaStreamGetFlags ( cudaStream_t hStream , int flags [ ] ) { return checkResult ( cudaStreamGetFlagsNative ( hStream , flags ) ) ; } private static native int cudaStreamGetFlagsNative ( cudaStream_t hStream , int flags [ ] ) ; public static int cudaStreamDestroy ( cudaStream_t stream ) { return checkResult ( cudaStreamDestroyNative ( stream ) ) ; } private static native int cudaStreamDestroyNative ( cudaStream_t stream ) ; public static int cudaStreamWaitEvent ( cudaStream_t stream , cudaEvent_t event , int flags ) { return checkResult ( cudaStreamWaitEventNative ( stream , event , flags ) ) ; } private static native int cudaStreamWaitEventNative ( cudaStream_t stream , cudaEvent_t event , int flags ) ; public static int cudaStreamAddCallback ( cudaStream_t stream , cudaStreamCallback callback , Object userData , int flags ) { return checkResult ( cudaStreamAddCallbackNative ( stream , callback , userData , flags ) ) ; } private static native int cudaStreamAddCallbackNative ( cudaStream_t stream , cudaStreamCallback callback , Object userData , int flags ) ; public static int cudaStreamSynchronize ( cudaStream_t stream ) { return checkResult ( cudaStreamSynchronizeNative ( stream ) ) ; } private static native int cudaStreamSynchronizeNative ( cudaStream_t stream ) ; public static int cudaStreamQuery ( cudaStream_t stream ) { return checkResult ( cudaStreamQueryNative ( stream ) ) ; } private static native int cudaStreamQueryNative ( cudaStream_t stream ) ; public static int cudaStreamAttachMemAsync ( cudaStream_t stream , Pointer devPtr , long length , int flags ) { return checkResult ( cudaStreamAttachMemAsyncNative ( stream , devPtr , length , flags ) ) ; } private static native int cudaStreamAttachMemAsyncNative ( cudaStream_t stream , Pointer devPtr , long length , int flags ) ; public static int cudaEventCreate ( cudaEvent_t event ) { return checkResult ( cudaEventCreateNative ( event ) ) ; } private static native int cudaEventCreateNative ( cudaEvent_t event ) ; public static int cudaEventCreateWithFlags ( cudaEvent_t event , int flags ) { return checkResult ( cudaEventCreateWithFlagsNative ( event , flags ) ) ; } private static native int cudaEventCreateWithFlagsNative ( cudaEvent_t event , int flags ) ; public static int cudaEventRecord ( cudaEvent_t event , cudaStream_t stream ) { return checkResult ( cudaEventRecordNative ( event , stream ) ) ; } private static native int cudaEventRecordNative ( cudaEvent_t event , cudaStream_t stream ) ; public static int cudaEventQuery ( cudaEvent_t event ) { return checkResult ( cudaEventQueryNative ( event ) ) ; } private static native int cudaEventQueryNative ( cudaEvent_t event ) ; public static int cudaEventSynchronize ( cudaEvent_t event ) { return checkResult ( cudaEventSynchronizeNative ( event ) ) ; } private static native int cudaEventSynchronizeNative ( cudaEvent_t event ) ; public static int cudaEventDestroy ( cudaEvent_t event ) { return checkResult ( cudaEventDestroyNative ( event ) ) ; } private static native int cudaEventDestroyNative ( cudaEvent_t event ) ; public static int cudaEventElapsedTime ( float ms [ ] , cudaEvent_t start , cudaEvent_t end ) { return checkResult ( cudaEventElapsedTimeNative ( ms , start , end ) ) ; } private static native int cudaEventElapsedTimeNative ( float ms [ ] , cudaEvent_t start , cudaEvent_t end ) ; public static int cudaDeviceReset ( ) { return checkResult ( cudaDeviceResetNative ( ) ) ; } private static native int cudaDeviceResetNative ( ) ; public static int cudaDeviceSynchronize ( ) { return checkResult ( cudaDeviceSynchronizeNative ( ) ) ; } private static native int cudaDeviceSynchronizeNative ( ) ; public static int cudaDeviceSetLimit ( int limit , long value ) { return checkResult ( cudaDeviceSetLimitNative ( limit , value ) ) ; } private static native int cudaDeviceSetLimitNative ( int limit , long value ) ; public static int cudaDeviceGetLimit ( long pValue [ ] , int limit ) { return checkResult ( cudaDeviceGetLimitNative ( pValue , limit ) ) ; } private static native int cudaDeviceGetLimitNative ( long pValue [ ] , int limit ) ; public static int cudaDeviceGetCacheConfig ( int pCacheConfig [ ] ) { return checkResult ( cudaDeviceGetCacheConfigNative ( pCacheConfig ) ) ; } private static native int cudaDeviceGetCacheConfigNative ( int pCacheConfig [ ] ) ; public static int cudaDeviceGetStreamPriorityRange ( int leastPriority [ ] , int greatestPriority [ ] ) { return checkResult ( cudaDeviceGetStreamPriorityRangeNative ( leastPriority , greatestPriority ) ) ; } private static native int cudaDeviceGetStreamPriorityRangeNative ( int leastPriority [ ] , int greatestPriority [ ] ) ; public static int cudaDeviceGetSharedMemConfig ( int pConfig [ ] ) { return checkResult ( cudaDeviceGetSharedMemConfigNative ( pConfig ) ) ; } private static native int cudaDeviceGetSharedMemConfigNative ( int pConfig [ ] ) ; public static int cudaDeviceSetSharedMemConfig ( int config ) { return checkResult ( cudaDeviceSetSharedMemConfigNative ( config ) ) ; } private static native int cudaDeviceSetSharedMemConfigNative ( int config ) ; public static int cudaDeviceSetCacheConfig ( int cacheConfig ) { return checkResult ( cudaDeviceSetCacheConfigNative ( cacheConfig ) ) ; } private static native int cudaDeviceSetCacheConfigNative ( int cacheConfig ) ; public static int cudaDeviceGetByPCIBusId ( int device [ ] , String pciBusId ) { return checkResult ( cudaDeviceGetByPCIBusIdNative ( device , pciBusId ) ) ; } private static native int cudaDeviceGetByPCIBusIdNative ( int device [ ] , String pciBusId ) ; public static int cudaDeviceGetPCIBusId ( String pciBusId [ ] , int len , int device ) { return checkResult ( cudaDeviceGetPCIBusIdNative ( pciBusId , len , device ) ) ; } private static native int cudaDeviceGetPCIBusIdNative ( String pciBusId [ ] , int len , int device ) ; public static int cudaIpcGetEventHandle ( cudaIpcEventHandle handle , cudaEvent_t event ) { return checkResult ( cudaIpcGetEventHandleNative ( handle , event ) ) ; } private static native int cudaIpcGetEventHandleNative ( cudaIpcEventHandle handle , cudaEvent_t event ) ; public static int cudaIpcOpenEventHandle ( cudaEvent_t event , cudaIpcEventHandle handle ) { return checkResult ( cudaIpcOpenEventHandleNative ( event , handle ) ) ; } private static native int cudaIpcOpenEventHandleNative ( cudaEvent_t event , cudaIpcEventHandle handle ) ; public static int cudaIpcGetMemHandle ( cudaIpcMemHandle handle , Pointer devPtr ) { return checkResult ( cudaIpcGetMemHandleNative ( handle , devPtr ) ) ; } private static native int cudaIpcGetMemHandleNative ( cudaIpcMemHandle handle , Pointer devPtr ) ; public static int cudaIpcOpenMemHandle ( Pointer devPtr , cudaIpcMemHandle handle , int flags ) { return checkResult ( cudaIpcOpenMemHandleNative ( devPtr , handle , flags ) ) ; } private static native int cudaIpcOpenMemHandleNative ( Pointer devPtr , cudaIpcMemHandle handle , int flags ) ; public static int cudaIpcCloseMemHandle ( Pointer devPtr ) { return checkResult ( cudaIpcCloseMemHandleNative ( devPtr ) ) ; } private static native int cudaIpcCloseMemHandleNative ( Pointer devPtr ) ; public static int cudaThreadExit ( ) { return checkResult ( cudaThreadExitNative ( ) ) ; } private static native int cudaThreadExitNative ( ) ; public static int cudaThreadSynchronize ( ) { return checkResult ( cudaThreadSynchronizeNative ( ) ) ; } private static native int cudaThreadSynchronizeNative ( ) ; public static int cudaThreadSetLimit ( int limit , long value ) { return checkResult ( cudaThreadSetLimitNative ( limit , value ) ) ; } private static native int cudaThreadSetLimitNative ( int limit , long value ) ; public static int cudaThreadGetCacheConfig ( int pCacheConfig [ ] ) { return checkResult ( cudaThreadGetCacheConfigNative ( pCacheConfig ) ) ; } private static native int cudaThreadGetCacheConfigNative ( int [ ] pCacheConfig ) ; public static int cudaThreadSetCacheConfig ( int cacheConfig ) { return checkResult ( cudaThreadSetCacheConfigNative ( cacheConfig ) ) ; } private static native int cudaThreadSetCacheConfigNative ( int cacheConfig ) ; public static int cudaThreadGetLimit ( long pValue [ ] , int limit ) { return checkResult ( cudaThreadGetLimitNative ( pValue , limit ) ) ; } private static native int cudaThreadGetLimitNative ( long pValue [ ] , int limit ) ; public static int cudaGetSymbolAddress ( Pointer devPtr , String symbol ) { if ( true ) { throw new UnsupportedOperationException ( <str> ) ; } return checkResult ( cudaGetSymbolAddressNative ( devPtr , symbol ) ) ; } private static native int cudaGetSymbolAddressNative ( Pointer devPtr , String symbol ) ; public static int cudaGetSymbolSize ( long size [ ] , String symbol ) { if ( true ) { throw new UnsupportedOperationException ( <str> ) ; } return checkResult ( cudaGetSymbolSizeNative ( size , symbol ) ) ; } private static native int cudaGetSymbolSizeNative ( long size [ ] , String symbol ) ; public static int cudaBindTexture ( long offset [ ] , textureReference texref , Pointer devPtr , cudaChannelFormatDesc desc , long size ) { return checkResult ( cudaBindTextureNative ( offset , texref , devPtr , desc , size ) ) ; } private static native int cudaBindTextureNative ( long offset [ ] , textureReference texref , Pointer devPtr , cudaChannelFormatDesc desc , long size ) ; public static int cudaBindTexture2D ( long offset [ ] , textureReference texref , Pointer devPtr , cudaChannelFormatDesc desc , long width , long height , long pitch ) { return checkResult ( cudaBindTexture2DNative ( offset , texref , devPtr , desc , width , height , pitch ) ) ; } private static native int cudaBindTexture2DNative ( long offset [ ] , textureReference texref , Pointer devPtr , cudaChannelFormatDesc desc , long width , long height , long pitch ) ; public static int cudaBindTextureToArray ( textureReference texref , cudaArray array , cudaChannelFormatDesc desc ) { return checkResult ( cudaBindTextureToArrayNative ( texref , array , desc ) ) ; } private static native int cudaBindTextureToArrayNative ( textureReference texref , cudaArray array , cudaChannelFormatDesc desc ) ; public static int cudaBindTextureToMipmappedArray ( textureReference texref , cudaMipmappedArray mipmappedArray , cudaChannelFormatDesc desc ) { return checkResult ( cudaBindTextureToMipmappedArrayNative ( texref , mipmappedArray , desc ) ) ; } private static native int cudaBindTextureToMipmappedArrayNative ( textureReference texref , cudaMipmappedArray mipmappedArray , cudaChannelFormatDesc desc ) ; public static int cudaUnbindTexture ( textureReference texref ) { return checkResult ( cudaUnbindTextureNative ( texref ) ) ; } private static native int cudaUnbindTextureNative ( textureReference texref ) ; public static int cudaGetTextureAlignmentOffset ( long offset [ ] , textureReference texref ) { return checkResult ( cudaGetTextureAlignmentOffsetNative ( offset , texref ) ) ; } private static native int cudaGetTextureAlignmentOffsetNative ( long offset [ ] , textureReference texref ) ; public static int cudaGetTextureReference ( textureReference texref , String symbol ) { if ( true ) { throw new UnsupportedOperationException ( <str> ) ; } return checkResult ( cudaGetTextureReferenceNative ( texref , symbol ) ) ; } private static native int cudaGetTextureReferenceNative ( textureReference texref , String symbol ) ; public static int cudaBindSurfaceToArray ( surfaceReference surfref , cudaArray array , cudaChannelFormatDesc desc ) { return checkResult ( cudaBindSurfaceToArrayNative ( surfref , array , desc ) ) ; } private static native int cudaBindSurfaceToArrayNative ( surfaceReference surfref , cudaArray array , cudaChannelFormatDesc desc ) ; public static int cudaGetSurfaceReference ( surfaceReference surfref , String symbol ) { if ( true ) { throw new UnsupportedOperationException ( <str> ) ; } return checkResult ( cudaGetSurfaceReferenceNative ( surfref , symbol ) ) ; } private static native int cudaGetSurfaceReferenceNative ( surfaceReference surfref , String symbol ) ; public static int cudaCreateTextureObject ( cudaTextureObject pTexObject , cudaResourceDesc pResDesc , cudaTextureDesc pTexDesc , cudaResourceViewDesc pResViewDesc ) { return checkResult ( cudaCreateTextureObjectNative ( pTexObject , pResDesc , pTexDesc , pResViewDesc ) ) ; } private static native int cudaCreateTextureObjectNative ( cudaTextureObject pTexObject , cudaResourceDesc pResDesc , cudaTextureDesc pTexDesc , cudaResourceViewDesc pResViewDesc ) ; public static int cudaDestroyTextureObject ( cudaTextureObject texObject ) { return checkResult ( cudaDestroyTextureObjectNative ( texObject ) ) ; } private static native int cudaDestroyTextureObjectNative ( cudaTextureObject texObject ) ; public static int cudaGetTextureObjectResourceDesc ( cudaResourceDesc pResDesc , cudaTextureObject texObject ) { return checkResult ( cudaGetTextureObjectResourceDescNative ( pResDesc , texObject ) ) ; } private static native int cudaGetTextureObjectResourceDescNative ( cudaResourceDesc pResDesc , cudaTextureObject texObject ) ; public static int cudaGetTextureObjectTextureDesc ( cudaTextureDesc pTexDesc , cudaTextureObject texObject ) { return checkResult ( cudaGetTextureObjectTextureDescNative ( pTexDesc , texObject ) ) ; } private static native int cudaGetTextureObjectTextureDescNative ( cudaTextureDesc pTexDesc , cudaTextureObject texObject ) ; public static int cudaGetTextureObjectResourceViewDesc ( cudaResourceViewDesc pResViewDesc , cudaTextureObject texObject ) { return checkResult ( cudaGetTextureObjectResourceViewDescNative ( pResViewDesc , texObject ) ) ; } private static native int cudaGetTextureObjectResourceViewDescNative ( cudaResourceViewDesc pResViewDesc , cudaTextureObject texObject ) ; public static int cudaCreateSurfaceObject ( cudaSurfaceObject pSurfObject , cudaResourceDesc pResDesc ) { return checkResult ( cudaCreateSurfaceObjectNative ( pSurfObject , pResDesc ) ) ; } private static native int cudaCreateSurfaceObjectNative ( cudaSurfaceObject pSurfObject , cudaResourceDesc pResDesc ) ; public static int cudaDestroySurfaceObject ( cudaSurfaceObject surfObject ) { return checkResult ( cudaDestroySurfaceObjectNative ( surfObject ) ) ; } private static native int cudaDestroySurfaceObjectNative ( cudaSurfaceObject surfObject ) ; public static int cudaGetSurfaceObjectResourceDesc ( cudaResourceDesc pResDesc , cudaSurfaceObject surfObject ) { return checkResult ( cudaGetSurfaceObjectResourceDescNative ( pResDesc , surfObject ) ) ; } private static native int cudaGetSurfaceObjectResourceDescNative ( cudaResourceDesc pResDesc , cudaSurfaceObject surfObject ) ; public static int cudaConfigureCall ( dim3 gridDim , dim3 blockDim , long sharedMem , cudaStream_t stream ) { return checkResult ( cudaConfigureCallNative ( gridDim , blockDim , sharedMem , stream ) ) ; } private static native int cudaConfigureCallNative ( dim3 gridDim , dim3 blockDim , long sharedMem , cudaStream_t stream ) ; public static int cudaSetupArgument ( Pointer arg , long size , long offset ) { return checkResult ( cudaSetupArgumentNative ( arg , size , offset ) ) ; } private static native int cudaSetupArgumentNative ( Pointer arg , long size , long offset ) ; public static int cudaFuncGetAttributes ( cudaFuncAttributes attr , String func ) { if ( true ) { throw new UnsupportedOperationException ( <str> ) ; } return checkResult ( cudaFuncGetAttributesNative ( attr , func ) ) ; } private static native int cudaFuncGetAttributesNative ( cudaFuncAttributes attr , String func ) ; public static int cudaLaunch ( String symbol ) { if ( true ) { throw new UnsupportedOperationException ( <str> ) ; } return checkResult ( cudaLaunchNative ( symbol ) ) ; } private static native int cudaLaunchNative ( String symbol ) ; public static int cudaGLSetGLDevice ( int device ) { return checkResult ( cudaGLSetGLDeviceNative ( device ) ) ; } private static native int cudaGLSetGLDeviceNative ( int device ) ; public static int cudaGLGetDevices ( int pCudaDeviceCount [ ] , int pCudaDevices [ ] , int cudaDeviceCount , int cudaGLDeviceList_deviceList ) { return checkResult ( cudaGLGetDevicesNative ( pCudaDeviceCount , pCudaDevices , cudaDeviceCount , cudaGLDeviceList_deviceList ) ) ; } private static native int cudaGLGetDevicesNative ( int pCudaDeviceCount [ ] , int pCudaDevices [ ] , int cudaDeviceCount , int cudaGLDeviceList_deviceList ) ; public static int cudaGraphicsGLRegisterImage ( cudaGraphicsResource resource , int image , int target , int Flags ) { return checkResult ( cudaGraphicsGLRegisterImageNative ( resource , image , target , Flags ) ) ; } private static native int cudaGraphicsGLRegisterImageNative ( cudaGraphicsResource resource , int image , int target , int Flags ) ; public static int cudaGraphicsGLRegisterBuffer ( cudaGraphicsResource resource , int buffer , int Flags ) { return checkResult ( cudaGraphicsGLRegisterBufferNative ( resource , buffer , Flags ) ) ; } private static native int cudaGraphicsGLRegisterBufferNative ( cudaGraphicsResource resource , int buffer , int Flags ) ; public static int cudaGLRegisterBufferObject ( int bufObj ) { if ( true ) { throw new UnsupportedOperationException ( <str> ) ; } return checkResult ( cudaGLRegisterBufferObjectNative ( bufObj ) ) ; } private static native int cudaGLRegisterBufferObjectNative ( int bufObj ) ; public static int cudaGLMapBufferObject ( Pointer devPtr , int bufObj ) { return checkResult ( cudaGLMapBufferObjectNative ( devPtr , bufObj ) ) ; } private static native int cudaGLMapBufferObjectNative ( Pointer devPtr , int bufObj ) ; public static int cudaGLUnmapBufferObject ( int bufObj ) { return checkResult ( cudaGLUnmapBufferObjectNative ( bufObj ) ) ; } private static native int cudaGLUnmapBufferObjectNative ( int bufObj ) ; public static int cudaGLUnregisterBufferObject ( int bufObj ) { return checkResult ( cudaGLUnregisterBufferObjectNative ( bufObj ) ) ; } private static native int cudaGLUnregisterBufferObjectNative ( int bufObj ) ; public static int cudaGLSetBufferObjectMapFlags ( int bufObj , int flags ) { return checkResult ( cudaGLSetBufferObjectMapFlagsNative ( bufObj , flags ) ) ; } private static native int cudaGLSetBufferObjectMapFlagsNative ( int bufObj , int flags ) ; ; public static int cudaGLMapBufferObjectAsync ( Pointer devPtr , int bufObj , cudaStream_t stream ) { return checkResult ( cudaGLMapBufferObjectAsyncNative ( devPtr , bufObj , stream ) ) ; } private static native int cudaGLMapBufferObjectAsyncNative ( Pointer devPtr , int bufObj , cudaStream_t stream ) ; public static int cudaGLUnmapBufferObjectAsync ( int bufObj , cudaStream_t stream ) { return checkResult ( cudaGLUnmapBufferObjectAsyncNative ( bufObj , stream ) ) ; } private static native int cudaGLUnmapBufferObjectAsyncNative ( int bufObj , cudaStream_t stream ) ; public static int cudaDriverGetVersion ( int driverVersion [ ] ) { return checkResult ( cudaDriverGetVersionNative ( driverVersion ) ) ; } private static native int cudaDriverGetVersionNative ( int driverVersion [ ] ) ; public static int cudaRuntimeGetVersion ( int runtimeVersion [ ] ) { return checkResult ( cudaRuntimeGetVersionNative ( runtimeVersion ) ) ; } private static native int cudaRuntimeGetVersionNative ( int runtimeVersion [ ] ) ; public static int cudaPointerGetAttributes ( cudaPointerAttributes attributes , Pointer ptr ) { return checkResult ( cudaPointerGetAttributesNative ( attributes , ptr ) ) ; } private static native int cudaPointerGetAttributesNative ( cudaPointerAttributes attributes , Pointer ptr ) ; public static int cudaDeviceCanAccessPeer ( int canAccessPeer [ ] , int device , int peerDevice ) { return checkResult ( cudaDeviceCanAccessPeerNative ( canAccessPeer , device , peerDevice ) ) ; } private static native int cudaDeviceCanAccessPeerNative ( int canAccessPeer [ ] , int device , int peerDevice ) ; public static int cudaDeviceEnablePeerAccess ( int peerDevice , int flags ) { return checkResult ( cudaDeviceEnablePeerAccessNative ( peerDevice , flags ) ) ; } private static native int cudaDeviceEnablePeerAccessNative ( int peerDevice , int flags ) ; public static int cudaDeviceDisablePeerAccess ( int peerDevice ) { return checkResult ( cudaDeviceDisablePeerAccessNative ( peerDevice ) ) ; } private static native int cudaDeviceDisablePeerAccessNative ( int peerDevice ) ; public static int cudaGraphicsUnregisterResource ( cudaGraphicsResource resource ) { return checkResult ( cudaGraphicsUnregisterResourceNative ( resource ) ) ; } private static native int cudaGraphicsUnregisterResourceNative ( cudaGraphicsResource resource ) ; public static int cudaGraphicsResourceSetMapFlags ( cudaGraphicsResource resource , int flags ) { return checkResult ( cudaGraphicsResourceSetMapFlagsNative ( resource , flags ) ) ; } private static native int cudaGraphicsResourceSetMapFlagsNative ( cudaGraphicsResource resource , int flags ) ; public static int cudaGraphicsMapResources ( int count , cudaGraphicsResource resources [ ] , cudaStream_t stream ) { return checkResult ( cudaGraphicsMapResourcesNative ( count , resources , stream ) ) ; } private static native int cudaGraphicsMapResourcesNative ( int count , cudaGraphicsResource resources [ ] , cudaStream_t stream ) ; public static int cudaGraphicsUnmapResources ( int count , cudaGraphicsResource resources [ ] , cudaStream_t stream ) { return checkResult ( cudaGraphicsUnmapResourcesNative ( count , resources , stream ) ) ; } private static native int cudaGraphicsUnmapResourcesNative ( int count , cudaGraphicsResource resources [ ] , cudaStream_t stream ) ; public static int cudaGraphicsResourceGetMappedPointer ( Pointer devPtr , long size [ ] , cudaGraphicsResource resource ) { return checkResult ( cudaGraphicsResourceGetMappedPointerNative ( devPtr , size , resource ) ) ; } private static native int cudaGraphicsResourceGetMappedPointerNative ( Pointer devPtr , long size [ ] , cudaGraphicsResource resource ) ; public static int cudaGraphicsSubResourceGetMappedArray ( cudaArray arrayPtr , cudaGraphicsResource resource , int arrayIndex , int mipLevel ) { return checkResult ( cudaGraphicsSubResourceGetMappedArrayNative ( arrayPtr , resource , arrayIndex , mipLevel ) ) ; } private static native int cudaGraphicsSubResourceGetMappedArrayNative ( cudaArray arrayPtr , cudaGraphicsResource resource , int arrayIndex , int mipLevel ) ; public static int cudaGraphicsResourceGetMappedMipmappedArray ( cudaMipmappedArray mipmappedArray , cudaGraphicsResource resource ) { return checkResult ( cudaGraphicsResourceGetMappedMipmappedArrayNative ( mipmappedArray , resource ) ) ; } private static native int cudaGraphicsResourceGetMappedMipmappedArrayNative ( cudaMipmappedArray mipmappedArray , cudaGraphicsResource resource ) ; public static int cudaProfilerInitialize ( String configFile , String outputFile , int outputMode ) { return checkResult ( cudaProfilerInitializeNative ( configFile , outputFile , outputMode ) ) ; } private static native int cudaProfilerInitializeNative ( String configFile , String outputFile , int outputMode ) ; public static int cudaProfilerStart ( ) { return checkResult ( cudaProfilerStartNative ( ) ) ; } private static native int cudaProfilerStartNative ( ) ; public static int cudaProfilerStop ( ) { return checkResult ( cudaProfilerStopNative ( ) ) ; } private static native int cudaProfilerStopNative ( ) ; } 
