package org . gradle . launcher . daemon . context ; import org . gradle . api . internal . specs . ExplainingSpec ; import static org . gradle . util . GFileUtils . canonicalise ; public class DaemonCompatibilitySpec implements ExplainingSpec < DaemonContext > { private final DaemonContext desiredContext ; public DaemonCompatibilitySpec ( DaemonContext desiredContext ) { this . desiredContext = desiredContext ; } public boolean isSatisfiedBy ( DaemonContext potentialContext ) { return whyUnsatisfied ( potentialContext ) = = null ; } public String whyUnsatisfied ( DaemonContext context ) { if ( ! javaHomeMatches ( context ) ) { return <str> + description ( context ) ; } else if ( ! daemonOptsMatch ( context ) ) { return <str> + description ( context ) ; } return null ; } private String description ( DaemonContext context ) { return <str> + this + <str> + <str> + context + <str> ; } private boolean daemonOptsMatch ( DaemonContext potentialContext ) { return potentialContext . getDaemonOpts ( ) . containsAll ( desiredContext . getDaemonOpts ( ) ) & & potentialContext . getDaemonOpts ( ) . size ( ) = = desiredContext . getDaemonOpts ( ) . size ( ) ; } private boolean javaHomeMatches ( DaemonContext potentialContext ) { return canonicalise ( potentialContext . getJavaHome ( ) ) . equals ( canonicalise ( desiredContext . getJavaHome ( ) ) ) ; } @Override public String toString ( ) { return desiredContext . toString ( ) ; } } 
