package org . gradle . nativeplatform . internal . resolve ; import org . gradle . api . file . FileCollection ; import org . gradle . api . internal . file . collections . SimpleFileCollection ; import org . gradle . nativeplatform . NativeDependencySet ; import org . gradle . nativeplatform . NativeLibraryRequirement ; public class ApiRequirementNativeDependencyResolver implements NativeDependencyResolver { private final NativeDependencyResolver delegate ; public ApiRequirementNativeDependencyResolver ( NativeDependencyResolver delegate ) { this . delegate = delegate ; } public void resolve ( NativeBinaryResolveResult nativeBinaryResolveResult ) { for ( NativeBinaryRequirementResolveResult resolution : nativeBinaryResolveResult . getAllResolutions ( ) ) { String linkage = getLinkage ( resolution ) ; if ( <str> . equals ( linkage ) ) { resolution . setRequirement ( new ApiAdaptedNativeLibraryRequirement ( resolution . getRequirement ( ) ) ) ; } } delegate . resolve ( nativeBinaryResolveResult ) ; for ( NativeBinaryRequirementResolveResult resolution : nativeBinaryResolveResult . getAllResolutions ( ) ) { if ( resolution . getRequirement ( ) instanceof ApiAdaptedNativeLibraryRequirement ) { ApiAdaptedNativeLibraryRequirement adaptedRequirement = ( ApiAdaptedNativeLibraryRequirement ) resolution . getRequirement ( ) ; resolution . setRequirement ( adaptedRequirement . getOriginal ( ) ) ; resolution . setNativeDependencySet ( new ApiNativeDependencySet ( resolution . getNativeDependencySet ( ) ) ) ; } } } private String getLinkage ( NativeBinaryRequirementResolveResult resolution ) { if ( resolution . getRequirement ( ) = = null ) { return null ; } return resolution . getRequirement ( ) . getLinkage ( ) ; } private static class ApiAdaptedNativeLibraryRequirement implements NativeLibraryRequirement { private final NativeLibraryRequirement original ; public ApiAdaptedNativeLibraryRequirement ( NativeLibraryRequirement original ) { this . original = original ; } public NativeLibraryRequirement getOriginal ( ) { return original ; } public String getProjectPath ( ) { return original . getProjectPath ( ) ; } public String getLibraryName ( ) { return original . getLibraryName ( ) ; } public String getLinkage ( ) { return null ; } } private static class ApiNativeDependencySet implements NativeDependencySet { private final NativeDependencySet delegate ; public ApiNativeDependencySet ( NativeDependencySet delegate ) { this . delegate = delegate ; } public FileCollection getIncludeRoots ( ) { return delegate . getIncludeRoots ( ) ; } public FileCollection getLinkFiles ( ) { return new SimpleFileCollection ( ) ; } public FileCollection getRuntimeFiles ( ) { return new SimpleFileCollection ( ) ; } } } 
