package org . elasticsearch . action ; import org . elasticsearch . ElasticsearchException ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . rest . RestStatus ; import java . io . IOException ; import java . util . Objects ; public class RoutingMissingException extends ElasticsearchException { private final String type ; private final String id ; public RoutingMissingException ( String index , String type , String id ) { super ( <str> + index + <str> + type + <str> + id + <str> ) ; Objects . requireNonNull ( index , <str> ) ; Objects . requireNonNull ( type , <str> ) ; Objects . requireNonNull ( id , <str> ) ; setIndex ( index ) ; this . type = type ; this . id = id ; } public String getType ( ) { return type ; } public String getId ( ) { return id ; } @Override public RestStatus status ( ) { return RestStatus . BAD_REQUEST ; } public RoutingMissingException ( StreamInput in ) throws IOException { super ( in ) ; type = in . readString ( ) ; id = in . readString ( ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeString ( type ) ; out . writeString ( id ) ; } } 
