package io . netty . microbench . http2 . hpack ; import java . util . ArrayList ; import java . util . List ; import java . util . Random ; class Header { private static final String ALPHABET = <str> ; final byte [ ] name ; final byte [ ] value ; Header ( byte [ ] name , byte [ ] value ) { this . name = name ; this . value = value ; } static List < Header > createHeaders ( int numHeaders , int nameLength , int valueLength , boolean limitToAscii ) { List < Header > headers = new ArrayList < Header > ( numHeaders ) ; for ( int i = <int> ; i < numHeaders ; + + i ) { byte [ ] name = randomBytes ( new byte [ nameLength ] , limitToAscii ) ; byte [ ] value = randomBytes ( new byte [ valueLength ] , limitToAscii ) ; headers . add ( new Header ( name , value ) ) ; } return headers ; } private static byte [ ] randomBytes ( byte [ ] bytes , boolean limitToAscii ) { Random r = new Random ( ) ; if ( limitToAscii ) { for ( int index = <int> ; index < bytes . length ; + + index ) { int charIndex = r . nextInt ( ALPHABET . length ( ) ) ; bytes [ index ] = ( byte ) ALPHABET . charAt ( charIndex ) ; } } else { r . nextBytes ( bytes ) ; } return bytes ; } } 
