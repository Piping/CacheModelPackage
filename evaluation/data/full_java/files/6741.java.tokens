package org . elasticsearch . index . shard ; import org . elasticsearch . ElasticsearchException ; import org . elasticsearch . ResourceNotFoundException ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . rest . RestStatus ; import java . io . IOException ; public class IllegalIndexShardStateException extends ElasticsearchException { private final IndexShardState currentState ; public IllegalIndexShardStateException ( ShardId shardId , IndexShardState currentState , String msg ) { this ( shardId , currentState , msg , null ) ; } public IllegalIndexShardStateException ( ShardId shardId , IndexShardState currentState , String msg , Throwable ex ) { super ( <str> + currentState + <str> + msg , ex ) ; setShard ( shardId ) ; this . currentState = currentState ; } public IndexShardState currentState ( ) { return currentState ; } public IllegalIndexShardStateException ( StreamInput in ) throws IOException { super ( in ) ; currentState = IndexShardState . fromId ( in . readByte ( ) ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeByte ( currentState . id ( ) ) ; } @Override public RestStatus status ( ) { return RestStatus . NOT_FOUND ; } } 
