package org . elasticsearch . index . analysis ; import org . apache . lucene . analysis . Tokenizer ; import org . apache . lucene . analysis . pattern . PatternTokenizer ; import org . elasticsearch . common . regex . Regex ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . env . Environment ; import org . elasticsearch . index . IndexSettings ; import java . util . regex . Pattern ; public class PatternTokenizerFactory extends AbstractTokenizerFactory { private final Pattern pattern ; private final int group ; public PatternTokenizerFactory ( IndexSettings indexSettings , Environment environment , String name , Settings settings ) { super ( indexSettings , name , settings ) ; String sPattern = settings . get ( <str> , <str> ) ; if ( sPattern = = null ) { throw new IllegalArgumentException ( <str> + name + <str> ) ; } this . pattern = Regex . compile ( sPattern , settings . get ( <str> ) ) ; this . group = settings . getAsInt ( <str> , - <int> ) ; } @Override public Tokenizer create ( ) { return new PatternTokenizer ( pattern , group ) ; } } 
