package org . eclipse . debug . examples . ui . pda . adapters ; import org . eclipse . core . runtime . IAdapterFactory ; import org . eclipse . debug . examples . core . pda . model . PDADebugTarget ; import org . eclipse . debug . examples . core . pda . model . PDAStackFrame ; import org . eclipse . debug . internal . ui . viewers . model . provisional . IElementContentProvider ; import org . eclipse . debug . internal . ui . viewers . model . provisional . IModelProxyFactory ; import org . eclipse . debug . internal . ui . viewers . model . provisional . IViewActionProvider ; public class AdapterFactory implements IAdapterFactory { private static IElementContentProvider fgTargetAdapter = new PDADebugTargetContentProvider ( ) ; private static IModelProxyFactory fgFactory = new ModelProxyFactory ( ) ; private static IViewActionProvider fgViewActionProvider = new PDAViewActionProvider ( ) ; @SuppressWarnings ( <str> ) @Override public < T > T getAdapter ( Object adaptableObject , Class < T > adapterType ) { if ( IElementContentProvider . class . equals ( adapterType ) ) { if ( adaptableObject instanceof PDADebugTarget ) { return ( T ) fgTargetAdapter ; } } if ( IModelProxyFactory . class . equals ( adapterType ) ) { if ( adaptableObject instanceof PDADebugTarget ) { return ( T ) fgFactory ; } } if ( IViewActionProvider . class . equals ( adapterType ) ) { if ( adaptableObject instanceof PDAStackFrame ) { return ( T ) fgViewActionProvider ; } } return null ; } @Override public Class < ? > [ ] getAdapterList ( ) { return new Class [ ] { IElementContentProvider . class , IModelProxyFactory . class , IViewActionProvider . class } ; } } 
