package org . eclipse . debug . internal . ui ; import java . util . HashSet ; import java . util . Set ; import org . eclipse . core . runtime . CoreException ; import org . eclipse . core . runtime . IConfigurationElement ; import org . eclipse . debug . internal . core . IConfigurationElementConstants ; import org . eclipse . debug . ui . ILaunchConfigurationTab ; public final class LaunchConfigurationTabExtension { IConfigurationElement fElement = null ; private Set < String > fDelegates = null ; public LaunchConfigurationTabExtension ( IConfigurationElement element ) { fElement = element ; } public String getIdentifier ( ) { return fElement . getAttribute ( IConfigurationElementConstants . ID ) ; } public String getName ( ) { return fElement . getAttribute ( IConfigurationElementConstants . NAME ) ; } public ILaunchConfigurationTab getTab ( ) { try { Object object = fElement . createExecutableExtension ( IConfigurationElementConstants . CLASS ) ; if ( object instanceof ILaunchConfigurationTab ) { return ( ILaunchConfigurationTab ) object ; } } catch ( CoreException e ) { DebugUIPlugin . log ( e ) ; } return null ; } public String getTabGroupId ( ) { return fElement . getAttribute ( IConfigurationElementConstants . GROUP ) ; } public String getRelativeTabId ( ) { IConfigurationElement [ ] elems = fElement . getChildren ( IConfigurationElementConstants . PLACEMENT ) ; if ( elems . length = = <int> ) { return elems [ <int> ] . getAttribute ( IConfigurationElementConstants . AFTER ) ; } return null ; } public String getPluginIdentifier ( ) { return fElement . getContributor ( ) . getName ( ) ; } public Set < String > getDelegateSet ( ) { if ( fDelegates = = null ) { fDelegates = new HashSet < String > ( ) ; IConfigurationElement [ ] children = fElement . getChildren ( IConfigurationElementConstants . ASSOCIATED_DELEGATE ) ; String id = null ; for ( int i = <int> ; i < children . length ; i + + ) { id = children [ i ] . getAttribute ( IConfigurationElementConstants . DELEGATE ) ; if ( id ! = null ) { fDelegates . add ( id ) ; } } } return fDelegates ; } } 
