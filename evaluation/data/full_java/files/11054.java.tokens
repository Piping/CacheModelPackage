package org . gradle . api . plugins . quality ; public enum TargetJdk { VERSION_1_3 , VERSION_1_4 , VERSION_1_5 , VERSION_1_6 , VERSION_1_7 , VERSION_JSP ; public static TargetJdk toVersion ( Object value ) throws IllegalArgumentException { if ( value = = null ) { return null ; } if ( value instanceof TargetJdk ) { return ( TargetJdk ) value ; } String name = value . toString ( ) ; if ( name . equalsIgnoreCase ( <str> ) ) { return VERSION_1_7 ; } else if ( name . equalsIgnoreCase ( <str> ) ) { return VERSION_1_6 ; } else if ( name . equalsIgnoreCase ( <str> ) ) { return VERSION_1_5 ; } else if ( name . equalsIgnoreCase ( <str> ) ) { return VERSION_1_4 ; } else if ( name . equalsIgnoreCase ( <str> ) ) { return VERSION_1_3 ; } else if ( name . equalsIgnoreCase ( <str> ) ) { return VERSION_JSP ; } else { throw new IllegalArgumentException ( String . format ( <str> , name ) ) ; } } @Override public String toString ( ) { return getName ( ) ; } public String getName ( ) { return name ( ) . substring ( <str> . length ( ) ) . replace ( <str> , <str> ) . toLowerCase ( ) ; } } 
