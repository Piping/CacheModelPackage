package com . badlogic . gdx . utils ; public class PauseableThread extends Thread { final Runnable runnable ; boolean paused = false ; boolean exit = false ; public PauseableThread ( Runnable runnable ) { this . runnable = runnable ; } public void run ( ) { while ( true ) { synchronized ( this ) { try { while ( paused ) wait ( ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } } if ( exit ) return ; runnable . run ( ) ; } } public void onPause ( ) { paused = true ; } public void onResume ( ) { synchronized ( this ) { paused = false ; this . notifyAll ( ) ; } } public boolean isPaused ( ) { return paused ; } public void stopThread ( ) { exit = true ; if ( paused ) onResume ( ) ; } } 
