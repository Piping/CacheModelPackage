package org . elasticsearch . common . network ; import org . elasticsearch . common . SuppressForbidden ; import java . net . Inet6Address ; import java . net . InetAddress ; import java . net . InetSocketAddress ; import java . util . Objects ; public final class NetworkAddress { private NetworkAddress ( ) { } public static String format ( InetAddress address ) { return format ( address , - <int> , true ) ; } public static String format ( InetSocketAddress address ) { return format ( address . getAddress ( ) , address . getPort ( ) , true ) ; } public static String formatAddress ( InetAddress address ) { return format ( address , - <int> , false ) ; } public static String formatAddress ( InetSocketAddress address ) { return format ( address . getAddress ( ) , address . getPort ( ) , false ) ; } @SuppressForbidden ( reason = <str> ) static String format ( InetAddress address , int port , boolean includeHost ) { Objects . requireNonNull ( address ) ; StringBuilder builder = new StringBuilder ( ) ; if ( includeHost ) { String toString = address . toString ( ) ; int separator = toString . indexOf ( <str> ) ; if ( separator > <int> ) { builder . append ( toString , <int> , separator + <int> ) ; } } if ( port ! = - <int> & & address instanceof Inet6Address ) { builder . append ( InetAddresses . toUriString ( address ) ) ; } else { builder . append ( InetAddresses . toAddrString ( address ) ) ; } if ( port ! = - <int> ) { builder . append ( <str> ) ; builder . append ( port ) ; } return builder . toString ( ) ; } } 
