package org . eclipse . debug . internal . ui . model . elements ; import org . eclipse . core . runtime . CoreException ; import org . eclipse . debug . core . model . IBreakpoint ; import org . eclipse . debug . internal . core . IInternalDebugCoreConstants ; import org . eclipse . debug . internal . ui . viewers . model . provisional . IPresentationContext ; import org . eclipse . jface . resource . ImageDescriptor ; import org . eclipse . jface . viewers . TreePath ; public class BreakpointLabelProvider extends DebugElementLabelProvider { @Override protected String getLabel ( TreePath elementPath , IPresentationContext presentationContext , String columnId , int columnIndex ) throws CoreException { if ( columnIndex = = <int> ) return super . getLabel ( elementPath , presentationContext , columnId , columnIndex ) ; else return IInternalDebugCoreConstants . EMPTY_STRING ; } @Override protected ImageDescriptor getImageDescriptor ( TreePath elementPath , IPresentationContext presentationContext , String columnId , int columnIndex ) throws CoreException { if ( columnIndex = = <int> ) return super . getImageDescriptor ( elementPath , presentationContext , columnId , columnIndex ) ; else return null ; } @Override public boolean getChecked ( TreePath path , IPresentationContext presentationContext ) throws CoreException { Object lastSegment = path . getLastSegment ( ) ; if ( lastSegment instanceof IBreakpoint ) { return ( ( IBreakpoint ) lastSegment ) . isEnabled ( ) ; } return false ; } } 
