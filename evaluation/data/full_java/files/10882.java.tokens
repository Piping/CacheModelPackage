package org . gradle . internal . reflect ; import com . google . common . base . Equivalence ; import org . apache . commons . lang . builder . EqualsBuilder ; import org . apache . commons . lang . builder . HashCodeBuilder ; import java . lang . reflect . Method ; public class MethodSignatureEquivalence extends Equivalence < Method > { @Override protected boolean doEquivalent ( Method a , Method b ) { boolean equals = new EqualsBuilder ( ) . append ( a . getName ( ) , b . getName ( ) ) . append ( a . getGenericParameterTypes ( ) , b . getGenericParameterTypes ( ) ) . isEquals ( ) ; if ( equals ) { equals = a . getReturnType ( ) . equals ( b . getReturnType ( ) ) | | a . getReturnType ( ) . isAssignableFrom ( b . getReturnType ( ) ) | | b . getReturnType ( ) . isAssignableFrom ( a . getReturnType ( ) ) ; } return equals ; } @Override protected int doHash ( Method method ) { return new HashCodeBuilder ( ) . append ( method . getName ( ) ) . append ( method . getGenericParameterTypes ( ) ) . toHashCode ( ) ; } } 
