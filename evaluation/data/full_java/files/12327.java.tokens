package org . gradle . tooling . provider . model . internal ; import org . gradle . api . Project ; import org . gradle . tooling . provider . model . ToolingModelBuilder ; import org . gradle . tooling . provider . model . ToolingModelBuilderRegistry ; import org . gradle . tooling . provider . model . UnknownModelException ; import java . util . ArrayList ; import java . util . List ; public class DefaultToolingModelBuilderRegistry implements ToolingModelBuilderRegistry { private final List < ToolingModelBuilder > builders = new ArrayList < ToolingModelBuilder > ( ) ; public DefaultToolingModelBuilderRegistry ( ) { register ( new VoidToolingModelBuilder ( ) ) ; } public void register ( ToolingModelBuilder builder ) { builders . add ( builder ) ; } public ToolingModelBuilder getBuilder ( String modelName ) throws UnsupportedOperationException { ToolingModelBuilder match = null ; for ( ToolingModelBuilder builder : builders ) { if ( builder . canBuild ( modelName ) ) { if ( match ! = null ) { throw new UnsupportedOperationException ( String . format ( <str> , modelName ) ) ; } match = builder ; } } if ( match ! = null ) { return match ; } throw new UnknownModelException ( String . format ( <str> , modelName ) ) ; } private static class VoidToolingModelBuilder implements ToolingModelBuilder { public boolean canBuild ( String modelName ) { return modelName . equals ( Void . class . getName ( ) ) ; } public Object buildAll ( String modelName , Project project ) { return null ; } } } 
