package org . elasticsearch . test . rest . test ; import org . elasticsearch . Version ; import org . elasticsearch . common . xcontent . XContentParser ; import org . elasticsearch . common . xcontent . yaml . YamlXContent ; import org . elasticsearch . test . ESTestCase ; import org . elasticsearch . test . rest . parser . RestTestParseException ; import org . elasticsearch . test . rest . parser . RestTestSuiteParseContext ; import org . elasticsearch . test . rest . parser . RestTestSuiteParser ; import org . elasticsearch . test . rest . section . DoSection ; import org . elasticsearch . test . rest . section . IsTrueAssertion ; import org . elasticsearch . test . rest . section . MatchAssertion ; import org . elasticsearch . test . rest . section . RestTestSuite ; import org . junit . After ; import java . util . Map ; import static org . hamcrest . Matchers . containsString ; import static org . hamcrest . Matchers . equalTo ; import static org . hamcrest . Matchers . instanceOf ; import static org . hamcrest . Matchers . notNullValue ; import static org . hamcrest . Matchers . nullValue ; public class RestTestParserTests extends ESTestCase { private XContentParser parser ; @Override @After public void tearDown ( ) throws Exception { super . tearDown ( ) ; assertThat ( parser . currentToken ( ) , nullValue ( ) ) ; assertThat ( parser . nextToken ( ) , nullValue ( ) ) ; assertThat ( parser . nextToken ( ) , nullValue ( ) ) ; parser . close ( ) ; } public void testParseTestSetupAndSections ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ) ; RestTestSuiteParser testParser = new RestTestSuiteParser ( ) ; RestTestSuite restTestSuite = testParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; assertThat ( restTestSuite , notNullValue ( ) ) ; assertThat ( restTestSuite . getName ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getSetupSection ( ) , notNullValue ( ) ) ; assertThat ( restTestSuite . getSetupSection ( ) . getSkipSection ( ) . isEmpty ( ) , equalTo ( true ) ) ; assertThat ( restTestSuite . getSetupSection ( ) . getDoSections ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restTestSuite . getSetupSection ( ) . getDoSections ( ) . get ( <int> ) . getApiCallSection ( ) . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getSetupSection ( ) . getDoSections ( ) . get ( <int> ) . getApiCallSection ( ) . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restTestSuite . getSetupSection ( ) . getDoSections ( ) . get ( <int> ) . getApiCallSection ( ) . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getName ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getSkipSection ( ) . isEmpty ( ) , equalTo ( true ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( DoSection . class ) ) ; DoSection doSection = ( DoSection ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( doSection . getApiCallSection ( ) . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( MatchAssertion . class ) ) ; MatchAssertion matchAssertion = ( MatchAssertion ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( matchAssertion . getField ( ) , equalTo ( <str> ) ) ; assertThat ( matchAssertion . getExpectedValue ( ) . toString ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( MatchAssertion . class ) ) ; matchAssertion = ( MatchAssertion ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( matchAssertion . getField ( ) , equalTo ( <str> ) ) ; assertThat ( matchAssertion . getExpectedValue ( ) . toString ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getName ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getSkipSection ( ) . isEmpty ( ) , equalTo ( false ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getSkipSection ( ) . getReason ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getSkipSection ( ) . getLowerVersion ( ) , equalTo ( Version . V_0_90_9 ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getSkipSection ( ) . getUpperVersion ( ) , equalTo ( Version . CURRENT ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( DoSection . class ) ) ; doSection = ( DoSection ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( doSection . getApiCallSection ( ) . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( MatchAssertion . class ) ) ; matchAssertion = ( MatchAssertion ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( matchAssertion . getField ( ) , equalTo ( <str> ) ) ; assertThat ( matchAssertion . getExpectedValue ( ) . toString ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( MatchAssertion . class ) ) ; matchAssertion = ( MatchAssertion ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( matchAssertion . getField ( ) , equalTo ( <str> ) ) ; assertThat ( matchAssertion . getExpectedValue ( ) . toString ( ) , equalTo ( <str> ) ) ; } public void testParseTestSingleTestSection ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ) ; RestTestSuiteParser testParser = new RestTestSuiteParser ( ) ; RestTestSuite restTestSuite = testParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; assertThat ( restTestSuite , notNullValue ( ) ) ; assertThat ( restTestSuite . getName ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getSetupSection ( ) . isEmpty ( ) , equalTo ( true ) ) ; assertThat ( restTestSuite . getTestSections ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getName ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getSkipSection ( ) . isEmpty ( ) , equalTo ( true ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( DoSection . class ) ) ; DoSection doSection = ( DoSection ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( doSection . getCatch ( ) , nullValue ( ) ) ; assertThat ( doSection . getApiCallSection ( ) . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( doSection . getApiCallSection ( ) . hasBody ( ) , equalTo ( true ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( IsTrueAssertion . class ) ) ; IsTrueAssertion trueAssertion = ( IsTrueAssertion ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( trueAssertion . getField ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( MatchAssertion . class ) ) ; MatchAssertion matchAssertion = ( MatchAssertion ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( matchAssertion . getField ( ) , equalTo ( <str> ) ) ; assertThat ( matchAssertion . getExpectedValue ( ) . toString ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( MatchAssertion . class ) ) ; matchAssertion = ( MatchAssertion ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( matchAssertion . getField ( ) , equalTo ( <str> ) ) ; assertThat ( matchAssertion . getExpectedValue ( ) . toString ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( MatchAssertion . class ) ) ; matchAssertion = ( MatchAssertion ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( matchAssertion . getField ( ) , equalTo ( <str> ) ) ; assertThat ( matchAssertion . getExpectedValue ( ) . toString ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( MatchAssertion . class ) ) ; matchAssertion = ( MatchAssertion ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( matchAssertion . getField ( ) , equalTo ( <str> ) ) ; assertThat ( matchAssertion . getExpectedValue ( ) . toString ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( DoSection . class ) ) ; doSection = ( DoSection ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( doSection . getCatch ( ) , nullValue ( ) ) ; assertThat ( doSection . getApiCallSection ( ) . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( doSection . getApiCallSection ( ) . hasBody ( ) , equalTo ( false ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( MatchAssertion . class ) ) ; matchAssertion = ( MatchAssertion ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( matchAssertion . getField ( ) , equalTo ( <str> ) ) ; assertThat ( matchAssertion . getExpectedValue ( ) . toString ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( MatchAssertion . class ) ) ; matchAssertion = ( MatchAssertion ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( matchAssertion . getField ( ) , equalTo ( <str> ) ) ; assertThat ( matchAssertion . getExpectedValue ( ) . toString ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( MatchAssertion . class ) ) ; matchAssertion = ( MatchAssertion ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( matchAssertion . getField ( ) , equalTo ( <str> ) ) ; assertThat ( matchAssertion . getExpectedValue ( ) . toString ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( MatchAssertion . class ) ) ; matchAssertion = ( MatchAssertion ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( matchAssertion . getField ( ) , equalTo ( <str> ) ) ; assertThat ( matchAssertion . getExpectedValue ( ) . toString ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( MatchAssertion . class ) ) ; matchAssertion = ( MatchAssertion ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( matchAssertion . getField ( ) , equalTo ( <str> ) ) ; assertThat ( matchAssertion . getExpectedValue ( ) , instanceOf ( Map . class ) ) ; assertThat ( ( ( Map ) matchAssertion . getExpectedValue ( ) ) . get ( <str> ) . toString ( ) , equalTo ( <str> ) ) ; } public void testParseTestMultipleTestSections ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ) ; RestTestSuiteParser testParser = new RestTestSuiteParser ( ) ; RestTestSuite restTestSuite = testParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; assertThat ( restTestSuite , notNullValue ( ) ) ; assertThat ( restTestSuite . getName ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getSetupSection ( ) . isEmpty ( ) , equalTo ( true ) ) ; assertThat ( restTestSuite . getTestSections ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getName ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getSkipSection ( ) . isEmpty ( ) , equalTo ( true ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( DoSection . class ) ) ; DoSection doSection = ( DoSection ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( doSection . getCatch ( ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( doSection . getApiCallSection ( ) . hasBody ( ) , equalTo ( true ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( DoSection . class ) ) ; doSection = ( DoSection ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( doSection . getCatch ( ) , nullValue ( ) ) ; assertThat ( doSection . getApiCallSection ( ) . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( doSection . getApiCallSection ( ) . hasBody ( ) , equalTo ( true ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getName ( ) , equalTo ( <str> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getSkipSection ( ) . isEmpty ( ) , equalTo ( true ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( DoSection . class ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( DoSection . class ) ) ; doSection = ( DoSection ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( doSection . getCatch ( ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( doSection . getApiCallSection ( ) . hasBody ( ) , equalTo ( true ) ) ; assertThat ( restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) , instanceOf ( DoSection . class ) ) ; doSection = ( DoSection ) restTestSuite . getTestSections ( ) . get ( <int> ) . getExecutableSections ( ) . get ( <int> ) ; assertThat ( doSection . getCatch ( ) , nullValue ( ) ) ; assertThat ( doSection . getApiCallSection ( ) . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( doSection . getApiCallSection ( ) . hasBody ( ) , equalTo ( true ) ) ; } public void testParseTestDuplicateTestSections ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ) ; RestTestSuiteParser testParser = new RestTestSuiteParser ( ) ; try { testParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; fail ( <str> ) ; } catch ( RestTestParseException e ) { assertThat ( e . getMessage ( ) , containsString ( <str> ) ) ; } } } 
