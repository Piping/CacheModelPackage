package org . elasticsearch . search . fetch . script ; import org . elasticsearch . common . xcontent . XContentParser ; import org . elasticsearch . script . Script ; import org . elasticsearch . script . Script . ScriptField ; import org . elasticsearch . script . ScriptContext ; import org . elasticsearch . script . ScriptParameterParser ; import org . elasticsearch . script . ScriptParameterParser . ScriptParameterValue ; import org . elasticsearch . script . SearchScript ; import org . elasticsearch . search . SearchParseElement ; import org . elasticsearch . search . SearchParseException ; import org . elasticsearch . search . internal . SearchContext ; import java . util . HashMap ; import java . util . Map ; public class ScriptFieldsParseElement implements SearchParseElement { @Override public void parse ( XContentParser parser , SearchContext context ) throws Exception { XContentParser . Token token ; String currentFieldName = null ; while ( ( token = parser . nextToken ( ) ) ! = XContentParser . Token . END_OBJECT ) { if ( token = = XContentParser . Token . FIELD_NAME ) { currentFieldName = parser . currentName ( ) ; } else if ( token = = XContentParser . Token . START_OBJECT ) { String fieldName = currentFieldName ; ScriptParameterParser scriptParameterParser = new ScriptParameterParser ( ) ; Script script = null ; Map < String , Object > params = null ; boolean ignoreException = false ; while ( ( token = parser . nextToken ( ) ) ! = XContentParser . Token . END_OBJECT ) { if ( token = = XContentParser . Token . FIELD_NAME ) { currentFieldName = parser . currentName ( ) ; } else if ( token = = XContentParser . Token . START_OBJECT ) { if ( context . parseFieldMatcher ( ) . match ( currentFieldName , ScriptField . SCRIPT ) ) { script = Script . parse ( parser , context . parseFieldMatcher ( ) ) ; } else if ( <str> . equals ( currentFieldName ) ) { params = parser . map ( ) ; } } else if ( token . isValue ( ) ) { if ( <str> . equals ( currentFieldName ) ) { ignoreException = parser . booleanValue ( ) ; } else { scriptParameterParser . token ( currentFieldName , token , parser , context . parseFieldMatcher ( ) ) ; } } } if ( script = = null ) { ScriptParameterValue scriptValue = scriptParameterParser . getDefaultScriptParameterValue ( ) ; if ( scriptValue ! = null ) { if ( params = = null ) { params = new HashMap < > ( ) ; } script = new Script ( scriptValue . script ( ) , scriptValue . scriptType ( ) , scriptParameterParser . lang ( ) , params ) ; } } else if ( params ! = null ) { throw new SearchParseException ( context , <str> , parser . getTokenLocation ( ) ) ; } if ( script = = null ) { throw new SearchParseException ( context , <str> , parser . getTokenLocation ( ) ) ; } SearchScript searchScript = context . scriptService ( ) . search ( context . lookup ( ) , script , ScriptContext . Standard . SEARCH ) ; context . scriptFields ( ) . add ( new ScriptFieldsContext . ScriptField ( fieldName , searchScript , ignoreException ) ) ; } } } } 
