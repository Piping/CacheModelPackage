package org . elasticsearch . search . sort ; import org . elasticsearch . common . geo . GeoPoint ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . common . xcontent . XContentBuilder ; import org . elasticsearch . common . xcontent . XContentHelper ; import org . elasticsearch . common . xcontent . XContentParser ; import org . elasticsearch . index . IndexService ; import org . elasticsearch . test . ESSingleNodeTestCase ; import org . elasticsearch . test . TestSearchContext ; import static org . elasticsearch . common . xcontent . XContentFactory . jsonBuilder ; public class SortParserTests extends ESSingleNodeTestCase { public void testGeoDistanceSortParserManyPointsNoException ( ) throws Exception { XContentBuilder mapping = jsonBuilder ( ) ; mapping . startObject ( ) . startObject ( <str> ) . startObject ( <str> ) . startObject ( <str> ) . field ( <str> , <str> ) . endObject ( ) . endObject ( ) . endObject ( ) . endObject ( ) ; IndexService indexService = createIndex ( <str> , Settings . settingsBuilder ( ) . build ( ) , <str> , mapping ) ; TestSearchContext context = ( TestSearchContext ) createSearchContext ( indexService ) ; context . setTypes ( <str> ) ; XContentBuilder sortBuilder = jsonBuilder ( ) ; sortBuilder . startObject ( ) ; sortBuilder . startArray ( <str> ) ; sortBuilder . startArray ( ) . value ( <float> ) . value ( <int> ) . endArray ( ) . startArray ( ) . value ( <int> ) . value ( <int> ) . endArray ( ) ; sortBuilder . endArray ( ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . endObject ( ) ; XContentParser parser = XContentHelper . createParser ( sortBuilder . bytes ( ) ) ; parser . nextToken ( ) ; GeoDistanceSortParser geoParser = new GeoDistanceSortParser ( ) ; geoParser . parse ( parser , context ) ; sortBuilder = jsonBuilder ( ) ; sortBuilder . startObject ( ) ; sortBuilder . startArray ( <str> ) ; sortBuilder . value ( new GeoPoint ( <float> , <int> ) ) . value ( new GeoPoint ( <float> , <int> ) ) ; sortBuilder . endArray ( ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . endObject ( ) ; parse ( context , sortBuilder ) ; sortBuilder = jsonBuilder ( ) ; sortBuilder . startObject ( ) ; sortBuilder . startArray ( <str> ) ; sortBuilder . value ( <str> ) . value ( <str> ) ; sortBuilder . endArray ( ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . endObject ( ) ; parse ( context , sortBuilder ) ; sortBuilder = jsonBuilder ( ) ; sortBuilder . startObject ( ) ; sortBuilder . startArray ( <str> ) ; sortBuilder . value ( <str> ) . value ( <str> ) ; sortBuilder . endArray ( ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . endObject ( ) ; parse ( context , sortBuilder ) ; sortBuilder = jsonBuilder ( ) ; sortBuilder . startObject ( ) ; sortBuilder . startArray ( <str> ) ; sortBuilder . value ( <float> ) . value ( <int> ) ; sortBuilder . endArray ( ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . endObject ( ) ; parse ( context , sortBuilder ) ; sortBuilder = jsonBuilder ( ) ; sortBuilder . startObject ( ) ; sortBuilder . field ( <str> , new GeoPoint ( <int> , <int> ) ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . endObject ( ) ; parse ( context , sortBuilder ) ; sortBuilder = jsonBuilder ( ) ; sortBuilder . startObject ( ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . endObject ( ) ; parse ( context , sortBuilder ) ; sortBuilder = jsonBuilder ( ) ; sortBuilder . startObject ( ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . endObject ( ) ; parse ( context , sortBuilder ) ; sortBuilder = jsonBuilder ( ) ; sortBuilder . startObject ( ) ; sortBuilder . startArray ( <str> ) ; sortBuilder . value ( new GeoPoint ( <int> , <int> ) ) . value ( <str> ) . startArray ( ) . value ( <int> ) . value ( <int> ) . endArray ( ) . value ( <str> ) ; sortBuilder . endArray ( ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . field ( <str> , <str> ) ; sortBuilder . endObject ( ) ; parse ( context , sortBuilder ) ; } protected void parse ( TestSearchContext context , XContentBuilder sortBuilder ) throws Exception { XContentParser parser = XContentHelper . createParser ( sortBuilder . bytes ( ) ) ; parser . nextToken ( ) ; GeoDistanceSortParser geoParser = new GeoDistanceSortParser ( ) ; geoParser . parse ( parser , context ) ; } } 
