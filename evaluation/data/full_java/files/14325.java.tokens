package org . gradle . model . internal . core . rule . describe ; import com . google . common . base . Objects ; import net . jcip . annotations . ThreadSafe ; import org . gradle . api . UncheckedIOException ; import java . io . IOException ; @ThreadSafe public class SimpleModelRuleDescriptor extends AbstractModelRuleDescriptor { private final String descriptor ; public SimpleModelRuleDescriptor ( String descriptor ) { this . descriptor = descriptor ; } public SimpleModelRuleDescriptor ( String descriptor , Object . . . args ) { this ( String . format ( descriptor , args ) ) ; } public void describeTo ( Appendable appendable ) { try { appendable . append ( descriptor ) ; } catch ( IOException e ) { throw new UncheckedIOException ( e ) ; } } @Override public boolean equals ( Object o ) { if ( this = = o ) { return true ; } if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) { return false ; } SimpleModelRuleDescriptor that = ( SimpleModelRuleDescriptor ) o ; return Objects . equal ( descriptor , that . descriptor ) ; } @Override public int hashCode ( ) { return Objects . hashCode ( descriptor ) ; } } 
