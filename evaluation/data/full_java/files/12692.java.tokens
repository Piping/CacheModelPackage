package org . gradle . api . internal . artifacts . ivyservice . resolveengine . oldresult ; import org . gradle . api . artifacts . ModuleDependency ; import org . gradle . api . artifacts . UnresolvedDependency ; import org . gradle . api . internal . artifacts . ResolvedConfigurationIdentifier ; import java . util . HashMap ; import java . util . LinkedHashSet ; import java . util . Map ; import java . util . Set ; public class DefaultResolvedConfigurationBuilder implements ResolvedConfigurationBuilder { private final Set < UnresolvedDependency > unresolvedDependencies = new LinkedHashSet < UnresolvedDependency > ( ) ; private final Map < ResolvedConfigurationIdentifier , ModuleDependency > modulesMap = new HashMap < ResolvedConfigurationIdentifier , ModuleDependency > ( ) ; private final TransientConfigurationResultsBuilder builder ; public DefaultResolvedConfigurationBuilder ( TransientConfigurationResultsBuilder builder ) { this . builder = builder ; } public void addUnresolvedDependency ( UnresolvedDependency unresolvedDependency ) { unresolvedDependencies . add ( unresolvedDependency ) ; } public void addFirstLevelDependency ( ModuleDependency moduleDependency , ResolvedConfigurationIdentifier dependency ) { builder . firstLevelDependency ( dependency ) ; modulesMap . put ( dependency , moduleDependency ) ; } public void done ( ResolvedConfigurationIdentifier root ) { builder . done ( root ) ; } public void addChild ( ResolvedConfigurationIdentifier parent , ResolvedConfigurationIdentifier child , long artifactSet ) { builder . parentChildMapping ( parent , child , artifactSet ) ; } public void newResolvedDependency ( ResolvedConfigurationIdentifier id ) { builder . resolvedDependency ( id ) ; } @Override public ResolvedGraphResults complete ( ) { return new DefaultResolvedGraphResults ( unresolvedDependencies , modulesMap ) ; } } 
