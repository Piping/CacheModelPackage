package org . gradle . api . internal . project ; import org . apache . tools . ant . BuildListener ; import org . gradle . api . AntBuilder ; import org . gradle . api . Project ; import org . gradle . internal . Factory ; import org . gradle . internal . concurrent . CompositeStoppable ; import java . io . Closeable ; public class DefaultAntBuilderFactory implements Factory < AntBuilder > , Closeable { private final BuildListener buildListener ; private final Project project ; private final CompositeStoppable stoppable = new CompositeStoppable ( ) ; public DefaultAntBuilderFactory ( BuildListener buildListener , Project project ) { this . buildListener = buildListener ; this . project = project ; } public DefaultAntBuilder create ( ) { DefaultAntBuilder antBuilder = new DefaultAntBuilder ( project ) ; antBuilder . getProject ( ) . setBaseDir ( project . getProjectDir ( ) ) ; antBuilder . getProject ( ) . removeBuildListener ( antBuilder . getProject ( ) . getBuildListeners ( ) . get ( <int> ) ) ; antBuilder . getProject ( ) . addBuildListener ( buildListener ) ; stoppable . add ( antBuilder ) ; return antBuilder ; } public void close ( ) { stoppable . stop ( ) ; } } 
