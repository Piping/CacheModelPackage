package com . badlogic . gdx . tests ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . graphics . Color ; import com . badlogic . gdx . graphics . Cursor ; import com . badlogic . gdx . graphics . GL20 ; import com . badlogic . gdx . graphics . OrthographicCamera ; import com . badlogic . gdx . graphics . Pixmap ; import com . badlogic . gdx . graphics . Pixmap . Format ; import com . badlogic . gdx . graphics . Texture ; import com . badlogic . gdx . graphics . g2d . SpriteBatch ; import com . badlogic . gdx . math . Vector3 ; import com . badlogic . gdx . tests . utils . GdxTest ; public class CursorTest extends GdxTest { Cursor cursor1 ; Cursor cursor2 ; Cursor cursor3 ; boolean cursorActive = false ; public void create ( ) { Pixmap pixmap1 = new Pixmap ( Gdx . files . internal ( <str> ) ) ; cursor1 = Gdx . graphics . newCursor ( pixmap1 , <int> , <int> ) ; Pixmap pixmap2 = new Pixmap ( <int> , <int> , Format . RGBA8888 ) ; pixmap2 . setColor ( Color . RED ) ; pixmap2 . fillCircle ( <int> , <int> , <int> ) ; cursor2 = Gdx . graphics . newCursor ( pixmap2 , <int> , <int> ) ; Pixmap pixmap3 = new Pixmap ( <int> , <int> , Format . RGBA8888 ) ; pixmap3 . setColor ( Color . BLUE ) ; pixmap3 . fillCircle ( <int> , <int> , <int> ) ; cursor3 = Gdx . graphics . newCursor ( pixmap3 , <int> , <int> ) ; } public void render ( ) { Gdx . gl . glClearColor ( <int> , <int> , <int> , <int> ) ; Gdx . gl . glClear ( GL20 . GL_COLOR_BUFFER_BIT ) ; if ( Gdx . input . isTouched ( ) ) { Gdx . graphics . setCursor ( cursor1 ) ; } else { cursorActive = ! cursorActive ; if ( cursorActive ) { Gdx . graphics . setCursor ( cursor2 ) ; } else { Gdx . graphics . setCursor ( cursor3 ) ; } } } } 
