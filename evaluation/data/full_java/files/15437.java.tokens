package org . gradle . internal . resource . transport . aws . s3 ; import org . gradle . authentication . aws . AwsImAuthentication ; import org . gradle . internal . authentication . AuthenticationSchemeRegistry ; import org . gradle . internal . authentication . DefaultAwsImAuthentication ; import org . gradle . internal . resource . connector . ResourceConnectorFactory ; import org . gradle . internal . service . ServiceRegistration ; import org . gradle . internal . service . scopes . PluginServiceRegistry ; public class S3ResourcesPluginServiceRegistry implements PluginServiceRegistry { public void registerGlobalServices ( ServiceRegistration registration ) { registration . addProvider ( new GlobalScopeServices ( ) ) ; } public void registerBuildSessionServices ( ServiceRegistration registration ) { } public void registerBuildServices ( ServiceRegistration registration ) { registration . addProvider ( new AuthenticationSchemeAction ( ) ) ; } public void registerGradleServices ( ServiceRegistration registration ) { } public void registerProjectServices ( ServiceRegistration registration ) { } private static class GlobalScopeServices { ResourceConnectorFactory createS3ConnectorFactory ( ) { return new S3ConnectorFactory ( ) ; } } private static class AuthenticationSchemeAction { public void configure ( ServiceRegistration registration , AuthenticationSchemeRegistry authenticationSchemeRegistry ) { authenticationSchemeRegistry . registerScheme ( AwsImAuthentication . class , DefaultAwsImAuthentication . class ) ; } } } 
