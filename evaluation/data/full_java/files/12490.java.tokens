package org . gradle . api . internal . artifacts . configurations ; import org . gradle . api . Action ; import org . gradle . api . artifacts . ConflictResolution ; import org . gradle . api . artifacts . DependencySubstitution ; import org . gradle . api . artifacts . ResolutionStrategy ; import org . gradle . api . artifacts . cache . ResolutionRules ; import org . gradle . api . internal . artifacts . ComponentSelectionRulesInternal ; import org . gradle . api . internal . artifacts . configurations . dynamicversion . CachePolicy ; import org . gradle . api . internal . artifacts . ivyservice . dependencysubstitution . DependencySubstitutionsInternal ; public interface ResolutionStrategyInternal extends ResolutionStrategy { CachePolicy getCachePolicy ( ) ; ConflictResolution getConflictResolution ( ) ; ResolutionRules getResolutionRules ( ) ; Action < DependencySubstitution > getDependencySubstitutionRule ( ) ; void assumeFluidDependencies ( ) ; boolean resolveGraphToDetermineTaskDependencies ( ) ; DependencySubstitutionsInternal getDependencySubstitution ( ) ; ComponentSelectionRulesInternal getComponentSelection ( ) ; ResolutionStrategyInternal copy ( ) ; void setMutationValidator ( MutationValidator action ) ; } 
