package org . gradle . launcher . cli . converter ; import org . gradle . cli . AbstractCommandLineConverter ; import org . gradle . cli . CommandLineArgumentException ; import org . gradle . cli . CommandLineParser ; import org . gradle . cli . ParsedCommandLine ; import org . gradle . launcher . daemon . configuration . DaemonParameters ; public class DaemonCommandLineConverter extends AbstractCommandLineConverter < DaemonParameters > { private static final String DAEMON = <str> ; private static final String NO_DAEMON = <str> ; private static final String FOREGROUND = <str> ; private static final String STOP = <str> ; public DaemonParameters convert ( ParsedCommandLine args , DaemonParameters target ) throws CommandLineArgumentException { if ( args . hasOption ( FOREGROUND ) ) { target . setForeground ( true ) ; } if ( args . hasOption ( STOP ) ) { target . setStop ( true ) ; } if ( args . hasOption ( NO_DAEMON ) ) { return target . setEnabled ( false ) ; } if ( args . hasOption ( DAEMON ) ) { return target . setEnabled ( true ) ; } return target ; } public void configure ( CommandLineParser parser ) { parser . option ( FOREGROUND ) . hasDescription ( <str> ) . incubating ( ) ; parser . option ( STOP ) . hasDescription ( <str> ) ; parser . option ( DAEMON ) . hasDescription ( <str> ) ; parser . option ( NO_DAEMON ) . hasDescription ( <str> ) ; parser . allowOneOf ( DAEMON , NO_DAEMON ) ; } } 
