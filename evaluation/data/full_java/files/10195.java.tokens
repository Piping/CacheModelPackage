package com . google . common . collect ; import com . google . caliper . BeforeExperiment ; import com . google . caliper . Benchmark ; import com . google . caliper . Param ; import java . util . ArrayList ; import java . util . LinkedList ; public class IteratorBenchmark { @Param ( { <str> , <str> , <str> , <str> , <str> , <str> } ) int size ; Object [ ] array ; ArrayList < Object > arrayList ; LinkedList < Object > linkedList ; @BeforeExperiment void setUp ( ) { array = new Object [ size ] ; arrayList = Lists . newArrayListWithCapacity ( size ) ; linkedList = Lists . newLinkedList ( ) ; for ( int i = <int> ; i < size ; i + + ) { Object value = new Object ( ) ; array [ i ] = value ; arrayList . add ( value ) ; linkedList . add ( value ) ; } } @Benchmark int arrayIndexed ( int reps ) { int sum = <int> ; for ( int i = <int> ; i < reps ; i + + ) { for ( int index = <int> ; index < size ; index + + ) { sum + = array [ index ] . hashCode ( ) ; } } return sum ; } @Benchmark int arrayIndexedLength ( int reps ) { int sum = <int> ; for ( int i = <int> ; i < reps ; i + + ) { for ( int index = <int> ; index < array . length ; index + + ) { sum + = array [ index ] . hashCode ( ) ; } } return sum ; } @Benchmark int arrayFor ( int reps ) { int sum = <int> ; for ( int i = <int> ; i < reps ; i + + ) { for ( Object value : array ) { sum + = value . hashCode ( ) ; } } return sum ; } @Benchmark int arrayListIndexed ( int reps ) { int sum = <int> ; for ( int i = <int> ; i < reps ; i + + ) { for ( int index = <int> ; index < size ; index + + ) { sum + = arrayList . get ( index ) . hashCode ( ) ; } } return sum ; } @Benchmark int arrayListIndexedLength ( int reps ) { int sum = <int> ; for ( int i = <int> ; i < reps ; i + + ) { for ( int index = <int> ; index < arrayList . size ( ) ; index + + ) { sum + = arrayList . get ( index ) . hashCode ( ) ; } } return sum ; } @Benchmark int arrayListFor ( int reps ) { int sum = <int> ; for ( int i = <int> ; i < reps ; i + + ) { for ( Object value : arrayList ) { sum + = value . hashCode ( ) ; } } return sum ; } @Benchmark int arrayListToArrayFor ( int reps ) { int sum = <int> ; for ( int i = <int> ; i < reps ; i + + ) { for ( Object value : arrayList . toArray ( ) ) { sum + = value . hashCode ( ) ; } } return sum ; } @Benchmark int linkedListFor ( int reps ) { int sum = <int> ; for ( int i = <int> ; i < reps ; i + + ) { for ( Object value : linkedList ) { sum + = value . hashCode ( ) ; } } return sum ; } @Benchmark int linkedListToArrayFor ( int reps ) { int sum = <int> ; for ( int i = <int> ; i < reps ; i + + ) { for ( Object value : linkedList . toArray ( ) ) { sum + = value . hashCode ( ) ; } } return sum ; } } 
