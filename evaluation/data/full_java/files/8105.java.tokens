package org . elasticsearch . index . codec ; import org . apache . lucene . codecs . Codec ; import org . apache . lucene . codecs . lucene40 . Lucene40Codec ; import org . apache . lucene . codecs . lucene41 . Lucene41Codec ; import org . apache . lucene . codecs . lucene410 . Lucene410Codec ; import org . apache . lucene . codecs . lucene42 . Lucene42Codec ; import org . apache . lucene . codecs . lucene45 . Lucene45Codec ; import org . apache . lucene . codecs . lucene46 . Lucene46Codec ; import org . apache . lucene . codecs . lucene49 . Lucene49Codec ; import org . apache . lucene . codecs . lucene50 . Lucene50Codec ; import org . apache . lucene . codecs . lucene50 . Lucene50StoredFieldsFormat ; import org . apache . lucene . codecs . lucene50 . Lucene50StoredFieldsFormat . Mode ; import org . apache . lucene . codecs . lucene53 . Lucene53Codec ; import org . apache . lucene . codecs . lucene54 . Lucene54Codec ; import org . apache . lucene . document . Document ; import org . apache . lucene . index . DirectoryReader ; import org . apache . lucene . index . IndexWriter ; import org . apache . lucene . index . IndexWriterConfig ; import org . apache . lucene . index . SegmentReader ; import org . apache . lucene . store . Directory ; import org . apache . lucene . util . LuceneTestCase . SuppressCodecs ; import org . elasticsearch . common . logging . ESLoggerFactory ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . env . Environment ; import org . elasticsearch . index . Index ; import org . elasticsearch . index . IndexSettings ; import org . elasticsearch . index . analysis . AnalysisRegistry ; import org . elasticsearch . index . analysis . AnalysisService ; import org . elasticsearch . index . mapper . MapperService ; import org . elasticsearch . index . similarity . SimilarityService ; import org . elasticsearch . indices . mapper . MapperRegistry ; import org . elasticsearch . test . ESTestCase ; import org . elasticsearch . test . IndexSettingsModule ; import java . io . IOException ; import java . util . Collections ; import static org . elasticsearch . common . settings . Settings . settingsBuilder ; import static org . hamcrest . Matchers . instanceOf ; @SuppressCodecs ( <str> ) public class CodecTests extends ESTestCase { public void testResolveDefaultCodecs ( ) throws Exception { CodecService codecService = createCodecService ( ) ; assertThat ( codecService . codec ( <str> ) , instanceOf ( PerFieldMappingPostingFormatCodec . class ) ) ; assertThat ( codecService . codec ( <str> ) , instanceOf ( Lucene54Codec . class ) ) ; assertThat ( codecService . codec ( <str> ) , instanceOf ( Lucene53Codec . class ) ) ; assertThat ( codecService . codec ( <str> ) , instanceOf ( Lucene50Codec . class ) ) ; assertThat ( codecService . codec ( <str> ) , instanceOf ( Lucene410Codec . class ) ) ; assertThat ( codecService . codec ( <str> ) , instanceOf ( Lucene49Codec . class ) ) ; assertThat ( codecService . codec ( <str> ) , instanceOf ( Lucene46Codec . class ) ) ; assertThat ( codecService . codec ( <str> ) , instanceOf ( Lucene45Codec . class ) ) ; assertThat ( codecService . codec ( <str> ) , instanceOf ( Lucene40Codec . class ) ) ; assertThat ( codecService . codec ( <str> ) , instanceOf ( Lucene41Codec . class ) ) ; assertThat ( codecService . codec ( <str> ) , instanceOf ( Lucene42Codec . class ) ) ; } public void testDefault ( ) throws Exception { Codec codec = createCodecService ( ) . codec ( <str> ) ; assertCompressionEquals ( Mode . BEST_SPEED , codec ) ; } public void testBestCompression ( ) throws Exception { Codec codec = createCodecService ( ) . codec ( <str> ) ; assertCompressionEquals ( Mode . BEST_COMPRESSION , codec ) ; } private void assertCompressionEquals ( Mode expected , Codec actual ) throws Exception { Directory dir = newDirectory ( ) ; IndexWriterConfig iwc = newIndexWriterConfig ( null ) ; iwc . setCodec ( actual ) ; IndexWriter iw = new IndexWriter ( dir , iwc ) ; iw . addDocument ( new Document ( ) ) ; iw . commit ( ) ; iw . close ( ) ; DirectoryReader ir = DirectoryReader . open ( dir ) ; SegmentReader sr = ( SegmentReader ) ir . leaves ( ) . get ( <int> ) . reader ( ) ; String v = sr . getSegmentInfo ( ) . info . getAttribute ( Lucene50StoredFieldsFormat . MODE_KEY ) ; assertNotNull ( v ) ; assertEquals ( expected , Mode . valueOf ( v ) ) ; ir . close ( ) ; dir . close ( ) ; } private static CodecService createCodecService ( ) throws IOException { Settings nodeSettings = settingsBuilder ( ) . put ( <str> , createTempDir ( ) ) . build ( ) ; IndexSettings settings = IndexSettingsModule . newIndexSettings ( new Index ( <str> ) , nodeSettings ) ; SimilarityService similarityService = new SimilarityService ( settings , Collections . emptyMap ( ) ) ; AnalysisService analysisService = new AnalysisRegistry ( null , new Environment ( nodeSettings ) ) . build ( settings ) ; MapperRegistry mapperRegistry = new MapperRegistry ( Collections . emptyMap ( ) , Collections . emptyMap ( ) ) ; MapperService service = new MapperService ( settings , analysisService , similarityService , mapperRegistry ) ; return new CodecService ( service , ESLoggerFactory . getLogger ( <str> ) ) ; } } 
