package org . elasticsearch . rest . action . percolate ; import org . elasticsearch . action . percolate . MultiPercolateRequest ; import org . elasticsearch . action . percolate . MultiPercolateResponse ; import org . elasticsearch . action . support . IndicesOptions ; import org . elasticsearch . client . Client ; import org . elasticsearch . common . Strings ; import org . elasticsearch . common . inject . Inject ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . rest . * ; import org . elasticsearch . rest . action . support . RestActions ; import org . elasticsearch . rest . action . support . RestToXContentListener ; import static org . elasticsearch . rest . RestRequest . Method . GET ; import static org . elasticsearch . rest . RestRequest . Method . POST ; public class RestMultiPercolateAction extends BaseRestHandler { private final boolean allowExplicitIndex ; @Inject public RestMultiPercolateAction ( Settings settings , RestController controller , Client client ) { super ( settings , controller , client ) ; controller . registerHandler ( POST , <str> , this ) ; controller . registerHandler ( POST , <str> , this ) ; controller . registerHandler ( POST , <str> , this ) ; controller . registerHandler ( GET , <str> , this ) ; controller . registerHandler ( GET , <str> , this ) ; controller . registerHandler ( GET , <str> , this ) ; this . allowExplicitIndex = settings . getAsBoolean ( <str> , true ) ; } @Override public void handleRequest ( final RestRequest restRequest , final RestChannel restChannel , final Client client ) throws Exception { MultiPercolateRequest multiPercolateRequest = new MultiPercolateRequest ( ) ; multiPercolateRequest . indicesOptions ( IndicesOptions . fromRequest ( restRequest , multiPercolateRequest . indicesOptions ( ) ) ) ; multiPercolateRequest . indices ( Strings . splitStringByCommaToArray ( restRequest . param ( <str> ) ) ) ; multiPercolateRequest . documentType ( restRequest . param ( <str> ) ) ; multiPercolateRequest . add ( RestActions . getRestContent ( restRequest ) , allowExplicitIndex ) ; client . multiPercolate ( multiPercolateRequest , new RestToXContentListener < MultiPercolateResponse > ( restChannel ) ) ; } } 
