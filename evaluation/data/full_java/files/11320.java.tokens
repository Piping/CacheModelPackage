package org . gradle . api . internal ; import org . gradle . api . Action ; import org . gradle . api . Task ; import org . gradle . api . internal . tasks . ContextAwareTaskAction ; import org . gradle . api . internal . tasks . TaskExecuter ; import org . gradle . api . internal . tasks . TaskStateInternal ; import org . gradle . api . internal . tasks . execution . TaskValidator ; import org . gradle . api . specs . Spec ; import org . gradle . internal . Factory ; import org . gradle . logging . StandardOutputCapture ; import org . gradle . util . Configurable ; import java . io . File ; import java . util . List ; public interface TaskInternal extends Task , Configurable < Task > { List < ContextAwareTaskAction > getTaskActions ( ) ; Spec < ? super TaskInternal > getOnlyIf ( ) ; void execute ( ) ; StandardOutputCapture getStandardOutputCapture ( ) ; TaskExecuter getExecuter ( ) ; void setExecuter ( TaskExecuter executer ) ; TaskOutputsInternal getOutputs ( ) ; List < TaskValidator > getValidators ( ) ; void addValidator ( TaskValidator validator ) ; TaskStateInternal getState ( ) ; boolean getImpliesSubProjects ( ) ; void setImpliesSubProjects ( boolean impliesSubProjects ) ; Factory < File > getTemporaryDirFactory ( ) ; void prependParallelSafeAction ( Action < ? super Task > action ) ; void appendParallelSafeAction ( Action < ? super Task > action ) ; boolean isHasCustomActions ( ) ; } 
