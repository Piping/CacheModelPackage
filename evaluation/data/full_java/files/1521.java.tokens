package org . apache . cassandra . dht ; import java . util . LinkedList ; import java . util . List ; import java . util . Set ; import org . junit . Test ; import static org . junit . Assert . assertEquals ; import static org . junit . Assert . assertTrue ; public class BoundsTest { private Bounds < Token > bounds ( long left , long right ) { return new Bounds < Token > ( new Murmur3Partitioner . LongToken ( left ) , new Murmur3Partitioner . LongToken ( right ) ) ; } @Test public void testGetNonOverlappingBounds ( ) { List < Bounds < Token > > bounds = new LinkedList < > ( ) ; bounds . add ( bounds ( <int> , <int> ) ) ; bounds . add ( bounds ( <int> , <int> ) ) ; bounds . add ( bounds ( <int> , <int> ) ) ; bounds . add ( bounds ( <int> , <int> ) ) ; bounds . add ( bounds ( <int> , <int> ) ) ; bounds . add ( bounds ( <int> , <int> ) ) ; bounds . add ( bounds ( <int> , <int> ) ) ; Set < Bounds < Token > > nonOverlappingBounds = Bounds . getNonOverlappingBounds ( bounds ) ; assertEquals ( <int> , nonOverlappingBounds . size ( ) ) ; assertTrue ( nonOverlappingBounds . contains ( bounds ( <int> , <int> ) ) ) ; assertTrue ( nonOverlappingBounds . contains ( bounds ( <int> , <int> ) ) ) ; assertTrue ( nonOverlappingBounds . contains ( bounds ( <int> , <int> ) ) ) ; } } 
