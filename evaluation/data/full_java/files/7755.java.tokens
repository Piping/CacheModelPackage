package org . elasticsearch . action . search ; import org . elasticsearch . client . Client ; import org . elasticsearch . client . transport . TransportClient ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . index . query . QueryBuilders ; import org . elasticsearch . search . builder . SearchSourceBuilder ; import org . elasticsearch . test . ESTestCase ; import org . junit . AfterClass ; import org . junit . BeforeClass ; import static org . hamcrest . CoreMatchers . equalTo ; public class SearchRequestBuilderTests extends ESTestCase { private static Client client ; @BeforeClass public static void initClient ( ) { Settings settings = Settings . builder ( ) . put ( <str> , createTempDir ( ) . toString ( ) ) . build ( ) ; client = TransportClient . builder ( ) . settings ( settings ) . build ( ) ; } @AfterClass public static void closeClient ( ) { client . close ( ) ; client = null ; } public void testEmptySourceToString ( ) { SearchRequestBuilder searchRequestBuilder = client . prepareSearch ( ) ; assertThat ( searchRequestBuilder . toString ( ) , equalTo ( new SearchSourceBuilder ( ) . toString ( ) ) ) ; } public void testQueryBuilderQueryToString ( ) { SearchRequestBuilder searchRequestBuilder = client . prepareSearch ( ) ; searchRequestBuilder . setQuery ( QueryBuilders . matchAllQuery ( ) ) ; assertThat ( searchRequestBuilder . toString ( ) , equalTo ( new SearchSourceBuilder ( ) . query ( QueryBuilders . matchAllQuery ( ) ) . toString ( ) ) ) ; } public void testSearchSourceBuilderToString ( ) { SearchRequestBuilder searchRequestBuilder = client . prepareSearch ( ) ; searchRequestBuilder . setSource ( new SearchSourceBuilder ( ) . query ( QueryBuilders . termQuery ( <str> , <str> ) ) ) ; assertThat ( searchRequestBuilder . toString ( ) , equalTo ( new SearchSourceBuilder ( ) . query ( QueryBuilders . termQuery ( <str> , <str> ) ) . toString ( ) ) ) ; } public void testThatToStringDoesntWipeRequestSource ( ) { SearchRequestBuilder searchRequestBuilder = client . prepareSearch ( ) . setSource ( new SearchSourceBuilder ( ) . query ( QueryBuilders . termQuery ( <str> , <str> ) ) ) ; String preToString = searchRequestBuilder . request ( ) . toString ( ) ; assertThat ( searchRequestBuilder . toString ( ) , equalTo ( new SearchSourceBuilder ( ) . query ( QueryBuilders . termQuery ( <str> , <str> ) ) . toString ( ) ) ) ; String postToString = searchRequestBuilder . request ( ) . toString ( ) ; assertThat ( preToString , equalTo ( postToString ) ) ; } } 
