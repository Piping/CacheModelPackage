package org . gradle . api . tasks ; import groovy . lang . Closure ; import org . gradle . api . * ; import org . gradle . internal . HasInternalProtocol ; import java . util . Map ; @HasInternalProtocol public interface TaskContainer extends TaskCollection < Task > , PolymorphicDomainObjectContainer < Task > { Task findByPath ( String path ) ; Task getByPath ( String path ) throws UnknownTaskException ; Task create ( Map < String , ? > options ) throws InvalidUserDataException ; Task create ( Map < String , ? > options , Closure configureClosure ) throws InvalidUserDataException ; Task create ( String name , Closure configureClosure ) throws InvalidUserDataException ; Task create ( String name ) throws InvalidUserDataException ; < T extends Task > T create ( String name , Class < T > type ) throws InvalidUserDataException ; < T extends Task > T create ( String name , Class < T > type , Action < ? super T > configuration ) throws InvalidUserDataException ; Task replace ( String name ) ; < T extends Task > T replace ( String name , Class < T > type ) ; } 
