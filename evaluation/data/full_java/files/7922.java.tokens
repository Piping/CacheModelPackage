package org . elasticsearch . common . hppc ; import com . carrotsearch . hppc . ObjectHashSet ; import org . elasticsearch . common . collect . HppcMaps ; import org . elasticsearch . test . ESTestCase ; import java . util . ArrayList ; import java . util . List ; import static org . hamcrest . Matchers . equalTo ; public class HppcMapsTests extends ESTestCase { public void testIntersection ( ) throws Exception { boolean enabled = false ; assert enabled = true ; assumeTrue ( <str> , enabled ) ; ObjectHashSet < String > set1 = ObjectHashSet . from ( <str> , <str> , <str> ) ; ObjectHashSet < String > set2 = ObjectHashSet . from ( <str> , <str> , <str> ) ; List < String > values = toList ( HppcMaps . intersection ( set1 , set2 ) ) ; assertThat ( values . size ( ) , equalTo ( <int> ) ) ; assertThat ( values . contains ( <str> ) , equalTo ( true ) ) ; assertThat ( values . contains ( <str> ) , equalTo ( true ) ) ; assertThat ( values . contains ( <str> ) , equalTo ( true ) ) ; set1 = ObjectHashSet . from ( <str> , <str> , <str> ) ; set2 = ObjectHashSet . from ( <str> , <str> , <str> ) ; values = toList ( HppcMaps . intersection ( set1 , set2 ) ) ; assertThat ( values . size ( ) , equalTo ( <int> ) ) ; assertThat ( values . get ( <int> ) , equalTo ( <str> ) ) ; set1 = ObjectHashSet . from ( <str> , <str> , <str> ) ; set2 = ObjectHashSet . from ( <str> , <str> , <str> ) ; values = toList ( HppcMaps . intersection ( set1 , set2 ) ) ; assertThat ( values . size ( ) , equalTo ( <int> ) ) ; set1 = ObjectHashSet . from ( ) ; set2 = ObjectHashSet . from ( <str> , <str> , <str> ) ; values = toList ( HppcMaps . intersection ( set1 , set2 ) ) ; assertThat ( values . size ( ) , equalTo ( <int> ) ) ; set1 = ObjectHashSet . from ( <str> , <str> , <str> ) ; set2 = ObjectHashSet . from ( ) ; values = toList ( HppcMaps . intersection ( set1 , set2 ) ) ; assertThat ( values . size ( ) , equalTo ( <int> ) ) ; set1 = ObjectHashSet . from ( ) ; set2 = ObjectHashSet . from ( ) ; values = toList ( HppcMaps . intersection ( set1 , set2 ) ) ; assertThat ( values . size ( ) , equalTo ( <int> ) ) ; set1 = null ; set2 = ObjectHashSet . from ( ) ; try { toList ( HppcMaps . intersection ( set1 , set2 ) ) ; fail ( ) ; } catch ( AssertionError e ) { } set1 = ObjectHashSet . from ( ) ; set2 = null ; try { toList ( HppcMaps . intersection ( set1 , set2 ) ) ; fail ( ) ; } catch ( AssertionError e ) { } set1 = null ; set2 = null ; try { toList ( HppcMaps . intersection ( set1 , set2 ) ) ; fail ( ) ; } catch ( AssertionError e ) { } } private List < String > toList ( Iterable < String > iterable ) { List < String > list = new ArrayList < > ( ) ; for ( String s : iterable ) { list . add ( s ) ; } return list ; } } 
