package org . elasticsearch . gateway ; import org . elasticsearch . cluster . ClusterName ; import org . elasticsearch . cluster . ClusterService ; import org . elasticsearch . common . inject . Inject ; import org . elasticsearch . common . inject . ModuleTestCase ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . env . NodeEnvironment ; public class GatewayModuleTests extends ModuleTestCase { public void testCustomGateway ( ) { GatewayModule gatewayModule = new GatewayModule ( Settings . builder ( ) . put ( GatewayModule . GATEWAY_TYPE_KEY , <str> ) . build ( ) ) ; gatewayModule . registerGatewayType ( <str> , MockGateway . class ) ; assertBinding ( gatewayModule , Gateway . class , MockGateway . class ) ; } public void testDefaultGateway ( ) { GatewayModule gatewayModule = new GatewayModule ( Settings . EMPTY ) ; assertBinding ( gatewayModule , Gateway . class , Gateway . class ) ; } public static class MockGateway extends Gateway { @Inject public MockGateway ( Settings settings , ClusterService clusterService , NodeEnvironment nodeEnv , GatewayMetaState metaState , TransportNodesListGatewayMetaState listGatewayMetaState , ClusterName clusterName ) { super ( settings , clusterService , nodeEnv , metaState , listGatewayMetaState , clusterName ) ; } } } 
