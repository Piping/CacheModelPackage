package io . netty . channel . sctp ; import com . sun . nio . sctp . MessageInfo ; import io . netty . buffer . ByteBuf ; import io . netty . buffer . DefaultByteBufHolder ; public final class SctpMessage extends DefaultByteBufHolder { private final int streamIdentifier ; private final int protocolIdentifier ; private final boolean unordered ; private final MessageInfo msgInfo ; public SctpMessage ( int protocolIdentifier , int streamIdentifier , ByteBuf payloadBuffer ) { this ( protocolIdentifier , streamIdentifier , false , payloadBuffer ) ; } public SctpMessage ( int protocolIdentifier , int streamIdentifier , boolean unordered , ByteBuf payloadBuffer ) { super ( payloadBuffer ) ; this . protocolIdentifier = protocolIdentifier ; this . streamIdentifier = streamIdentifier ; this . unordered = unordered ; msgInfo = null ; } public SctpMessage ( MessageInfo msgInfo , ByteBuf payloadBuffer ) { super ( payloadBuffer ) ; if ( msgInfo = = null ) { throw new NullPointerException ( <str> ) ; } this . msgInfo = msgInfo ; streamIdentifier = msgInfo . streamNumber ( ) ; protocolIdentifier = msgInfo . payloadProtocolID ( ) ; unordered = msgInfo . isUnordered ( ) ; } public int streamIdentifier ( ) { return streamIdentifier ; } public int protocolIdentifier ( ) { return protocolIdentifier ; } public boolean isUnordered ( ) { return unordered ; } public MessageInfo messageInfo ( ) { return msgInfo ; } public boolean isComplete ( ) { if ( msgInfo ! = null ) { return msgInfo . isComplete ( ) ; } else { return true ; } } @Override public boolean equals ( Object o ) { if ( this = = o ) { return true ; } if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) { return false ; } SctpMessage sctpFrame = ( SctpMessage ) o ; if ( protocolIdentifier ! = sctpFrame . protocolIdentifier ) { return false ; } if ( streamIdentifier ! = sctpFrame . streamIdentifier ) { return false ; } if ( unordered ! = sctpFrame . unordered ) { return false ; } return content ( ) . equals ( sctpFrame . content ( ) ) ; } @Override public int hashCode ( ) { int result = streamIdentifier ; result = <int> * result + protocolIdentifier ; result = <int> * result + content ( ) . hashCode ( ) ; return result ; } @Override public SctpMessage copy ( ) { if ( msgInfo = = null ) { return new SctpMessage ( protocolIdentifier , streamIdentifier , unordered , content ( ) . copy ( ) ) ; } else { return new SctpMessage ( msgInfo , content ( ) . copy ( ) ) ; } } @Override public SctpMessage duplicate ( ) { if ( msgInfo = = null ) { return new SctpMessage ( protocolIdentifier , streamIdentifier , unordered , content ( ) . duplicate ( ) ) ; } else { return new SctpMessage ( msgInfo , content ( ) . copy ( ) ) ; } } @Override public SctpMessage retain ( ) { super . retain ( ) ; return this ; } @Override public SctpMessage retain ( int increment ) { super . retain ( increment ) ; return this ; } @Override public SctpMessage touch ( ) { super . touch ( ) ; return this ; } @Override public SctpMessage touch ( Object hint ) { super . touch ( hint ) ; return this ; } @Override public String toString ( ) { return <str> + <str> + streamIdentifier + <str> + protocolIdentifier + <str> + unordered + <str> + contentToString ( ) + <str> ; } } 
