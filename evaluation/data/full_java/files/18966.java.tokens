package io . netty . handler . codec . bytes ; import io . netty . channel . embedded . EmbeddedChannel ; import io . netty . util . internal . EmptyArrays ; import org . junit . Before ; import org . junit . Test ; import java . util . Random ; import static io . netty . buffer . Unpooled . * ; import static org . hamcrest . core . Is . * ; import static org . junit . Assert . * ; public class ByteArrayDecoderTest { private EmbeddedChannel ch ; @Before public void setUp ( ) { ch = new EmbeddedChannel ( new ByteArrayDecoder ( ) ) ; } @Test public void testDecode ( ) { byte [ ] b = new byte [ <int> ] ; new Random ( ) . nextBytes ( b ) ; ch . writeInbound ( wrappedBuffer ( b ) ) ; assertThat ( ( byte [ ] ) ch . readInbound ( ) , is ( b ) ) ; } @Test public void testDecodeEmpty ( ) { ch . writeInbound ( EMPTY_BUFFER ) ; assertThat ( ( byte [ ] ) ch . readInbound ( ) , is ( EmptyArrays . EMPTY_BYTES ) ) ; } @Test public void testDecodeOtherType ( ) { String str = <str> ; ch . writeInbound ( str ) ; assertThat ( ch . readInbound ( ) , is ( ( Object ) str ) ) ; } } 
