package org . elasticsearch . transport ; import java . lang . reflect . Constructor ; import java . util . concurrent . Callable ; import java . util . function . Supplier ; public class RequestHandlerRegistry < Request extends TransportRequest > { private final String action ; private final TransportRequestHandler < Request > handler ; private final boolean forceExecution ; private final String executor ; private final Supplier < Request > requestFactory ; public RequestHandlerRegistry ( String action , Supplier < Request > requestFactory , TransportRequestHandler < Request > handler , String executor , boolean forceExecution ) { this . action = action ; this . requestFactory = requestFactory ; assert newRequest ( ) ! = null ; this . handler = handler ; this . forceExecution = forceExecution ; this . executor = executor ; } public String getAction ( ) { return action ; } public Request newRequest ( ) { return requestFactory . get ( ) ; } public TransportRequestHandler < Request > getHandler ( ) { return handler ; } public boolean isForceExecution ( ) { return forceExecution ; } public String getExecutor ( ) { return executor ; } } 
