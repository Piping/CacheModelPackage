package org . gradle . api . tasks . scala ; import org . gradle . api . file . FileCollection ; import org . gradle . api . internal . project . IsolatedAntBuilder ; import org . gradle . api . tasks . * ; import org . gradle . util . GUtil ; import javax . inject . Inject ; import java . io . File ; public class ScalaDoc extends SourceTask { private File destinationDir ; private FileCollection classpath ; private FileCollection scalaClasspath ; private ScalaDocOptions scalaDocOptions = new ScalaDocOptions ( ) ; private String title ; @Inject protected IsolatedAntBuilder getAntBuilder ( ) { throw new UnsupportedOperationException ( ) ; } @OutputDirectory public File getDestinationDir ( ) { return destinationDir ; } public void setDestinationDir ( File destinationDir ) { this . destinationDir = destinationDir ; } @InputFiles public FileCollection getClasspath ( ) { return classpath ; } public void setClasspath ( FileCollection classpath ) { this . classpath = classpath ; } @InputFiles public FileCollection getScalaClasspath ( ) { return scalaClasspath ; } public void setScalaClasspath ( FileCollection scalaClasspath ) { this . scalaClasspath = scalaClasspath ; } @Nested public ScalaDocOptions getScalaDocOptions ( ) { return scalaDocOptions ; } public void setScalaDocOptions ( ScalaDocOptions scalaDocOptions ) { this . scalaDocOptions = scalaDocOptions ; } @Input @Optional public String getTitle ( ) { return title ; } public void setTitle ( String title ) { this . title = title ; } @TaskAction protected void generate ( ) { ScalaDocOptions options = getScalaDocOptions ( ) ; if ( ! GUtil . isTrue ( options . getDocTitle ( ) ) ) { options . setDocTitle ( getTitle ( ) ) ; } AntScalaDoc antScalaDoc = new AntScalaDoc ( getAntBuilder ( ) ) ; antScalaDoc . execute ( getSource ( ) , getDestinationDir ( ) , getClasspath ( ) , getScalaClasspath ( ) , options ) ; } } 
