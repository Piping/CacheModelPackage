package org . elasticsearch . common . blobstore . url ; import org . elasticsearch . common . blobstore . BlobMetaData ; import org . elasticsearch . common . blobstore . BlobPath ; import org . elasticsearch . common . blobstore . support . AbstractBlobContainer ; import org . elasticsearch . common . bytes . BytesReference ; import java . io . BufferedInputStream ; import java . io . IOException ; import java . io . InputStream ; import java . net . URL ; import java . util . Map ; public class URLBlobContainer extends AbstractBlobContainer { protected final URLBlobStore blobStore ; protected final URL path ; public URLBlobContainer ( URLBlobStore blobStore , BlobPath blobPath , URL path ) { super ( blobPath ) ; this . blobStore = blobStore ; this . path = path ; } public URL url ( ) { return this . path ; } @Override public Map < String , BlobMetaData > listBlobs ( ) throws IOException { throw new UnsupportedOperationException ( <str> ) ; } @Override public Map < String , BlobMetaData > listBlobsByPrefix ( String blobNamePrefix ) throws IOException { throw new UnsupportedOperationException ( <str> ) ; } @Override public void move ( String from , String to ) throws IOException { throw new UnsupportedOperationException ( <str> ) ; } @Override public void deleteBlob ( String blobName ) throws IOException { throw new UnsupportedOperationException ( <str> ) ; } @Override public boolean blobExists ( String blobName ) { throw new UnsupportedOperationException ( <str> ) ; } @Override public InputStream readBlob ( String name ) throws IOException { return new BufferedInputStream ( new URL ( path , name ) . openStream ( ) , blobStore . bufferSizeInBytes ( ) ) ; } @Override public void writeBlob ( String blobName , InputStream inputStream , long blobSize ) throws IOException { throw new UnsupportedOperationException ( <str> ) ; } @Override public void writeBlob ( String blobName , BytesReference data ) throws IOException { throw new UnsupportedOperationException ( <str> ) ; } } 
