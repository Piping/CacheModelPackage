package org . gradle . internal . component . external . model ; import org . apache . ivy . core . module . descriptor . ModuleDescriptor ; import org . gradle . api . artifacts . ModuleVersionIdentifier ; import org . gradle . api . artifacts . component . ModuleComponentIdentifier ; import org . gradle . api . internal . artifacts . DefaultModuleVersionIdentifier ; import org . gradle . api . internal . artifacts . ivyservice . IvyUtil ; import org . gradle . api . internal . artifacts . ivyservice . NamespaceId ; import org . gradle . internal . component . model . IvyArtifactName ; import java . util . Map ; import java . util . Set ; public class DefaultIvyModuleResolveMetaData extends AbstractModuleComponentResolveMetaData implements IvyModuleResolveMetaData { private final Map < NamespaceId , String > extraInfo ; public DefaultIvyModuleResolveMetaData ( ModuleDescriptor moduleDescriptor ) { super ( moduleDescriptor ) ; this . extraInfo = moduleDescriptor . getExtraInfo ( ) ; } public DefaultIvyModuleResolveMetaData ( ModuleComponentIdentifier componentIdentifier , ModuleDescriptor moduleDescriptor ) { super ( DefaultModuleVersionIdentifier . newId ( componentIdentifier ) , moduleDescriptor , componentIdentifier ) ; this . extraInfo = moduleDescriptor . getExtraInfo ( ) ; } private DefaultIvyModuleResolveMetaData ( ModuleVersionIdentifier identifier , ModuleDescriptor moduleDescriptor , ModuleComponentIdentifier componentIdentifier ) { super ( identifier , moduleDescriptor , componentIdentifier ) ; this . extraInfo = moduleDescriptor . getExtraInfo ( ) ; } public DefaultIvyModuleResolveMetaData ( ModuleComponentIdentifier componentIdentifier , Set < IvyArtifactName > artifacts ) { this ( componentIdentifier , IvyUtil . createModuleDescriptor ( componentIdentifier , artifacts ) ) ; } @Override public DefaultIvyModuleResolveMetaData copy ( ) { DefaultIvyModuleResolveMetaData copy = new DefaultIvyModuleResolveMetaData ( getId ( ) , getDescriptor ( ) , getComponentId ( ) ) ; copyTo ( copy ) ; return copy ; } public String getBranch ( ) { return getDescriptor ( ) . getModuleRevisionId ( ) . getBranch ( ) ; } public Map < NamespaceId , String > getExtraInfo ( ) { return extraInfo ; } } 
