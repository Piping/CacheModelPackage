package org . gradle . api . internal . java ; import org . apache . commons . lang . StringUtils ; import org . gradle . api . Task ; import org . gradle . api . file . SourceDirectorySet ; import org . gradle . api . internal . AbstractBuildableModelElement ; import org . gradle . language . base . internal . LanguageSourceSetInternal ; public abstract class AbstractLanguageSourceSet extends AbstractBuildableModelElement implements LanguageSourceSetInternal { private final String name ; private final String fullName ; private final String displayName ; private final String parentName ; private final SourceDirectorySet source ; private boolean generated ; private Task generatorTask ; public AbstractLanguageSourceSet ( String name , String parentName , String typeName , SourceDirectorySet source ) { this . name = name ; this . fullName = parentName + StringUtils . capitalize ( name ) ; this . displayName = String . format ( <str> , typeName , parentName , name ) ; this . source = source ; this . parentName = parentName ; super . builtBy ( source . getBuildDependencies ( ) ) ; } public String getName ( ) { return name ; } public String getProjectScopedName ( ) { return fullName ; } @Override public void builtBy ( Object . . . tasks ) { generated = true ; super . builtBy ( tasks ) ; } public void generatedBy ( Task generatorTask ) { this . generatorTask = generatorTask ; } public Task getGeneratorTask ( ) { return generatorTask ; } public boolean getMayHaveSources ( ) { return generated | | ! source . isEmpty ( ) ; } public String getDisplayName ( ) { return displayName ; } @Override public String toString ( ) { return getDisplayName ( ) ; } public SourceDirectorySet getSource ( ) { return source ; } @Override public String getParentName ( ) { return this . parentName ; } } 
