package org . elasticsearch . action . support . master . info ; import org . elasticsearch . action . IndicesRequest ; import org . elasticsearch . action . support . IndicesOptions ; import org . elasticsearch . action . support . master . MasterNodeReadRequest ; import org . elasticsearch . common . Strings ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import java . io . IOException ; public abstract class ClusterInfoRequest < T extends ClusterInfoRequest > extends MasterNodeReadRequest < T > implements IndicesRequest . Replaceable { private String [ ] indices = Strings . EMPTY_ARRAY ; private String [ ] types = Strings . EMPTY_ARRAY ; private IndicesOptions indicesOptions = IndicesOptions . strictExpandOpen ( ) ; @SuppressWarnings ( <str> ) @Override public T indices ( String . . . indices ) { this . indices = indices ; return ( T ) this ; } @SuppressWarnings ( <str> ) public T types ( String . . . types ) { this . types = types ; return ( T ) this ; } @SuppressWarnings ( <str> ) public T indicesOptions ( IndicesOptions indicesOptions ) { this . indicesOptions = indicesOptions ; return ( T ) this ; } @Override public String [ ] indices ( ) { return indices ; } public String [ ] types ( ) { return types ; } @Override public IndicesOptions indicesOptions ( ) { return indicesOptions ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; indices = in . readStringArray ( ) ; types = in . readStringArray ( ) ; indicesOptions = IndicesOptions . readIndicesOptions ( in ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeStringArray ( indices ) ; out . writeStringArray ( types ) ; indicesOptions . writeIndicesOptions ( out ) ; } } 
