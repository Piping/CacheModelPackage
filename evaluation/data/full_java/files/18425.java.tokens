package com . badlogic . gdx . utils . viewport ; import com . badlogic . gdx . ApplicationListener ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . Screen ; import com . badlogic . gdx . graphics . Camera ; import com . badlogic . gdx . math . Matrix4 ; import com . badlogic . gdx . math . Rectangle ; import com . badlogic . gdx . math . Vector2 ; import com . badlogic . gdx . math . Vector3 ; import com . badlogic . gdx . math . collision . Ray ; import com . badlogic . gdx . scenes . scene2d . utils . ScissorStack ; public abstract class Viewport { private Camera camera ; private float worldWidth , worldHeight ; private int screenX , screenY , screenWidth , screenHeight ; private final Vector3 tmp = new Vector3 ( ) ; public void apply ( ) { apply ( false ) ; } public void apply ( boolean centerCamera ) { Gdx . gl . glViewport ( screenX , screenY , screenWidth , screenHeight ) ; camera . viewportWidth = worldWidth ; camera . viewportHeight = worldHeight ; if ( centerCamera ) camera . position . set ( worldWidth / <int> , worldHeight / <int> , <int> ) ; camera . update ( ) ; } public final void update ( int screenWidth , int screenHeight ) { update ( screenWidth , screenHeight , false ) ; } public void update ( int screenWidth , int screenHeight , boolean centerCamera ) { apply ( centerCamera ) ; } public Vector2 unproject ( Vector2 screenCoords ) { tmp . set ( screenCoords . x , screenCoords . y , <int> ) ; camera . unproject ( tmp , screenX , screenY , screenWidth , screenHeight ) ; screenCoords . set ( tmp . x , tmp . y ) ; return screenCoords ; } public Vector2 project ( Vector2 worldCoords ) { tmp . set ( worldCoords . x , worldCoords . y , <int> ) ; camera . project ( tmp , screenX , screenY , screenWidth , screenHeight ) ; worldCoords . set ( tmp . x , tmp . y ) ; return worldCoords ; } public Vector3 unproject ( Vector3 screenCoords ) { camera . unproject ( screenCoords , screenX , screenY , screenWidth , screenHeight ) ; return screenCoords ; } public Vector3 project ( Vector3 worldCoords ) { camera . project ( worldCoords , screenX , screenY , screenWidth , screenHeight ) ; return worldCoords ; } public Ray getPickRay ( float screenX , float screenY ) { return camera . getPickRay ( screenX , screenY , this . screenX , this . screenY , screenWidth , screenHeight ) ; } public void calculateScissors ( Matrix4 batchTransform , Rectangle area , Rectangle scissor ) { ScissorStack . calculateScissors ( camera , screenX , screenY , screenWidth , screenHeight , batchTransform , area , scissor ) ; } public Vector2 toScreenCoordinates ( Vector2 worldCoords , Matrix4 transformMatrix ) { tmp . set ( worldCoords . x , worldCoords . y , <int> ) ; tmp . mul ( transformMatrix ) ; camera . project ( tmp ) ; tmp . y = Gdx . graphics . getHeight ( ) - tmp . y ; worldCoords . x = tmp . x ; worldCoords . y = tmp . y ; return worldCoords ; } public Camera getCamera ( ) { return camera ; } public void setCamera ( Camera camera ) { this . camera = camera ; } public float getWorldWidth ( ) { return worldWidth ; } public void setWorldWidth ( float worldWidth ) { this . worldWidth = worldWidth ; } public float getWorldHeight ( ) { return worldHeight ; } public void setWorldHeight ( float worldHeight ) { this . worldHeight = worldHeight ; } public void setWorldSize ( float worldWidth , float worldHeight ) { this . worldWidth = worldWidth ; this . worldHeight = worldHeight ; } public int getScreenX ( ) { return screenX ; } public void setScreenX ( int screenX ) { this . screenX = screenX ; } public int getScreenY ( ) { return screenY ; } public void setScreenY ( int screenY ) { this . screenY = screenY ; } public int getScreenWidth ( ) { return screenWidth ; } public void setScreenWidth ( int screenWidth ) { this . screenWidth = screenWidth ; } public int getScreenHeight ( ) { return screenHeight ; } public void setScreenHeight ( int screenHeight ) { this . screenHeight = screenHeight ; } public void setScreenPosition ( int screenX , int screenY ) { this . screenX = screenX ; this . screenY = screenY ; } public void setScreenSize ( int screenWidth , int screenHeight ) { this . screenWidth = screenWidth ; this . screenHeight = screenHeight ; } public void setScreenBounds ( int screenX , int screenY , int screenWidth , int screenHeight ) { this . screenX = screenX ; this . screenY = screenY ; this . screenWidth = screenWidth ; this . screenHeight = screenHeight ; } public int getLeftGutterWidth ( ) { return screenX ; } public int getRightGutterX ( ) { return screenX + screenWidth ; } public int getRightGutterWidth ( ) { return Gdx . graphics . getWidth ( ) - ( screenX + screenWidth ) ; } public int getBottomGutterHeight ( ) { return screenY ; } public int getTopGutterY ( ) { return screenY + screenHeight ; } public int getTopGutterHeight ( ) { return Gdx . graphics . getHeight ( ) - ( screenY + screenHeight ) ; } } 
