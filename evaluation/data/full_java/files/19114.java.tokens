package io . netty . handler . codec . http ; import io . netty . util . AsciiString ; public enum HttpStatusClass { INFORMATIONAL ( <int> , <int> , <str> ) , SUCCESS ( <int> , <int> , <str> ) , REDIRECTION ( <int> , <int> , <str> ) , CLIENT_ERROR ( <int> , <int> , <str> ) , SERVER_ERROR ( <int> , <int> , <str> ) , UNKNOWN ( <int> , <int> , <str> ) { @Override public boolean contains ( int code ) { return code < <int> | | code > = <int> ; } } ; public static HttpStatusClass valueOf ( int code ) { if ( INFORMATIONAL . contains ( code ) ) { return INFORMATIONAL ; } if ( SUCCESS . contains ( code ) ) { return SUCCESS ; } if ( REDIRECTION . contains ( code ) ) { return REDIRECTION ; } if ( CLIENT_ERROR . contains ( code ) ) { return CLIENT_ERROR ; } if ( SERVER_ERROR . contains ( code ) ) { return SERVER_ERROR ; } return UNKNOWN ; } private final int min ; private final int max ; private final AsciiString defaultReasonPhrase ; HttpStatusClass ( int min , int max , String defaultReasonPhrase ) { this . min = min ; this . max = max ; this . defaultReasonPhrase = new AsciiString ( defaultReasonPhrase ) ; } public boolean contains ( int code ) { return code > = min & & code < max ; } AsciiString defaultReasonPhrase ( ) { return defaultReasonPhrase ; } } 
