package org . elasticsearch . action . bulk ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . test . ESIntegTestCase ; import org . elasticsearch . test . ESIntegTestCase . ClusterScope ; import org . elasticsearch . test . ESIntegTestCase . Scope ; @ClusterScope ( scope = Scope . TEST , numDataNodes = <int> ) public class BulkProcessorClusterSettingsIT extends ESIntegTestCase { public void testBulkProcessorAutoCreateRestrictions ( ) throws Exception { Settings settings = Settings . settingsBuilder ( ) . put ( <str> , false ) . build ( ) ; internalCluster ( ) . startNode ( settings ) ; createIndex ( <str> ) ; client ( ) . admin ( ) . cluster ( ) . prepareHealth ( <str> ) . setWaitForGreenStatus ( ) . execute ( ) . actionGet ( ) ; BulkRequestBuilder bulkRequestBuilder = client ( ) . prepareBulk ( ) ; bulkRequestBuilder . add ( client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> ) ) ; bulkRequestBuilder . add ( client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> ) ) ; bulkRequestBuilder . add ( client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> ) ) ; BulkResponse br = bulkRequestBuilder . get ( ) ; BulkItemResponse [ ] responses = br . getItems ( ) ; assertEquals ( <int> , responses . length ) ; assertFalse ( <str> , responses [ <int> ] . isFailed ( ) ) ; assertTrue ( <str> , responses [ <int> ] . isFailed ( ) ) ; assertEquals ( <str> , responses [ <int> ] . getFailureMessage ( ) ) ; assertFalse ( <str> , responses [ <int> ] . isFailed ( ) ) ; } } 
