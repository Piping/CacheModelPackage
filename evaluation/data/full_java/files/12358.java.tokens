package org . gradle . api . internal ; import static org . hamcrest . Matchers . * ; import static org . junit . Assert . * ; import org . junit . Test ; import groovy . lang . * ; import groovy . lang . MissingMethodException ; public class AbstractDynamicObjectTest { private final AbstractDynamicObject object = new AbstractDynamicObject ( ) { protected String getDisplayName ( ) { return <str> ; } } ; @Test public void hasNoProperties ( ) { assertFalse ( object . hasProperty ( <str> ) ) ; assertTrue ( object . getProperties ( ) . isEmpty ( ) ) ; try { object . getProperty ( <str> ) ; fail ( ) ; } catch ( MissingPropertyException e ) { assertThat ( e . getMessage ( ) , equalTo ( <str> ) ) ; } try { object . setProperty ( <str> , <str> ) ; fail ( ) ; } catch ( MissingPropertyException e ) { assertThat ( e . getMessage ( ) , equalTo ( <str> ) ) ; } } @Test public void hasNoMethods ( ) { assertFalse ( object . hasMethod ( <str> , <str> ) ) ; try { object . invokeMethod ( <str> , <str> ) ; fail ( ) ; } catch ( MissingMethodException e ) { } } } 
