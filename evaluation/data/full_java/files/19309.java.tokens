package io . netty . handler . codec . rtsp ; import static org . junit . Assert . assertEquals ; import io . netty . buffer . ByteBuf ; import io . netty . channel . embedded . EmbeddedChannel ; import io . netty . handler . codec . http . DefaultFullHttpRequest ; import io . netty . handler . codec . http . DefaultFullHttpResponse ; import io . netty . handler . codec . http . DefaultHttpRequest ; import io . netty . handler . codec . http . DefaultHttpResponse ; import io . netty . handler . codec . http . FullHttpRequest ; import io . netty . handler . codec . http . FullHttpResponse ; import io . netty . handler . codec . http . HttpRequest ; import io . netty . handler . codec . http . HttpResponse ; import io . netty . util . CharsetUtil ; import org . junit . Test ; public class RtspEncoderTest { @Test public void testSendSetupRequest ( ) { String expected = <str> + <str> + <str> + <str> + <str> + <str> + <str> ; HttpRequest request = new DefaultHttpRequest ( RtspVersions . RTSP_1_0 , RtspMethods . SETUP , <str> ) ; request . headers ( ) . add ( RtspHeaderNames . TRANSPORT , <str> + <str> ) ; request . headers ( ) . add ( RtspHeaderNames . CSEQ , <str> ) ; EmbeddedChannel ch = new EmbeddedChannel ( new RtspEncoder ( ) ) ; ch . writeOutbound ( request ) ; ByteBuf buf = ch . readOutbound ( ) ; String actual = buf . toString ( CharsetUtil . UTF_8 ) ; buf . release ( ) ; assertEquals ( expected , actual ) ; } @Test public void testSendGetParameterRequest ( ) { String expected = <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ; byte [ ] content = ( <str> + <str> + <str> ) . getBytes ( CharsetUtil . UTF_8 ) ; FullHttpRequest request = new DefaultFullHttpRequest ( RtspVersions . RTSP_1_0 , RtspMethods . GET_PARAMETER , <str> ) ; request . headers ( ) . add ( RtspHeaderNames . SESSION , <str> ) ; request . headers ( ) . add ( RtspHeaderNames . CSEQ , <str> ) ; request . headers ( ) . add ( RtspHeaderNames . CONTENT_LENGTH , <str> + content . length ) ; request . headers ( ) . add ( RtspHeaderNames . CONTENT_TYPE , <str> ) ; request . content ( ) . writeBytes ( content ) ; EmbeddedChannel ch = new EmbeddedChannel ( new RtspEncoder ( ) ) ; ch . writeOutbound ( request ) ; ByteBuf buf = ch . readOutbound ( ) ; String actual = buf . toString ( CharsetUtil . UTF_8 ) ; buf . release ( ) ; assertEquals ( expected , actual ) ; } @Test public void testSend200OkResponseWithoutBody ( ) { String expected = <str> + <str> + <str> + <str> + <str> ; HttpResponse response = new DefaultHttpResponse ( RtspVersions . RTSP_1_0 , RtspResponseStatuses . OK ) ; response . headers ( ) . add ( RtspHeaderNames . SERVER , <str> ) ; response . headers ( ) . add ( RtspHeaderNames . CSEQ , <str> ) ; response . headers ( ) . add ( RtspHeaderNames . SESSION , <str> ) ; EmbeddedChannel ch = new EmbeddedChannel ( new RtspEncoder ( ) ) ; ch . writeOutbound ( response ) ; ByteBuf buf = ch . readOutbound ( ) ; String actual = buf . toString ( CharsetUtil . UTF_8 ) ; buf . release ( ) ; assertEquals ( expected , actual ) ; } @Test public void testSend200OkResponseWithBody ( ) { String expected = <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ; byte [ ] content = ( <str> + <str> + <str> ) . getBytes ( CharsetUtil . UTF_8 ) ; FullHttpResponse response = new DefaultFullHttpResponse ( RtspVersions . RTSP_1_0 , RtspResponseStatuses . OK ) ; response . headers ( ) . add ( RtspHeaderNames . SERVER , <str> ) ; response . headers ( ) . add ( RtspHeaderNames . SESSION , <str> ) ; response . headers ( ) . add ( RtspHeaderNames . CONTENT_TYPE , <str> ) ; response . headers ( ) . add ( RtspHeaderNames . CONTENT_LENGTH , <str> + content . length ) ; response . headers ( ) . add ( RtspHeaderNames . CSEQ , <str> ) ; response . content ( ) . writeBytes ( content ) ; EmbeddedChannel ch = new EmbeddedChannel ( new RtspEncoder ( ) ) ; ch . writeOutbound ( response ) ; ByteBuf buf = ch . readOutbound ( ) ; String actual = buf . toString ( CharsetUtil . UTF_8 ) ; buf . release ( ) ; assertEquals ( expected , actual ) ; } } 
