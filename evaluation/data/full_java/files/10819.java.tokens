package org . gradle . internal . classloader ; import java . net . URL ; import java . net . URLClassLoader ; public class ClassLoaderVisitor { private final ClassLoader stopAt = ClassLoader . getSystemClassLoader ( ) = = null ? null : ClassLoader . getSystemClassLoader ( ) . getParent ( ) ; public void visit ( ClassLoader classLoader ) { if ( classLoader = = stopAt ) { visitSpec ( ClassLoaderSpec . SYSTEM_CLASS_LOADER ) ; return ; } if ( classLoader instanceof ClassLoaderHierarchy ) { ( ( ClassLoaderHierarchy ) classLoader ) . visit ( this ) ; } else { if ( classLoader instanceof URLClassLoader ) { visitClassPath ( ( ( URLClassLoader ) classLoader ) . getURLs ( ) ) ; } if ( classLoader . getParent ( ) ! = null ) { visitParent ( classLoader . getParent ( ) ) ; } } } public void visitSpec ( ClassLoaderSpec spec ) { } public void visitClassPath ( URL [ ] classPath ) { } public void visitParent ( ClassLoader classLoader ) { visit ( classLoader ) ; } } 
