package org . elasticsearch . action . admin . cluster . node . info ; import org . elasticsearch . action . support . nodes . BaseNodesRequest ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import java . io . IOException ; public class NodesInfoRequest extends BaseNodesRequest < NodesInfoRequest > { private boolean settings = true ; private boolean os = true ; private boolean process = true ; private boolean jvm = true ; private boolean threadPool = true ; private boolean transport = true ; private boolean http = true ; private boolean plugins = true ; public NodesInfoRequest ( ) { } public NodesInfoRequest ( String . . . nodesIds ) { super ( nodesIds ) ; } public NodesInfoRequest clear ( ) { settings = false ; os = false ; process = false ; jvm = false ; threadPool = false ; transport = false ; http = false ; plugins = false ; return this ; } public NodesInfoRequest all ( ) { settings = true ; os = true ; process = true ; jvm = true ; threadPool = true ; transport = true ; http = true ; plugins = true ; return this ; } public boolean settings ( ) { return this . settings ; } public NodesInfoRequest settings ( boolean settings ) { this . settings = settings ; return this ; } public boolean os ( ) { return this . os ; } public NodesInfoRequest os ( boolean os ) { this . os = os ; return this ; } public boolean process ( ) { return this . process ; } public NodesInfoRequest process ( boolean process ) { this . process = process ; return this ; } public boolean jvm ( ) { return this . jvm ; } public NodesInfoRequest jvm ( boolean jvm ) { this . jvm = jvm ; return this ; } public boolean threadPool ( ) { return this . threadPool ; } public NodesInfoRequest threadPool ( boolean threadPool ) { this . threadPool = threadPool ; return this ; } public boolean transport ( ) { return this . transport ; } public NodesInfoRequest transport ( boolean transport ) { this . transport = transport ; return this ; } public boolean http ( ) { return this . http ; } public NodesInfoRequest http ( boolean http ) { this . http = http ; return this ; } public NodesInfoRequest plugins ( boolean plugins ) { this . plugins = plugins ; return this ; } public boolean plugins ( ) { return plugins ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; settings = in . readBoolean ( ) ; os = in . readBoolean ( ) ; process = in . readBoolean ( ) ; jvm = in . readBoolean ( ) ; threadPool = in . readBoolean ( ) ; transport = in . readBoolean ( ) ; http = in . readBoolean ( ) ; plugins = in . readBoolean ( ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeBoolean ( settings ) ; out . writeBoolean ( os ) ; out . writeBoolean ( process ) ; out . writeBoolean ( jvm ) ; out . writeBoolean ( threadPool ) ; out . writeBoolean ( transport ) ; out . writeBoolean ( http ) ; out . writeBoolean ( plugins ) ; } } 
