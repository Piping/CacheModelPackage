package org . elasticsearch . test . rest . test ; import org . elasticsearch . common . xcontent . XContentParser ; import org . elasticsearch . common . xcontent . json . JsonXContent ; import org . elasticsearch . common . xcontent . yaml . YamlXContent ; import org . elasticsearch . test . rest . parser . DoSectionParser ; import org . elasticsearch . test . rest . parser . RestTestParseException ; import org . elasticsearch . test . rest . parser . RestTestSuiteParseContext ; import org . elasticsearch . test . rest . section . ApiCallSection ; import org . elasticsearch . test . rest . section . DoSection ; import org . hamcrest . MatcherAssert ; import java . io . IOException ; import java . util . Map ; import static org . hamcrest . CoreMatchers . equalTo ; import static org . hamcrest . Matchers . is ; import static org . hamcrest . Matchers . notNullValue ; import static org . hamcrest . Matchers . nullValue ; public class DoSectionParserTests extends AbstractParserTestCase { public void testParseDoSectionNoBody ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> + <str> + <str> + <str> ) ; DoSectionParser doSectionParser = new DoSectionParser ( ) ; DoSection doSection = doSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; ApiCallSection apiCallSection = doSection . getApiCallSection ( ) ; assertThat ( apiCallSection , notNullValue ( ) ) ; assertThat ( apiCallSection . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( apiCallSection . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . hasBody ( ) , equalTo ( false ) ) ; } public void testParseDoSectionNoParamsNoBody ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> ) ; DoSectionParser doSectionParser = new DoSectionParser ( ) ; DoSection doSection = doSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; ApiCallSection apiCallSection = doSection . getApiCallSection ( ) ; assertThat ( apiCallSection , notNullValue ( ) ) ; assertThat ( apiCallSection . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( apiCallSection . hasBody ( ) , equalTo ( false ) ) ; } public void testParseDoSectionWithJsonBody ( ) throws Exception { String body = <str> ; parser = YamlXContent . yamlXContent . createParser ( <str> + <str> + <str> + <str> + <str> + body ) ; DoSectionParser doSectionParser = new DoSectionParser ( ) ; DoSection doSection = doSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; ApiCallSection apiCallSection = doSection . getApiCallSection ( ) ; assertThat ( apiCallSection , notNullValue ( ) ) ; assertThat ( apiCallSection . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( apiCallSection . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . hasBody ( ) , equalTo ( true ) ) ; assertJsonEquals ( apiCallSection . getBodies ( ) . get ( <int> ) , body ) ; } public void testParseDoSectionWithJsonMultipleBodiesAsLongString ( ) throws Exception { String bodies [ ] = new String [ ] { <str> , <str> , <str> , <str> } ; parser = YamlXContent . yamlXContent . createParser ( <str> + <str> + <str> + <str> + bodies [ <int> ] + <str> + bodies [ <int> ] + <str> + bodies [ <int> ] + <str> + bodies [ <int> ] ) ; DoSectionParser doSectionParser = new DoSectionParser ( ) ; DoSection doSection = doSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; ApiCallSection apiCallSection = doSection . getApiCallSection ( ) ; assertThat ( apiCallSection , notNullValue ( ) ) ; assertThat ( apiCallSection . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( apiCallSection . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . hasBody ( ) , equalTo ( true ) ) ; assertThat ( apiCallSection . getBodies ( ) . size ( ) , equalTo ( <int> ) ) ; } public void testParseDoSectionWithJsonMultipleBodiesRepeatedProperty ( ) throws Exception { String [ ] bodies = new String [ ] { <str> , <str> , } ; parser = YamlXContent . yamlXContent . createParser ( <str> + <str> + <str> + <str> + bodies [ <int> ] + <str> + <str> + <str> + bodies [ <int> ] ) ; DoSectionParser doSectionParser = new DoSectionParser ( ) ; DoSection doSection = doSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; ApiCallSection apiCallSection = doSection . getApiCallSection ( ) ; assertThat ( apiCallSection , notNullValue ( ) ) ; assertThat ( apiCallSection . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( apiCallSection . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . hasBody ( ) , equalTo ( true ) ) ; assertThat ( apiCallSection . getBodies ( ) . size ( ) , equalTo ( bodies . length ) ) ; for ( int i = <int> ; i < bodies . length ; i + + ) { assertJsonEquals ( apiCallSection . getBodies ( ) . get ( i ) , bodies [ i ] ) ; } } public void testParseDoSectionWithYamlBody ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> + <str> + <str> + <str> ) ; String body = <str> ; DoSectionParser doSectionParser = new DoSectionParser ( ) ; DoSection doSection = doSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; ApiCallSection apiCallSection = doSection . getApiCallSection ( ) ; assertThat ( apiCallSection , notNullValue ( ) ) ; assertThat ( apiCallSection . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( apiCallSection . hasBody ( ) , equalTo ( true ) ) ; assertThat ( apiCallSection . getBodies ( ) . size ( ) , equalTo ( <int> ) ) ; assertJsonEquals ( apiCallSection . getBodies ( ) . get ( <int> ) , body ) ; } public void testParseDoSectionWithYamlMultipleBodies ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ) ; String [ ] bodies = new String [ <int> ] ; bodies [ <int> ] = <str> ; bodies [ <int> ] = <str> ; bodies [ <int> ] = <str> ; bodies [ <int> ] = <str> ; DoSectionParser doSectionParser = new DoSectionParser ( ) ; DoSection doSection = doSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; ApiCallSection apiCallSection = doSection . getApiCallSection ( ) ; assertThat ( apiCallSection , notNullValue ( ) ) ; assertThat ( apiCallSection . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( apiCallSection . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . hasBody ( ) , equalTo ( true ) ) ; assertThat ( apiCallSection . getBodies ( ) . size ( ) , equalTo ( bodies . length ) ) ; for ( int i = <int> ; i < bodies . length ; i + + ) { assertJsonEquals ( apiCallSection . getBodies ( ) . get ( i ) , bodies [ i ] ) ; } } public void testParseDoSectionWithYamlMultipleBodiesRepeatedProperty ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ) ; String [ ] bodies = new String [ <int> ] ; bodies [ <int> ] = <str> ; bodies [ <int> ] = <str> ; DoSectionParser doSectionParser = new DoSectionParser ( ) ; DoSection doSection = doSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; ApiCallSection apiCallSection = doSection . getApiCallSection ( ) ; assertThat ( apiCallSection , notNullValue ( ) ) ; assertThat ( apiCallSection . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( apiCallSection . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . hasBody ( ) , equalTo ( true ) ) ; assertThat ( apiCallSection . getBodies ( ) . size ( ) , equalTo ( bodies . length ) ) ; for ( int i = <int> ; i < bodies . length ; i + + ) { assertJsonEquals ( apiCallSection . getBodies ( ) . get ( i ) , bodies [ i ] ) ; } } public void testParseDoSectionWithYamlBodyMultiGet ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> + <str> + <str> + <str> + <str> ) ; String body = <str> + <str> + <str> + <str> ; DoSectionParser doSectionParser = new DoSectionParser ( ) ; DoSection doSection = doSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; ApiCallSection apiCallSection = doSection . getApiCallSection ( ) ; assertThat ( apiCallSection , notNullValue ( ) ) ; assertThat ( apiCallSection . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( apiCallSection . hasBody ( ) , equalTo ( true ) ) ; assertThat ( apiCallSection . getBodies ( ) . size ( ) , equalTo ( <int> ) ) ; assertJsonEquals ( apiCallSection . getBodies ( ) . get ( <int> ) , body ) ; } public void testParseDoSectionWithBodyStringified ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> + <str> + <str> + <str> + <str> ) ; DoSectionParser doSectionParser = new DoSectionParser ( ) ; DoSection doSection = doSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; ApiCallSection apiCallSection = doSection . getApiCallSection ( ) ; assertThat ( apiCallSection , notNullValue ( ) ) ; assertThat ( apiCallSection . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( apiCallSection . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . hasBody ( ) , equalTo ( true ) ) ; assertThat ( apiCallSection . getBodies ( ) . size ( ) , equalTo ( <int> ) ) ; assertJsonEquals ( apiCallSection . getBodies ( ) . get ( <int> ) , <str> ) ; } public void testParseDoSectionWithBodiesStringifiedAndNot ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> + <str> + <str> + <str> ) ; String body = <str> ; DoSectionParser doSectionParser = new DoSectionParser ( ) ; DoSection doSection = doSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; ApiCallSection apiCallSection = doSection . getApiCallSection ( ) ; assertThat ( apiCallSection . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( apiCallSection . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( apiCallSection . hasBody ( ) , equalTo ( true ) ) ; assertThat ( apiCallSection . getBodies ( ) . size ( ) , equalTo ( <int> ) ) ; assertJsonEquals ( apiCallSection . getBodies ( ) . get ( <int> ) , <str> ) ; assertJsonEquals ( apiCallSection . getBodies ( ) . get ( <int> ) , body ) ; } public void testParseDoSectionWithCatch ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> + <str> + <str> + <str> ) ; DoSectionParser doSectionParser = new DoSectionParser ( ) ; DoSection doSection = doSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; assertThat ( doSection . getCatch ( ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) , notNullValue ( ) ) ; assertThat ( doSection . getApiCallSection ( ) . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( doSection . getApiCallSection ( ) . hasBody ( ) , equalTo ( false ) ) ; } public void testParseDoSectionWithHeaders ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> + <str> + <str> + <str> + <str> + <str> ) ; DoSectionParser doSectionParser = new DoSectionParser ( ) ; DoSection doSection = doSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; assertThat ( doSection . getApiCallSection ( ) , notNullValue ( ) ) ; assertThat ( doSection . getApiCallSection ( ) . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( doSection . getApiCallSection ( ) . hasBody ( ) , equalTo ( false ) ) ; assertThat ( doSection . getApiCallSection ( ) . getHeaders ( ) , notNullValue ( ) ) ; assertThat ( doSection . getApiCallSection ( ) . getHeaders ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getHeaders ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getHeaders ( ) . get ( <str> ) , equalTo ( <str> ) ) ; } public void testParseDoSectionWithoutClientCallSection ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> ) ; DoSectionParser doSectionParser = new DoSectionParser ( ) ; try { doSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; fail ( <str> ) ; } catch ( RestTestParseException e ) { assertThat ( e . getMessage ( ) , is ( <str> ) ) ; } } public void testParseDoSectionMultivaluedField ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> + <str> + <str> + <str> ) ; DoSectionParser doSectionParser = new DoSectionParser ( ) ; DoSection doSection = doSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; assertThat ( doSection . getCatch ( ) , nullValue ( ) ) ; assertThat ( doSection . getApiCallSection ( ) , notNullValue ( ) ) ; assertThat ( doSection . getApiCallSection ( ) . getApi ( ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getParams ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . getParams ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( doSection . getApiCallSection ( ) . hasBody ( ) , equalTo ( false ) ) ; assertThat ( doSection . getApiCallSection ( ) . getBodies ( ) . size ( ) , equalTo ( <int> ) ) ; } private static void assertJsonEquals ( Map < String , Object > actual , String expected ) throws IOException { Map < String , Object > expectedMap ; try ( XContentParser parser = JsonXContent . jsonXContent . createParser ( expected ) ) { expectedMap = parser . mapOrdered ( ) ; } MatcherAssert . assertThat ( actual , equalTo ( expectedMap ) ) ; } } 
