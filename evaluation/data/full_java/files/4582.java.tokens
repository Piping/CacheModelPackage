package org . eclipse . debug . internal . ui . views . memory ; import java . util . ArrayList ; import org . eclipse . jface . viewers . ISelection ; import org . eclipse . jface . viewers . ISelectionChangedListener ; import org . eclipse . jface . viewers . ISelectionProvider ; import org . eclipse . jface . viewers . SelectionChangedEvent ; public class ViewPaneSelectionProvider implements ISelectionProvider { ArrayList < ISelectionChangedListener > fListeners = new ArrayList < ISelectionChangedListener > ( ) ; ISelection fSelection ; @Override public void addSelectionChangedListener ( ISelectionChangedListener listener ) { if ( ! fListeners . contains ( listener ) ) fListeners . add ( listener ) ; } @Override public ISelection getSelection ( ) { return fSelection ; } @Override public void removeSelectionChangedListener ( ISelectionChangedListener listener ) { if ( fListeners . contains ( listener ) ) fListeners . remove ( listener ) ; } @Override public void setSelection ( ISelection selection ) { fSelection = selection ; fireChanged ( ) ; } public void fireChanged ( ) { SelectionChangedEvent evt = new SelectionChangedEvent ( this , getSelection ( ) ) ; for ( int i = <int> ; i < fListeners . size ( ) ; i + + ) { fListeners . get ( i ) . selectionChanged ( evt ) ; } } } 
