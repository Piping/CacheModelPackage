package org . gradle . model . collection ; import org . gradle . api . Action ; import org . gradle . api . Nullable ; import org . gradle . model . RuleSource ; import java . util . Collection ; import java . util . Set ; @Deprecated public interface CollectionBuilder < T > { < S > CollectionBuilder < S > withType ( Class < S > type ) ; int size ( ) ; boolean isEmpty ( ) ; @Nullable T get ( Object name ) ; @Nullable T get ( String name ) ; boolean containsKey ( Object name ) ; boolean containsValue ( Object item ) ; Set < String > keySet ( ) ; void create ( String name ) ; void create ( String name , Action < ? super T > configAction ) ; < S extends T > void create ( String name , Class < S > type ) ; < S extends T > void create ( String name , Class < S > type , Action < ? super S > configAction ) ; void named ( String name , Action < ? super T > configAction ) ; void named ( String name , Class < ? extends RuleSource > ruleSource ) ; void beforeEach ( Action < ? super T > configAction ) ; < S > void beforeEach ( Class < S > type , Action < ? super S > configAction ) ; void all ( Action < ? super T > configAction ) ; < S > void withType ( Class < S > type , Action < ? super S > configAction ) ; < S > void withType ( Class < S > type , Class < ? extends RuleSource > rules ) ; void afterEach ( Action < ? super T > configAction ) ; < S > void afterEach ( Class < S > type , Action < ? super S > configAction ) ; Collection < T > values ( ) ; } 
