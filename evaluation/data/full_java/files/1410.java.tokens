package org . apache . cassandra . cql3 . validation . miscellaneous ; import org . junit . Test ; import org . apache . cassandra . cql3 . CQLTester ; import org . apache . cassandra . db . ColumnFamilyStore ; import org . apache . cassandra . db . Keyspace ; import org . apache . cassandra . io . sstable . metadata . StatsMetadata ; import static org . junit . Assert . assertEquals ; public class SSTableMetadataTrackingTest extends CQLTester { @Test public void baseCheck ( ) throws Throwable { createTable ( <str> ) ; ColumnFamilyStore cfs = Keyspace . open ( keyspace ( ) ) . getColumnFamilyStore ( currentTable ( ) ) ; execute ( <str> ) ; cfs . forceBlockingFlush ( ) ; StatsMetadata metadata = cfs . getLiveSSTables ( ) . iterator ( ) . next ( ) . getSSTableMetadata ( ) ; assertEquals ( <int> , metadata . minTimestamp ) ; assertEquals ( Integer . MAX_VALUE , metadata . maxLocalDeletionTime ) ; cfs . forceMajorCompaction ( ) ; metadata = cfs . getLiveSSTables ( ) . iterator ( ) . next ( ) . getSSTableMetadata ( ) ; assertEquals ( <int> , metadata . minTimestamp ) ; assertEquals ( Integer . MAX_VALUE , metadata . maxLocalDeletionTime ) ; } @Test public void testMinMaxtimestampRange ( ) throws Throwable { createTable ( <str> ) ; ColumnFamilyStore cfs = Keyspace . open ( keyspace ( ) ) . getColumnFamilyStore ( currentTable ( ) ) ; execute ( <str> ) ; execute ( <str> ) ; cfs . forceBlockingFlush ( ) ; StatsMetadata metadata = cfs . getLiveSSTables ( ) . iterator ( ) . next ( ) . getSSTableMetadata ( ) ; assertEquals ( <int> , metadata . minTimestamp ) ; assertEquals ( <int> , metadata . maxTimestamp ) ; assertEquals ( Integer . MAX_VALUE , metadata . maxLocalDeletionTime , <int> ) ; cfs . forceMajorCompaction ( ) ; metadata = cfs . getLiveSSTables ( ) . iterator ( ) . next ( ) . getSSTableMetadata ( ) ; assertEquals ( <int> , metadata . minTimestamp ) ; assertEquals ( <int> , metadata . maxTimestamp ) ; assertEquals ( Integer . MAX_VALUE , metadata . maxLocalDeletionTime , <int> ) ; } @Test public void testMinMaxtimestampRow ( ) throws Throwable { createTable ( <str> ) ; ColumnFamilyStore cfs = Keyspace . open ( keyspace ( ) ) . getColumnFamilyStore ( currentTable ( ) ) ; execute ( <str> ) ; execute ( <str> ) ; cfs . forceBlockingFlush ( ) ; StatsMetadata metadata = cfs . getLiveSSTables ( ) . iterator ( ) . next ( ) . getSSTableMetadata ( ) ; assertEquals ( <int> , metadata . minTimestamp ) ; assertEquals ( <int> , metadata . maxTimestamp ) ; assertEquals ( Integer . MAX_VALUE , metadata . maxLocalDeletionTime , <int> ) ; cfs . forceMajorCompaction ( ) ; metadata = cfs . getLiveSSTables ( ) . iterator ( ) . next ( ) . getSSTableMetadata ( ) ; assertEquals ( <int> , metadata . minTimestamp ) ; assertEquals ( <int> , metadata . maxTimestamp ) ; assertEquals ( Integer . MAX_VALUE , metadata . maxLocalDeletionTime , <int> ) ; } @Test public void testTrackMetadata_rangeTombstone ( ) throws Throwable { createTable ( <str> ) ; ColumnFamilyStore cfs = Keyspace . open ( keyspace ( ) ) . getColumnFamilyStore ( currentTable ( ) ) ; execute ( <str> ) ; cfs . forceBlockingFlush ( ) ; assertEquals ( <int> , cfs . getLiveSSTables ( ) . size ( ) ) ; StatsMetadata metadata = cfs . getLiveSSTables ( ) . iterator ( ) . next ( ) . getSSTableMetadata ( ) ; assertEquals ( <int> , metadata . minTimestamp ) ; assertEquals ( <int> , metadata . maxTimestamp ) ; assertEquals ( System . currentTimeMillis ( ) / <int> , metadata . maxLocalDeletionTime , <int> ) ; cfs . forceMajorCompaction ( ) ; StatsMetadata metadata2 = cfs . getLiveSSTables ( ) . iterator ( ) . next ( ) . getSSTableMetadata ( ) ; assertEquals ( metadata . maxLocalDeletionTime , metadata2 . maxLocalDeletionTime ) ; assertEquals ( metadata . minTimestamp , metadata2 . minTimestamp ) ; assertEquals ( metadata . maxTimestamp , metadata2 . maxTimestamp ) ; } @Test public void testTrackMetadata_rowTombstone ( ) throws Throwable { createTable ( <str> ) ; ColumnFamilyStore cfs = Keyspace . open ( keyspace ( ) ) . getColumnFamilyStore ( currentTable ( ) ) ; execute ( <str> ) ; cfs . forceBlockingFlush ( ) ; assertEquals ( <int> , cfs . getLiveSSTables ( ) . size ( ) ) ; StatsMetadata metadata = cfs . getLiveSSTables ( ) . iterator ( ) . next ( ) . getSSTableMetadata ( ) ; assertEquals ( <int> , metadata . minTimestamp ) ; assertEquals ( <int> , metadata . maxTimestamp ) ; assertEquals ( System . currentTimeMillis ( ) / <int> , metadata . maxLocalDeletionTime , <int> ) ; cfs . forceMajorCompaction ( ) ; StatsMetadata metadata2 = cfs . getLiveSSTables ( ) . iterator ( ) . next ( ) . getSSTableMetadata ( ) ; assertEquals ( metadata . maxLocalDeletionTime , metadata2 . maxLocalDeletionTime ) ; assertEquals ( metadata . minTimestamp , metadata2 . minTimestamp ) ; assertEquals ( metadata . maxTimestamp , metadata2 . maxTimestamp ) ; } @Test public void testTrackMetadata_rowMarker ( ) throws Throwable { createTable ( <str> ) ; ColumnFamilyStore cfs = Keyspace . open ( keyspace ( ) ) . getColumnFamilyStore ( currentTable ( ) ) ; execute ( <str> ) ; cfs . forceBlockingFlush ( ) ; assertEquals ( <int> , cfs . getLiveSSTables ( ) . size ( ) ) ; StatsMetadata metadata = cfs . getLiveSSTables ( ) . iterator ( ) . next ( ) . getSSTableMetadata ( ) ; assertEquals ( <int> , metadata . minTimestamp ) ; assertEquals ( <int> , metadata . maxTimestamp ) ; assertEquals ( Integer . MAX_VALUE , metadata . maxLocalDeletionTime ) ; cfs . forceMajorCompaction ( ) ; StatsMetadata metadata2 = cfs . getLiveSSTables ( ) . iterator ( ) . next ( ) . getSSTableMetadata ( ) ; assertEquals ( metadata . maxLocalDeletionTime , metadata2 . maxLocalDeletionTime ) ; assertEquals ( metadata . minTimestamp , metadata2 . minTimestamp ) ; assertEquals ( metadata . maxTimestamp , metadata2 . maxTimestamp ) ; } @Test public void testTrackMetadata_rowMarkerDelete ( ) throws Throwable { createTable ( <str> ) ; ColumnFamilyStore cfs = Keyspace . open ( keyspace ( ) ) . getColumnFamilyStore ( currentTable ( ) ) ; execute ( <str> ) ; cfs . forceBlockingFlush ( ) ; assertEquals ( <int> , cfs . getLiveSSTables ( ) . size ( ) ) ; StatsMetadata metadata = cfs . getLiveSSTables ( ) . iterator ( ) . next ( ) . getSSTableMetadata ( ) ; assertEquals ( <int> , metadata . minTimestamp ) ; assertEquals ( <int> , metadata . maxTimestamp ) ; assertEquals ( System . currentTimeMillis ( ) / <int> , metadata . maxLocalDeletionTime , <int> ) ; cfs . forceMajorCompaction ( ) ; StatsMetadata metadata2 = cfs . getLiveSSTables ( ) . iterator ( ) . next ( ) . getSSTableMetadata ( ) ; assertEquals ( metadata . maxLocalDeletionTime , metadata2 . maxLocalDeletionTime ) ; assertEquals ( metadata . minTimestamp , metadata2 . minTimestamp ) ; assertEquals ( metadata . maxTimestamp , metadata2 . maxTimestamp ) ; } } 
