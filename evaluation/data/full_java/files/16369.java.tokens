package org . junit . experimental . theories ; import static java . lang . String . format ; public abstract class PotentialAssignment { public static class CouldNotGenerateValueException extends Exception { private static final long serialVersionUID = <int> ; public CouldNotGenerateValueException ( ) { } public CouldNotGenerateValueException ( Throwable e ) { super ( e ) ; } } public static PotentialAssignment forValue ( final String name , final Object value ) { return new PotentialAssignment ( ) { @Override public Object getValue ( ) { return value ; } @Override public String toString ( ) { return format ( <str> , value ) ; } @Override public String getDescription ( ) { String valueString ; if ( value = = null ) { valueString = <str> ; } else { try { valueString = format ( <str> , value ) ; } catch ( Throwable e ) { valueString = format ( <str> , e . getClass ( ) . getSimpleName ( ) , e . getMessage ( ) ) ; } } return format ( <str> , valueString , name ) ; } } ; } public abstract Object getValue ( ) throws CouldNotGenerateValueException ; public abstract String getDescription ( ) throws CouldNotGenerateValueException ; } 
