package org . elasticsearch . action ; public enum ThreadingModel { NONE ( ( byte ) <int> ) , OPERATION ( ( byte ) <int> ) , LISTENER ( ( byte ) <int> ) , OPERATION_LISTENER ( ( byte ) <int> ) ; private byte id ; ThreadingModel ( byte id ) { this . id = id ; } public byte id ( ) { return this . id ; } public boolean threadedOperation ( ) { return this = = OPERATION | | this = = OPERATION_LISTENER ; } public boolean threadedListener ( ) { return this = = LISTENER | | this = = OPERATION_LISTENER ; } public ThreadingModel addListener ( ) { if ( this = = NONE ) { return LISTENER ; } if ( this = = OPERATION ) { return OPERATION_LISTENER ; } return this ; } public ThreadingModel removeListener ( ) { if ( this = = LISTENER ) { return NONE ; } if ( this = = OPERATION_LISTENER ) { return OPERATION ; } return this ; } public ThreadingModel addOperation ( ) { if ( this = = NONE ) { return OPERATION ; } if ( this = = LISTENER ) { return OPERATION_LISTENER ; } return this ; } public ThreadingModel removeOperation ( ) { if ( this = = OPERATION ) { return NONE ; } if ( this = = OPERATION_LISTENER ) { return LISTENER ; } return this ; } public static ThreadingModel fromId ( byte id ) { if ( id = = <int> ) { return NONE ; } else if ( id = = <int> ) { return OPERATION ; } else if ( id = = <int> ) { return LISTENER ; } else if ( id = = <int> ) { return OPERATION_LISTENER ; } else { throw new IllegalArgumentException ( <str> + id + <str> ) ; } } } 
