package org . eclipse . debug . examples . ui . pda . breakpoints ; import java . util . HashMap ; import java . util . LinkedHashSet ; import java . util . Map ; import java . util . Set ; import org . eclipse . debug . ui . actions . IToggleBreakpointsTarget ; import org . eclipse . debug . ui . actions . IToggleBreakpointsTargetFactory ; import org . eclipse . jface . viewers . ISelection ; import org . eclipse . ui . IWorkbenchPart ; public class PDAToggleWatchpointsTargetFactory implements IToggleBreakpointsTargetFactory { private static final String TOGGLE_WATCHPOINT_TARGET_ACCESS = <str> ; private static final String TOGGLE_WATCHPOINT_TARGET_MODIFICATION = <str> ; private static final String TOGGLE_WATCHPOINT_TARGET_BOTH = <str> ; private static Set < String > TOGGLE_WATCHPOINTS_TARGETS = new LinkedHashSet < String > ( ) ; private final Map < String , IToggleBreakpointsTarget > fToggleWatchpointTargets = new HashMap < String , IToggleBreakpointsTarget > ( <int> ) ; static { TOGGLE_WATCHPOINTS_TARGETS . add ( TOGGLE_WATCHPOINT_TARGET_BOTH ) ; TOGGLE_WATCHPOINTS_TARGETS . add ( TOGGLE_WATCHPOINT_TARGET_ACCESS ) ; TOGGLE_WATCHPOINTS_TARGETS . add ( TOGGLE_WATCHPOINT_TARGET_MODIFICATION ) ; } @Override public IToggleBreakpointsTarget createToggleTarget ( String targetID ) { IToggleBreakpointsTarget target = fToggleWatchpointTargets . get ( targetID ) ; if ( target = = null ) { if ( TOGGLE_WATCHPOINT_TARGET_BOTH . equals ( targetID ) ) { target = new PDAToggleWatchpointsTarget ( true , true ) ; } else if ( TOGGLE_WATCHPOINT_TARGET_ACCESS . equals ( targetID ) ) { target = new PDAToggleWatchpointsTarget ( true , false ) ; } else if ( TOGGLE_WATCHPOINT_TARGET_MODIFICATION . equals ( targetID ) ) { target = new PDAToggleWatchpointsTarget ( false , true ) ; } else { return null ; } fToggleWatchpointTargets . put ( targetID , target ) ; } return target ; } @Override public String getDefaultToggleTarget ( IWorkbenchPart part , ISelection selection ) { return TOGGLE_WATCHPOINT_TARGET_BOTH ; } @Override public Set < String > getToggleTargets ( IWorkbenchPart part , ISelection selection ) { return TOGGLE_WATCHPOINTS_TARGETS ; } @Override public String getToggleTargetName ( String targetID ) { if ( TOGGLE_WATCHPOINT_TARGET_BOTH . equals ( targetID ) ) { return <str> ; } else if ( TOGGLE_WATCHPOINT_TARGET_ACCESS . equals ( targetID ) ) { return <str> ; } else if ( TOGGLE_WATCHPOINT_TARGET_MODIFICATION . equals ( targetID ) ) { return <str> ; } else { return null ; } } @Override public String getToggleTargetDescription ( String targetID ) { return getToggleTargetName ( targetID ) ; } } 
