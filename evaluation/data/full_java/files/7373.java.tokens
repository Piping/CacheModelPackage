package org . elasticsearch . search . aggregations . pipeline ; import org . elasticsearch . common . xcontent . XContentBuilder ; import org . elasticsearch . search . aggregations . AbstractAggregationBuilder ; import java . io . IOException ; import java . util . Map ; public abstract class PipelineAggregatorBuilder < B extends PipelineAggregatorBuilder < B > > extends AbstractAggregationBuilder { private String [ ] bucketsPaths ; private Map < String , Object > metaData ; protected PipelineAggregatorBuilder ( String name , String type ) { super ( name , type ) ; } public B setBucketsPaths ( String . . . bucketsPaths ) { this . bucketsPaths = bucketsPaths ; return ( B ) this ; } public B setMetaData ( Map < String , Object > metaData ) { this . metaData = metaData ; return ( B ) this ; } @Override public final XContentBuilder toXContent ( XContentBuilder builder , Params params ) throws IOException { builder . startObject ( getName ( ) ) ; if ( this . metaData ! = null ) { builder . field ( <str> , this . metaData ) ; } builder . startObject ( type ) ; if ( bucketsPaths ! = null ) { builder . startArray ( PipelineAggregator . Parser . BUCKETS_PATH . getPreferredName ( ) ) ; for ( String path : bucketsPaths ) { builder . value ( path ) ; } builder . endArray ( ) ; } internalXContent ( builder , params ) ; builder . endObject ( ) ; return builder . endObject ( ) ; } protected abstract XContentBuilder internalXContent ( XContentBuilder builder , Params params ) throws IOException ; } 
