package org . gradle . messaging . remote . internal . protocol ; import org . gradle . messaging . remote . internal . Message ; import java . util . UUID ; public abstract class ConsumerMessage extends Message implements RoutableMessage { protected final UUID consumerId ; protected final Object producerId ; public ConsumerMessage ( UUID consumerId , Object producerId ) { this . producerId = producerId ; this . consumerId = consumerId ; } public UUID getConsumerId ( ) { return consumerId ; } public Object getProducerId ( ) { return producerId ; } public Object getDestination ( ) { return producerId ; } @Override public boolean equals ( Object o ) { if ( o = = this ) { return true ; } if ( o = = null | | o . getClass ( ) ! = getClass ( ) ) { return false ; } ConsumerMessage other = ( ConsumerMessage ) o ; return consumerId . equals ( other . consumerId ) & & producerId . equals ( other . producerId ) ; } @Override public int hashCode ( ) { return consumerId . hashCode ( ) ^ producerId . hashCode ( ) ; } @Override public String toString ( ) { return String . format ( <str> , getClass ( ) . getSimpleName ( ) , consumerId , producerId ) ; } } 
