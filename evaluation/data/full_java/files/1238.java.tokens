package org . apache . cassandra . utils ; import java . util . * ; public class OverlapIterator < I extends Comparable < ? super I > , V > { int nextToInclude ; final List < Interval < I , V > > sortedByMin ; int nextToExclude ; final List < Interval < I , V > > sortedByMax ; final Set < V > overlaps = new HashSet < > ( ) ; final Set < V > accessible = Collections . unmodifiableSet ( overlaps ) ; public OverlapIterator ( Collection < Interval < I , V > > intervals ) { sortedByMax = new ArrayList < > ( intervals ) ; Collections . sort ( sortedByMax , Interval . < I , V > maxOrdering ( ) ) ; sortedByMin = new ArrayList < > ( sortedByMax ) ; Collections . sort ( sortedByMin , Interval . < I , V > minOrdering ( ) ) ; } public void update ( I point ) { while ( nextToInclude < sortedByMin . size ( ) & & sortedByMin . get ( nextToInclude ) . min . compareTo ( point ) < = <int> ) overlaps . add ( sortedByMin . get ( nextToInclude + + ) . data ) ; while ( nextToExclude < sortedByMax . size ( ) & & sortedByMax . get ( nextToExclude ) . max . compareTo ( point ) < <int> ) overlaps . remove ( sortedByMax . get ( nextToExclude + + ) . data ) ; } public Set < V > overlaps ( ) { return accessible ; } } 
