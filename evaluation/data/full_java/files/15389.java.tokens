package org . gradle . internal . resource . local ; import org . gradle . api . Transformer ; import org . gradle . internal . Factory ; import org . gradle . util . CollectionUtils ; import java . io . File ; import java . util . ArrayList ; import java . util . List ; import java . util . Set ; public class LocallyAvailableResourceFinderSearchableFileStoreAdapter < C > extends AbstractLocallyAvailableResourceFinder < C > { public LocallyAvailableResourceFinderSearchableFileStoreAdapter ( final FileStoreSearcher < C > fileStore ) { super ( new Transformer < Factory < List < File > > , C > ( ) { public Factory < List < File > > transform ( final C criterion ) { return new Factory < List < File > > ( ) { public List < File > create ( ) { Set < ? extends LocallyAvailableResource > entries = fileStore . search ( criterion ) ; return CollectionUtils . collect ( entries , new ArrayList < File > ( entries . size ( ) ) , new Transformer < File , LocallyAvailableResource > ( ) { public File transform ( LocallyAvailableResource original ) { return original . getFile ( ) ; } } ) ; } } ; } } ) ; } } 
