package com . badlogic . gdx . tests ; import java . nio . IntBuffer ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . graphics . GL20 ; import com . badlogic . gdx . graphics . Texture ; import com . badlogic . gdx . graphics . g2d . SpriteBatch ; import com . badlogic . gdx . tests . utils . GdxTest ; public class SpriteBatchRotationTest extends GdxTest { SpriteBatch spriteBatch ; Texture texture ; float angle = <int> ; float scale = <int> ; float vScale = <int> ; IntBuffer pixelBuffer ; @Override public void render ( ) { Gdx . gl . glClear ( GL20 . GL_COLOR_BUFFER_BIT ) ; spriteBatch . begin ( ) ; spriteBatch . draw ( texture , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , texture . getWidth ( ) , texture . getHeight ( ) , false , false ) ; spriteBatch . draw ( texture , <int> , <int> , <int> , <int> , <int> , <int> , texture . getWidth ( ) , texture . getHeight ( ) , false , false ) ; spriteBatch . draw ( texture , <int> , <int> , <int> , <int> , texture . getWidth ( ) , texture . getHeight ( ) ) ; spriteBatch . draw ( texture , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , angle , <int> , <int> , texture . getWidth ( ) , texture . getHeight ( ) , false , false ) ; spriteBatch . draw ( texture , <int> , <int> , <int> , <int> , <int> , <int> , scale , scale , <int> , <int> , <int> , texture . getWidth ( ) , texture . getHeight ( ) , false , false ) ; spriteBatch . draw ( texture , <int> , <int> , <int> , <int> , <int> , <int> , scale , scale , angle , <int> , <int> , texture . getWidth ( ) , texture . getHeight ( ) , false , false ) ; spriteBatch . draw ( texture , <int> , <int> , <int> , <int> , <int> , <int> , scale , scale , angle , <int> , <int> , texture . getWidth ( ) , texture . getHeight ( ) , false , false ) ; spriteBatch . end ( ) ; angle + = <int> * Gdx . graphics . getDeltaTime ( ) ; scale + = vScale * Gdx . graphics . getDeltaTime ( ) ; if ( scale > <int> ) { vScale = - vScale ; scale = <int> ; } if ( scale < <int> ) { vScale = - vScale ; scale = <int> ; } } @Override public void create ( ) { spriteBatch = new SpriteBatch ( ) ; texture = new Texture ( Gdx . files . internal ( <str> ) ) ; } } 
