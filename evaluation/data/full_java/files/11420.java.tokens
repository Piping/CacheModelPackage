package org . gradle . api . internal . changedetection . state ; import org . gradle . api . file . FileCollection ; import org . gradle . api . file . FileVisitDetails ; import org . gradle . api . internal . cache . StringInterner ; import org . gradle . api . internal . file . DefaultFileVisitDetails ; import org . gradle . api . internal . file . collections . ListBackedFileSet ; import org . gradle . api . internal . file . collections . MinimalFileSet ; import java . io . File ; import java . util . List ; public class MinimalFileSetSnapshotter extends DefaultFileCollectionSnapshotter { public MinimalFileSetSnapshotter ( FileSnapshotter snapshotter , TaskArtifactStateCacheAccess cacheAccess , StringInterner stringInterner ) { super ( snapshotter , cacheAccess , stringInterner ) ; } @Override protected void visitFiles ( FileCollection input , final List < FileVisitDetails > allFileVisitDetails , final List < File > missingFiles ) { visitFiles ( new ListBackedFileSet ( input . getFiles ( ) ) , allFileVisitDetails , missingFiles ) ; } private void visitFiles ( MinimalFileSet input , final List < FileVisitDetails > allFileVisitDetails , final List < File > missingFiles ) { for ( File file : input . getFiles ( ) ) { if ( file . exists ( ) ) { allFileVisitDetails . add ( new DefaultFileVisitDetails ( file ) ) ; } else { missingFiles . add ( file ) ; } } } } 
