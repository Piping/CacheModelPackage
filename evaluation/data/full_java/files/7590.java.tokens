package org . elasticsearch . search . suggest . completion ; import org . apache . lucene . search . suggest . document . CompletionQuery ; import org . elasticsearch . common . unit . Fuzziness ; import org . elasticsearch . index . fielddata . IndexFieldDataService ; import org . elasticsearch . index . mapper . MapperService ; import org . elasticsearch . index . mapper . core . CompletionFieldMapper ; import org . elasticsearch . search . suggest . Suggester ; import org . elasticsearch . search . suggest . SuggestionSearchContext ; import org . elasticsearch . search . suggest . completion . context . ContextMapping ; import org . elasticsearch . search . suggest . completion . context . ContextMappings ; import java . util . * ; public class CompletionSuggestionContext extends SuggestionSearchContext . SuggestionContext { private CompletionFieldMapper . CompletionFieldType fieldType ; private CompletionSuggestionBuilder . FuzzyOptionsBuilder fuzzyOptionsBuilder ; private CompletionSuggestionBuilder . RegexOptionsBuilder regexOptionsBuilder ; private Map < String , List < ContextMapping . QueryContext > > queryContexts = Collections . emptyMap ( ) ; private final MapperService mapperService ; private final IndexFieldDataService indexFieldDataService ; private Set < String > payloadFields = Collections . emptySet ( ) ; CompletionSuggestionContext ( Suggester suggester , MapperService mapperService , IndexFieldDataService indexFieldDataService ) { super ( suggester ) ; this . indexFieldDataService = indexFieldDataService ; this . mapperService = mapperService ; } CompletionFieldMapper . CompletionFieldType getFieldType ( ) { return this . fieldType ; } void setFieldType ( CompletionFieldMapper . CompletionFieldType fieldType ) { this . fieldType = fieldType ; } void setRegexOptionsBuilder ( CompletionSuggestionBuilder . RegexOptionsBuilder regexOptionsBuilder ) { this . regexOptionsBuilder = regexOptionsBuilder ; } void setFuzzyOptionsBuilder ( CompletionSuggestionBuilder . FuzzyOptionsBuilder fuzzyOptionsBuilder ) { this . fuzzyOptionsBuilder = fuzzyOptionsBuilder ; } void setQueryContexts ( Map < String , List < ContextMapping . QueryContext > > queryContexts ) { this . queryContexts = queryContexts ; } MapperService getMapperService ( ) { return mapperService ; } IndexFieldDataService getIndexFieldDataService ( ) { return indexFieldDataService ; } void setPayloadFields ( Set < String > fields ) { this . payloadFields = fields ; } void setPayloadFields ( List < String > fields ) { setPayloadFields ( new HashSet < String > ( fields ) ) ; } Set < String > getPayloadFields ( ) { return payloadFields ; } CompletionQuery toQuery ( ) { CompletionFieldMapper . CompletionFieldType fieldType = getFieldType ( ) ; final CompletionQuery query ; if ( getPrefix ( ) ! = null ) { if ( fuzzyOptionsBuilder ! = null ) { query = fieldType . fuzzyQuery ( getPrefix ( ) . utf8ToString ( ) , Fuzziness . fromEdits ( fuzzyOptionsBuilder . getEditDistance ( ) ) , fuzzyOptionsBuilder . getFuzzyPrefixLength ( ) , fuzzyOptionsBuilder . getFuzzyMinLength ( ) , fuzzyOptionsBuilder . getMaxDeterminizedStates ( ) , fuzzyOptionsBuilder . isTranspositions ( ) , fuzzyOptionsBuilder . isUnicodeAware ( ) ) ; } else { query = fieldType . prefixQuery ( getPrefix ( ) ) ; } } else if ( getRegex ( ) ! = null ) { if ( fuzzyOptionsBuilder ! = null ) { throw new IllegalArgumentException ( <str> ) ; } if ( regexOptionsBuilder = = null ) { regexOptionsBuilder = new CompletionSuggestionBuilder . RegexOptionsBuilder ( ) ; } query = fieldType . regexpQuery ( getRegex ( ) , regexOptionsBuilder . getFlagsValue ( ) , regexOptionsBuilder . getMaxDeterminizedStates ( ) ) ; } else { throw new IllegalArgumentException ( <str> ) ; } if ( fieldType . hasContextMappings ( ) ) { ContextMappings contextMappings = fieldType . getContextMappings ( ) ; return contextMappings . toContextQuery ( query , queryContexts ) ; } return query ; } } 
