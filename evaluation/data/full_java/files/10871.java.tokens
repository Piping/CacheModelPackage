package org . gradle . internal . operations ; import org . gradle . api . Nullable ; import org . gradle . internal . exceptions . DefaultMultiCauseException ; public class MultipleBuildOperationFailures extends DefaultMultiCauseException { private static final int MAX_CAUSES = <int> ; public MultipleBuildOperationFailures ( String message , Iterable < ? extends Throwable > causes , @Nullable String logLocation ) { super ( format ( message , causes , logLocation ) , causes ) ; } private static String format ( String message , Iterable < ? extends Throwable > causes , String logLocation ) { StringBuilder sb = new StringBuilder ( message ) ; int count = <int> ; for ( Throwable cause : causes ) { if ( count + + < MAX_CAUSES ) { sb . append ( String . format ( <str> , cause . getMessage ( ) ) ) ; } } int suppressedFailureCount = count - MAX_CAUSES ; if ( suppressedFailureCount = = <int> ) { sb . append ( String . format ( <str> , suppressedFailureCount ) ) ; } else if ( suppressedFailureCount > <int> ) { sb . append ( String . format ( <str> , suppressedFailureCount ) ) ; } if ( logLocation ! = null ) { sb . append ( String . format ( <str> ) ) . append ( logLocation ) ; } return sb . toString ( ) ; } } 
