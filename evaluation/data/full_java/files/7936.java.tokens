package org . elasticsearch . common . lucene . index ; import org . apache . lucene . document . Document ; import org . apache . lucene . document . Field ; import org . apache . lucene . document . StringField ; import org . apache . lucene . index . DirectoryReader ; import org . apache . lucene . index . IndexWriter ; import org . apache . lucene . index . IndexWriterConfig ; import org . apache . lucene . index . NoMergePolicy ; import org . apache . lucene . index . Term ; import org . apache . lucene . store . Directory ; import org . apache . lucene . util . IOUtils ; import org . elasticsearch . index . Index ; import org . elasticsearch . index . shard . ShardId ; import org . elasticsearch . test . ESTestCase ; public class ESDirectoryReaderTests extends ESTestCase { public void testCoreCacheKey ( ) throws Exception { Directory dir = newDirectory ( ) ; IndexWriterConfig iwc = new IndexWriterConfig ( null ) ; iwc . setMaxBufferedDocs ( <int> ) ; iwc . setMergePolicy ( NoMergePolicy . INSTANCE ) ; IndexWriter iw = new IndexWriter ( dir , iwc ) ; Document doc = new Document ( ) ; Field idField = new StringField ( <str> , <str> , Field . Store . NO ) ; doc . add ( idField ) ; idField . setStringValue ( <str> ) ; iw . addDocument ( doc ) ; idField . setStringValue ( <str> ) ; iw . addDocument ( doc ) ; ShardId shardId = new ShardId ( new Index ( <str> ) , <int> ) ; DirectoryReader ir = ElasticsearchDirectoryReader . wrap ( DirectoryReader . open ( iw , true ) , shardId ) ; assertEquals ( <int> , ir . numDocs ( ) ) ; assertEquals ( <int> , ir . leaves ( ) . size ( ) ) ; iw . deleteDocuments ( new Term ( <str> , <str> ) ) ; DirectoryReader ir2 = DirectoryReader . openIfChanged ( ir ) ; assertEquals ( <int> , ir2 . numDocs ( ) ) ; assertEquals ( <int> , ir2 . leaves ( ) . size ( ) ) ; assertSame ( ir . leaves ( ) . get ( <int> ) . reader ( ) . getCoreCacheKey ( ) , ir2 . leaves ( ) . get ( <int> ) . reader ( ) . getCoreCacheKey ( ) ) ; IOUtils . close ( ir , ir2 , iw , dir ) ; } } 
