package io . netty . handler . codec . http2 . hpack ; import org . junit . Test ; import org . junit . runner . RunWith ; import org . junit . runners . Parameterized ; import org . junit . runners . Parameterized . Parameters ; import java . io . File ; import java . io . InputStream ; import java . net . URL ; import java . util . ArrayList ; import java . util . Collection ; @RunWith ( Parameterized . class ) public class HpackTest { private static final String TEST_DIR = <str> ; private final String fileName ; public HpackTest ( String fileName ) { this . fileName = fileName ; } @Parameters ( name = <str> ) public static Collection < Object [ ] > data ( ) { URL url = HpackTest . class . getResource ( TEST_DIR ) ; File [ ] files = new File ( url . getFile ( ) ) . listFiles ( ) ; if ( files = = null ) { throw new NullPointerException ( <str> ) ; } ArrayList < Object [ ] > data = new ArrayList < Object [ ] > ( ) ; for ( File file : files ) { data . add ( new Object [ ] { file . getName ( ) } ) ; } return data ; } @Test public void test ( ) throws Exception { InputStream is = HpackTest . class . getResourceAsStream ( TEST_DIR + fileName ) ; TestCase testCase = TestCase . load ( is ) ; testCase . testCompress ( ) ; testCase . testDecompress ( ) ; } } 
