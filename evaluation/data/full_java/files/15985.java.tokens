package org . gradle . tooling . internal . consumer . connection ; import org . gradle . tooling . internal . adapter . ProtocolToModelAdapter ; import org . gradle . tooling . internal . consumer . parameters . BuildCancellationTokenAdapter ; import org . gradle . tooling . internal . consumer . parameters . ConsumerOperationParameters ; import org . gradle . tooling . internal . consumer . versioning . ModelMapping ; import org . gradle . tooling . internal . protocol . ConnectionVersion4 ; import org . gradle . tooling . internal . protocol . test . InternalTestExecutionConnection ; import org . gradle . tooling . internal . consumer . TestExecutionRequest ; public class TestExecutionConsumerConnection extends ShutdownAwareConsumerConnection { public TestExecutionConsumerConnection ( ConnectionVersion4 delegate , ModelMapping modelMapping , ProtocolToModelAdapter adapter ) { super ( delegate , modelMapping , adapter ) ; } @Override public void runTests ( final TestExecutionRequest testExecutionRequest , ConsumerOperationParameters operationParameters ) { final BuildCancellationTokenAdapter cancellationTokenAdapter = new BuildCancellationTokenAdapter ( operationParameters . getCancellationToken ( ) ) ; ( ( InternalTestExecutionConnection ) getDelegate ( ) ) . runTests ( testExecutionRequest , cancellationTokenAdapter , operationParameters ) ; } } 
