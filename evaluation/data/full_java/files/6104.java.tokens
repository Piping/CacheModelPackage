package org . elasticsearch . common . util ; import java . util . Collection ; import java . util . Map ; import java . util . Set ; public abstract class MinimalMap < K , V > implements Map < K , V > { @Override public boolean isEmpty ( ) { throw new UnsupportedOperationException ( <str> ) ; } @Override public V put ( K key , V value ) { throw new UnsupportedOperationException ( <str> ) ; } @Override public void putAll ( Map < ? extends K , ? extends V > m ) { throw new UnsupportedOperationException ( <str> ) ; } @Override public V remove ( Object key ) { throw new UnsupportedOperationException ( <str> ) ; } @Override public void clear ( ) { throw new UnsupportedOperationException ( <str> ) ; } @Override public Set < K > keySet ( ) { throw new UnsupportedOperationException ( <str> ) ; } @Override public Collection < V > values ( ) { throw new UnsupportedOperationException ( <str> ) ; } @Override public Set < Entry < K , V > > entrySet ( ) { throw new UnsupportedOperationException ( <str> ) ; } @Override public boolean containsValue ( Object value ) { throw new UnsupportedOperationException ( <str> ) ; } @Override public int size ( ) { throw new UnsupportedOperationException ( <str> ) ; } @Override public boolean containsKey ( Object k ) { throw new UnsupportedOperationException ( <str> ) ; } } 
