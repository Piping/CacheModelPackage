package org . elasticsearch . rest . action . admin . cluster . repositories . verify ; import org . elasticsearch . action . admin . cluster . repositories . verify . VerifyRepositoryRequest ; import org . elasticsearch . client . Client ; import org . elasticsearch . common . inject . Inject ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . rest . * ; import org . elasticsearch . rest . action . support . RestToXContentListener ; import static org . elasticsearch . client . Requests . verifyRepositoryRequest ; import static org . elasticsearch . rest . RestRequest . Method . POST ; public class RestVerifyRepositoryAction extends BaseRestHandler { @Inject public RestVerifyRepositoryAction ( Settings settings , RestController controller , Client client ) { super ( settings , controller , client ) ; controller . registerHandler ( POST , <str> , this ) ; } @Override public void handleRequest ( final RestRequest request , final RestChannel channel , final Client client ) { VerifyRepositoryRequest verifyRepositoryRequest = verifyRepositoryRequest ( request . param ( <str> ) ) ; verifyRepositoryRequest . masterNodeTimeout ( request . paramAsTime ( <str> , verifyRepositoryRequest . masterNodeTimeout ( ) ) ) ; verifyRepositoryRequest . timeout ( request . paramAsTime ( <str> , verifyRepositoryRequest . timeout ( ) ) ) ; client . admin ( ) . cluster ( ) . verifyRepository ( verifyRepositoryRequest , new RestToXContentListener < > ( channel ) ) ; } } 
