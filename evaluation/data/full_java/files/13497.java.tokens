package org . gradle . api . internal . tasks . compile . incremental . jar ; import org . gradle . api . internal . file . FileOperations ; import java . io . File ; import java . util . LinkedList ; import java . util . List ; public class ClasspathJarFinder { private final FileOperations fileOperations ; public ClasspathJarFinder ( FileOperations fileOperations ) { this . fileOperations = fileOperations ; } public Iterable < JarArchive > findJarArchives ( Iterable < File > classpath ) { List < JarArchive > out = new LinkedList < JarArchive > ( ) ; for ( File file : classpath ) { if ( file . getName ( ) . endsWith ( <str> ) ) { out . add ( new JarArchive ( file , fileOperations . zipTree ( file ) ) ) ; } } return out ; } } 
