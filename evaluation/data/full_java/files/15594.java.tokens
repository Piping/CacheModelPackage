package org . gradle . api . internal . tasks . testing . results ; import org . gradle . api . internal . tasks . testing . * ; import org . gradle . api . tasks . testing . TestOutputEvent ; public class AttachParentTestResultProcessor implements TestResultProcessor { private Object rootId ; private final TestResultProcessor processor ; public AttachParentTestResultProcessor ( TestResultProcessor processor ) { this . processor = processor ; } public void started ( TestDescriptorInternal test , TestStartEvent event ) { if ( rootId = = null ) { assert test . isComposite ( ) ; rootId = test . getId ( ) ; } else if ( event . getParentId ( ) = = null ) { event = event . withParentId ( rootId ) ; } processor . started ( test , event ) ; } public void failure ( Object testId , Throwable result ) { processor . failure ( testId , result ) ; } public void output ( Object testId , TestOutputEvent event ) { processor . output ( testId , event ) ; } public void completed ( Object testId , TestCompleteEvent event ) { if ( testId . equals ( rootId ) ) { rootId = null ; } processor . completed ( testId , event ) ; } } 
