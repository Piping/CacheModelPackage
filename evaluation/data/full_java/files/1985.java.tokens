package org . nd4j . linalg . api . iter ; import org . nd4j . linalg . api . ndarray . INDArray ; import org . nd4j . linalg . api . shape . Shape ; import java . util . Iterator ; public class FirstAxisIterator implements Iterator < Object > { private INDArray iterateOver ; private int i = <int> ; public FirstAxisIterator ( INDArray iterateOver ) { this . iterateOver = iterateOver ; } @Override public boolean hasNext ( ) { return i < iterateOver . slices ( ) ; } @Override public void remove ( ) { } @Override public Object next ( ) { INDArray s = iterateOver . slice ( i + + ) ; if ( s . isScalar ( ) ) { return s . getDouble ( <int> ) ; } else { return s ; } } } 
