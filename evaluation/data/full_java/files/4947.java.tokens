package org . elasticsearch . action . admin . cluster . node . hotthreads ; import org . elasticsearch . action . support . nodes . BaseNodesResponse ; import org . elasticsearch . cluster . ClusterName ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import java . io . IOException ; public class NodesHotThreadsResponse extends BaseNodesResponse < NodeHotThreads > { NodesHotThreadsResponse ( ) { } public NodesHotThreadsResponse ( ClusterName clusterName , NodeHotThreads [ ] nodes ) { super ( clusterName , nodes ) ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; nodes = new NodeHotThreads [ in . readVInt ( ) ] ; for ( int i = <int> ; i < nodes . length ; i + + ) { nodes [ i ] = NodeHotThreads . readNodeHotThreads ( in ) ; } } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeVInt ( nodes . length ) ; for ( NodeHotThreads node : nodes ) { node . writeTo ( out ) ; } } } 
