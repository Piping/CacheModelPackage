package org . eclipse . debug . internal . ui . launchConfigurations ; import org . eclipse . core . runtime . CoreException ; import org . eclipse . debug . core . DebugPlugin ; import org . eclipse . debug . core . ILaunchConfiguration ; import org . eclipse . debug . core . ILaunchConfigurationWorkingCopy ; import org . eclipse . debug . internal . ui . DebugUIPlugin ; import org . eclipse . debug . internal . ui . IInternalDebugUIConstants ; import org . eclipse . debug . ui . DebugUITools ; import org . eclipse . jface . resource . ImageDescriptor ; import org . eclipse . jface . viewers . IStructuredSelection ; import org . eclipse . jface . viewers . Viewer ; public class DuplicateLaunchConfigurationAction extends AbstractLaunchConfigurationAction { public static final String ID_DUPLICATE_ACTION = DebugUIPlugin . getUniqueIdentifier ( ) + <str> ; public DuplicateLaunchConfigurationAction ( Viewer viewer , String mode ) { super ( LaunchConfigurationsMessages . DuplicateLaunchConfigurationAction__Duplicate_1 , viewer , mode ) ; } @Override protected void performAction ( ) { ILaunchConfiguration original = ( ILaunchConfiguration ) getStructuredSelection ( ) . getFirstElement ( ) ; String newName = DebugPlugin . getDefault ( ) . getLaunchManager ( ) . generateLaunchConfigurationName ( original . getName ( ) ) ; try { ILaunchConfigurationWorkingCopy newWorkingCopy = original . copy ( newName ) ; newWorkingCopy . doSave ( ) ; } catch ( CoreException e ) { errorDialog ( e ) ; } } @Override protected boolean updateSelection ( IStructuredSelection selection ) { return selection . size ( ) = = <int> & & selection . getFirstElement ( ) instanceof ILaunchConfiguration ; } @Override public ImageDescriptor getDisabledImageDescriptor ( ) { return DebugUITools . getImageDescriptor ( IInternalDebugUIConstants . IMG_DLCL_DUPLICATE_CONFIG ) ; } @Override public ImageDescriptor getImageDescriptor ( ) { return DebugUITools . getImageDescriptor ( IInternalDebugUIConstants . IMG_ELCL_DUPLICATE_CONFIG ) ; } @Override public String getToolTipText ( ) { return LaunchConfigurationsMessages . LaunchConfigurationsDialog_5 ; } } 
