package org . gradle . api . internal . file . archive . compression ; import org . gradle . api . internal . resources . URIBuilder ; import org . gradle . api . resources . ReadableResource ; import org . gradle . api . resources . internal . ReadableResourceInternal ; import java . io . File ; import java . io . InputStream ; import java . net . URI ; abstract class AbstractArchiver implements CompressedReadableResource { protected final ReadableResourceInternal resource ; protected final URI uri ; public AbstractArchiver ( ReadableResourceInternal resource ) { assert resource ! = null ; this . uri = new URIBuilder ( resource . getURI ( ) ) . schemePrefix ( getSchemePrefix ( ) ) . build ( ) ; this . resource = resource ; } abstract protected String getSchemePrefix ( ) ; abstract public InputStream read ( ) ; public String getDisplayName ( ) { return resource . getDisplayName ( ) ; } public URI getURI ( ) { return uri ; } public String getBaseName ( ) { return resource . getBaseName ( ) ; } @Override public ReadableResource getCompressedResource ( ) { return resource ; } public File getBackingFile ( ) { return resource . getBackingFile ( ) ; } } 
