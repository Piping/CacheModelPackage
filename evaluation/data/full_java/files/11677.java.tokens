package org . gradle . api . internal . resources ; import com . google . common . io . Files ; import org . gradle . api . UncheckedIOException ; import org . gradle . api . file . FileCollection ; import org . gradle . api . internal . file . TemporaryFileProvider ; import org . gradle . api . internal . tasks . DefaultTaskDependency ; import org . gradle . api . resources . TextResource ; import org . gradle . api . tasks . TaskDependency ; import java . io . File ; import java . io . IOException ; import java . io . Reader ; import java . io . StringReader ; import java . nio . charset . Charset ; public class StringBackedTextResource implements TextResource { private final TemporaryFileProvider tempFileProvider ; private final String string ; public StringBackedTextResource ( TemporaryFileProvider tempFileProvider , String string ) { this . tempFileProvider = tempFileProvider ; this . string = string ; } public String asString ( ) { return string ; } public Reader asReader ( ) { return new StringReader ( string ) ; } public File asFile ( String charset ) { File file = tempFileProvider . createTemporaryFile ( <str> , <str> , <str> ) ; try { Files . write ( string , file , Charset . forName ( charset ) ) ; } catch ( IOException e ) { throw new UncheckedIOException ( e ) ; } return file ; } public File asFile ( ) { return asFile ( Charset . defaultCharset ( ) . name ( ) ) ; } public TaskDependency getBuildDependencies ( ) { return new DefaultTaskDependency ( ) ; } public Object getInputProperties ( ) { return string ; } public FileCollection getInputFiles ( ) { return null ; } } 
