package org . elasticsearch . index . analysis ; import org . elasticsearch . Version ; import org . elasticsearch . cluster . metadata . IndexMetaData ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . indices . analysis . PreBuiltCharFilters ; import org . elasticsearch . test . ESTestCase ; import java . io . IOException ; import static org . hamcrest . CoreMatchers . is ; public class PreBuiltCharFilterFactoryFactoryTests extends ESTestCase { public void testThatDifferentVersionsCanBeLoaded ( ) throws IOException { PreBuiltCharFilterFactoryFactory factory = new PreBuiltCharFilterFactoryFactory ( PreBuiltCharFilters . HTML_STRIP . getCharFilterFactory ( Version . CURRENT ) ) ; CharFilterFactory former090TokenizerFactory = factory . get ( null , null , <str> , Settings . settingsBuilder ( ) . put ( IndexMetaData . SETTING_VERSION_CREATED , Version . V_0_90_0 ) . build ( ) ) ; CharFilterFactory former090TokenizerFactoryCopy = factory . get ( null , null , <str> , Settings . settingsBuilder ( ) . put ( IndexMetaData . SETTING_VERSION_CREATED , Version . V_0_90_0 ) . build ( ) ) ; CharFilterFactory currentTokenizerFactory = factory . get ( null , null , <str> , Settings . settingsBuilder ( ) . put ( IndexMetaData . SETTING_VERSION_CREATED , Version . CURRENT ) . build ( ) ) ; assertThat ( currentTokenizerFactory , is ( former090TokenizerFactory ) ) ; assertThat ( currentTokenizerFactory , is ( former090TokenizerFactoryCopy ) ) ; } } 
