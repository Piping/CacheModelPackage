package org . gradle . build . docs . dsl . docbook ; import org . gradle . build . docs . dsl . docbook . model . ClassDoc ; import org . gradle . build . docs . dsl . source . model . ClassMetaData ; import java . util . List ; public class ClassDocSuperTypeBuilder { private final DslDocModel model ; private final GenerationListener listener ; public ClassDocSuperTypeBuilder ( DslDocModel model , GenerationListener listener ) { this . model = model ; this . listener = listener ; } void build ( ClassDoc classDoc ) { ClassMetaData classMetaData = classDoc . getClassMetaData ( ) ; String superClassName = classMetaData . getSuperClassName ( ) ; if ( superClassName ! = null ) { ClassDoc superClass = model . getClassDoc ( superClassName ) ; classDoc . setSuperClass ( superClass ) ; superClass . addSubClass ( classDoc ) ; } List < String > interfaceNames = classMetaData . getInterfaceNames ( ) ; for ( String interfaceName : interfaceNames ) { ClassDoc superInterface = model . findClassDoc ( interfaceName ) ; if ( superInterface ! = null ) { classDoc . getInterfaces ( ) . add ( superInterface ) ; superInterface . addSubClass ( classDoc ) ; } } } } 
