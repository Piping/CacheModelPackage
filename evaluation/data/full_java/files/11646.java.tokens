package org . gradle . api . internal . project ; import org . gradle . api . ProjectState ; import org . gradle . internal . UncheckedException ; public class ProjectStateInternal implements ProjectState { private boolean executing ; private boolean executed ; private Throwable failure ; public boolean getExecuted ( ) { return executed ; } public void executed ( ) { executed = true ; } public void executed ( Throwable failure ) { assert this . failure = = null ; this . failure = failure ; executed = true ; } public boolean getExecuting ( ) { return executing ; } public void setExecuting ( boolean executing ) { this . executing = executing ; } public boolean hasFailure ( ) { return failure ! = null ; } public Throwable getFailure ( ) { return failure ; } public void rethrowFailure ( ) { if ( failure = = null ) { return ; } throw UncheckedException . throwAsUncheckedException ( failure ) ; } public String toString ( ) { String state ; if ( getExecuting ( ) ) { state = <str> ; } else if ( getExecuted ( ) ) { if ( failure = = null ) { state = <str> ; } else { state = String . format ( <str> , failure . getMessage ( ) ) ; } } else { state = <str> ; } return String . format ( <str> , state ) ; } } 
