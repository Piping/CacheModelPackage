package io . netty . handler . codec . marshalling ; import io . netty . buffer . ByteBuf ; import io . netty . channel . ChannelHandler ; import io . netty . channel . embedded . EmbeddedChannel ; import org . jboss . marshalling . MarshallerFactory ; import org . jboss . marshalling . Marshalling ; import org . jboss . marshalling . MarshallingConfiguration ; import org . jboss . marshalling . Unmarshaller ; import org . junit . Test ; import static org . junit . Assert . * ; public abstract class AbstractCompatibleMarshallingEncoderTest { @Test public void testMarshalling ( ) throws Exception { @SuppressWarnings ( <str> ) String testObject = new String ( <str> ) ; final MarshallerFactory marshallerFactory = createMarshallerFactory ( ) ; final MarshallingConfiguration configuration = createMarshallingConfig ( ) ; EmbeddedChannel ch = new EmbeddedChannel ( createEncoder ( ) ) ; ch . writeOutbound ( testObject ) ; assertTrue ( ch . finish ( ) ) ; ByteBuf buffer = ch . readOutbound ( ) ; Unmarshaller unmarshaller = marshallerFactory . createUnmarshaller ( configuration ) ; unmarshaller . start ( Marshalling . createByteInput ( truncate ( buffer ) . nioBuffer ( ) ) ) ; String read = ( String ) unmarshaller . readObject ( ) ; assertEquals ( testObject , read ) ; assertEquals ( - <int> , unmarshaller . read ( ) ) ; assertNull ( ch . readOutbound ( ) ) ; unmarshaller . finish ( ) ; unmarshaller . close ( ) ; buffer . release ( ) ; } protected ByteBuf truncate ( ByteBuf buf ) { return buf ; } protected ChannelHandler createEncoder ( ) { return new CompatibleMarshallingEncoder ( createProvider ( ) ) ; } protected MarshallerProvider createProvider ( ) { return new DefaultMarshallerProvider ( createMarshallerFactory ( ) , createMarshallingConfig ( ) ) ; } protected abstract MarshallerFactory createMarshallerFactory ( ) ; protected abstract MarshallingConfiguration createMarshallingConfig ( ) ; } 
