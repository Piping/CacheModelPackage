package org . eclipse . debug . internal . core . commands ; import org . eclipse . core . runtime . CoreException ; import org . eclipse . debug . core . commands . IDebugCommandRequest ; import org . eclipse . debug . core . commands . ISuspendHandler ; import org . eclipse . debug . core . model . ISuspendResume ; public class SuspendCommand extends ForEachCommand implements ISuspendHandler { @Override protected Object getTarget ( Object element ) { return getAdapter ( element , ISuspendResume . class ) ; } @Override protected void execute ( Object target ) throws CoreException { ( ( ISuspendResume ) target ) . suspend ( ) ; } @Override protected boolean isExecutable ( Object target ) { return ( ( ISuspendResume ) target ) . canSuspend ( ) ; } @Override protected Object getEnabledStateJobFamily ( IDebugCommandRequest request ) { return ISuspendHandler . class ; } } 
