package org . gradle . api . internal . tasks . testing . results ; import org . gradle . api . internal . tasks . testing . TestCompleteEvent ; import org . gradle . api . internal . tasks . testing . TestDescriptorInternal ; import org . gradle . api . internal . tasks . testing . TestStartEvent ; import org . gradle . api . tasks . testing . TestListener ; import org . gradle . api . tasks . testing . TestOutputEvent ; import org . gradle . api . tasks . testing . TestOutputListener ; import org . gradle . api . tasks . testing . TestResult ; public class TestListenerAdapter implements TestListenerInternal { private final TestListener testListener ; private final TestOutputListener testOutputListener ; public TestListenerAdapter ( TestListener testListener , TestOutputListener testOutputListener ) { this . testListener = testListener ; this . testOutputListener = testOutputListener ; } @Override public void started ( TestDescriptorInternal test , TestStartEvent startEvent ) { if ( test . isComposite ( ) ) { testListener . beforeSuite ( test ) ; } else { testListener . beforeTest ( test ) ; } } @Override public void completed ( TestDescriptorInternal test , TestResult result , TestCompleteEvent completeEvent ) { if ( test . isComposite ( ) ) { testListener . afterSuite ( test , result ) ; } else { testListener . afterTest ( test , result ) ; } } @Override public void output ( TestDescriptorInternal test , TestOutputEvent event ) { testOutputListener . onOutput ( test , event ) ; } } 
