package org . gradle . api . publish . maven . internal . publisher ; import org . gradle . api . artifacts . repositories . MavenArtifactRepository ; import org . gradle . api . internal . artifacts . mvnsettings . LocalMavenRepositoryLocator ; import org . gradle . api . publication . maven . internal . action . MavenInstallAction ; import org . gradle . internal . Factory ; import org . gradle . logging . LoggingManagerInternal ; import java . io . File ; public class MavenLocalPublisher extends AbstractMavenPublisher { public MavenLocalPublisher ( Factory < LoggingManagerInternal > loggingManagerFactory , LocalMavenRepositoryLocator mavenRepositoryLocator ) { super ( loggingManagerFactory , mavenRepositoryLocator ) ; } @Override protected MavenInstallAction createDeployTask ( File pomFile , LocalMavenRepositoryLocator mavenRepositoryLocator , MavenArtifactRepository artifactRepository ) { MavenInstallAction mavenInstallTask = new MavenInstallAction ( pomFile ) ; mavenInstallTask . setLocalMavenRepositoryLocation ( mavenRepositoryLocator . getLocalMavenRepository ( ) ) ; return mavenInstallTask ; } } 
