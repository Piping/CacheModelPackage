package org . gradle . play . internal ; import org . gradle . api . Action ; import org . gradle . language . java . JavaSourceSet ; import org . gradle . language . jvm . JvmResourceSet ; import org . gradle . language . routes . RoutesSourceSet ; import org . gradle . language . scala . ScalaLanguageSourceSet ; import org . gradle . language . twirl . TwirlSourceSet ; import org . gradle . model . Defaults ; import org . gradle . model . RuleSource ; import org . gradle . play . PlayApplicationSpec ; public class PlaySourceSetRules extends RuleSource { @Defaults void createJvmSourceSets ( PlayApplicationSpec playComponent ) { playComponent . getSources ( ) . create ( <str> , ScalaLanguageSourceSet . class , new Action < ScalaLanguageSourceSet > ( ) { @Override public void execute ( ScalaLanguageSourceSet scalaSources ) { scalaSources . getSource ( ) . srcDir ( <str> ) ; scalaSources . getSource ( ) . include ( <str> ) ; } } ) ; playComponent . getSources ( ) . create ( <str> , JavaSourceSet . class , new Action < JavaSourceSet > ( ) { @Override public void execute ( JavaSourceSet javaSources ) { javaSources . getSource ( ) . srcDir ( <str> ) ; javaSources . getSource ( ) . include ( <str> ) ; } } ) ; playComponent . getSources ( ) . create ( <str> , JvmResourceSet . class , new Action < JvmResourceSet > ( ) { @Override public void execute ( JvmResourceSet appResources ) { appResources . getSource ( ) . srcDirs ( <str> ) ; } } ) ; } @Defaults void createTwirlSourceSets ( PlayApplicationSpec playComponent ) { playComponent . getSources ( ) . create ( <str> , TwirlSourceSet . class , new Action < TwirlSourceSet > ( ) { @Override public void execute ( TwirlSourceSet twirlSourceSet ) { twirlSourceSet . getSource ( ) . srcDir ( <str> ) ; twirlSourceSet . getSource ( ) . include ( <str> ) ; } } ) ; } @Defaults void createRoutesSourceSets ( PlayApplicationSpec playComponent ) { playComponent . getSources ( ) . create ( <str> , RoutesSourceSet . class , new Action < RoutesSourceSet > ( ) { @Override public void execute ( RoutesSourceSet routesSourceSet ) { routesSourceSet . getSource ( ) . srcDir ( <str> ) ; routesSourceSet . getSource ( ) . include ( <str> ) ; routesSourceSet . getSource ( ) . include ( <str> ) ; } } ) ; } } 
