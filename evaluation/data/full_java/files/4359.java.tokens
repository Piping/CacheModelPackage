package org . eclipse . debug . internal . ui . viewers ; import org . eclipse . core . runtime . jobs . ISchedulingRule ; public class AsynchronousSchedulingRuleFactory { private static AsynchronousSchedulingRuleFactory fgFactory = null ; class SerialRule implements ISchedulingRule { public SerialRule ( ) { } @Override public boolean contains ( ISchedulingRule rule ) { return rule = = this ; } @Override public boolean isConflicting ( ISchedulingRule rule ) { return rule instanceof SerialRule ; } } class SerialPerObjectRule implements ISchedulingRule { private Object fObject = null ; public SerialPerObjectRule ( Object lock ) { fObject = lock ; } @Override public boolean contains ( ISchedulingRule rule ) { return rule = = this ; } @Override public boolean isConflicting ( ISchedulingRule rule ) { if ( rule instanceof SerialPerObjectRule ) { SerialPerObjectRule vup = ( SerialPerObjectRule ) rule ; return fObject = = vup . fObject ; } return false ; } } private AsynchronousSchedulingRuleFactory ( ) { } public static AsynchronousSchedulingRuleFactory getDefault ( ) { if ( fgFactory = = null ) { fgFactory = new AsynchronousSchedulingRuleFactory ( ) ; } return fgFactory ; } public ISchedulingRule newSerialRule ( ) { return new SerialRule ( ) ; } public ISchedulingRule newSerialPerObjectRule ( Object lock ) { return new SerialPerObjectRule ( lock ) ; } } 
