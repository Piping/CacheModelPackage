package org . elasticsearch . mapper . attachments ; import java . nio . file . DirectoryStream ; import java . nio . file . Files ; import java . nio . file . Path ; import org . apache . lucene . util . LuceneTestCase . SuppressFileSystems ; import org . apache . lucene . util . TestUtil ; import org . apache . tika . metadata . Metadata ; import org . elasticsearch . test . ESTestCase ; @SuppressFileSystems ( <str> ) public class TikaDocTests extends ESTestCase { static final String TIKA_FILES = <str> ; public void testFiles ( ) throws Exception { Path tmp = createTempDir ( ) ; TestUtil . unzip ( getClass ( ) . getResourceAsStream ( TIKA_FILES ) , tmp ) ; try ( DirectoryStream < Path > stream = Files . newDirectoryStream ( tmp ) ) { for ( Path doc : stream ) { logger . debug ( <str> , doc ) ; assertParseable ( doc ) ; } } } void assertParseable ( Path fileName ) throws Exception { try { byte bytes [ ] = Files . readAllBytes ( fileName ) ; String parsedContent = TikaImpl . parse ( bytes , new Metadata ( ) , - <int> ) ; assertNotNull ( parsedContent ) ; assertFalse ( parsedContent . isEmpty ( ) ) ; logger . debug ( <str> , parsedContent ) ; } catch ( Throwable e ) { throw new RuntimeException ( <str> + fileName . getFileName ( ) + <str> , e ) ; } } } 
