package org . nd4j . linalg . api . io ; import org . nd4j . linalg . api . complex . IComplexNDArray ; import org . nd4j . linalg . api . ndarray . INDArray ; import java . io . * ; public abstract class BaseNDArrayIO implements NDArrayIO { @Override public void write ( INDArray out , File to ) throws IOException { FileOutputStream fos = new FileOutputStream ( to ) ; BufferedOutputStream bos = new BufferedOutputStream ( fos ) ; write ( out , bos ) ; bos . flush ( ) ; bos . close ( ) ; fos . close ( ) ; } @Override public void writeComplex ( IComplexNDArray out , File to ) throws IOException { FileOutputStream fos = new FileOutputStream ( to ) ; BufferedOutputStream bos = new BufferedOutputStream ( fos ) ; write ( out , bos ) ; bos . flush ( ) ; bos . close ( ) ; fos . close ( ) ; } @Override public INDArray read ( File file ) throws IOException { FileInputStream fis = new FileInputStream ( file ) ; INDArray ret = read ( fis ) ; fis . close ( ) ; return ret ; } @Override public IComplexNDArray readComplex ( File file ) throws IOException { FileInputStream fis = new FileInputStream ( file ) ; IComplexNDArray ret = readComplex ( fis ) ; fis . close ( ) ; return ret ; } } 
