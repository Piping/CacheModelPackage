package org . nd4j . linalg . inverse ; import org . nd4j . linalg . api . ndarray . INDArray ; import org . nd4j . linalg . factory . Nd4j ; public class InvertMatrix { public static INDArray invert ( INDArray arr , boolean inPlace ) { int [ ] IPIV = new int [ arr . length ( ) + <int> ] ; int LWORK = arr . length ( ) * arr . length ( ) ; INDArray WORK = Nd4j . create ( new double [ LWORK ] ) ; INDArray inverse = inPlace ? arr : arr . dup ( ) ; Nd4j . getBlasWrapper ( ) . lapack ( ) . getrf ( arr . size ( <int> ) , arr . size ( <int> ) , inverse , arr . size ( <int> ) , IPIV , <int> ) ; Nd4j . getBlasWrapper ( ) . lapack ( ) . getri ( arr . size ( <int> ) , inverse , arr . size ( <int> ) , IPIV , WORK , LWORK , <int> ) ; return inverse ; } } 
