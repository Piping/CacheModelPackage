package org . gradle . build . docs . dsl . links ; import org . gradle . build . docs . dsl . source . model . ClassMetaData ; import org . gradle . build . docs . dsl . source . model . EnumConstantMetaData ; import org . gradle . build . docs . dsl . source . model . MethodMetaData ; import org . gradle . build . docs . model . Attachable ; import org . gradle . build . docs . model . ClassMetaDataRepository ; import org . gradle . util . CollectionUtils ; import java . io . Serializable ; import java . util . ArrayList ; import java . util . HashMap ; import java . util . List ; import java . util . Map ; public class ClassLinkMetaData implements Serializable , Attachable < ClassLinkMetaData > { private final String className ; private final String simpleName ; private final String packageName ; private LinkMetaData . Style style ; private final Map < String , MethodLinkMetaData > methods = new HashMap < String , MethodLinkMetaData > ( ) ; public ClassLinkMetaData ( ClassMetaData classMetaData ) { this . className = classMetaData . getClassName ( ) ; this . simpleName = classMetaData . getSimpleName ( ) ; this . packageName = classMetaData . getPackageName ( ) ; this . style = classMetaData . isGroovy ( ) ? LinkMetaData . Style . Groovydoc : LinkMetaData . Style . Javadoc ; for ( MethodMetaData method : classMetaData . getDeclaredMethods ( ) ) { addMethod ( method , style ) ; } for ( EnumConstantMetaData enumConstant : classMetaData . getEnumConstants ( ) ) { addEnumConstant ( enumConstant , style ) ; } } public LinkMetaData getClassLink ( ) { return new LinkMetaData ( style , simpleName , null ) ; } public String getPackageName ( ) { return packageName ; } public LinkMetaData getMethod ( String method ) { MethodLinkMetaData methodMetaData = findMethod ( method ) ; String displayName ; String urlFragment = methodMetaData . getUrlFragment ( className ) ; displayName = String . format ( <str> , simpleName , methodMetaData . getDisplayName ( ) ) ; return new LinkMetaData ( methodMetaData . style , displayName , urlFragment ) ; } private MethodLinkMetaData findMethod ( String method ) { if ( method . endsWith ( <str> ) ) { method = method . substring ( <int> , method . length ( ) - <int> ) + <str> ; } MethodLinkMetaData metaData = methods . get ( method ) ; if ( metaData ! = null ) { return metaData ; } List < MethodLinkMetaData > candidates = new ArrayList < MethodLinkMetaData > ( ) ; for ( MethodLinkMetaData methodLinkMetaData : methods . values ( ) ) { if ( methodLinkMetaData . name . equals ( method ) ) { candidates . add ( methodLinkMetaData ) ; } } if ( candidates . isEmpty ( ) ) { String message = String . format ( <str> , method , className ) ; message + = <str> + <str> ; throw new RuntimeException ( message ) ; } if ( candidates . size ( ) ! = <int> ) { String message = String . format ( <str> , method , className , CollectionUtils . join ( <str> , candidates ) ) ; message + = <str> + <str> + <str> ; throw new RuntimeException ( message ) ; } return candidates . get ( <int> ) ; } public LinkMetaData . Style getStyle ( ) { return style ; } public void setStyle ( LinkMetaData . Style style ) { this . style = style ; } public void addMethod ( MethodMetaData method , LinkMetaData . Style style ) { methods . put ( method . getOverrideSignature ( ) , new MethodLinkMetaData ( method . getName ( ) , method . getOverrideSignature ( ) , style ) ) ; } public void addEnumConstant ( EnumConstantMetaData enumConstant , LinkMetaData . Style style ) { String name = enumConstant . getName ( ) ; methods . put ( name , new EnumConstantLinkMetaData ( name , style ) ) ; } public void addBlockMethod ( MethodMetaData method ) { methods . put ( method . getOverrideSignature ( ) , new BlockLinkMetaData ( method . getName ( ) , method . getOverrideSignature ( ) ) ) ; } public void addGetterMethod ( String propertyName , MethodMetaData method ) { methods . put ( method . getOverrideSignature ( ) , new GetterLinkMetaData ( propertyName , method . getName ( ) , method . getOverrideSignature ( ) ) ) ; } public void attach ( ClassMetaDataRepository < ClassLinkMetaData > linkMetaDataClassMetaDataRepository ) { } private static class MethodLinkMetaData implements Serializable { final String name ; final String signature ; final LinkMetaData . Style style ; private MethodLinkMetaData ( String name , String signature , LinkMetaData . Style style ) { this . name = name ; this . signature = signature ; this . style = style ; } public String getDisplayName ( ) { return String . format ( <str> , name ) ; } public String getUrlFragment ( String className ) { return style = = LinkMetaData . Style . Dsldoc ? String . format ( <str> , className , signature ) : signature ; } @Override public String toString ( ) { return signature ; } } private static class BlockLinkMetaData extends MethodLinkMetaData { private BlockLinkMetaData ( String name , String signature ) { super ( name , signature , LinkMetaData . Style . Dsldoc ) ; } @Override public String getDisplayName ( ) { return String . format ( <str> , name ) ; } } private static class GetterLinkMetaData extends MethodLinkMetaData { private final String propertyName ; private GetterLinkMetaData ( String propertyName , String methodName , String signature ) { super ( methodName , signature , LinkMetaData . Style . Dsldoc ) ; this . propertyName = propertyName ; } @Override public String getUrlFragment ( String className ) { return String . format ( <str> , className , propertyName ) ; } } private static class EnumConstantLinkMetaData extends MethodLinkMetaData { private EnumConstantLinkMetaData ( String name , LinkMetaData . Style style ) { super ( name , name , style ) ; } @Override public String getDisplayName ( ) { return name ; } } } 
