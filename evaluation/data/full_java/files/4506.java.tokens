package org . eclipse . debug . internal . ui . views . breakpoints ; import java . util . ArrayList ; import java . util . List ; import org . eclipse . core . runtime . IAdaptable ; import org . eclipse . debug . core . DebugPlugin ; import org . eclipse . debug . core . model . IBreakpoint ; import org . eclipse . ui . IWorkingSet ; import org . eclipse . ui . IWorkingSetElementAdapter ; public class BreakpointWorkingSetElementAdapter implements IWorkingSetElementAdapter { @Override public IAdaptable [ ] adaptElements ( IWorkingSet ws , IAdaptable [ ] elements ) { for ( int i = <int> ; i < elements . length ; i + + ) { IBreakpoint breakpoint = ( IBreakpoint ) DebugPlugin . getAdapter ( elements [ i ] , IBreakpoint . class ) ; if ( breakpoint ! = null ) { return selectBreakpoints ( elements ) ; } } return elements ; } private IAdaptable [ ] selectBreakpoints ( IAdaptable [ ] elements ) { List < IBreakpoint > breakpoints = new ArrayList < IBreakpoint > ( elements . length ) ; for ( int i = <int> ; i < elements . length ; i + + ) { IBreakpoint breakpoint = ( IBreakpoint ) DebugPlugin . getAdapter ( elements [ i ] , IBreakpoint . class ) ; if ( breakpoint ! = null ) { breakpoints . add ( breakpoint ) ; } } return breakpoints . toArray ( new IAdaptable [ breakpoints . size ( ) ] ) ; } @Override public void dispose ( ) { } } 
