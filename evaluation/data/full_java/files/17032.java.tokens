package com . badlogic . gdx . physics . box2d ; public class ContactImpulse { final World world ; long addr ; float [ ] tmp = new float [ <int> ] ; final float [ ] normalImpulses = new float [ <int> ] ; final float [ ] tangentImpulses = new float [ <int> ] ; protected ContactImpulse ( World world , long addr ) { this . world = world ; this . addr = addr ; } public float [ ] getNormalImpulses ( ) { jniGetNormalImpulses ( addr , normalImpulses ) ; return normalImpulses ; } private native void jniGetNormalImpulses ( long addr , float [ ] values ) ; public float [ ] getTangentImpulses ( ) { jniGetTangentImpulses ( addr , tangentImpulses ) ; return tangentImpulses ; } private native void jniGetTangentImpulses ( long addr , float [ ] values ) ; public int getCount ( ) { return jniGetCount ( addr ) ; } private native int jniGetCount ( long addr ) ; } 
