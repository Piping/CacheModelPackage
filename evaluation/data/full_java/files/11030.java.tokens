package org . gradle . buildinit . plugins . internal ; public class TemplateValue { private final String value ; public TemplateValue ( String value ) { this . value = value ; } public String getGroovyComment ( ) { return value . replace ( <str> , <str> ) ; } public String getGroovyString ( ) { StringBuilder result = new StringBuilder ( ) ; for ( int i = <int> ; i < value . length ( ) ; i + + ) { char ch = value . charAt ( i ) ; switch ( ch ) { case <str> : result . append ( <str> ) . append ( <str> ) ; break ; case <str> : result . append ( <str> ) . append ( <str> ) ; break ; case <str> : result . append ( <str> ) . append ( <str> ) ; break ; case <str> : result . append ( <str> ) . append ( <str> ) ; break ; case <str> : result . append ( <str> ) . append ( <str> ) ; break ; case <str> : result . append ( <str> ) . append ( <str> ) ; break ; case <str> : result . append ( <str> ) . append ( <str> ) ; break ; default : result . append ( ch ) ; } } return result . toString ( ) ; } @Override public String toString ( ) { return String . format ( <str> , value ) ; } } 
