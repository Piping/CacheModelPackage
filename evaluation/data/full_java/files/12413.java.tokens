package org . gradle . groovy . scripts ; import static org . gradle . util . Matchers . * ; import static org . hamcrest . Matchers . * ; import static org . junit . Assert . * ; import org . gradle . internal . resource . StringResource ; import org . junit . Test ; public class StringScriptSourceTest { private final StringScriptSource source = new StringScriptSource ( <str> , <str> ) ; @Test public void usesProvidedContent ( ) { assertThat ( source . getResource ( ) , instanceOf ( StringResource . class ) ) ; assertThat ( source . getResource ( ) . getText ( ) , equalTo ( <str> ) ) ; } @Test public void generatesClassNameAndSourceFileNameUsingHashOfText ( ) { assertThat ( source . getClassName ( ) , matchesRegexp ( <str> ) ) ; assertThat ( source . getFileName ( ) , equalTo ( source . getClassName ( ) ) ) ; } @Test public void sourcesWithDifferentTextHaveDifferentClassNames ( ) { assertThat ( source . getClassName ( ) , equalTo ( new StringScriptSource ( <str> , <str> ) . getClassName ( ) ) ) ; assertThat ( source . getClassName ( ) , not ( equalTo ( new StringScriptSource ( <str> , <str> ) . getClassName ( ) ) ) ) ; } @Test public void usesProvidedDescription ( ) { assertThat ( source . getDisplayName ( ) , equalTo ( <str> ) ) ; } } 
