package org . elasticsearch . action ; public enum WriteConsistencyLevel { DEFAULT ( ( byte ) <int> ) , ONE ( ( byte ) <int> ) , QUORUM ( ( byte ) <int> ) , ALL ( ( byte ) <int> ) ; private final byte id ; WriteConsistencyLevel ( byte id ) { this . id = id ; } public byte id ( ) { return id ; } public static WriteConsistencyLevel fromId ( byte value ) { if ( value = = <int> ) { return DEFAULT ; } else if ( value = = <int> ) { return ONE ; } else if ( value = = <int> ) { return QUORUM ; } else if ( value = = <int> ) { return ALL ; } throw new IllegalArgumentException ( <str> + value + <str> ) ; } public static WriteConsistencyLevel fromString ( String value ) { if ( value . equals ( <str> ) ) { return DEFAULT ; } else if ( value . equals ( <str> ) ) { return ONE ; } else if ( value . equals ( <str> ) ) { return QUORUM ; } else if ( value . equals ( <str> ) ) { return ALL ; } throw new IllegalArgumentException ( <str> + value + <str> ) ; } } 
