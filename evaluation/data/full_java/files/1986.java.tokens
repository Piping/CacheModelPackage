package org . nd4j . linalg . api . iter ; import org . nd4j . linalg . util . ArrayUtil ; import java . util . Iterator ; public class FlatIterator implements Iterator < int [ ] > { private int [ ] shape ; private int runningDimension ; private int [ ] currentCoord ; private int length ; private int current = <int> ; public FlatIterator ( int [ ] shape ) { this . shape = shape ; this . currentCoord = new int [ shape . length ] ; length = ArrayUtil . prod ( shape ) ; } @Override public void remove ( ) { } @Override public boolean hasNext ( ) { return current < length ; } @Override public int [ ] next ( ) { if ( currentCoord [ runningDimension ] = = shape [ runningDimension ] ) { runningDimension - - ; currentCoord [ runningDimension ] = <int> ; if ( runningDimension < shape . length ) { } } else { currentCoord [ runningDimension ] + + ; } current + + ; return currentCoord ; } } 
