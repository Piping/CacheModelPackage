package com . badlogic . gdx . physics . bullet . linearmath ; import com . badlogic . gdx . physics . bullet . BulletBase ; import com . badlogic . gdx . math . Vector3 ; import com . badlogic . gdx . math . Quaternion ; import com . badlogic . gdx . math . Matrix3 ; import com . badlogic . gdx . math . Matrix4 ; public class btConvexSeparatingDistanceUtil extends BulletBase { private long swigCPtr ; protected btConvexSeparatingDistanceUtil ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , cPtr , cMemoryOwn ) ; swigCPtr = cPtr ; } public btConvexSeparatingDistanceUtil ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( swigCPtr = cPtr , cMemoryOwn ) ; } public static long getCPtr ( btConvexSeparatingDistanceUtil obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; LinearMathJNI . delete_btConvexSeparatingDistanceUtil ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } public btConvexSeparatingDistanceUtil ( float boundingRadiusA , float boundingRadiusB ) { this ( LinearMathJNI . new_btConvexSeparatingDistanceUtil ( boundingRadiusA , boundingRadiusB ) , true ) ; } public float getConservativeSeparatingDistance ( ) { return LinearMathJNI . btConvexSeparatingDistanceUtil_getConservativeSeparatingDistance ( swigCPtr , this ) ; } public void updateSeparatingDistance ( Matrix4 transA , Matrix4 transB ) { LinearMathJNI . btConvexSeparatingDistanceUtil_updateSeparatingDistance ( swigCPtr , this , transA , transB ) ; } public void initSeparatingDistance ( Vector3 separatingVector , float separatingDistance , Matrix4 transA , Matrix4 transB ) { LinearMathJNI . btConvexSeparatingDistanceUtil_initSeparatingDistance ( swigCPtr , this , separatingVector , separatingDistance , transA , transB ) ; } } 
