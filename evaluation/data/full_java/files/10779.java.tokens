package org . gradle . api . plugins . antlr . internal . antlr2 ; import antlr . Parser ; import antlr . TreeParser ; import java . io . File ; public class GrammarMetadata { private final GrammarFileMetadata grammarFileMetadata ; private final GrammarDelegate grammarDelegate ; public GrammarMetadata ( GrammarFileMetadata grammarFileMetadata , GrammarDelegate grammarDelegate ) { this . grammarFileMetadata = grammarFileMetadata ; this . grammarDelegate = grammarDelegate ; grammarDelegate . associateWith ( this ) ; } public GrammarFileMetadata getGrammarFile ( ) { return grammarFileMetadata ; } public String getClassName ( ) { return grammarDelegate . getClassName ( ) ; } public String getQualifiedClassName ( ) { if ( isEmpty ( getPackageName ( ) ) ) { return getClassName ( ) ; } else { return getPackageName ( ) + <str> + getClassName ( ) ; } } public GrammarDelegate getSuperGrammarDelegate ( ) { return grammarDelegate . getSuperGrammarDelegate ( ) ; } public boolean extendsStandardGrammar ( ) { final String superGrammarClassName = getSuperGrammarDelegate ( ) . getClassName ( ) ; return Parser . class . getName ( ) . equals ( superGrammarClassName ) | | Parser . class . getSimpleName ( ) . equals ( superGrammarClassName ) | | TreeParser . class . getName ( ) . equals ( superGrammarClassName ) | | TreeParser . class . getSimpleName ( ) . equals ( superGrammarClassName ) | | <str> . equals ( superGrammarClassName ) ; } public String getImportVocab ( ) { return grammarDelegate . getImportVocab ( ) ; } public String getExportVocab ( ) { return grammarDelegate . getExportVocab ( ) ; } public String getPackageName ( ) { return getGrammarFile ( ) . getPackageName ( ) ; } public String determineGeneratedParserPath ( ) { if ( isEmpty ( getPackageName ( ) ) ) { return getClassName ( ) + <str> ; } else { return getPackageName ( ) . replace ( <str> , File . separatorChar ) + File . separatorChar + getClassName ( ) + <str> ; } } private boolean isEmpty ( String packageName ) { return packageName = = null | | packageName . trim ( ) . length ( ) = = <int> ; } } 
