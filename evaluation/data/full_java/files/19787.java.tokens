package io . netty . example . factorial ; import io . netty . buffer . ByteBuf ; import io . netty . channel . ChannelHandlerContext ; import io . netty . handler . codec . ByteToMessageDecoder ; import io . netty . handler . codec . CorruptedFrameException ; import java . math . BigInteger ; import java . util . List ; public class BigIntegerDecoder extends ByteToMessageDecoder { @Override protected void decode ( ChannelHandlerContext ctx , ByteBuf in , List < Object > out ) { if ( in . readableBytes ( ) < <int> ) { return ; } in . markReaderIndex ( ) ; int magicNumber = in . readUnsignedByte ( ) ; if ( magicNumber ! = <str> ) { in . resetReaderIndex ( ) ; throw new CorruptedFrameException ( <str> + magicNumber ) ; } int dataLength = in . readInt ( ) ; if ( in . readableBytes ( ) < dataLength ) { in . resetReaderIndex ( ) ; return ; } byte [ ] decoded = new byte [ dataLength ] ; in . readBytes ( decoded ) ; out . add ( new BigInteger ( decoded ) ) ; } } 
