package org . gradle . testkit . runner . internal ; import org . gradle . internal . classpath . ClassPath ; import org . gradle . testkit . runner . internal . dist . GradleDistribution ; import java . io . File ; import java . io . OutputStream ; import java . util . List ; public class GradleExecutionParameters { private final GradleDistribution gradleDistribution ; private final File gradleUserHome ; private final File projectDir ; private final List < String > buildArgs ; private final List < String > jvmArgs ; private final ClassPath injectedClassPath ; private final boolean embedded ; private final OutputStream standardOutput ; private final OutputStream standardError ; public GradleExecutionParameters ( GradleDistribution gradleDistribution , File gradleUserHome , File projectDir , List < String > buildArgs , List < String > jvmArgs , ClassPath injectedClassPath , boolean embedded , OutputStream standardOutput , OutputStream standardError ) { this . gradleDistribution = gradleDistribution ; this . gradleUserHome = gradleUserHome ; this . projectDir = projectDir ; this . buildArgs = buildArgs ; this . jvmArgs = jvmArgs ; this . injectedClassPath = injectedClassPath ; this . embedded = embedded ; this . standardOutput = standardOutput ; this . standardError = standardError ; } public GradleDistribution getGradleDistribution ( ) { return gradleDistribution ; } public File getGradleUserHome ( ) { return gradleUserHome ; } public File getProjectDir ( ) { return projectDir ; } public List < String > getBuildArgs ( ) { return buildArgs ; } public List < String > getJvmArgs ( ) { return jvmArgs ; } public ClassPath getInjectedClassPath ( ) { return injectedClassPath ; } public boolean isEmbedded ( ) { return embedded ; } public OutputStream getStandardOutput ( ) { return standardOutput ; } public OutputStream getStandardError ( ) { return standardError ; } } 
