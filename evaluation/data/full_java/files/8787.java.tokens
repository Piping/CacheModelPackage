package org . elasticsearch . plan . a ; import java . text . ParseException ; import org . antlr . v4 . runtime . DefaultErrorStrategy ; import org . antlr . v4 . runtime . InputMismatchException ; import org . antlr . v4 . runtime . NoViableAltException ; import org . antlr . v4 . runtime . Parser ; import org . antlr . v4 . runtime . RecognitionException ; import org . antlr . v4 . runtime . Token ; class ParserErrorStrategy extends DefaultErrorStrategy { @Override public void recover ( Parser recognizer , RecognitionException re ) { Token token = re . getOffendingToken ( ) ; String message ; if ( token = = null ) { message = <str> ; } else if ( re instanceof InputMismatchException ) { message = <str> + token . getLine ( ) + <str> + token . getCharPositionInLine ( ) + <str> + <str> + getTokenErrorDisplay ( token ) + <str> + <str> + re . getExpectedTokens ( ) . toString ( recognizer . getVocabulary ( ) ) + <str> ; } else if ( re instanceof NoViableAltException ) { if ( token . getType ( ) = = PlanAParser . EOF ) { message = <str> ; } else { message = <str> + token . getLine ( ) + <str> + token . getCharPositionInLine ( ) + <str> + <str> + getTokenErrorDisplay ( token ) + <str> ; } } else { message = <str> + token . getLine ( ) + <str> + token . getCharPositionInLine ( ) + <str> + <str> + getTokenErrorDisplay ( token ) + <str> ; } ParseException parseException = new ParseException ( message , token = = null ? - <int> : token . getStartIndex ( ) ) ; parseException . initCause ( re ) ; throw new RuntimeException ( parseException ) ; } @Override public Token recoverInline ( Parser recognizer ) throws RecognitionException { Token token = recognizer . getCurrentToken ( ) ; String message = <str> + token . getLine ( ) + <str> + token . getCharPositionInLine ( ) + <str> + <str> + getTokenErrorDisplay ( token ) + <str> + <str> + recognizer . getExpectedTokens ( ) . toString ( recognizer . getVocabulary ( ) ) + <str> ; ParseException parseException = new ParseException ( message , token . getStartIndex ( ) ) ; throw new RuntimeException ( parseException ) ; } @Override public void sync ( Parser recognizer ) { } } 
