package org . elasticsearch . cloud . aws ; import com . amazonaws . ClientConfiguration ; import com . amazonaws . auth . SignerFactory ; import org . elasticsearch . common . logging . ESLogger ; import org . elasticsearch . common . logging . Loggers ; public class AwsSigner { private static final ESLogger logger = Loggers . getLogger ( AwsSigner . class ) ; private AwsSigner ( ) { } protected static void validateSignerType ( String signer , String endpoint ) { if ( signer = = null ) { throw new IllegalArgumentException ( <str> ) ; } switch ( signer ) { case <str> : if ( endpoint . equals ( <str> ) | | endpoint . equals ( <str> ) ) { throw new IllegalArgumentException ( <str> ) ; } break ; case <str> : break ; default : try { SignerFactory . getSignerByTypeAndService ( signer , null ) ; } catch ( IllegalArgumentException e ) { throw new IllegalArgumentException ( <str> + signer + <str> ) ; } } } public static void configureSigner ( String signer , ClientConfiguration configuration , String endpoint ) { try { validateSignerType ( signer , endpoint ) ; } catch ( IllegalArgumentException e ) { logger . warn ( e . getMessage ( ) ) ; } configuration . setSignerOverride ( signer ) ; } } 
