package com . google . common . collect ; import com . google . caliper . BeforeExperiment ; import com . google . caliper . Benchmark ; import com . google . caliper . Param ; import com . google . common . collect . BenchmarkHelpers . SetImpl ; import com . google . common . collect . CollectionBenchmarkSampleData . Element ; import java . util . Set ; public class SetIterationBenchmark { @Param ( { <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> } ) private int size ; @Param ( <str> ) private SpecialRandom random ; @Param ( { <str> , <str> } ) private SetImpl impl ; private Set < Element > setToTest ; @BeforeExperiment void setUp ( ) { CollectionBenchmarkSampleData sampleData = new CollectionBenchmarkSampleData ( true , random , <float> , size ) ; setToTest = impl . create ( sampleData . getValuesInSet ( ) ) ; } @Benchmark int iteration ( int reps ) { int x = <int> ; for ( int i = <int> ; i < reps ; i + + ) { for ( Element y : setToTest ) { x ^ = System . identityHashCode ( y ) ; } } return x ; } } 
