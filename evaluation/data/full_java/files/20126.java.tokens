package io . netty . testsuite . transport ; import io . netty . bootstrap . AbstractBootstrap ; import io . netty . buffer . ByteBufAllocator ; import io . netty . buffer . PooledByteBufAllocator ; import io . netty . buffer . UnpooledByteBufAllocator ; import java . util . ArrayList ; import java . util . List ; public final class TestsuitePermutation { public static List < ByteBufAllocator > allocator ( ) { List < ByteBufAllocator > allocators = new ArrayList < ByteBufAllocator > ( ) ; allocators . add ( UnpooledByteBufAllocator . DEFAULT ) ; allocators . add ( PooledByteBufAllocator . DEFAULT ) ; return allocators ; } private TestsuitePermutation ( ) { } public interface BootstrapFactory < CB extends AbstractBootstrap < ? , ? > > { CB newInstance ( ) ; } public interface BootstrapComboFactory < SB extends AbstractBootstrap < ? , ? > , CB extends AbstractBootstrap < ? , ? > > { SB newServerInstance ( ) ; CB newClientInstance ( ) ; } } 
