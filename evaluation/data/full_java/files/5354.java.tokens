package org . elasticsearch . action . search ; import org . elasticsearch . action . ActionResponse ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . common . xcontent . StatusToXContent ; import org . elasticsearch . common . xcontent . XContentBuilder ; import org . elasticsearch . common . xcontent . XContentBuilderString ; import org . elasticsearch . rest . RestStatus ; import java . io . IOException ; import static org . elasticsearch . rest . RestStatus . NOT_FOUND ; import static org . elasticsearch . rest . RestStatus . OK ; public class ClearScrollResponse extends ActionResponse implements StatusToXContent { private boolean succeeded ; private int numFreed ; public ClearScrollResponse ( boolean succeeded , int numFreed ) { this . succeeded = succeeded ; this . numFreed = numFreed ; } ClearScrollResponse ( ) { } public boolean isSucceeded ( ) { return succeeded ; } public int getNumFreed ( ) { return numFreed ; } @Override public RestStatus status ( ) { return numFreed = = <int> ? NOT_FOUND : OK ; } @Override public XContentBuilder toXContent ( XContentBuilder builder , Params params ) throws IOException { builder . field ( Fields . SUCCEEDED , succeeded ) ; builder . field ( Fields . NUMFREED , numFreed ) ; return builder ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; succeeded = in . readBoolean ( ) ; numFreed = in . readVInt ( ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeBoolean ( succeeded ) ; out . writeVInt ( numFreed ) ; } static final class Fields { static final XContentBuilderString SUCCEEDED = new XContentBuilderString ( <str> ) ; static final XContentBuilderString NUMFREED = new XContentBuilderString ( <str> ) ; } } 
