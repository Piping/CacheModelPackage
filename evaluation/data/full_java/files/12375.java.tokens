package org . gradle . api . internal . artifacts . publish ; import org . gradle . api . artifacts . PublishArtifact ; import org . gradle . util . JUnit4GroovyMockery ; import org . jmock . integration . junit4 . JUnit4Mockery ; import org . jmock . lib . legacy . ClassImposteriser ; import java . io . File ; import java . util . Date ; import static org . junit . Assert . assertEquals ; public abstract class AbstractPublishArtifactTest { private static final File TEST_FILE = new File ( <str> ) ; private static final String TEST_NAME = <str> ; private static final String TEST_EXT = <str> ; private static final String TEST_TYPE = <str> ; private static final String TEST_CLASSIFIER = <str> ; private static final Date TEST_DATE = new Date ( ) ; protected File getTestFile ( ) { return TEST_FILE ; } protected String getTestName ( ) { return TEST_NAME ; } protected String getTestExt ( ) { return TEST_EXT ; } protected String getTestType ( ) { return TEST_TYPE ; } protected String getTestClassifier ( ) { return TEST_CLASSIFIER ; } protected Date getDate ( ) { return TEST_DATE ; } protected JUnit4Mockery context = new JUnit4GroovyMockery ( ) { { setImposteriser ( ClassImposteriser . INSTANCE ) ; } } ; protected void assertCommonPropertiesAreSet ( PublishArtifact artifact , boolean shouldHaveClassifier ) { assertEquals ( getTestName ( ) , artifact . getName ( ) ) ; assertEquals ( getTestType ( ) , artifact . getType ( ) ) ; assertEquals ( getTestExt ( ) , artifact . getExtension ( ) ) ; assertEquals ( getTestFile ( ) , artifact . getFile ( ) ) ; if ( shouldHaveClassifier ) { assertEquals ( getTestClassifier ( ) , artifact . getClassifier ( ) ) ; } } } 
