package com . badlogic . gdx . physics . bullet . collision ; import com . badlogic . gdx . physics . bullet . BulletBase ; import com . badlogic . gdx . physics . bullet . linearmath . * ; import com . badlogic . gdx . math . Vector3 ; import com . badlogic . gdx . math . Quaternion ; import com . badlogic . gdx . math . Matrix3 ; import com . badlogic . gdx . math . Matrix4 ; public class btUniformScalingShape extends btConvexShape { private long swigCPtr ; protected btUniformScalingShape ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , CollisionJNI . btUniformScalingShape_SWIGUpcast ( cPtr ) , cMemoryOwn ) ; swigCPtr = cPtr ; } public btUniformScalingShape ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( CollisionJNI . btUniformScalingShape_SWIGUpcast ( swigCPtr = cPtr ) , cMemoryOwn ) ; } public static long getCPtr ( btUniformScalingShape obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; CollisionJNI . delete_btUniformScalingShape ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } public btUniformScalingShape ( btConvexShape convexChildShape , float uniformScalingFactor ) { this ( CollisionJNI . new_btUniformScalingShape ( btConvexShape . getCPtr ( convexChildShape ) , convexChildShape , uniformScalingFactor ) , true ) ; } public float getUniformScalingFactor ( ) { return CollisionJNI . btUniformScalingShape_getUniformScalingFactor ( swigCPtr , this ) ; } public btConvexShape getChildShape ( ) { long cPtr = CollisionJNI . btUniformScalingShape_getChildShape__SWIG_0 ( swigCPtr , this ) ; return ( cPtr = = <int> ) ? null : new btConvexShape ( cPtr , false ) ; } } 
