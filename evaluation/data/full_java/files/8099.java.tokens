package org . elasticsearch . index . analysis ; import org . apache . lucene . analysis . TokenStream ; import org . apache . lucene . analysis . Tokenizer ; import org . apache . lucene . analysis . core . Lucene43StopFilter ; import org . apache . lucene . analysis . core . StopFilter ; import org . apache . lucene . analysis . core . WhitespaceTokenizer ; import org . apache . lucene . search . suggest . analyzing . SuggestStopFilter ; import org . apache . lucene . util . Version ; import org . elasticsearch . common . inject . ProvisionException ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . common . settings . Settings . Builder ; import org . elasticsearch . test . ESTokenStreamTestCase ; import java . io . IOException ; import java . io . StringReader ; import static org . hamcrest . Matchers . containsString ; import static org . hamcrest . Matchers . instanceOf ; public class StopTokenFilterTests extends ESTokenStreamTestCase { public void testPositionIncrementSetting ( ) throws IOException { Builder builder = Settings . settingsBuilder ( ) . put ( <str> , <str> ) . put ( <str> , false ) ; if ( random ( ) . nextBoolean ( ) ) { builder . put ( <str> , <str> ) ; } builder . put ( <str> , createTempDir ( ) . toString ( ) ) ; Settings settings = builder . build ( ) ; try { AnalysisTestsHelper . createAnalysisServiceFromSettings ( settings ) ; fail ( <str> ) ; } catch ( IllegalArgumentException e ) { assertThat ( e . getMessage ( ) , containsString ( <str> ) ) ; } } public void testCorrectPositionIncrementSetting ( ) throws IOException { Builder builder = Settings . settingsBuilder ( ) . put ( <str> , <str> ) ; int thingToDo = random ( ) . nextInt ( <int> ) ; if ( thingToDo = = <int> ) { builder . put ( <str> , Version . LATEST ) ; } else if ( thingToDo = = <int> ) { builder . put ( <str> , Version . LUCENE_4_0 ) ; if ( random ( ) . nextBoolean ( ) ) { builder . put ( <str> , true ) ; } } else { } builder . put ( <str> , createTempDir ( ) . toString ( ) ) ; AnalysisService analysisService = AnalysisTestsHelper . createAnalysisServiceFromSettings ( builder . build ( ) ) ; TokenFilterFactory tokenFilter = analysisService . tokenFilter ( <str> ) ; assertThat ( tokenFilter , instanceOf ( StopTokenFilterFactory . class ) ) ; Tokenizer tokenizer = new WhitespaceTokenizer ( ) ; tokenizer . setReader ( new StringReader ( <str> ) ) ; TokenStream create = tokenFilter . create ( tokenizer ) ; if ( thingToDo = = <int> ) { assertThat ( create , instanceOf ( Lucene43StopFilter . class ) ) ; } else { assertThat ( create , instanceOf ( StopFilter . class ) ) ; } } public void testDeprecatedPositionIncrementSettingWithVersions ( ) throws IOException { Settings settings = Settings . settingsBuilder ( ) . put ( <str> , <str> ) . put ( <str> , false ) . put ( <str> , <str> ) . put ( <str> , createTempDir ( ) . toString ( ) ) . build ( ) ; AnalysisService analysisService = AnalysisTestsHelper . createAnalysisServiceFromSettings ( settings ) ; TokenFilterFactory tokenFilter = analysisService . tokenFilter ( <str> ) ; assertThat ( tokenFilter , instanceOf ( StopTokenFilterFactory . class ) ) ; Tokenizer tokenizer = new WhitespaceTokenizer ( ) ; tokenizer . setReader ( new StringReader ( <str> ) ) ; TokenStream create = tokenFilter . create ( tokenizer ) ; assertThat ( create , instanceOf ( Lucene43StopFilter . class ) ) ; } public void testThatSuggestStopFilterWorks ( ) throws Exception { Settings settings = Settings . settingsBuilder ( ) . put ( <str> , <str> ) . put ( <str> , false ) . put ( <str> , createTempDir ( ) . toString ( ) ) . build ( ) ; AnalysisService analysisService = AnalysisTestsHelper . createAnalysisServiceFromSettings ( settings ) ; TokenFilterFactory tokenFilter = analysisService . tokenFilter ( <str> ) ; assertThat ( tokenFilter , instanceOf ( StopTokenFilterFactory . class ) ) ; Tokenizer tokenizer = new WhitespaceTokenizer ( ) ; tokenizer . setReader ( new StringReader ( <str> ) ) ; TokenStream create = tokenFilter . create ( tokenizer ) ; assertThat ( create , instanceOf ( SuggestStopFilter . class ) ) ; } } 
