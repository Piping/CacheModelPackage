package org . elasticsearch . search . aggregations . bucket . script ; import org . elasticsearch . common . Nullable ; import org . elasticsearch . script . ExecutableScript ; import org . elasticsearch . script . NativeScriptFactory ; import java . util . Map ; public class NativeSignificanceScoreScriptWithParams extends TestScript { public static final String NATIVE_SIGNIFICANCE_SCORE_SCRIPT_WITH_PARAMS = <str> ; double factor = <float> ; public static class Factory implements NativeScriptFactory { @Override public ExecutableScript newScript ( @Nullable Map < String , Object > params ) { return new NativeSignificanceScoreScriptWithParams ( params ) ; } @Override public boolean needsScores ( ) { return false ; } } private NativeSignificanceScoreScriptWithParams ( Map < String , Object > params ) { factor = ( ( Number ) params . get ( <str> ) ) . doubleValue ( ) ; } @Override public Object run ( ) { return factor * ( _subset_freq . longValue ( ) + _subset_size . longValue ( ) + _superset_freq . longValue ( ) + _superset_size . longValue ( ) ) / factor ; } } 
