package org . elasticsearch . action . suggest ; import org . elasticsearch . action . support . broadcast . BroadcastShardRequest ; import org . elasticsearch . common . bytes . BytesReference ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . index . shard . ShardId ; import java . io . IOException ; public final class ShardSuggestRequest extends BroadcastShardRequest { private BytesReference suggestSource ; public ShardSuggestRequest ( ) { } ShardSuggestRequest ( ShardId shardId , SuggestRequest request ) { super ( shardId , request ) ; this . suggestSource = request . suggest ( ) ; } public BytesReference suggest ( ) { return suggestSource ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; suggestSource = in . readBytesReference ( ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeBytesReference ( suggestSource ) ; } } 
