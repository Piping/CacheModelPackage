package org . gradle . model . internal . inspect ; import org . gradle . internal . BiAction ; import org . gradle . model . internal . core . ModelView ; import java . util . List ; public class RuleMethodBackedMutationAction < T > implements BiAction < T , List < ModelView < ? > > > { private final ModelRuleInvoker < ? > ruleInvoker ; public RuleMethodBackedMutationAction ( ModelRuleInvoker < ? > ruleInvoker ) { this . ruleInvoker = ruleInvoker ; } public void execute ( T subject , List < ModelView < ? > > inputs ) { Object [ ] args = new Object [ inputs . size ( ) + <int> ] ; args [ <int> ] = subject ; for ( int i = <int> ; i < inputs . size ( ) ; i + + ) { args [ i + <int> ] = inputs . get ( i ) . getInstance ( ) ; } ruleInvoker . invoke ( args ) ; } } 
