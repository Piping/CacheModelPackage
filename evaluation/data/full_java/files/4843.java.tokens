package org . eclipse . ui . externaltools . internal . launchConfigurations ; import org . eclipse . core . externaltools . internal . launchConfigurations . ExternalToolsCoreUtil ; import org . eclipse . core . resources . IResource ; import org . eclipse . core . runtime . CoreException ; import org . eclipse . core . runtime . IPath ; import org . eclipse . core . runtime . IStatus ; import org . eclipse . core . runtime . Status ; import org . eclipse . debug . core . ILaunchConfiguration ; import org . eclipse . ui . externaltools . internal . model . ExternalToolsPlugin ; public class ExternalToolsUtil { protected static void abort ( String message , Throwable exception , int code ) throws CoreException { throw new CoreException ( new Status ( IStatus . ERROR , ExternalToolsPlugin . PLUGIN_ID , code , message , exception ) ) ; } public static IPath getLocation ( ILaunchConfiguration configuration ) throws CoreException { return ExternalToolsCoreUtil . getLocation ( configuration ) ; } public static boolean getCaptureOutput ( ILaunchConfiguration configuration ) throws CoreException { return ExternalToolsCoreUtil . getCaptureOutput ( configuration ) ; } public static IPath getWorkingDirectory ( ILaunchConfiguration configuration ) throws CoreException { return ExternalToolsCoreUtil . getWorkingDirectory ( configuration ) ; } public static String [ ] getArguments ( ILaunchConfiguration configuration ) throws CoreException { return ExternalToolsCoreUtil . getArguments ( configuration ) ; } public static boolean isBuilderEnabled ( ILaunchConfiguration configuration ) throws CoreException { return ExternalToolsCoreUtil . isBuilderEnabled ( configuration ) ; } public static IResource [ ] getResourcesForBuildScope ( ILaunchConfiguration configuration ) throws CoreException { return ExternalToolsCoreUtil . getResourcesForBuildScope ( configuration ) ; } public static String [ ] parseStringIntoList ( String arguments ) { return ExternalToolsCoreUtil . parseStringIntoList ( arguments ) ; } } 
