package org . gradle . api . internal . artifacts . dsl ; import org . apache . commons . lang . StringUtils ; import java . io . File ; public class ArtifactFile { private String name ; private String classifier ; private String extension ; public ArtifactFile ( File file , String version ) { name = file . getName ( ) ; extension = <str> ; classifier = <str> ; boolean done = false ; int startVersion = StringUtils . lastIndexOf ( name , <str> + version ) ; if ( startVersion > = <int> ) { int endVersion = startVersion + version . length ( ) + <int> ; if ( endVersion = = name . length ( ) ) { name = name . substring ( <int> , startVersion ) ; done = true ; } else if ( endVersion < name . length ( ) & & name . charAt ( endVersion ) = = <str> ) { String tail = name . substring ( endVersion + <int> ) ; name = name . substring ( <int> , startVersion ) ; classifier = StringUtils . substringBeforeLast ( tail , <str> ) ; extension = StringUtils . substringAfterLast ( tail , <str> ) ; done = true ; } else if ( endVersion < name . length ( ) & & StringUtils . lastIndexOf ( name , <str> ) = = endVersion ) { extension = name . substring ( endVersion + <int> ) ; name = name . substring ( <int> , startVersion ) ; done = true ; } } if ( ! done ) { extension = StringUtils . substringAfterLast ( name , <str> ) ; name = StringUtils . substringBeforeLast ( name , <str> ) ; } if ( extension . length ( ) = = <int> ) { extension = null ; } if ( classifier . length ( ) = = <int> ) { classifier = null ; } } public String getName ( ) { return name ; } public String getClassifier ( ) { return classifier ; } public String getExtension ( ) { return extension ; } } 
