package org . gradle . messaging . dispatch ; import org . gradle . internal . UncheckedException ; import java . lang . reflect . InvocationTargetException ; import java . lang . reflect . Method ; public class ReflectionDispatch implements Dispatch < MethodInvocation > { private final Object target ; public ReflectionDispatch ( Object target ) { this . target = target ; } public void dispatch ( MethodInvocation message ) { try { Method method = message . getMethod ( ) ; method . setAccessible ( true ) ; method . invoke ( target , message . getArguments ( ) ) ; } catch ( InvocationTargetException e ) { throw UncheckedException . throwAsUncheckedException ( e . getCause ( ) ) ; } catch ( Throwable throwable ) { throw UncheckedException . throwAsUncheckedException ( throwable ) ; } } } 
