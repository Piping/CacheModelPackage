package org . elasticsearch . indices . breaker ; import org . elasticsearch . common . inject . AbstractModule ; import org . elasticsearch . common . settings . Settings ; public class CircuitBreakerModule extends AbstractModule { public static final String TYPE_KEY = <str> ; private final Settings settings ; public CircuitBreakerModule ( Settings settings ) { this . settings = settings ; } @Override protected void configure ( ) { String type = settings . get ( TYPE_KEY ) ; Class < ? extends CircuitBreakerService > impl ; if ( type = = null | | type . equals ( <str> ) ) { impl = HierarchyCircuitBreakerService . class ; } else if ( type . equals ( <str> ) ) { impl = NoneCircuitBreakerService . class ; } else { throw new IllegalArgumentException ( <str> + type + <str> ) ; } bind ( CircuitBreakerService . class ) . to ( impl ) . asEagerSingleton ( ) ; } } 
