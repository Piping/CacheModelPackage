package org . apache . cassandra . cql3 . validation . entities ; import org . junit . Test ; import org . apache . cassandra . cql3 . CQLTester ; import org . apache . cassandra . exceptions . ConfigurationException ; import org . apache . cassandra . exceptions . InvalidRequestException ; public class CountersTest extends CQLTester { @Test public void testCounters ( ) throws Throwable { createTable ( <str> ) ; execute ( <str> ) ; assertRows ( execute ( <str> ) , row ( <int> ) ) ; execute ( <str> ) ; assertRows ( execute ( <str> ) , row ( - <int> ) ) ; execute ( <str> ) ; assertRows ( execute ( <str> ) , row ( - <int> ) ) ; execute ( <str> ) ; assertRows ( execute ( <str> ) , row ( - <int> ) ) ; } @Test public void testRegularCounters ( ) throws Throwable { assertInvalidThrowMessage ( <str> , InvalidRequestException . class , String . format ( <str> , KEYSPACE , createTableName ( ) ) ) ; } @Test public void testCountersOnCollections ( ) throws Throwable { String tableName = KEYSPACE + <str> + createTableName ( ) ; assertInvalidThrow ( InvalidRequestException . class , String . format ( <str> , tableName ) ) ; tableName = KEYSPACE + <str> + createTableName ( ) ; assertInvalidThrow ( InvalidRequestException . class , String . format ( <str> , tableName ) ) ; tableName = KEYSPACE + <str> + createTableName ( ) ; assertInvalidThrow ( InvalidRequestException . class , String . format ( <str> , tableName ) ) ; } @Test public void testCounterUpdatesWithUnset ( ) throws Throwable { createTable ( <str> ) ; execute ( <str> ) ; assertRows ( execute ( <str> ) , row ( <int> ) ) ; execute ( <str> , <int> ) ; assertRows ( execute ( <str> ) , row ( <int> ) ) ; execute ( <str> , unset ( ) ) ; assertRows ( execute ( <str> ) , row ( <int> ) ) ; execute ( <str> , <int> ) ; assertRows ( execute ( <str> ) , row ( <int> ) ) ; execute ( <str> , unset ( ) ) ; assertRows ( execute ( <str> ) , row ( <int> ) ) ; } } 
