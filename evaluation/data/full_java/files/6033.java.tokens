package org . elasticsearch . common . recycler ; public class NoneRecycler < T > extends AbstractRecycler < T > { public NoneRecycler ( C < T > c ) { super ( c ) ; } @Override public V < T > obtain ( int sizing ) { return new NV < > ( c . newInstance ( sizing ) ) ; } @Override public void close ( ) { } public static class NV < T > implements Recycler . V < T > { T value ; NV ( T value ) { this . value = value ; } @Override public T v ( ) { return value ; } @Override public boolean isRecycled ( ) { return false ; } @Override public void close ( ) { if ( value = = null ) { throw new IllegalStateException ( <str> ) ; } value = null ; } } } 
