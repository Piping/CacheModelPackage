package com . badlogic . gdx . tools . particleeditor ; import java . awt . GridBagConstraints ; import java . awt . Insets ; import java . awt . event . ActionEvent ; import java . awt . event . ActionListener ; import javax . swing . BorderFactory ; import javax . swing . JButton ; import javax . swing . JLabel ; import javax . swing . JPanel ; import javax . swing . event . ChangeEvent ; import javax . swing . event . ChangeListener ; import com . badlogic . gdx . graphics . g2d . ParticleEmitter . RangedNumericValue ; class RangedNumericPanel extends EditorPanel { private final RangedNumericValue value ; Slider minSlider , maxSlider ; JButton rangeButton ; JLabel label ; public RangedNumericPanel ( final RangedNumericValue value , String name , String description ) { super ( value , name , description ) ; this . value = value ; initializeComponents ( ) ; minSlider . setValue ( value . getLowMin ( ) ) ; maxSlider . setValue ( value . getLowMax ( ) ) ; minSlider . addChangeListener ( new ChangeListener ( ) { public void stateChanged ( ChangeEvent event ) { value . setLowMin ( ( Float ) minSlider . getValue ( ) ) ; if ( ! maxSlider . isVisible ( ) ) value . setLowMax ( ( Float ) minSlider . getValue ( ) ) ; } } ) ; maxSlider . addChangeListener ( new ChangeListener ( ) { public void stateChanged ( ChangeEvent event ) { value . setLowMax ( ( Float ) maxSlider . getValue ( ) ) ; } } ) ; rangeButton . addActionListener ( new ActionListener ( ) { public void actionPerformed ( ActionEvent event ) { boolean visible = ! maxSlider . isVisible ( ) ; maxSlider . setVisible ( visible ) ; rangeButton . setText ( visible ? <str> : <str> ) ; Slider slider = visible ? maxSlider : minSlider ; value . setLowMax ( ( Float ) slider . getValue ( ) ) ; } } ) ; if ( value . getLowMin ( ) = = value . getLowMax ( ) ) rangeButton . doClick ( <int> ) ; } private void initializeComponents ( ) { JPanel contentPanel = getContentPanel ( ) ; { label = new JLabel ( <str> ) ; contentPanel . add ( label , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . EAST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { minSlider = new Slider ( <int> , - <int> , <int> , <int> , - <int> , <int> ) ; contentPanel . add ( minSlider , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { maxSlider = new Slider ( <int> , - <int> , <int> , <int> , - <int> , <int> ) ; contentPanel . add ( maxSlider , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { rangeButton = new JButton ( <str> ) ; rangeButton . setBorder ( BorderFactory . createEmptyBorder ( <int> , <int> , <int> , <int> ) ) ; contentPanel . add ( rangeButton , new GridBagConstraints ( <int> , <int> , <int> , <int> , <float> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } } } 
