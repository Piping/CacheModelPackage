package org . elasticsearch . index . mapper . typelevels ; import org . elasticsearch . common . xcontent . XContentFactory ; import org . elasticsearch . index . mapper . DocumentMapper ; import org . elasticsearch . index . mapper . DocumentMapperParser ; import org . elasticsearch . test . ESSingleNodeTestCase ; import static org . hamcrest . Matchers . equalTo ; public class ParseMappingTypeLevelTests extends ESSingleNodeTestCase { public void testTypeLevel ( ) throws Exception { String mapping = XContentFactory . jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . startObject ( <str> ) . field ( <str> , true ) . endObject ( ) . endObject ( ) . endObject ( ) . string ( ) ; DocumentMapperParser parser = createIndex ( <str> ) . mapperService ( ) . documentMapperParser ( ) ; DocumentMapper mapper = parser . parse ( <str> , mapping ) ; assertThat ( mapper . type ( ) , equalTo ( <str> ) ) ; assertThat ( mapper . timestampFieldMapper ( ) . enabled ( ) , equalTo ( true ) ) ; mapper = parser . parse ( mapping ) ; assertThat ( mapper . type ( ) , equalTo ( <str> ) ) ; assertThat ( mapper . timestampFieldMapper ( ) . enabled ( ) , equalTo ( true ) ) ; } } 
