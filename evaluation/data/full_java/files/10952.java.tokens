package org . gradle . api . plugins . buildcomparison . compare . internal ; import org . gradle . api . plugins . buildcomparison . outcome . internal . BuildOutcomeAssociation ; import org . gradle . api . plugins . buildcomparison . outcome . internal . DefaultBuildOutcomeAssociation ; import org . gradle . api . plugins . buildcomparison . outcome . internal . BuildOutcome ; import java . util . HashSet ; import java . util . LinkedList ; import java . util . List ; import java . util . Set ; public class DefaultBuildComparisonSpecBuilder implements BuildComparisonSpecBuilder { private final Set < BuildOutcome > source = new HashSet < BuildOutcome > ( ) ; private final Set < BuildOutcome > target = new HashSet < BuildOutcome > ( ) ; private final List < BuildOutcomeAssociation < ? > > outcomeAssociations = new LinkedList < BuildOutcomeAssociation < ? > > ( ) ; public < A extends BuildOutcome , F extends A , T extends A > BuildOutcomeAssociation < A > associate ( F from , T to , Class < A > type ) { this . source . add ( from ) ; this . target . add ( to ) ; BuildOutcomeAssociation < A > outcomeAssociation = new DefaultBuildOutcomeAssociation < A > ( from , to , type ) ; outcomeAssociations . add ( outcomeAssociation ) ; return outcomeAssociation ; } public < F extends BuildOutcome > void addUnassociatedFrom ( F from ) { this . source . add ( from ) ; } public < T extends BuildOutcome > void addUnassociatedTo ( T to ) { this . target . add ( to ) ; } public BuildComparisonSpec build ( ) { return new DefaultBuildComparisonSpec ( source , target , outcomeAssociations ) ; } } 
