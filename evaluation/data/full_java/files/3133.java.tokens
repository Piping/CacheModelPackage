package jcuda ; public abstract class NativePointerObject { private long nativePointer ; protected NativePointerObject ( ) { nativePointer = <int> ; } protected NativePointerObject ( long nativePointer ) { this . nativePointer = nativePointer ; } protected NativePointerObject ( NativePointerObject other ) { this . nativePointer = other . nativePointer ; } protected long getNativePointer ( ) { return nativePointer ; } @Override public String toString ( ) { return <str> + nativePointer + <str> ; } @Override public int hashCode ( ) { final int prime = <int> ; int result = <int> ; result = prime * result + ( int ) ( nativePointer ^ ( nativePointer > > > <int> ) ) ; return result ; } @Override public boolean equals ( Object obj ) { if ( this = = obj ) return true ; if ( obj = = null ) return false ; if ( getClass ( ) ! = obj . getClass ( ) ) return false ; NativePointerObject other = ( NativePointerObject ) obj ; if ( nativePointer ! = other . nativePointer ) return false ; return true ; } } 
