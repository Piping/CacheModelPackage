package org . jbox2d . dynamics ; import java . util . List ; import org . jbox2d . common . MathUtils ; public class Profile { private static final int LONG_AVG_NUMS = <int> ; private static final float LONG_FRACTION = <float> / LONG_AVG_NUMS ; private static final int SHORT_AVG_NUMS = <int> ; private static final float SHORT_FRACTION = <float> / SHORT_AVG_NUMS ; public static class ProfileEntry { float longAvg ; float shortAvg ; float min ; float max ; float accum ; public ProfileEntry ( ) { min = Float . MAX_VALUE ; max = - Float . MAX_VALUE ; } public void record ( float value ) { longAvg = longAvg * ( <int> - LONG_FRACTION ) + value * LONG_FRACTION ; shortAvg = shortAvg * ( <int> - SHORT_FRACTION ) + value * SHORT_FRACTION ; min = MathUtils . min ( value , min ) ; max = MathUtils . max ( value , max ) ; } public void startAccum ( ) { accum = <int> ; } public void accum ( float value ) { accum + = value ; } public void endAccum ( ) { record ( accum ) ; } @Override public String toString ( ) { return shortAvg + <str> + longAvg + <str> + min + <str> + max + <str> ; } } public final ProfileEntry step = new ProfileEntry ( ) ; public final ProfileEntry stepInit = new ProfileEntry ( ) ; public final ProfileEntry collide = new ProfileEntry ( ) ; public final ProfileEntry solveParticleSystem = new ProfileEntry ( ) ; public final ProfileEntry solve = new ProfileEntry ( ) ; public final ProfileEntry solveInit = new ProfileEntry ( ) ; public final ProfileEntry solveVelocity = new ProfileEntry ( ) ; public final ProfileEntry solvePosition = new ProfileEntry ( ) ; public final ProfileEntry broadphase = new ProfileEntry ( ) ; public final ProfileEntry solveTOI = new ProfileEntry ( ) ; public void toDebugStrings ( List < String > strings ) { strings . add ( <str> ) ; strings . add ( <str> + step ) ; strings . add ( <str> + stepInit ) ; strings . add ( <str> + collide ) ; strings . add ( <str> + solveParticleSystem ) ; strings . add ( <str> + solve ) ; strings . add ( <str> + solveInit ) ; strings . add ( <str> + solveVelocity ) ; strings . add ( <str> + solvePosition ) ; strings . add ( <str> + broadphase ) ; strings . add ( <str> + solveTOI ) ; } } 
