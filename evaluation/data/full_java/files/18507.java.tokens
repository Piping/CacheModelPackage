package com . badlogic . gdx . tests ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . graphics . GL20 ; import com . badlogic . gdx . graphics . g2d . SpriteBatch ; import com . badlogic . gdx . scenes . scene2d . Actor ; import com . badlogic . gdx . scenes . scene2d . Stage ; import com . badlogic . gdx . scenes . scene2d . ui . Label ; import com . badlogic . gdx . scenes . scene2d . ui . Skin ; import com . badlogic . gdx . scenes . scene2d . ui . Table ; import com . badlogic . gdx . tests . utils . GdxTest ; public class LabelScaleTest extends GdxTest { Skin skin ; Stage stage ; SpriteBatch batch ; Actor root ; @Override public void create ( ) { batch = new SpriteBatch ( ) ; skin = new Skin ( Gdx . files . internal ( <str> ) ) ; stage = new Stage ( ) ; Gdx . input . setInputProcessor ( stage ) ; Table table = new Table ( ) ; stage . addActor ( table ) ; table . setPosition ( <int> , <int> ) ; Label label1 = new Label ( <str> , skin ) ; label1 . setFontScale ( <int> ) ; Label label2 = new Label ( <str> , skin ) ; label2 . setWrap ( true ) ; label2 . setFontScale ( <float> , <float> ) ; table . debug ( ) ; table . add ( label1 ) ; table . row ( ) ; table . add ( label2 ) . fill ( ) ; table . pack ( ) ; } @Override public void dispose ( ) { stage . dispose ( ) ; skin . dispose ( ) ; } @Override public void render ( ) { Gdx . gl . glClearColor ( <float> , <float> , <float> , <int> ) ; Gdx . gl . glClear ( GL20 . GL_COLOR_BUFFER_BIT ) ; stage . act ( Math . min ( Gdx . graphics . getDeltaTime ( ) , <int> / <int> f ) ) ; stage . draw ( ) ; } @Override public void resize ( int width , int height ) { stage . getViewport ( ) . update ( width , height , true ) ; } } 
