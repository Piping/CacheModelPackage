package org . eclipse . debug . internal . ui . actions . expressions ; import org . eclipse . debug . core . DebugPlugin ; import org . eclipse . debug . core . model . IWatchExpression ; import org . eclipse . debug . internal . core . IInternalDebugCoreConstants ; import org . eclipse . debug . internal . ui . DebugUIPlugin ; import org . eclipse . jface . action . IAction ; import org . eclipse . jface . viewers . ISelection ; import org . eclipse . jface . window . Window ; import org . eclipse . ui . IViewActionDelegate ; import org . eclipse . ui . IViewPart ; public class AddWatchExpressionAction extends WatchExpressionAction implements IViewActionDelegate { @Override public void init ( IViewPart view ) { } @Override public void run ( IAction action ) { IWatchExpression watchExpression = DebugPlugin . getDefault ( ) . getExpressionManager ( ) . newWatchExpression ( IInternalDebugCoreConstants . EMPTY_STRING ) ; if ( new WatchExpressionDialog ( DebugUIPlugin . getShell ( ) , watchExpression , false ) . open ( ) = = Window . OK ) { DebugPlugin . getDefault ( ) . getExpressionManager ( ) . addExpression ( watchExpression ) ; watchExpression . setExpressionContext ( getContext ( ) ) ; } } @Override public void selectionChanged ( IAction action , ISelection selection ) { } } 
