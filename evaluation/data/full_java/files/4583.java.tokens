package org . eclipse . debug . internal . ui . views . memory ; import org . eclipse . swt . custom . CTabFolder ; import org . eclipse . swt . custom . CTabItem ; import org . eclipse . swt . events . SelectionEvent ; import org . eclipse . swt . events . SelectionListener ; public class ViewTabEnablementManager implements SelectionListener { @Override public void widgetSelected ( SelectionEvent e ) { if ( e . getSource ( ) instanceof CTabFolder ) { handleTabFolderSelection ( e ) ; } } @Override public void widgetDefaultSelected ( SelectionEvent e ) { } private void handleTabFolderSelection ( SelectionEvent event ) { CTabFolder folder = ( CTabFolder ) event . getSource ( ) ; CTabItem selectedItem = folder . getSelection ( ) ; IMemoryViewTab selectedViewTab ; if ( selectedItem ! = null ) { Object obj = selectedItem . getData ( ) ; if ( obj instanceof IMemoryViewTab ) { selectedViewTab = ( IMemoryViewTab ) obj ; } else { return ; } } else { return ; } CTabItem [ ] allTabs = folder . getItems ( ) ; for ( int i = <int> ; i < allTabs . length ; i + + ) { IMemoryViewTab viewTab ; Object obj = allTabs [ i ] . getData ( ) ; if ( obj instanceof IMemoryViewTab ) { viewTab = ( IMemoryViewTab ) obj ; if ( viewTab = = selectedViewTab & & ! viewTab . isEnabled ( ) ) { viewTab . setEnabled ( true ) ; viewTab . getRendering ( ) . activated ( ) ; } else if ( viewTab ! = selectedViewTab & & viewTab . isEnabled ( ) ) { viewTab . setEnabled ( false ) ; viewTab . getRendering ( ) . deactivated ( ) ; } } } } } 
