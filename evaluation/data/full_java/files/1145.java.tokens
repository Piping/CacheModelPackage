package org . apache . cassandra . tools . nodetool ; import io . airlift . command . Command ; import java . util . Map ; import com . google . common . collect . Multimap ; import org . apache . cassandra . tools . NodeProbe ; import org . apache . cassandra . tools . NodeTool . NodeToolCmd ; @Command ( name = <str> , description = <str> ) public class TpStats extends NodeToolCmd { @Override public void execute ( NodeProbe probe ) { System . out . printf ( <str> , <str> , <str> , <str> , <str> , <str> , <str> ) ; Multimap < String , String > threadPools = probe . getThreadPools ( ) ; for ( Map . Entry < String , String > tpool : threadPools . entries ( ) ) { System . out . printf ( <str> , tpool . getValue ( ) , probe . getThreadPoolMetric ( tpool . getKey ( ) , tpool . getValue ( ) , <str> ) , probe . getThreadPoolMetric ( tpool . getKey ( ) , tpool . getValue ( ) , <str> ) , probe . getThreadPoolMetric ( tpool . getKey ( ) , tpool . getValue ( ) , <str> ) , probe . getThreadPoolMetric ( tpool . getKey ( ) , tpool . getValue ( ) , <str> ) , probe . getThreadPoolMetric ( tpool . getKey ( ) , tpool . getValue ( ) , <str> ) ) ; } System . out . printf ( <str> , <str> , <str> ) ; for ( Map . Entry < String , Integer > entry : probe . getDroppedMessages ( ) . entrySet ( ) ) System . out . printf ( <str> , entry . getKey ( ) , entry . getValue ( ) ) ; } } 
