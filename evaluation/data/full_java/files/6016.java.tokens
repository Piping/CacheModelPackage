package org . elasticsearch . common . netty ; import org . elasticsearch . common . Booleans ; import org . elasticsearch . common . logging . Loggers ; import org . elasticsearch . transport . netty . NettyInternalESLoggerFactory ; import org . jboss . netty . logging . InternalLogger ; import org . jboss . netty . logging . InternalLoggerFactory ; import org . jboss . netty . util . ThreadNameDeterminer ; import org . jboss . netty . util . ThreadRenamingRunnable ; public class NettyUtils { public static final boolean DEFAULT_GATHERING ; private static EsThreadNameDeterminer ES_THREAD_NAME_DETERMINER = new EsThreadNameDeterminer ( ) ; public static class EsThreadNameDeterminer implements ThreadNameDeterminer { @Override public String determineThreadName ( String currentThreadName , String proposedThreadName ) throws Exception { return currentThreadName + <str> + proposedThreadName + <str> ; } } static { InternalLoggerFactory . setDefaultFactory ( new NettyInternalESLoggerFactory ( ) { @Override public InternalLogger newInstance ( String name ) { return super . newInstance ( name . replace ( <str> , <str> ) . replace ( <str> , <str> ) ) ; } } ) ; ThreadRenamingRunnable . setThreadNameDeterminer ( ES_THREAD_NAME_DETERMINER ) ; DEFAULT_GATHERING = Booleans . parseBoolean ( System . getProperty ( <str> ) , true ) ; Loggers . getLogger ( NettyUtils . class ) . debug ( <str> , DEFAULT_GATHERING ) ; } public static void setup ( ) { } } 
