package org . elasticsearch . cloud . azure ; import org . elasticsearch . cloud . azure . storage . AzureStorageService ; import org . elasticsearch . cloud . azure . storage . AzureStorageServiceImpl ; import org . elasticsearch . cloud . azure . storage . AzureStorageSettingsFilter ; import org . elasticsearch . common . inject . AbstractModule ; import org . elasticsearch . common . inject . Inject ; import org . elasticsearch . common . logging . ESLogger ; import org . elasticsearch . common . logging . Loggers ; import org . elasticsearch . common . settings . Settings ; public class AzureRepositoryModule extends AbstractModule { protected final ESLogger logger ; static Class < ? extends AzureStorageService > storageServiceImpl = AzureStorageServiceImpl . class ; @Inject public AzureRepositoryModule ( Settings settings ) { this . logger = Loggers . getLogger ( getClass ( ) , settings ) ; } @Override protected void configure ( ) { logger . debug ( <str> ) ; bind ( AzureStorageSettingsFilter . class ) . asEagerSingleton ( ) ; logger . debug ( <str> ) ; bind ( AzureStorageService . class ) . to ( storageServiceImpl ) . asEagerSingleton ( ) ; } } 
