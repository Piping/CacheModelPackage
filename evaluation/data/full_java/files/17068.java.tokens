package com . badlogic . gdx . physics . box2d . joints ; import com . badlogic . gdx . math . Vector2 ; import com . badlogic . gdx . physics . box2d . Joint ; import com . badlogic . gdx . physics . box2d . World ; public class RopeJoint extends Joint { private final float [ ] tmp = new float [ <int> ] ; private final Vector2 localAnchorA = new Vector2 ( ) ; private final Vector2 localAnchorB = new Vector2 ( ) ; public RopeJoint ( World world , long addr ) { super ( world , addr ) ; } public Vector2 getLocalAnchorA ( ) { jniGetLocalAnchorA ( addr , tmp ) ; localAnchorA . set ( tmp [ <int> ] , tmp [ <int> ] ) ; return localAnchorA ; } private native void jniGetLocalAnchorA ( long addr , float [ ] anchor ) ; public Vector2 getLocalAnchorB ( ) { jniGetLocalAnchorB ( addr , tmp ) ; localAnchorB . set ( tmp [ <int> ] , tmp [ <int> ] ) ; return localAnchorB ; } private native void jniGetLocalAnchorB ( long addr , float [ ] anchor ) ; public float getMaxLength ( ) { return jniGetMaxLength ( addr ) ; } private native float jniGetMaxLength ( long addr ) ; public void setMaxLength ( float length ) { jniSetMaxLength ( addr , length ) ; } private native float jniSetMaxLength ( long addr , float length ) ; } 
