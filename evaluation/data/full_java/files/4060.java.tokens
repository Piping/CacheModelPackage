package org . eclipse . debug . internal . ui . actions . breakpoints ; import org . eclipse . debug . internal . ui . DebugUIPlugin ; import org . eclipse . debug . internal . ui . actions . ActionMessages ; import org . eclipse . jface . dialogs . IDialogSettings ; import org . eclipse . jface . dialogs . MessageDialog ; import org . eclipse . swt . SWT ; import org . eclipse . swt . events . SelectionEvent ; import org . eclipse . swt . events . SelectionListener ; import org . eclipse . swt . graphics . Font ; import org . eclipse . swt . graphics . Image ; import org . eclipse . swt . layout . GridLayout ; import org . eclipse . swt . widgets . Button ; import org . eclipse . swt . widgets . Composite ; import org . eclipse . swt . widgets . Control ; import org . eclipse . swt . widgets . Shell ; public class DeleteWorkingsetsMessageDialog extends MessageDialog { private boolean fDeleteWorkingsets = false ; private boolean fDeleteBreakpoints = true ; private Button fDeleteWS ; private Button fDeleteBPS ; private final static String DIALOG_SETTINGS = <str> ; private static final String DELETE_BREAKPOINTS = <str> ; private static final String DELETE_WORKINGSETS = <str> ; public DeleteWorkingsetsMessageDialog ( Shell parentShell , String dialogTitle , Image dialogTitleImage , String dialogMessage , int dialogImageType , String [ ] dialogButtonLabels , int defaultIndex ) { super ( parentShell , dialogTitle , dialogTitleImage , dialogMessage , dialogImageType , dialogButtonLabels , defaultIndex ) ; IDialogSettings section = getDialogSettings ( ) ; fDeleteBreakpoints = section . getBoolean ( DELETE_BREAKPOINTS ) ; fDeleteWorkingsets = section . getBoolean ( DELETE_WORKINGSETS ) ; } @Override protected Control createCustomArea ( Composite parent ) { Composite comp = new Composite ( parent , SWT . NONE ) ; comp . setLayout ( new GridLayout ( ) ) ; Font font = parent . getFont ( ) ; fDeleteWS = new Button ( comp , SWT . CHECK ) ; fDeleteWS . setText ( ActionMessages . DeleteWorkingsetsMessageDialog_0 ) ; fDeleteWS . setFont ( font ) ; fDeleteWS . addSelectionListener ( new SelectionListener ( ) { @Override public void widgetDefaultSelected ( SelectionEvent e ) { } @Override public void widgetSelected ( SelectionEvent e ) { getButton ( <int> ) . setEnabled ( fDeleteWS . getSelection ( ) | | fDeleteBPS . getSelection ( ) ) ; } } ) ; fDeleteBPS = new Button ( comp , SWT . CHECK ) ; fDeleteBPS . setText ( ActionMessages . DeleteWorkingsetsMessageDialog_1 ) ; fDeleteBPS . setFont ( font ) ; fDeleteBPS . addSelectionListener ( new SelectionListener ( ) { @Override public void widgetDefaultSelected ( SelectionEvent e ) { } @Override public void widgetSelected ( SelectionEvent e ) { getButton ( <int> ) . setEnabled ( fDeleteWS . getSelection ( ) | | fDeleteBPS . getSelection ( ) ) ; } } ) ; fDeleteWS . setSelection ( fDeleteWorkingsets ) ; fDeleteBPS . setSelection ( fDeleteBreakpoints ) ; return comp ; } @Override protected void buttonPressed ( int buttonId ) { if ( buttonId = = OK ) { fDeleteBreakpoints = fDeleteBPS . getSelection ( ) ; fDeleteWorkingsets = fDeleteWS . getSelection ( ) ; IDialogSettings dialogSettings = getDialogSettings ( ) ; dialogSettings . put ( DELETE_BREAKPOINTS , fDeleteBreakpoints ) ; dialogSettings . put ( DELETE_WORKINGSETS , fDeleteWorkingsets ) ; } super . buttonPressed ( buttonId ) ; } public boolean deleteWorkingset ( ) { return fDeleteWorkingsets ; } public boolean deleteAllBreakpoints ( ) { return fDeleteBreakpoints ; } protected IDialogSettings getDialogSettings ( ) { DebugUIPlugin plugin = DebugUIPlugin . getDefault ( ) ; IDialogSettings workbenchSettings = plugin . getDialogSettings ( ) ; IDialogSettings section = workbenchSettings . getSection ( DIALOG_SETTINGS ) ; if ( section = = null ) { section = workbenchSettings . addNewSection ( DIALOG_SETTINGS ) ; section . put ( DELETE_BREAKPOINTS , true ) ; section . put ( DELETE_WORKINGSETS , false ) ; } return section ; } } 
