package org . gradle . buildinit . plugins . internal . maven ; import org . apache . maven . model . io . xpp3 . MavenXpp3Writer ; import org . apache . maven . project . MavenProject ; import java . io . ByteArrayOutputStream ; import java . io . IOException ; import java . util . Set ; public class MavenProjectXmlWriter { String toXml ( Set < MavenProject > projects ) { assert ! projects . isEmpty ( ) : <str> ; if ( projects . size ( ) = = <int> ) { return toXml ( projects . iterator ( ) . next ( ) ) ; } StringBuilder out = new StringBuilder ( <str> ) ; for ( MavenProject project : projects ) { out . append ( toXml ( project ) ) ; } return out . append ( <str> ) . toString ( ) ; } private String toXml ( MavenProject project ) { ByteArrayOutputStream out = new ByteArrayOutputStream ( ) ; try { new MavenXpp3Writer ( ) . write ( out , project . getModel ( ) ) ; } catch ( IOException e ) { throw new RuntimeException ( <str> + project , e ) ; } return prepareXml ( out . toString ( ) ) ; } String prepareXml ( String xml ) { return xml . replaceFirst ( <str> , <str> ) ; } } 
