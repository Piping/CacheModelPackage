package org . gradle . external . javadoc . internal ; import org . jmock . Expectations ; import org . jmock . integration . junit4 . JUnit4Mockery ; import org . jmock . lib . legacy . ClassImposteriser ; import org . junit . Before ; import org . junit . Test ; import java . io . IOException ; public class StringsJavadocOptionFileOptionTest { private final JUnit4Mockery context = new JUnit4Mockery ( ) ; private JavadocOptionFileWriterContext writerContextMock ; private final String optionName = <str> ; private final String joinBy = <str> ; private StringsJavadocOptionFileOption stringsOption ; @Before public void setUp ( ) { context . setImposteriser ( ClassImposteriser . INSTANCE ) ; writerContextMock = context . mock ( JavadocOptionFileWriterContext . class ) ; stringsOption = new StringsJavadocOptionFileOption ( optionName , joinBy ) ; } @Test public void writeNullValue ( ) throws IOException { stringsOption . write ( writerContextMock ) ; } @Test public void writeNoneNullValue ( ) throws IOException { final String valueOne = <str> ; final String valueTwo = <str> ; stringsOption . getValue ( ) . add ( valueOne ) ; stringsOption . getValue ( ) . add ( valueTwo ) ; context . checking ( new Expectations ( ) { { one ( writerContextMock ) . writeValuesOption ( optionName , stringsOption . getValue ( ) , joinBy ) ; } } ) ; stringsOption . write ( writerContextMock ) ; } } 
