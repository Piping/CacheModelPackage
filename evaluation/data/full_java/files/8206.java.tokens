package org . elasticsearch . index . mapper . null_value ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . common . xcontent . XContentFactory ; import org . elasticsearch . index . IndexService ; import org . elasticsearch . index . mapper . MapperParsingException ; import org . elasticsearch . test . ESSingleNodeTestCase ; import static org . hamcrest . Matchers . equalTo ; public class NullValueTests extends ESSingleNodeTestCase { public void testNullNullValue ( ) throws Exception { IndexService indexService = createIndex ( <str> , Settings . settingsBuilder ( ) . build ( ) ) ; String [ ] typesToTest = { <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> } ; for ( String type : typesToTest ) { String mapping = XContentFactory . jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . startObject ( <str> ) . startObject ( <str> ) . field ( <str> , type ) . field ( <str> , ( String ) null ) . endObject ( ) . endObject ( ) . endObject ( ) . endObject ( ) . string ( ) ; try { indexService . mapperService ( ) . documentMapperParser ( ) . parse ( mapping ) ; fail ( <str> ) ; } catch ( MapperParsingException e ) { assertThat ( e . getMessage ( ) , equalTo ( <str> ) ) ; } } } } 
