package com . google . common . cache ; import static com . google . common . base . Preconditions . checkNotNull ; import java . util . concurrent . Executor ; public final class RemovalListeners { private RemovalListeners ( ) { } public static < K , V > RemovalListener < K , V > asynchronous ( final RemovalListener < K , V > listener , final Executor executor ) { checkNotNull ( listener ) ; checkNotNull ( executor ) ; return new RemovalListener < K , V > ( ) { @Override public void onRemoval ( final RemovalNotification < K , V > notification ) { executor . execute ( new Runnable ( ) { @Override public void run ( ) { listener . onRemoval ( notification ) ; } } ) ; } } ; } } 
