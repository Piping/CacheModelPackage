package org . apache . cassandra . stress . operations ; import org . apache . commons . math3 . distribution . EnumeratedDistribution ; import org . apache . cassandra . stress . Operation ; import org . apache . cassandra . stress . generate . Distribution ; import org . apache . commons . math3 . util . Pair ; public class SampledOpDistribution implements OpDistribution { final EnumeratedDistribution < Operation > operations ; final Distribution clustering ; private Operation cur ; private long remaining ; public SampledOpDistribution ( EnumeratedDistribution < Operation > operations , Distribution clustering ) { this . operations = operations ; this . clustering = clustering ; } public Operation next ( ) { while ( remaining = = <int> ) { remaining = clustering . next ( ) ; cur = operations . sample ( ) ; } remaining - - ; return cur ; } public void initTimers ( ) { for ( Pair < Operation , Double > op : operations . getPmf ( ) ) { op . getFirst ( ) . timer . init ( ) ; } } public void closeTimers ( ) { for ( Pair < Operation , Double > op : operations . getPmf ( ) ) { op . getFirst ( ) . timer . close ( ) ; } } } 
