package org . gradle . play . internal . routes ; import com . google . common . collect . Lists ; import org . gradle . scala . internal . reflect . ScalaListBuffer ; import org . gradle . scala . internal . reflect . ScalaMethod ; import org . gradle . scala . internal . reflect . ScalaReflectionUtil ; import java . io . File ; import java . lang . reflect . InvocationTargetException ; import java . util . Collection ; import java . util . List ; class RoutesCompilerAdapterV23X extends DefaultVersionedRoutesCompilerAdapter { private final List < String > defaultScalaImports = Lists . newArrayList ( <str> ) ; private final List < String > defaultJavaImports = Lists . newArrayList ( <str> , <str> ) ; public RoutesCompilerAdapterV23X ( String playVersion ) { super ( playVersion , <str> ) ; } public ScalaMethod getCompileMethod ( ClassLoader cl ) throws ClassNotFoundException { return ScalaReflectionUtil . scalaMethod ( cl , <str> , <str> , File . class , File . class , cl . loadClass ( <str> ) , boolean . class , boolean . class , boolean . class ) ; } @Override public Object [ ] createCompileParameters ( ClassLoader cl , File file , File destinationDir , boolean javaProject , boolean namespaceReverseRouter , boolean generateReverseRoutes , boolean injectedRoutesGenerator , Collection < String > additionalImports ) throws ClassNotFoundException , NoSuchMethodException , InvocationTargetException , InstantiationException , IllegalAccessException { List < String > defaultImports = javaProject ? defaultJavaImports : defaultScalaImports ; defaultImports . addAll ( additionalImports ) ; return new Object [ ] { file , destinationDir , ScalaListBuffer . fromList ( cl , defaultImports ) , generateReverseRoutes , isGenerateRefReverseRouter ( ) , namespaceReverseRouter } ; } } 
