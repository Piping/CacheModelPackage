package io . netty . channel . local ; import io . netty . channel . Channel ; import java . net . SocketAddress ; public final class LocalAddress extends SocketAddress implements Comparable < LocalAddress > { private static final long serialVersionUID = <int> ; public static final LocalAddress ANY = new LocalAddress ( <str> ) ; private final String id ; private final String strVal ; LocalAddress ( Channel channel ) { StringBuilder buf = new StringBuilder ( <int> ) ; buf . append ( <str> ) ; buf . append ( Long . toHexString ( channel . hashCode ( ) & <hex> | <hex> ) ) ; buf . setCharAt ( <int> , <str> ) ; id = buf . substring ( <int> ) ; strVal = buf . toString ( ) ; } public LocalAddress ( String id ) { if ( id = = null ) { throw new NullPointerException ( <str> ) ; } id = id . trim ( ) . toLowerCase ( ) ; if ( id . isEmpty ( ) ) { throw new IllegalArgumentException ( <str> ) ; } this . id = id ; strVal = <str> + id ; } public String id ( ) { return id ; } @Override public int hashCode ( ) { return id . hashCode ( ) ; } @Override public boolean equals ( Object o ) { if ( ! ( o instanceof LocalAddress ) ) { return false ; } return id . equals ( ( ( LocalAddress ) o ) . id ) ; } @Override public int compareTo ( LocalAddress o ) { return id . compareTo ( o . id ) ; } @Override public String toString ( ) { return strVal ; } } 
