package org . gradle . api . internal . file . copy ; import org . apache . tools . zip . Zip64Mode ; import org . apache . tools . zip . ZipOutputStream ; import org . gradle . api . UncheckedIOException ; import java . io . File ; public class DefaultZipCompressor implements ZipCompressor { private final int entryCompressionMethod ; private final Zip64Mode zip64Mode ; public DefaultZipCompressor ( boolean allowZip64Mode , int entryCompressionMethod ) { this . entryCompressionMethod = entryCompressionMethod ; zip64Mode = allowZip64Mode ? Zip64Mode . AsNeeded : Zip64Mode . Never ; } public ZipOutputStream createArchiveOutputStream ( File destination ) { try { ZipOutputStream outStream = new ZipOutputStream ( destination ) ; outStream . setUseZip64 ( zip64Mode ) ; outStream . setMethod ( entryCompressionMethod ) ; return outStream ; } catch ( Exception e ) { String message = String . format ( <str> , destination ) ; throw new UncheckedIOException ( message , e ) ; } } } 
