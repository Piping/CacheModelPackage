package com . badlogic . gdx . utils ; import java . io . DataInput ; import java . io . DataInputStream ; import java . io . FilterInputStream ; import java . io . IOException ; import java . io . InputStream ; public class LittleEndianInputStream extends FilterInputStream implements DataInput { private DataInputStream din ; public LittleEndianInputStream ( InputStream in ) { super ( in ) ; din = new DataInputStream ( in ) ; } public void readFully ( byte [ ] b ) throws IOException { din . readFully ( b ) ; } public void readFully ( byte [ ] b , int off , int len ) throws IOException { din . readFully ( b , off , len ) ; } public int skipBytes ( int n ) throws IOException { return din . skipBytes ( n ) ; } public boolean readBoolean ( ) throws IOException { return din . readBoolean ( ) ; } public byte readByte ( ) throws IOException { return din . readByte ( ) ; } public int readUnsignedByte ( ) throws IOException { return din . readUnsignedByte ( ) ; } public short readShort ( ) throws IOException { int low = din . read ( ) ; int high = din . read ( ) ; return ( short ) ( ( high < < <int> ) | ( low & <hex> ) ) ; } public int readUnsignedShort ( ) throws IOException { int low = din . read ( ) ; int high = din . read ( ) ; return ( ( high & <hex> ) < < <int> ) | ( low & <hex> ) ; } public char readChar ( ) throws IOException { return din . readChar ( ) ; } public int readInt ( ) throws IOException { int [ ] res = new int [ <int> ] ; for ( int i = <int> ; i > = <int> ; i - - ) res [ i ] = din . read ( ) ; return ( ( res [ <int> ] & <hex> ) < < <int> ) | ( ( res [ <int> ] & <hex> ) < < <int> ) | ( ( res [ <int> ] & <hex> ) < < <int> ) | ( res [ <int> ] & <hex> ) ; } public long readLong ( ) throws IOException { int [ ] res = new int [ <int> ] ; for ( int i = <int> ; i > = <int> ; i - - ) res [ i ] = din . read ( ) ; return ( ( ( long ) ( res [ <int> ] & <hex> ) < < <int> ) | ( ( long ) ( res [ <int> ] & <hex> ) < < <int> ) | ( ( long ) ( res [ <int> ] & <hex> ) < < <int> ) | ( ( long ) ( res [ <int> ] & <hex> ) < < <int> ) | ( ( long ) ( res [ <int> ] & <hex> ) < < <int> ) | ( ( long ) ( res [ <int> ] & <hex> ) < < <int> ) | ( ( long ) ( res [ <int> ] & <hex> ) < < <int> ) | ( ( long ) ( res [ <int> ] & <hex> ) ) ) ; } public float readFloat ( ) throws IOException { return Float . intBitsToFloat ( readInt ( ) ) ; } public double readDouble ( ) throws IOException { return Double . longBitsToDouble ( readLong ( ) ) ; } public final String readLine ( ) throws IOException { return din . readLine ( ) ; } public String readUTF ( ) throws IOException { return din . readUTF ( ) ; } } 
