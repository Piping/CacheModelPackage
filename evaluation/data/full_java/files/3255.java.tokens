package jcuda . runtime ; public class cudaDeviceAttr { public static final int cudaDevAttrMaxThreadsPerBlock = <int> ; public static final int cudaDevAttrMaxBlockDimX = <int> ; public static final int cudaDevAttrMaxBlockDimY = <int> ; public static final int cudaDevAttrMaxBlockDimZ = <int> ; public static final int cudaDevAttrMaxGridDimX = <int> ; public static final int cudaDevAttrMaxGridDimY = <int> ; public static final int cudaDevAttrMaxGridDimZ = <int> ; public static final int cudaDevAttrMaxSharedMemoryPerBlock = <int> ; public static final int cudaDevAttrTotalConstantMemory = <int> ; public static final int cudaDevAttrWarpSize = <int> ; public static final int cudaDevAttrMaxPitch = <int> ; public static final int cudaDevAttrMaxRegistersPerBlock = <int> ; public static final int cudaDevAttrClockRate = <int> ; public static final int cudaDevAttrTextureAlignment = <int> ; public static final int cudaDevAttrGpuOverlap = <int> ; public static final int cudaDevAttrMultiProcessorCount = <int> ; public static final int cudaDevAttrKernelExecTimeout = <int> ; public static final int cudaDevAttrIntegrated = <int> ; public static final int cudaDevAttrCanMapHostMemory = <int> ; public static final int cudaDevAttrComputeMode = <int> ; public static final int cudaDevAttrMaxTexture1DWidth = <int> ; public static final int cudaDevAttrMaxTexture2DWidth = <int> ; public static final int cudaDevAttrMaxTexture2DHeight = <int> ; public static final int cudaDevAttrMaxTexture3DWidth = <int> ; public static final int cudaDevAttrMaxTexture3DHeight = <int> ; public static final int cudaDevAttrMaxTexture3DDepth = <int> ; public static final int cudaDevAttrMaxTexture2DLayeredWidth = <int> ; public static final int cudaDevAttrMaxTexture2DLayeredHeight = <int> ; public static final int cudaDevAttrMaxTexture2DLayeredLayers = <int> ; public static final int cudaDevAttrSurfaceAlignment = <int> ; public static final int cudaDevAttrConcurrentKernels = <int> ; public static final int cudaDevAttrEccEnabled = <int> ; public static final int cudaDevAttrPciBusId = <int> ; public static final int cudaDevAttrPciDeviceId = <int> ; public static final int cudaDevAttrTccDriver = <int> ; public static final int cudaDevAttrMemoryClockRate = <int> ; public static final int cudaDevAttrGlobalMemoryBusWidth = <int> ; public static final int cudaDevAttrL2CacheSize = <int> ; public static final int cudaDevAttrMaxThreadsPerMultiProcessor = <int> ; public static final int cudaDevAttrAsyncEngineCount = <int> ; public static final int cudaDevAttrUnifiedAddressing = <int> ; public static final int cudaDevAttrMaxTexture1DLayeredWidth = <int> ; public static final int cudaDevAttrMaxTexture1DLayeredLayers = <int> ; public static final int cudaDevAttrMaxTexture2DGatherWidth = <int> ; public static final int cudaDevAttrMaxTexture2DGatherHeight = <int> ; public static final int cudaDevAttrMaxTexture3DWidthAlt = <int> ; public static final int cudaDevAttrMaxTexture3DHeightAlt = <int> ; public static final int cudaDevAttrMaxTexture3DDepthAlt = <int> ; public static final int cudaDevAttrPciDomainId = <int> ; public static final int cudaDevAttrTexturePitchAlignment = <int> ; public static final int cudaDevAttrMaxTextureCubemapWidth = <int> ; public static final int cudaDevAttrMaxTextureCubemapLayeredWidth = <int> ; public static final int cudaDevAttrMaxTextureCubemapLayeredLayers = <int> ; public static final int cudaDevAttrMaxSurface1DWidth = <int> ; public static final int cudaDevAttrMaxSurface2DWidth = <int> ; public static final int cudaDevAttrMaxSurface2DHeight = <int> ; public static final int cudaDevAttrMaxSurface3DWidth = <int> ; public static final int cudaDevAttrMaxSurface3DHeight = <int> ; public static final int cudaDevAttrMaxSurface3DDepth = <int> ; public static final int cudaDevAttrMaxSurface1DLayeredWidth = <int> ; public static final int cudaDevAttrMaxSurface1DLayeredLayers = <int> ; public static final int cudaDevAttrMaxSurface2DLayeredWidth = <int> ; public static final int cudaDevAttrMaxSurface2DLayeredHeight = <int> ; public static final int cudaDevAttrMaxSurface2DLayeredLayers = <int> ; public static final int cudaDevAttrMaxSurfaceCubemapWidth = <int> ; public static final int cudaDevAttrMaxSurfaceCubemapLayeredWidth = <int> ; public static final int cudaDevAttrMaxSurfaceCubemapLayeredLayers = <int> ; public static final int cudaDevAttrMaxTexture1DLinearWidth = <int> ; public static final int cudaDevAttrMaxTexture2DLinearWidth = <int> ; public static final int cudaDevAttrMaxTexture2DLinearHeight = <int> ; public static final int cudaDevAttrMaxTexture2DLinearPitch = <int> ; public static final int cudaDevAttrMaxTexture2DMipmappedWidth = <int> ; public static final int cudaDevAttrMaxTexture2DMipmappedHeight = <int> ; public static final int cudaDevAttrComputeCapabilityMajor = <int> ; public static final int cudaDevAttrComputeCapabilityMinor = <int> ; public static final int cudaDevAttrMaxTexture1DMipmappedWidth = <int> ; public static final int cudaDevAttrStreamPrioritiesSupported = <int> ; public static final int cudaDevAttrGlobalL1CacheSupported = <int> ; public static final int cudaDevAttrLocalL1CacheSupported = <int> ; public static final int cudaDevAttrMaxSharedMemoryPerMultiprocessor = <int> ; public static final int cudaDevAttrMaxRegistersPerMultiprocessor = <int> ; public static final int cudaDevAttrManagedMemory = <int> ; public static final int cudaDevAttrIsMultiGpuBoard = <int> ; public static final int cudaDevAttrMultiGpuBoardGroupID = <int> ; public static String stringFor ( int n ) { switch ( n ) { case cudaDevAttrMaxThreadsPerBlock : return <str> ; case cudaDevAttrMaxBlockDimX : return <str> ; case cudaDevAttrMaxBlockDimY : return <str> ; case cudaDevAttrMaxBlockDimZ : return <str> ; case cudaDevAttrMaxGridDimX : return <str> ; case cudaDevAttrMaxGridDimY : return <str> ; case cudaDevAttrMaxGridDimZ : return <str> ; case cudaDevAttrMaxSharedMemoryPerBlock : return <str> ; case cudaDevAttrTotalConstantMemory : return <str> ; case cudaDevAttrWarpSize : return <str> ; case cudaDevAttrMaxPitch : return <str> ; case cudaDevAttrMaxRegistersPerBlock : return <str> ; case cudaDevAttrClockRate : return <str> ; case cudaDevAttrTextureAlignment : return <str> ; case cudaDevAttrGpuOverlap : return <str> ; case cudaDevAttrMultiProcessorCount : return <str> ; case cudaDevAttrKernelExecTimeout : return <str> ; case cudaDevAttrIntegrated : return <str> ; case cudaDevAttrCanMapHostMemory : return <str> ; case cudaDevAttrComputeMode : return <str> ; case cudaDevAttrMaxTexture1DWidth : return <str> ; case cudaDevAttrMaxTexture2DWidth : return <str> ; case cudaDevAttrMaxTexture2DHeight : return <str> ; case cudaDevAttrMaxTexture3DWidth : return <str> ; case cudaDevAttrMaxTexture3DHeight : return <str> ; case cudaDevAttrMaxTexture3DDepth : return <str> ; case cudaDevAttrMaxTexture2DLayeredWidth : return <str> ; case cudaDevAttrMaxTexture2DLayeredHeight : return <str> ; case cudaDevAttrMaxTexture2DLayeredLayers : return <str> ; case cudaDevAttrSurfaceAlignment : return <str> ; case cudaDevAttrConcurrentKernels : return <str> ; case cudaDevAttrEccEnabled : return <str> ; case cudaDevAttrPciBusId : return <str> ; case cudaDevAttrPciDeviceId : return <str> ; case cudaDevAttrTccDriver : return <str> ; case cudaDevAttrMemoryClockRate : return <str> ; case cudaDevAttrGlobalMemoryBusWidth : return <str> ; case cudaDevAttrL2CacheSize : return <str> ; case cudaDevAttrMaxThreadsPerMultiProcessor : return <str> ; case cudaDevAttrAsyncEngineCount : return <str> ; case cudaDevAttrUnifiedAddressing : return <str> ; case cudaDevAttrMaxTexture1DLayeredWidth : return <str> ; case cudaDevAttrMaxTexture1DLayeredLayers : return <str> ; case cudaDevAttrMaxTexture2DGatherWidth : return <str> ; case cudaDevAttrMaxTexture2DGatherHeight : return <str> ; case cudaDevAttrMaxTexture3DWidthAlt : return <str> ; case cudaDevAttrMaxTexture3DHeightAlt : return <str> ; case cudaDevAttrMaxTexture3DDepthAlt : return <str> ; case cudaDevAttrPciDomainId : return <str> ; case cudaDevAttrTexturePitchAlignment : return <str> ; case cudaDevAttrMaxTextureCubemapWidth : return <str> ; case cudaDevAttrMaxTextureCubemapLayeredWidth : return <str> ; case cudaDevAttrMaxTextureCubemapLayeredLayers : return <str> ; case cudaDevAttrMaxSurface1DWidth : return <str> ; case cudaDevAttrMaxSurface2DWidth : return <str> ; case cudaDevAttrMaxSurface2DHeight : return <str> ; case cudaDevAttrMaxSurface3DWidth : return <str> ; case cudaDevAttrMaxSurface3DHeight : return <str> ; case cudaDevAttrMaxSurface3DDepth : return <str> ; case cudaDevAttrMaxSurface1DLayeredWidth : return <str> ; case cudaDevAttrMaxSurface1DLayeredLayers : return <str> ; case cudaDevAttrMaxSurface2DLayeredWidth : return <str> ; case cudaDevAttrMaxSurface2DLayeredHeight : return <str> ; case cudaDevAttrMaxSurface2DLayeredLayers : return <str> ; case cudaDevAttrMaxSurfaceCubemapWidth : return <str> ; case cudaDevAttrMaxSurfaceCubemapLayeredWidth : return <str> ; case cudaDevAttrMaxSurfaceCubemapLayeredLayers : return <str> ; case cudaDevAttrMaxTexture1DLinearWidth : return <str> ; case cudaDevAttrMaxTexture2DLinearWidth : return <str> ; case cudaDevAttrMaxTexture2DLinearHeight : return <str> ; case cudaDevAttrMaxTexture2DLinearPitch : return <str> ; case cudaDevAttrMaxTexture2DMipmappedWidth : return <str> ; case cudaDevAttrMaxTexture2DMipmappedHeight : return <str> ; case cudaDevAttrComputeCapabilityMajor : return <str> ; case cudaDevAttrComputeCapabilityMinor : return <str> ; case cudaDevAttrMaxTexture1DMipmappedWidth : return <str> ; case cudaDevAttrStreamPrioritiesSupported : return <str> ; case cudaDevAttrGlobalL1CacheSupported : return <str> ; case cudaDevAttrLocalL1CacheSupported : return <str> ; case cudaDevAttrMaxSharedMemoryPerMultiprocessor : return <str> ; case cudaDevAttrMaxRegistersPerMultiprocessor : return <str> ; case cudaDevAttrManagedMemory : return <str> ; case cudaDevAttrIsMultiGpuBoard : return <str> ; case cudaDevAttrMultiGpuBoardGroupID : return <str> ; } return <str> + n ; } private cudaDeviceAttr ( ) { } } 
