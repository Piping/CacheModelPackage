package org . eclipse . debug . internal . core ; import java . net . URL ; import org . eclipse . core . runtime . CoreException ; import org . eclipse . core . runtime . IPath ; import org . eclipse . core . runtime . Path ; import org . eclipse . core . runtime . Platform ; import org . eclipse . core . variables . IDynamicVariable ; import org . eclipse . core . variables . IDynamicVariableResolver ; public class SystemVariableResolver implements IDynamicVariableResolver { @Override public String resolveValue ( IDynamicVariable variable , String argument ) throws CoreException { if ( <str> . equals ( argument ) ) { return Platform . getOSArch ( ) ; } else if ( <str> . equals ( argument ) ) { URL installURL = Platform . getInstallLocation ( ) . getURL ( ) ; IPath ppath = new Path ( installURL . getFile ( ) ) . removeTrailingSeparator ( ) ; return getCorrectPath ( ppath . toOSString ( ) ) ; } else if ( <str> . equals ( argument ) ) { return Platform . getNL ( ) ; } else if ( <str> . equals ( argument ) ) { return Platform . getOS ( ) ; } else if ( <str> . equals ( argument ) ) { return Platform . getWS ( ) ; } return null ; } private static String getCorrectPath ( String path ) { StringBuffer buf = new StringBuffer ( ) ; for ( int i = <int> ; i < path . length ( ) ; i + + ) { char c = path . charAt ( i ) ; if ( Platform . getOS ( ) . equals ( <str> ) ) { if ( i = = <int> & & c = = <str> ) { continue ; } } if ( c = = <str> & & i + <int> < path . length ( ) ) { char c1 = path . charAt ( i + <int> ) ; char c2 = path . charAt ( i + <int> ) ; if ( c1 = = <str> & & c2 = = <str> ) { i + = <int> ; buf . append ( <str> ) ; continue ; } } buf . append ( c ) ; } return buf . toString ( ) ; } } 
