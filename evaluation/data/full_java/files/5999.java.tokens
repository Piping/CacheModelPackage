package org . elasticsearch . common . lucene . search . function ; import org . apache . lucene . index . LeafReaderContext ; import java . io . IOException ; import java . util . Objects ; public abstract class ScoreFunction { private final CombineFunction scoreCombiner ; protected ScoreFunction ( CombineFunction scoreCombiner ) { this . scoreCombiner = scoreCombiner ; } public CombineFunction getDefaultScoreCombiner ( ) { return scoreCombiner ; } public abstract LeafScoreFunction getLeafScoreFunction ( LeafReaderContext ctx ) throws IOException ; public abstract boolean needsScores ( ) ; @Override public final boolean equals ( Object obj ) { if ( this = = obj ) { return true ; } if ( obj = = null | | getClass ( ) ! = obj . getClass ( ) ) { return false ; } ScoreFunction other = ( ScoreFunction ) obj ; return Objects . equals ( scoreCombiner , other . scoreCombiner ) & & doEquals ( other ) ; } protected abstract boolean doEquals ( ScoreFunction other ) ; } 
