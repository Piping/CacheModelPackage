package com . badlogic . gdx ; import com . badlogic . gdx . utils . GdxRuntimeException ; public class Version { public static final String VERSION = <str> ; public static final int MAJOR ; public static final int MINOR ; public static final int REVISION ; static { try { String [ ] v = VERSION . split ( <str> ) ; MAJOR = v . length < <int> ? <int> : Integer . valueOf ( v [ <int> ] ) ; MINOR = v . length < <int> ? <int> : Integer . valueOf ( v [ <int> ] ) ; REVISION = v . length < <int> ? <int> : Integer . valueOf ( v [ <int> ] ) ; } catch ( Throwable t ) { throw new GdxRuntimeException ( <str> + VERSION , t ) ; } } public static boolean isHigher ( int major , int minor , int revision ) { return isHigherEqual ( major , minor , revision + <int> ) ; } public static boolean isHigherEqual ( int major , int minor , int revision ) { if ( MAJOR ! = major ) return MAJOR > major ; if ( MINOR ! = minor ) return MINOR > minor ; return REVISION > = revision ; } public static boolean isLower ( int major , int minor , int revision ) { return isLowerEqual ( major , minor , revision - <int> ) ; } public static boolean isLowerEqual ( int major , int minor , int revision ) { if ( MAJOR ! = major ) return MAJOR < major ; if ( MINOR ! = minor ) return MINOR < minor ; return REVISION < = revision ; } } 
