package org . gradle . api . internal . java ; import org . gradle . api . Task ; import org . gradle . api . file . SourceDirectorySet ; import org . gradle . api . tasks . TaskDependency ; import org . gradle . jvm . Classpath ; import org . gradle . language . java . JavaSourceSet ; import org . gradle . platform . base . DependencySpecContainer ; import org . gradle . platform . base . internal . DefaultDependencySpecContainer ; import java . util . HashSet ; import java . util . Set ; public class DefaultJavaSourceSet extends AbstractLanguageSourceSet implements JavaSourceSet { private final Classpath compileClasspath ; public DefaultJavaSourceSet ( String name , String parent , SourceDirectorySet source , Classpath compileClasspath ) { super ( name , parent , <str> , source ) ; this . compileClasspath = compileClasspath ; } public Classpath getCompileClasspath ( ) { return compileClasspath ; } @Override public DependencySpecContainer getDependencies ( ) { return new DefaultDependencySpecContainer ( ) ; } public TaskDependency getBuildDependencies ( ) { return new TaskDependency ( ) { public Set < ? extends Task > getDependencies ( Task task ) { Set < Task > dependencies = new HashSet < Task > ( ) ; dependencies . addAll ( compileClasspath . getBuildDependencies ( ) . getDependencies ( task ) ) ; dependencies . addAll ( getSource ( ) . getBuildDependencies ( ) . getDependencies ( task ) ) ; return dependencies ; } } ; } } 
