package org . gradle . api . internal . plugins ; import groovy . lang . MissingPropertyException ; import org . gradle . api . internal . BeanDynamicObject ; import org . gradle . api . plugins . ExtraPropertiesExtension ; import java . util . Map ; public class ExtraPropertiesDynamicObjectAdapter extends BeanDynamicObject { private final ExtraPropertiesExtension extension ; private final Class < ? > delegateType ; public ExtraPropertiesDynamicObjectAdapter ( Class < ? > delegateType , ExtraPropertiesExtension extension ) { super ( extension ) ; this . delegateType = delegateType ; this . extension = extension ; } public boolean hasProperty ( String name ) { return super . hasProperty ( name ) | | extension . has ( name ) ; } public Map < String , ? > getProperties ( ) { return extension . getProperties ( ) ; } @Override public void setProperty ( String name , Object value ) throws MissingPropertyException { if ( ! hasProperty ( name ) ) { throw new MissingPropertyException ( name , delegateType ) ; } super . setProperty ( name , value ) ; } @Override public boolean isMayImplementMissingMethods ( ) { return false ; } @Override public boolean isMayImplementMissingProperties ( ) { return false ; } } 
