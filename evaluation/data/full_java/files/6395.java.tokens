package org . elasticsearch . index . cache . bitset ; import org . elasticsearch . common . metrics . CounterMetric ; import org . elasticsearch . index . IndexSettings ; import org . elasticsearch . index . shard . AbstractIndexShardComponent ; import org . elasticsearch . index . shard . ShardId ; public class ShardBitsetFilterCache extends AbstractIndexShardComponent { private final CounterMetric totalMetric = new CounterMetric ( ) ; public ShardBitsetFilterCache ( ShardId shardId , IndexSettings indexSettings ) { super ( shardId , indexSettings ) ; } public void onCached ( long sizeInBytes ) { totalMetric . inc ( sizeInBytes ) ; } public void onRemoval ( long sizeInBytes ) { totalMetric . dec ( sizeInBytes ) ; } public long getMemorySizeInBytes ( ) { return totalMetric . count ( ) ; } } 
