package org . apache . cassandra . concurrent ; import java . util . concurrent . ThreadFactory ; import java . util . concurrent . atomic . AtomicInteger ; public class NamedThreadFactory implements ThreadFactory { public final String id ; private final int priority ; private final ClassLoader contextClassLoader ; private final ThreadGroup threadGroup ; protected final AtomicInteger n = new AtomicInteger ( <int> ) ; public NamedThreadFactory ( String id ) { this ( id , Thread . NORM_PRIORITY ) ; } public NamedThreadFactory ( String id , int priority ) { this ( id , priority , null , null ) ; } public NamedThreadFactory ( String id , int priority , ClassLoader contextClassLoader , ThreadGroup threadGroup ) { this . id = id ; this . priority = priority ; this . contextClassLoader = contextClassLoader ; this . threadGroup = threadGroup ; } public Thread newThread ( Runnable runnable ) { String name = id + <str> + n . getAndIncrement ( ) ; Thread thread = new Thread ( threadGroup , runnable , name ) ; thread . setPriority ( priority ) ; thread . setDaemon ( true ) ; if ( contextClassLoader ! = null ) thread . setContextClassLoader ( contextClassLoader ) ; return thread ; } } 
