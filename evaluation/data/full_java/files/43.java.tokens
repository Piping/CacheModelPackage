package org . apache . cassandra . thrift ; import org . apache . commons . lang3 . builder . HashCodeBuilder ; import org . apache . thrift . scheme . IScheme ; import org . apache . thrift . scheme . SchemeFactory ; import org . apache . thrift . scheme . StandardScheme ; import org . apache . thrift . scheme . TupleScheme ; import org . apache . thrift . protocol . TTupleProtocol ; import org . apache . thrift . protocol . TProtocolException ; import org . apache . thrift . EncodingUtils ; import org . apache . thrift . TException ; import org . apache . thrift . async . AsyncMethodCallback ; import org . apache . thrift . server . AbstractNonblockingServer . * ; import java . util . List ; import java . util . ArrayList ; import java . util . Map ; import java . util . HashMap ; import java . util . EnumMap ; import java . util . Set ; import java . util . HashSet ; import java . util . EnumSet ; import java . util . Collections ; import java . util . BitSet ; import java . nio . ByteBuffer ; import java . util . Arrays ; import org . slf4j . Logger ; import org . slf4j . LoggerFactory ; public class TimedOutException extends TException implements org . apache . thrift . TBase < TimedOutException , TimedOutException . _Fields > , java . io . Serializable , Cloneable , Comparable < TimedOutException > { private static final org . apache . thrift . protocol . TStruct STRUCT_DESC = new org . apache . thrift . protocol . TStruct ( <str> ) ; private static final org . apache . thrift . protocol . TField ACKNOWLEDGED_BY_FIELD_DESC = new org . apache . thrift . protocol . TField ( <str> , org . apache . thrift . protocol . TType . I32 , ( short ) <int> ) ; private static final org . apache . thrift . protocol . TField ACKNOWLEDGED_BY_BATCHLOG_FIELD_DESC = new org . apache . thrift . protocol . TField ( <str> , org . apache . thrift . protocol . TType . BOOL , ( short ) <int> ) ; private static final org . apache . thrift . protocol . TField PAXOS_IN_PROGRESS_FIELD_DESC = new org . apache . thrift . protocol . TField ( <str> , org . apache . thrift . protocol . TType . BOOL , ( short ) <int> ) ; private static final Map < Class < ? extends IScheme > , SchemeFactory > schemes = new HashMap < Class < ? extends IScheme > , SchemeFactory > ( ) ; static { schemes . put ( StandardScheme . class , new TimedOutExceptionStandardSchemeFactory ( ) ) ; schemes . put ( TupleScheme . class , new TimedOutExceptionTupleSchemeFactory ( ) ) ; } public int acknowledged_by ; public boolean acknowledged_by_batchlog ; public boolean paxos_in_progress ; public enum _Fields implements org . apache . thrift . TFieldIdEnum { ACKNOWLEDGED_BY ( ( short ) <int> , <str> ) , ACKNOWLEDGED_BY_BATCHLOG ( ( short ) <int> , <str> ) , PAXOS_IN_PROGRESS ( ( short ) <int> , <str> ) ; private static final Map < String , _Fields > byName = new HashMap < String , _Fields > ( ) ; static { for ( _Fields field : EnumSet . allOf ( _Fields . class ) ) { byName . put ( field . getFieldName ( ) , field ) ; } } public static _Fields findByThriftId ( int fieldId ) { switch ( fieldId ) { case <int> : return ACKNOWLEDGED_BY ; case <int> : return ACKNOWLEDGED_BY_BATCHLOG ; case <int> : return PAXOS_IN_PROGRESS ; default : return null ; } } public static _Fields findByThriftIdOrThrow ( int fieldId ) { _Fields fields = findByThriftId ( fieldId ) ; if ( fields = = null ) throw new IllegalArgumentException ( <str> + fieldId + <str> ) ; return fields ; } public static _Fields findByName ( String name ) { return byName . get ( name ) ; } private final short _thriftId ; private final String _fieldName ; _Fields ( short thriftId , String fieldName ) { _thriftId = thriftId ; _fieldName = fieldName ; } public short getThriftFieldId ( ) { return _thriftId ; } public String getFieldName ( ) { return _fieldName ; } } private static final int __ACKNOWLEDGED_BY_ISSET_ID = <int> ; private static final int __ACKNOWLEDGED_BY_BATCHLOG_ISSET_ID = <int> ; private static final int __PAXOS_IN_PROGRESS_ISSET_ID = <int> ; private byte __isset_bitfield = <int> ; private _Fields optionals [ ] = { _Fields . ACKNOWLEDGED_BY , _Fields . ACKNOWLEDGED_BY_BATCHLOG , _Fields . PAXOS_IN_PROGRESS } ; public static final Map < _Fields , org . apache . thrift . meta_data . FieldMetaData > metaDataMap ; static { Map < _Fields , org . apache . thrift . meta_data . FieldMetaData > tmpMap = new EnumMap < _Fields , org . apache . thrift . meta_data . FieldMetaData > ( _Fields . class ) ; tmpMap . put ( _Fields . ACKNOWLEDGED_BY , new org . apache . thrift . meta_data . FieldMetaData ( <str> , org . apache . thrift . TFieldRequirementType . OPTIONAL , new org . apache . thrift . meta_data . FieldValueMetaData ( org . apache . thrift . protocol . TType . I32 ) ) ) ; tmpMap . put ( _Fields . ACKNOWLEDGED_BY_BATCHLOG , new org . apache . thrift . meta_data . FieldMetaData ( <str> , org . apache . thrift . TFieldRequirementType . OPTIONAL , new org . apache . thrift . meta_data . FieldValueMetaData ( org . apache . thrift . protocol . TType . BOOL ) ) ) ; tmpMap . put ( _Fields . PAXOS_IN_PROGRESS , new org . apache . thrift . meta_data . FieldMetaData ( <str> , org . apache . thrift . TFieldRequirementType . OPTIONAL , new org . apache . thrift . meta_data . FieldValueMetaData ( org . apache . thrift . protocol . TType . BOOL ) ) ) ; metaDataMap = Collections . unmodifiableMap ( tmpMap ) ; org . apache . thrift . meta_data . FieldMetaData . addStructMetaDataMap ( TimedOutException . class , metaDataMap ) ; } public TimedOutException ( ) { } public TimedOutException ( TimedOutException other ) { __isset_bitfield = other . __isset_bitfield ; this . acknowledged_by = other . acknowledged_by ; this . acknowledged_by_batchlog = other . acknowledged_by_batchlog ; this . paxos_in_progress = other . paxos_in_progress ; } public TimedOutException deepCopy ( ) { return new TimedOutException ( this ) ; } @Override public void clear ( ) { setAcknowledged_byIsSet ( false ) ; this . acknowledged_by = <int> ; setAcknowledged_by_batchlogIsSet ( false ) ; this . acknowledged_by_batchlog = false ; setPaxos_in_progressIsSet ( false ) ; this . paxos_in_progress = false ; } public int getAcknowledged_by ( ) { return this . acknowledged_by ; } public TimedOutException setAcknowledged_by ( int acknowledged_by ) { this . acknowledged_by = acknowledged_by ; setAcknowledged_byIsSet ( true ) ; return this ; } public void unsetAcknowledged_by ( ) { __isset_bitfield = EncodingUtils . clearBit ( __isset_bitfield , __ACKNOWLEDGED_BY_ISSET_ID ) ; } public boolean isSetAcknowledged_by ( ) { return EncodingUtils . testBit ( __isset_bitfield , __ACKNOWLEDGED_BY_ISSET_ID ) ; } public void setAcknowledged_byIsSet ( boolean value ) { __isset_bitfield = EncodingUtils . setBit ( __isset_bitfield , __ACKNOWLEDGED_BY_ISSET_ID , value ) ; } public boolean isAcknowledged_by_batchlog ( ) { return this . acknowledged_by_batchlog ; } public TimedOutException setAcknowledged_by_batchlog ( boolean acknowledged_by_batchlog ) { this . acknowledged_by_batchlog = acknowledged_by_batchlog ; setAcknowledged_by_batchlogIsSet ( true ) ; return this ; } public void unsetAcknowledged_by_batchlog ( ) { __isset_bitfield = EncodingUtils . clearBit ( __isset_bitfield , __ACKNOWLEDGED_BY_BATCHLOG_ISSET_ID ) ; } public boolean isSetAcknowledged_by_batchlog ( ) { return EncodingUtils . testBit ( __isset_bitfield , __ACKNOWLEDGED_BY_BATCHLOG_ISSET_ID ) ; } public void setAcknowledged_by_batchlogIsSet ( boolean value ) { __isset_bitfield = EncodingUtils . setBit ( __isset_bitfield , __ACKNOWLEDGED_BY_BATCHLOG_ISSET_ID , value ) ; } public boolean isPaxos_in_progress ( ) { return this . paxos_in_progress ; } public TimedOutException setPaxos_in_progress ( boolean paxos_in_progress ) { this . paxos_in_progress = paxos_in_progress ; setPaxos_in_progressIsSet ( true ) ; return this ; } public void unsetPaxos_in_progress ( ) { __isset_bitfield = EncodingUtils . clearBit ( __isset_bitfield , __PAXOS_IN_PROGRESS_ISSET_ID ) ; } public boolean isSetPaxos_in_progress ( ) { return EncodingUtils . testBit ( __isset_bitfield , __PAXOS_IN_PROGRESS_ISSET_ID ) ; } public void setPaxos_in_progressIsSet ( boolean value ) { __isset_bitfield = EncodingUtils . setBit ( __isset_bitfield , __PAXOS_IN_PROGRESS_ISSET_ID , value ) ; } public void setFieldValue ( _Fields field , Object value ) { switch ( field ) { case ACKNOWLEDGED_BY : if ( value = = null ) { unsetAcknowledged_by ( ) ; } else { setAcknowledged_by ( ( Integer ) value ) ; } break ; case ACKNOWLEDGED_BY_BATCHLOG : if ( value = = null ) { unsetAcknowledged_by_batchlog ( ) ; } else { setAcknowledged_by_batchlog ( ( Boolean ) value ) ; } break ; case PAXOS_IN_PROGRESS : if ( value = = null ) { unsetPaxos_in_progress ( ) ; } else { setPaxos_in_progress ( ( Boolean ) value ) ; } break ; } } public Object getFieldValue ( _Fields field ) { switch ( field ) { case ACKNOWLEDGED_BY : return Integer . valueOf ( getAcknowledged_by ( ) ) ; case ACKNOWLEDGED_BY_BATCHLOG : return Boolean . valueOf ( isAcknowledged_by_batchlog ( ) ) ; case PAXOS_IN_PROGRESS : return Boolean . valueOf ( isPaxos_in_progress ( ) ) ; } throw new IllegalStateException ( ) ; } public boolean isSet ( _Fields field ) { if ( field = = null ) { throw new IllegalArgumentException ( ) ; } switch ( field ) { case ACKNOWLEDGED_BY : return isSetAcknowledged_by ( ) ; case ACKNOWLEDGED_BY_BATCHLOG : return isSetAcknowledged_by_batchlog ( ) ; case PAXOS_IN_PROGRESS : return isSetPaxos_in_progress ( ) ; } throw new IllegalStateException ( ) ; } @Override public boolean equals ( Object that ) { if ( that = = null ) return false ; if ( that instanceof TimedOutException ) return this . equals ( ( TimedOutException ) that ) ; return false ; } public boolean equals ( TimedOutException that ) { if ( that = = null ) return false ; boolean this_present_acknowledged_by = true & & this . isSetAcknowledged_by ( ) ; boolean that_present_acknowledged_by = true & & that . isSetAcknowledged_by ( ) ; if ( this_present_acknowledged_by | | that_present_acknowledged_by ) { if ( ! ( this_present_acknowledged_by & & that_present_acknowledged_by ) ) return false ; if ( this . acknowledged_by ! = that . acknowledged_by ) return false ; } boolean this_present_acknowledged_by_batchlog = true & & this . isSetAcknowledged_by_batchlog ( ) ; boolean that_present_acknowledged_by_batchlog = true & & that . isSetAcknowledged_by_batchlog ( ) ; if ( this_present_acknowledged_by_batchlog | | that_present_acknowledged_by_batchlog ) { if ( ! ( this_present_acknowledged_by_batchlog & & that_present_acknowledged_by_batchlog ) ) return false ; if ( this . acknowledged_by_batchlog ! = that . acknowledged_by_batchlog ) return false ; } boolean this_present_paxos_in_progress = true & & this . isSetPaxos_in_progress ( ) ; boolean that_present_paxos_in_progress = true & & that . isSetPaxos_in_progress ( ) ; if ( this_present_paxos_in_progress | | that_present_paxos_in_progress ) { if ( ! ( this_present_paxos_in_progress & & that_present_paxos_in_progress ) ) return false ; if ( this . paxos_in_progress ! = that . paxos_in_progress ) return false ; } return true ; } @Override public int hashCode ( ) { HashCodeBuilder builder = new HashCodeBuilder ( ) ; boolean present_acknowledged_by = true & & ( isSetAcknowledged_by ( ) ) ; builder . append ( present_acknowledged_by ) ; if ( present_acknowledged_by ) builder . append ( acknowledged_by ) ; boolean present_acknowledged_by_batchlog = true & & ( isSetAcknowledged_by_batchlog ( ) ) ; builder . append ( present_acknowledged_by_batchlog ) ; if ( present_acknowledged_by_batchlog ) builder . append ( acknowledged_by_batchlog ) ; boolean present_paxos_in_progress = true & & ( isSetPaxos_in_progress ( ) ) ; builder . append ( present_paxos_in_progress ) ; if ( present_paxos_in_progress ) builder . append ( paxos_in_progress ) ; return builder . toHashCode ( ) ; } @Override public int compareTo ( TimedOutException other ) { if ( ! getClass ( ) . equals ( other . getClass ( ) ) ) { return getClass ( ) . getName ( ) . compareTo ( other . getClass ( ) . getName ( ) ) ; } int lastComparison = <int> ; lastComparison = Boolean . valueOf ( isSetAcknowledged_by ( ) ) . compareTo ( other . isSetAcknowledged_by ( ) ) ; if ( lastComparison ! = <int> ) { return lastComparison ; } if ( isSetAcknowledged_by ( ) ) { lastComparison = org . apache . thrift . TBaseHelper . compareTo ( this . acknowledged_by , other . acknowledged_by ) ; if ( lastComparison ! = <int> ) { return lastComparison ; } } lastComparison = Boolean . valueOf ( isSetAcknowledged_by_batchlog ( ) ) . compareTo ( other . isSetAcknowledged_by_batchlog ( ) ) ; if ( lastComparison ! = <int> ) { return lastComparison ; } if ( isSetAcknowledged_by_batchlog ( ) ) { lastComparison = org . apache . thrift . TBaseHelper . compareTo ( this . acknowledged_by_batchlog , other . acknowledged_by_batchlog ) ; if ( lastComparison ! = <int> ) { return lastComparison ; } } lastComparison = Boolean . valueOf ( isSetPaxos_in_progress ( ) ) . compareTo ( other . isSetPaxos_in_progress ( ) ) ; if ( lastComparison ! = <int> ) { return lastComparison ; } if ( isSetPaxos_in_progress ( ) ) { lastComparison = org . apache . thrift . TBaseHelper . compareTo ( this . paxos_in_progress , other . paxos_in_progress ) ; if ( lastComparison ! = <int> ) { return lastComparison ; } } return <int> ; } public _Fields fieldForId ( int fieldId ) { return _Fields . findByThriftId ( fieldId ) ; } public void read ( org . apache . thrift . protocol . TProtocol iprot ) throws org . apache . thrift . TException { schemes . get ( iprot . getScheme ( ) ) . getScheme ( ) . read ( iprot , this ) ; } public void write ( org . apache . thrift . protocol . TProtocol oprot ) throws org . apache . thrift . TException { schemes . get ( oprot . getScheme ( ) ) . getScheme ( ) . write ( oprot , this ) ; } @Override public String toString ( ) { StringBuilder sb = new StringBuilder ( <str> ) ; boolean first = true ; if ( isSetAcknowledged_by ( ) ) { sb . append ( <str> ) ; sb . append ( this . acknowledged_by ) ; first = false ; } if ( isSetAcknowledged_by_batchlog ( ) ) { if ( ! first ) sb . append ( <str> ) ; sb . append ( <str> ) ; sb . append ( this . acknowledged_by_batchlog ) ; first = false ; } if ( isSetPaxos_in_progress ( ) ) { if ( ! first ) sb . append ( <str> ) ; sb . append ( <str> ) ; sb . append ( this . paxos_in_progress ) ; first = false ; } sb . append ( <str> ) ; return sb . toString ( ) ; } public void validate ( ) throws org . apache . thrift . TException { } private void writeObject ( java . io . ObjectOutputStream out ) throws java . io . IOException { try { write ( new org . apache . thrift . protocol . TCompactProtocol ( new org . apache . thrift . transport . TIOStreamTransport ( out ) ) ) ; } catch ( org . apache . thrift . TException te ) { throw new java . io . IOException ( te ) ; } } private void readObject ( java . io . ObjectInputStream in ) throws java . io . IOException , ClassNotFoundException { try { __isset_bitfield = <int> ; read ( new org . apache . thrift . protocol . TCompactProtocol ( new org . apache . thrift . transport . TIOStreamTransport ( in ) ) ) ; } catch ( org . apache . thrift . TException te ) { throw new java . io . IOException ( te ) ; } } private static class TimedOutExceptionStandardSchemeFactory implements SchemeFactory { public TimedOutExceptionStandardScheme getScheme ( ) { return new TimedOutExceptionStandardScheme ( ) ; } } private static class TimedOutExceptionStandardScheme extends StandardScheme < TimedOutException > { public void read ( org . apache . thrift . protocol . TProtocol iprot , TimedOutException struct ) throws org . apache . thrift . TException { org . apache . thrift . protocol . TField schemeField ; iprot . readStructBegin ( ) ; while ( true ) { schemeField = iprot . readFieldBegin ( ) ; if ( schemeField . type = = org . apache . thrift . protocol . TType . STOP ) { break ; } switch ( schemeField . id ) { case <int> : if ( schemeField . type = = org . apache . thrift . protocol . TType . I32 ) { struct . acknowledged_by = iprot . readI32 ( ) ; struct . setAcknowledged_byIsSet ( true ) ; } else { org . apache . thrift . protocol . TProtocolUtil . skip ( iprot , schemeField . type ) ; } break ; case <int> : if ( schemeField . type = = org . apache . thrift . protocol . TType . BOOL ) { struct . acknowledged_by_batchlog = iprot . readBool ( ) ; struct . setAcknowledged_by_batchlogIsSet ( true ) ; } else { org . apache . thrift . protocol . TProtocolUtil . skip ( iprot , schemeField . type ) ; } break ; case <int> : if ( schemeField . type = = org . apache . thrift . protocol . TType . BOOL ) { struct . paxos_in_progress = iprot . readBool ( ) ; struct . setPaxos_in_progressIsSet ( true ) ; } else { org . apache . thrift . protocol . TProtocolUtil . skip ( iprot , schemeField . type ) ; } break ; default : org . apache . thrift . protocol . TProtocolUtil . skip ( iprot , schemeField . type ) ; } iprot . readFieldEnd ( ) ; } iprot . readStructEnd ( ) ; struct . validate ( ) ; } public void write ( org . apache . thrift . protocol . TProtocol oprot , TimedOutException struct ) throws org . apache . thrift . TException { struct . validate ( ) ; oprot . writeStructBegin ( STRUCT_DESC ) ; if ( struct . isSetAcknowledged_by ( ) ) { oprot . writeFieldBegin ( ACKNOWLEDGED_BY_FIELD_DESC ) ; oprot . writeI32 ( struct . acknowledged_by ) ; oprot . writeFieldEnd ( ) ; } if ( struct . isSetAcknowledged_by_batchlog ( ) ) { oprot . writeFieldBegin ( ACKNOWLEDGED_BY_BATCHLOG_FIELD_DESC ) ; oprot . writeBool ( struct . acknowledged_by_batchlog ) ; oprot . writeFieldEnd ( ) ; } if ( struct . isSetPaxos_in_progress ( ) ) { oprot . writeFieldBegin ( PAXOS_IN_PROGRESS_FIELD_DESC ) ; oprot . writeBool ( struct . paxos_in_progress ) ; oprot . writeFieldEnd ( ) ; } oprot . writeFieldStop ( ) ; oprot . writeStructEnd ( ) ; } } private static class TimedOutExceptionTupleSchemeFactory implements SchemeFactory { public TimedOutExceptionTupleScheme getScheme ( ) { return new TimedOutExceptionTupleScheme ( ) ; } } private static class TimedOutExceptionTupleScheme extends TupleScheme < TimedOutException > { @Override public void write ( org . apache . thrift . protocol . TProtocol prot , TimedOutException struct ) throws org . apache . thrift . TException { TTupleProtocol oprot = ( TTupleProtocol ) prot ; BitSet optionals = new BitSet ( ) ; if ( struct . isSetAcknowledged_by ( ) ) { optionals . set ( <int> ) ; } if ( struct . isSetAcknowledged_by_batchlog ( ) ) { optionals . set ( <int> ) ; } if ( struct . isSetPaxos_in_progress ( ) ) { optionals . set ( <int> ) ; } oprot . writeBitSet ( optionals , <int> ) ; if ( struct . isSetAcknowledged_by ( ) ) { oprot . writeI32 ( struct . acknowledged_by ) ; } if ( struct . isSetAcknowledged_by_batchlog ( ) ) { oprot . writeBool ( struct . acknowledged_by_batchlog ) ; } if ( struct . isSetPaxos_in_progress ( ) ) { oprot . writeBool ( struct . paxos_in_progress ) ; } } @Override public void read ( org . apache . thrift . protocol . TProtocol prot , TimedOutException struct ) throws org . apache . thrift . TException { TTupleProtocol iprot = ( TTupleProtocol ) prot ; BitSet incoming = iprot . readBitSet ( <int> ) ; if ( incoming . get ( <int> ) ) { struct . acknowledged_by = iprot . readI32 ( ) ; struct . setAcknowledged_byIsSet ( true ) ; } if ( incoming . get ( <int> ) ) { struct . acknowledged_by_batchlog = iprot . readBool ( ) ; struct . setAcknowledged_by_batchlogIsSet ( true ) ; } if ( incoming . get ( <int> ) ) { struct . paxos_in_progress = iprot . readBool ( ) ; struct . setPaxos_in_progressIsSet ( true ) ; } } } } 
