package org . elasticsearch . plan . a ; import java . lang . invoke . MethodHandles ; import java . lang . invoke . MethodType ; import java . util . HashMap ; import java . util . Map ; public class AdditionTests extends ScriptTestCase { public void testInt ( ) throws Exception { assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> + <int> , exec ( <str> ) ) ; assertEquals ( ( <int> + <int> ) + <int> , exec ( <str> ) ) ; assertEquals ( <int> + ( <int> + <int> ) , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; } public void testIntConst ( ) throws Exception { assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> + <int> , exec ( <str> ) ) ; assertEquals ( ( <int> + <int> ) + <int> , exec ( <str> ) ) ; assertEquals ( <int> + ( <int> + <int> ) , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; } public void testByte ( ) throws Exception { assertEquals ( ( byte ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( byte ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( ( byte ) <int> + ( byte ) <int> ) + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( ( byte ) <int> + ( byte ) <int> ) , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( byte ) <int> , exec ( <str> ) ) ; } public void testByteConst ( ) throws Exception { assertEquals ( ( byte ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( byte ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( ( byte ) <int> + ( byte ) <int> ) + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( ( byte ) <int> + ( byte ) <int> ) , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( byte ) <int> , exec ( <str> ) ) ; } public void testChar ( ) throws Exception { assertEquals ( ( char ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( char ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( ( char ) <int> + ( char ) <int> ) + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( ( char ) <int> + ( char ) <int> ) , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( char ) <int> , exec ( <str> ) ) ; } public void testCharConst ( ) throws Exception { assertEquals ( ( char ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( char ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( ( char ) <int> + ( char ) <int> ) + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( ( char ) <int> + ( char ) <int> ) , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( char ) <int> , exec ( <str> ) ) ; } public void testShort ( ) throws Exception { assertEquals ( ( short ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( short ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( ( short ) <int> + ( short ) <int> ) + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( ( short ) <int> + ( short ) <int> ) , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( short ) <int> , exec ( <str> ) ) ; } public void testShortConst ( ) throws Exception { assertEquals ( ( short ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( short ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( ( short ) <int> + ( short ) <int> ) + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( ( short ) <int> + ( short ) <int> ) , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( short ) <int> , exec ( <str> ) ) ; } public void testLong ( ) throws Exception { assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> + <int> , exec ( <str> ) ) ; assertEquals ( ( <int> + <int> ) + <int> , exec ( <str> ) ) ; assertEquals ( <int> + ( <int> + <int> ) , exec ( <str> ) ) ; assertEquals ( <int> L + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> L , exec ( <str> ) ) ; assertEquals ( <int> L + <int> L , exec ( <str> ) ) ; } public void testLongConst ( ) throws Exception { assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> + <int> , exec ( <str> ) ) ; assertEquals ( ( <int> + <int> ) + <int> , exec ( <str> ) ) ; assertEquals ( <int> + ( <int> + <int> ) , exec ( <str> ) ) ; assertEquals ( <int> L + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> L , exec ( <str> ) ) ; assertEquals ( <int> L + <int> L , exec ( <str> ) ) ; } public void testFloat ( ) throws Exception { assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <int> F , exec ( <str> ) ) ; assertEquals ( <float> + <float> + <float> , exec ( <str> ) ) ; assertEquals ( ( <float> + <float> ) + <float> , exec ( <str> ) ) ; assertEquals ( ( <float> + <float> ) + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; } public void testFloatConst ( ) throws Exception { assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <int> F , exec ( <str> ) ) ; assertEquals ( <float> + <float> + <float> , exec ( <str> ) ) ; assertEquals ( ( <float> + <float> ) + <float> , exec ( <str> ) ) ; assertEquals ( <float> + ( <float> + <float> ) , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; } public void testDouble ( ) throws Exception { assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> + <float> , exec ( <str> ) ) ; assertEquals ( ( <float> + <float> ) + <float> , exec ( <str> ) ) ; assertEquals ( <float> + ( <float> + <float> ) , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; } public void testDoubleConst ( ) throws Exception { assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> + <float> , exec ( <str> ) ) ; assertEquals ( ( <float> + <float> ) + <float> , exec ( <str> ) ) ; assertEquals ( <float> + ( <float> + <float> ) , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; } } 
