package org . apache . cassandra . cql3 . restrictions ; import org . apache . cassandra . config . CFMetaData ; import org . apache . cassandra . cql3 . * ; import org . apache . cassandra . db . filter . RowFilter ; import org . apache . cassandra . db . marshal . AbstractType ; public class CustomIndexExpression { private final ColumnIdentifier valueColId = new ColumnIdentifier ( <str> , false ) ; public final IndexName targetIndex ; public final Term . Raw valueRaw ; private Term value ; public CustomIndexExpression ( IndexName targetIndex , Term . Raw value ) { this . targetIndex = targetIndex ; this . valueRaw = value ; } public void prepareValue ( CFMetaData cfm , AbstractType < ? > expressionType , VariableSpecifications boundNames ) { ColumnSpecification spec = new ColumnSpecification ( cfm . ksName , cfm . ksName , valueColId , expressionType ) ; value = valueRaw . prepare ( cfm . ksName , spec ) ; value . collectMarkerSpecification ( boundNames ) ; } public void addToRowFilter ( RowFilter filter , CFMetaData cfm , QueryOptions options ) { filter . addCustomIndexExpression ( cfm , cfm . getIndexes ( ) . get ( targetIndex . getIdx ( ) ) . orElseThrow ( ( ) - > IndexRestrictions . indexNotFound ( targetIndex , cfm ) ) , value . bindAndGet ( options ) ) ; } } 
