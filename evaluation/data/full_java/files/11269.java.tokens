package org . gradle . api . internal ; import org . gradle . internal . reflect . Instantiator ; public class ClassGeneratorBackedInstantiator implements Instantiator { private final ClassGenerator classGenerator ; private final Instantiator instantiator ; public ClassGeneratorBackedInstantiator ( ClassGenerator classGenerator , Instantiator instantiator ) { this . classGenerator = classGenerator ; this . instantiator = instantiator ; } public < T > T newInstance ( Class < ? extends T > type , Object . . . parameters ) { ThreadGlobalInstantiator . set ( this ) ; try { return instantiator . newInstance ( classGenerator . generate ( type ) , parameters ) ; } finally { ThreadGlobalInstantiator . set ( null ) ; } } } 
