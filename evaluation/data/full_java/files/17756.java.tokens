package com . badlogic . gdx . controllers . desktop . ois ; import com . badlogic . gdx . ApplicationAdapter ; import com . badlogic . gdx . controllers . desktop . DesktopControllersBuild ; import com . badlogic . gdx . controllers . desktop . OisControllers ; import com . badlogic . gdx . controllers . desktop . ois . OisJoystick . OisPov ; import com . badlogic . gdx . utils . SharedLibraryLoader ; public class OisTest { public static void main ( String [ ] args ) throws Exception { DesktopControllersBuild . main ( null ) ; new SharedLibraryLoader ( <str> ) . load ( <str> ) ; ApplicationAdapter app = new ApplicationAdapter ( ) { Ois ois ; public void create ( ) { ois = new Ois ( OisControllers . getWindowHandle ( ) ) ; if ( ois . getJoysticks ( ) . size ( ) > <int> ) { ois . getJoysticks ( ) . get ( <int> ) . setListener ( new OisListener ( ) { @Override public void xSliderMoved ( OisJoystick joystick , int slider , boolean value ) { System . out . println ( <str> + slider + <str> + value ) ; } @Override public void ySliderMoved ( OisJoystick joystick , int slider , boolean value ) { System . out . println ( <str> + slider + <str> + value ) ; } @Override public void povMoved ( OisJoystick joystick , int pov , OisPov value ) { System . out . println ( <str> + pov + <str> + value ) ; } @Override public void buttonReleased ( OisJoystick joystick , int button ) { System . out . println ( <str> + button ) ; } @Override public void buttonPressed ( OisJoystick joystick , int button ) { System . out . println ( <str> + button ) ; } @Override public void axisMoved ( OisJoystick joystick , int axis , float value ) { System . out . println ( <str> + axis + <str> + value ) ; } } ) ; } } public void render ( ) { ois . update ( ) ; } } ; } } 
