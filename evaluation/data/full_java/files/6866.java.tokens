package org . elasticsearch . indices . recovery ; import org . elasticsearch . ElasticsearchException ; import org . elasticsearch . cluster . node . DiscoveryNode ; import org . elasticsearch . common . Nullable ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . index . shard . ShardId ; import java . io . IOException ; public class RecoveryFailedException extends ElasticsearchException { public RecoveryFailedException ( StartRecoveryRequest request , Throwable cause ) { this ( request , null , cause ) ; } public RecoveryFailedException ( StartRecoveryRequest request , @Nullable String extraInfo , Throwable cause ) { this ( request . shardId ( ) , request . sourceNode ( ) , request . targetNode ( ) , extraInfo , cause ) ; } public RecoveryFailedException ( RecoveryState state , @Nullable String extraInfo , Throwable cause ) { this ( state . getShardId ( ) , state . getSourceNode ( ) , state . getTargetNode ( ) , extraInfo , cause ) ; } public RecoveryFailedException ( ShardId shardId , DiscoveryNode sourceNode , DiscoveryNode targetNode , Throwable cause ) { this ( shardId , sourceNode , targetNode , null , cause ) ; } public RecoveryFailedException ( ShardId shardId , DiscoveryNode sourceNode , DiscoveryNode targetNode , @Nullable String extraInfo , Throwable cause ) { super ( shardId + <str> + sourceNode + <str> + targetNode + ( extraInfo = = null ? <str> : <str> + extraInfo + <str> ) , cause ) ; } public RecoveryFailedException ( StreamInput in ) throws IOException { super ( in ) ; } } 
