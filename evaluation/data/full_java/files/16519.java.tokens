package junit . tests . extensions ; import junit . extensions . RepeatedTest ; import junit . framework . Test ; import junit . framework . TestCase ; import junit . framework . TestResult ; import junit . framework . TestSuite ; public class RepeatedTestTest extends TestCase { private TestSuite fSuite ; public static class SuccessTest extends TestCase { @Override public void runTest ( ) { } } public RepeatedTestTest ( String name ) { super ( name ) ; fSuite = new TestSuite ( ) ; fSuite . addTest ( new SuccessTest ( ) ) ; fSuite . addTest ( new SuccessTest ( ) ) ; } public void testRepeatedOnce ( ) { Test test = new RepeatedTest ( fSuite , <int> ) ; assertEquals ( <int> , test . countTestCases ( ) ) ; TestResult result = new TestResult ( ) ; test . run ( result ) ; assertEquals ( <int> , result . runCount ( ) ) ; } public void testRepeatedMoreThanOnce ( ) { Test test = new RepeatedTest ( fSuite , <int> ) ; assertEquals ( <int> , test . countTestCases ( ) ) ; TestResult result = new TestResult ( ) ; test . run ( result ) ; assertEquals ( <int> , result . runCount ( ) ) ; } public void testRepeatedZero ( ) { Test test = new RepeatedTest ( fSuite , <int> ) ; assertEquals ( <int> , test . countTestCases ( ) ) ; TestResult result = new TestResult ( ) ; test . run ( result ) ; assertEquals ( <int> , result . runCount ( ) ) ; } public void testRepeatedNegative ( ) { try { new RepeatedTest ( fSuite , - <int> ) ; } catch ( IllegalArgumentException e ) { assertTrue ( e . getMessage ( ) . contains ( <str> ) ) ; return ; } fail ( <str> ) ; } } 
