package io . netty . buffer ; import io . netty . util . internal . PlatformDependent ; final class UnpooledUnsafeHeapByteBuf extends UnpooledHeapByteBuf { UnpooledUnsafeHeapByteBuf ( ByteBufAllocator alloc , int initialCapacity , int maxCapacity ) { super ( alloc , initialCapacity , maxCapacity ) ; } @Override public byte getByte ( int index ) { checkIndex ( index ) ; return _getByte ( index ) ; } @Override protected byte _getByte ( int index ) { return UnsafeByteBufUtil . getByte ( array , index ) ; } @Override public short getShort ( int index ) { checkIndex ( index , <int> ) ; return _getShort ( index ) ; } @Override protected short _getShort ( int index ) { return UnsafeByteBufUtil . getShort ( array , index ) ; } @Override public int getUnsignedMedium ( int index ) { checkIndex ( index , <int> ) ; return _getUnsignedMedium ( index ) ; } @Override protected int _getUnsignedMedium ( int index ) { return UnsafeByteBufUtil . getUnsignedMedium ( array , index ) ; } @Override public int getInt ( int index ) { checkIndex ( index , <int> ) ; return _getInt ( index ) ; } @Override protected int _getInt ( int index ) { return UnsafeByteBufUtil . getInt ( array , index ) ; } @Override public long getLong ( int index ) { checkIndex ( index , <int> ) ; return _getLong ( index ) ; } @Override protected long _getLong ( int index ) { return UnsafeByteBufUtil . getLong ( array , index ) ; } @Override public ByteBuf setByte ( int index , int value ) { checkIndex ( index ) ; _setByte ( index , value ) ; return this ; } @Override protected void _setByte ( int index , int value ) { UnsafeByteBufUtil . setByte ( array , index , value ) ; } @Override public ByteBuf setShort ( int index , int value ) { checkIndex ( index , <int> ) ; _setShort ( index , value ) ; return this ; } @Override protected void _setShort ( int index , int value ) { UnsafeByteBufUtil . setShort ( array , index , value ) ; } @Override public ByteBuf setMedium ( int index , int value ) { checkIndex ( index , <int> ) ; _setMedium ( index , value ) ; return this ; } @Override protected void _setMedium ( int index , int value ) { UnsafeByteBufUtil . setMedium ( array , index , value ) ; } @Override public ByteBuf setInt ( int index , int value ) { checkIndex ( index , <int> ) ; _setInt ( index , value ) ; return this ; } @Override protected void _setInt ( int index , int value ) { UnsafeByteBufUtil . setInt ( array , index , value ) ; } @Override public ByteBuf setLong ( int index , long value ) { checkIndex ( index , <int> ) ; _setLong ( index , value ) ; return this ; } @Override protected void _setLong ( int index , long value ) { UnsafeByteBufUtil . setLong ( array , index , value ) ; } @Override protected SwappedByteBuf newSwappedByteBuf ( ) { if ( PlatformDependent . isUnaligned ( ) ) { return new UnsafeHeapSwappedByteBuf ( this ) ; } return super . newSwappedByteBuf ( ) ; } } 
