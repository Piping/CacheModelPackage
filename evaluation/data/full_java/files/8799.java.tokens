package org . elasticsearch . plan . a ; public class BinaryOperatorTests extends ScriptTestCase { public void testBasics ( ) { assertEquals ( <float> / <float> , exec ( <str> ) ) ; assertEquals ( <float> % <float> , exec ( <str> ) ) ; assertEquals ( <int> - <int> , exec ( <str> ) ) ; assertEquals ( <int> < < <int> , exec ( <str> ) ) ; assertEquals ( <int> > > <int> , exec ( <str> ) ) ; assertEquals ( - <int> > > > <int> , exec ( <str> ) ) ; assertEquals ( <int> & <int> , exec ( <str> ) ) ; assertEquals ( <int> & <int> , exec ( <str> ) ) ; assertEquals ( <int> & <int> , exec ( <str> ) ) ; assertEquals ( <int> | <int> , exec ( <str> ) ) ; assertEquals ( <int> | <int> , exec ( <str> ) ) ; assertEquals ( <int> | <int> , exec ( <str> ) ) ; assertEquals ( <int> ^ <int> , exec ( <str> ) ) ; assertEquals ( <int> ^ <int> , exec ( <str> ) ) ; assertEquals ( <int> ^ <int> , exec ( <str> ) ) ; } public void testLongShifts ( ) { assertEquals ( <int> < < <int> , exec ( <str> ) ) ; assertEquals ( <int> < < <int> , exec ( <str> ) ) ; assertEquals ( <int> > > <int> , exec ( <str> ) ) ; assertEquals ( <int> > > <int> , exec ( <str> ) ) ; assertEquals ( - <int> > > > <int> , exec ( <str> ) ) ; assertEquals ( - <int> > > > <int> , exec ( <str> ) ) ; } public void testLongShiftsConst ( ) { assertEquals ( <int> < < <int> , exec ( <str> ) ) ; assertEquals ( <int> < < <int> , exec ( <str> ) ) ; assertEquals ( <int> > > <int> , exec ( <str> ) ) ; assertEquals ( <int> > > <int> , exec ( <str> ) ) ; assertEquals ( - <int> > > > <int> , exec ( <str> ) ) ; assertEquals ( - <int> > > > <int> , exec ( <str> ) ) ; } public void testMixedTypes ( ) { assertEquals ( <int> , exec ( <str> ) ) ; assertEquals ( <float> , exec ( <str> ) ) ; assertEquals ( <int> , exec ( <str> ) ) ; assertEquals ( <float> , exec ( <str> ) ) ; assertEquals ( - <int> , exec ( <str> ) ) ; assertEquals ( <int> , exec ( <str> ) ) ; assertEquals ( - <int> , exec ( <str> ) ) ; assertEquals ( <int> , exec ( <str> ) ) ; assertEquals ( <int> , exec ( <str> ) ) ; assertEquals ( <int> , exec ( <str> ) ) ; assertEquals ( <int> , exec ( <str> ) ) ; } public void testBinaryPromotion ( ) throws Exception { assertEquals ( ( byte ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + <float> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + <float> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + <float> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + <float> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + <float> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + <float> , exec ( <str> ) ) ; assertEquals ( <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <float> , exec ( <str> ) ) ; assertEquals ( <int> + <float> , exec ( <str> ) ) ; assertEquals ( <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <float> , exec ( <str> ) ) ; assertEquals ( <int> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( <float> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( <float> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( <float> + <int> , exec ( <str> ) ) ; assertEquals ( <float> + <int> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( <float> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( <float> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( <float> + <int> , exec ( <str> ) ) ; assertEquals ( <float> + <int> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; } public void testBinaryPromotionConst ( ) throws Exception { assertEquals ( ( byte ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + <int> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + <float> , exec ( <str> ) ) ; assertEquals ( ( byte ) <int> + <float> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + <int> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + <float> , exec ( <str> ) ) ; assertEquals ( ( char ) <int> + <float> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + <int> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + <float> , exec ( <str> ) ) ; assertEquals ( ( short ) <int> + <float> , exec ( <str> ) ) ; assertEquals ( <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <float> , exec ( <str> ) ) ; assertEquals ( <int> + <float> , exec ( <str> ) ) ; assertEquals ( <int> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( <int> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( <int> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <int> , exec ( <str> ) ) ; assertEquals ( <int> + <float> , exec ( <str> ) ) ; assertEquals ( <int> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( <float> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( <float> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( <float> + <int> , exec ( <str> ) ) ; assertEquals ( <float> + <int> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + ( byte ) <int> , exec ( <str> ) ) ; assertEquals ( <float> + ( char ) <int> , exec ( <str> ) ) ; assertEquals ( <float> + ( short ) <int> , exec ( <str> ) ) ; assertEquals ( <float> + <int> , exec ( <str> ) ) ; assertEquals ( <float> + <int> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; assertEquals ( <float> + <float> , exec ( <str> ) ) ; } } 
