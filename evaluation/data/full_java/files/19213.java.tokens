package io . netty . handler . codec . rtsp ; import io . netty . handler . codec . http . HttpResponseStatus ; public final class RtspResponseStatuses { public static final HttpResponseStatus CONTINUE = HttpResponseStatus . CONTINUE ; public static final HttpResponseStatus OK = HttpResponseStatus . OK ; public static final HttpResponseStatus CREATED = HttpResponseStatus . CREATED ; public static final HttpResponseStatus LOW_STORAGE_SPACE = new HttpResponseStatus ( <int> , <str> ) ; public static final HttpResponseStatus MULTIPLE_CHOICES = HttpResponseStatus . MULTIPLE_CHOICES ; public static final HttpResponseStatus MOVED_PERMANENTLY = HttpResponseStatus . MOVED_PERMANENTLY ; public static final HttpResponseStatus MOVED_TEMPORARILY = new HttpResponseStatus ( <int> , <str> ) ; public static final HttpResponseStatus NOT_MODIFIED = HttpResponseStatus . NOT_MODIFIED ; public static final HttpResponseStatus USE_PROXY = HttpResponseStatus . USE_PROXY ; public static final HttpResponseStatus BAD_REQUEST = HttpResponseStatus . BAD_REQUEST ; public static final HttpResponseStatus UNAUTHORIZED = HttpResponseStatus . UNAUTHORIZED ; public static final HttpResponseStatus PAYMENT_REQUIRED = HttpResponseStatus . PAYMENT_REQUIRED ; public static final HttpResponseStatus FORBIDDEN = HttpResponseStatus . FORBIDDEN ; public static final HttpResponseStatus NOT_FOUND = HttpResponseStatus . NOT_FOUND ; public static final HttpResponseStatus METHOD_NOT_ALLOWED = HttpResponseStatus . METHOD_NOT_ALLOWED ; public static final HttpResponseStatus NOT_ACCEPTABLE = HttpResponseStatus . NOT_ACCEPTABLE ; public static final HttpResponseStatus PROXY_AUTHENTICATION_REQUIRED = HttpResponseStatus . PROXY_AUTHENTICATION_REQUIRED ; public static final HttpResponseStatus REQUEST_TIMEOUT = HttpResponseStatus . REQUEST_TIMEOUT ; public static final HttpResponseStatus GONE = HttpResponseStatus . GONE ; public static final HttpResponseStatus LENGTH_REQUIRED = HttpResponseStatus . LENGTH_REQUIRED ; public static final HttpResponseStatus PRECONDITION_FAILED = HttpResponseStatus . PRECONDITION_FAILED ; public static final HttpResponseStatus REQUEST_ENTITY_TOO_LARGE = HttpResponseStatus . REQUEST_ENTITY_TOO_LARGE ; public static final HttpResponseStatus REQUEST_URI_TOO_LONG = HttpResponseStatus . REQUEST_URI_TOO_LONG ; public static final HttpResponseStatus UNSUPPORTED_MEDIA_TYPE = HttpResponseStatus . UNSUPPORTED_MEDIA_TYPE ; public static final HttpResponseStatus PARAMETER_NOT_UNDERSTOOD = new HttpResponseStatus ( <int> , <str> ) ; public static final HttpResponseStatus CONFERENCE_NOT_FOUND = new HttpResponseStatus ( <int> , <str> ) ; public static final HttpResponseStatus NOT_ENOUGH_BANDWIDTH = new HttpResponseStatus ( <int> , <str> ) ; public static final HttpResponseStatus SESSION_NOT_FOUND = new HttpResponseStatus ( <int> , <str> ) ; public static final HttpResponseStatus METHOD_NOT_VALID = new HttpResponseStatus ( <int> , <str> ) ; public static final HttpResponseStatus HEADER_FIELD_NOT_VALID = new HttpResponseStatus ( <int> , <str> ) ; public static final HttpResponseStatus INVALID_RANGE = new HttpResponseStatus ( <int> , <str> ) ; public static final HttpResponseStatus PARAMETER_IS_READONLY = new HttpResponseStatus ( <int> , <str> ) ; public static final HttpResponseStatus AGGREGATE_OPERATION_NOT_ALLOWED = new HttpResponseStatus ( <int> , <str> ) ; public static final HttpResponseStatus ONLY_AGGREGATE_OPERATION_ALLOWED = new HttpResponseStatus ( <int> , <str> ) ; public static final HttpResponseStatus UNSUPPORTED_TRANSPORT = new HttpResponseStatus ( <int> , <str> ) ; public static final HttpResponseStatus DESTINATION_UNREACHABLE = new HttpResponseStatus ( <int> , <str> ) ; public static final HttpResponseStatus KEY_MANAGEMENT_FAILURE = new HttpResponseStatus ( <int> , <str> ) ; public static final HttpResponseStatus INTERNAL_SERVER_ERROR = HttpResponseStatus . INTERNAL_SERVER_ERROR ; public static final HttpResponseStatus NOT_IMPLEMENTED = HttpResponseStatus . NOT_IMPLEMENTED ; public static final HttpResponseStatus BAD_GATEWAY = HttpResponseStatus . BAD_GATEWAY ; public static final HttpResponseStatus SERVICE_UNAVAILABLE = HttpResponseStatus . SERVICE_UNAVAILABLE ; public static final HttpResponseStatus GATEWAY_TIMEOUT = HttpResponseStatus . GATEWAY_TIMEOUT ; public static final HttpResponseStatus RTSP_VERSION_NOT_SUPPORTED = new HttpResponseStatus ( <int> , <str> ) ; public static final HttpResponseStatus OPTION_NOT_SUPPORTED = new HttpResponseStatus ( <int> , <str> ) ; public static HttpResponseStatus valueOf ( int code ) { switch ( code ) { case <int> : return LOW_STORAGE_SPACE ; case <int> : return MOVED_TEMPORARILY ; case <int> : return PARAMETER_NOT_UNDERSTOOD ; case <int> : return CONFERENCE_NOT_FOUND ; case <int> : return NOT_ENOUGH_BANDWIDTH ; case <int> : return SESSION_NOT_FOUND ; case <int> : return METHOD_NOT_VALID ; case <int> : return HEADER_FIELD_NOT_VALID ; case <int> : return INVALID_RANGE ; case <int> : return PARAMETER_IS_READONLY ; case <int> : return AGGREGATE_OPERATION_NOT_ALLOWED ; case <int> : return ONLY_AGGREGATE_OPERATION_ALLOWED ; case <int> : return UNSUPPORTED_TRANSPORT ; case <int> : return DESTINATION_UNREACHABLE ; case <int> : return KEY_MANAGEMENT_FAILURE ; case <int> : return RTSP_VERSION_NOT_SUPPORTED ; case <int> : return OPTION_NOT_SUPPORTED ; default : return HttpResponseStatus . valueOf ( code ) ; } } private RtspResponseStatuses ( ) { } } 
