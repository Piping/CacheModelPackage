package org . nd4j . linalg . api . ops . exception ; import org . nd4j . linalg . api . blas . BlasBufferUtil ; import org . nd4j . linalg . api . ndarray . INDArray ; import org . nd4j . linalg . api . ops . Op ; import java . io . Serializable ; import java . util . Arrays ; public class BlasOpErrorMessage implements Serializable { private Op op ; public BlasOpErrorMessage ( Op op ) { this . op = op ; } @Override public String toString ( ) { StringBuffer sb = new StringBuffer ( ) . append ( <str> + op . name ( ) + <str> + op . n ( ) ) . append ( <str> + shapeInfo ( op . x ( ) ) ) ; if ( op . y ( ) ! = null ) { sb . append ( <str> + shapeInfo ( op . y ( ) ) ) ; } sb . append ( <str> + op . z ( ) ) ; return sb . toString ( ) ; } private String shapeInfo ( INDArray arr ) { return Arrays . toString ( arr . shape ( ) ) + <str> + Arrays . toString ( arr . stride ( ) ) + <str> + arr . offset ( ) + <str> + BlasBufferUtil . getBlasStride ( arr ) ; } } 
