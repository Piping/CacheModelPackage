package org . elasticsearch . action . admin . cluster . snapshots . restore ; import org . elasticsearch . action . ActionResponse ; import org . elasticsearch . common . Nullable ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . common . xcontent . ToXContent ; import org . elasticsearch . common . xcontent . XContentBuilder ; import org . elasticsearch . common . xcontent . XContentBuilderString ; import org . elasticsearch . rest . RestStatus ; import org . elasticsearch . snapshots . RestoreInfo ; import java . io . IOException ; public class RestoreSnapshotResponse extends ActionResponse implements ToXContent { @Nullable private RestoreInfo restoreInfo ; RestoreSnapshotResponse ( @Nullable RestoreInfo restoreInfo ) { this . restoreInfo = restoreInfo ; } RestoreSnapshotResponse ( ) { } public RestoreInfo getRestoreInfo ( ) { return restoreInfo ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; restoreInfo = RestoreInfo . readOptionalRestoreInfo ( in ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeOptionalStreamable ( restoreInfo ) ; } public RestStatus status ( ) { if ( restoreInfo = = null ) { return RestStatus . ACCEPTED ; } return restoreInfo . status ( ) ; } static final class Fields { static final XContentBuilderString SNAPSHOT = new XContentBuilderString ( <str> ) ; static final XContentBuilderString ACCEPTED = new XContentBuilderString ( <str> ) ; } @Override public XContentBuilder toXContent ( XContentBuilder builder , ToXContent . Params params ) throws IOException { if ( restoreInfo ! = null ) { builder . field ( Fields . SNAPSHOT ) ; restoreInfo . toXContent ( builder , params ) ; } else { builder . field ( Fields . ACCEPTED , true ) ; } return builder ; } } 
