package org . apache . cassandra . db . rows ; import java . io . IOException ; import java . nio . ByteBuffer ; import java . util . Comparator ; import org . apache . cassandra . config . ColumnDefinition ; import org . apache . cassandra . db . * ; import org . apache . cassandra . io . util . DataOutputPlus ; import org . apache . cassandra . io . util . DataInputPlus ; import org . apache . cassandra . utils . memory . AbstractAllocator ; public abstract class Cell extends ColumnData { public static final int NO_TTL = <int> ; public static final int NO_DELETION_TIME = Integer . MAX_VALUE ; public final static Comparator < Cell > comparator = ( c1 , c2 ) - > { int cmp = c1 . column ( ) . compareTo ( c2 . column ( ) ) ; if ( cmp ! = <int> ) return cmp ; Comparator < CellPath > pathComparator = c1 . column ( ) . cellPathComparator ( ) ; return pathComparator = = null ? <int> : pathComparator . compare ( c1 . path ( ) , c2 . path ( ) ) ; } ; public static final Serializer serializer = new BufferCell . Serializer ( ) ; protected Cell ( ColumnDefinition column ) { super ( column ) ; } public abstract boolean isCounterCell ( ) ; public abstract ByteBuffer value ( ) ; public abstract long timestamp ( ) ; public abstract int ttl ( ) ; public abstract int localDeletionTime ( ) ; public abstract boolean isTombstone ( ) ; public abstract boolean isExpiring ( ) ; public abstract boolean isLive ( int nowInSec ) ; public abstract CellPath path ( ) ; public abstract Cell withUpdatedValue ( ByteBuffer newValue ) ; public abstract Cell copy ( AbstractAllocator allocator ) ; @Override public abstract Cell markCounterLocalToBeCleared ( ) ; @Override public abstract Cell purge ( DeletionPurger purger , int nowInSec ) ; public interface Serializer { public void serialize ( Cell cell , DataOutputPlus out , LivenessInfo rowLiveness , SerializationHeader header ) throws IOException ; public Cell deserialize ( DataInputPlus in , LivenessInfo rowLiveness , ColumnDefinition column , SerializationHeader header , SerializationHelper helper ) throws IOException ; public long serializedSize ( Cell cell , LivenessInfo rowLiveness , SerializationHeader header ) ; public boolean skip ( DataInputPlus in , ColumnDefinition column , SerializationHeader header ) throws IOException ; } } 
