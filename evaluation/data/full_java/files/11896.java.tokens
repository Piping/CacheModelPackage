package org . gradle . configuration . project ; import org . gradle . api . internal . project . ProjectInternal ; import org . gradle . configuration . ScriptPlugin ; import org . gradle . configuration . ScriptPluginFactory ; import org . gradle . util . Clock ; import org . slf4j . Logger ; import org . slf4j . LoggerFactory ; public class BuildScriptProcessor implements ProjectConfigureAction { private static final Logger LOGGER = LoggerFactory . getLogger ( BuildScriptProcessor . class ) ; private final ScriptPluginFactory configurerFactory ; public BuildScriptProcessor ( ScriptPluginFactory configurerFactory ) { this . configurerFactory = configurerFactory ; } public void execute ( ProjectInternal project ) { LOGGER . info ( String . format ( <str> , project , project . getBuildScriptSource ( ) . getDisplayName ( ) ) ) ; Clock clock = new Clock ( ) ; try { ScriptPlugin configurer = configurerFactory . create ( project . getBuildScriptSource ( ) , project . getBuildscript ( ) , project . getClassLoaderScope ( ) , project . getBaseClassLoaderScope ( ) , true ) ; configurer . apply ( project ) ; } finally { LOGGER . debug ( <str> , clock . getTime ( ) ) ; } } } 
