package io . netty . handler . codec . marshalling ; import io . netty . buffer . ByteBuf ; import io . netty . buffer . Unpooled ; import io . netty . channel . ChannelHandler ; import io . netty . channel . embedded . EmbeddedChannel ; import io . netty . handler . codec . CodecException ; import io . netty . handler . codec . TooLongFrameException ; import static org . junit . Assert . * ; public class RiverMarshallingDecoderTest extends RiverCompatibleMarshallingDecoderTest { @Override protected ByteBuf input ( byte [ ] input ) { ByteBuf length = Unpooled . buffer ( <int> ) ; length . writeInt ( input . length ) ; return Unpooled . wrappedBuffer ( length , Unpooled . wrappedBuffer ( input ) ) ; } @Override protected ChannelHandler createDecoder ( int maxObjectSize ) { return new MarshallingDecoder ( createProvider ( createMarshallerFactory ( ) , createMarshallingConfig ( ) ) , maxObjectSize ) ; } @Override protected void onTooBigFrame ( EmbeddedChannel ch , ByteBuf input ) { try { ch . writeInbound ( input ) ; fail ( ) ; } catch ( CodecException e ) { assertEquals ( TooLongFrameException . class , e . getClass ( ) ) ; } } } 
