package org . elasticsearch . index ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . common . io . stream . Streamable ; import java . io . IOException ; public class Index implements Streamable { private String name ; private Index ( ) { } public Index ( String name ) { this . name = name . intern ( ) ; } public String name ( ) { return this . name ; } public String getName ( ) { return name ( ) ; } @Override public String toString ( ) { return <str> + name + <str> ; } @Override public boolean equals ( Object o ) { if ( this = = o ) return true ; if ( o = = null ) return false ; Index index1 = ( Index ) o ; return name . equals ( index1 . name ) ; } @Override public int hashCode ( ) { return name . hashCode ( ) ; } public static Index readIndexName ( StreamInput in ) throws IOException { Index index = new Index ( ) ; index . readFrom ( in ) ; return index ; } @Override public void readFrom ( StreamInput in ) throws IOException { name = in . readString ( ) . intern ( ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { out . writeString ( name ) ; } } 
