package io . netty . handler . codec ; import io . netty . buffer . ByteBuf ; import io . netty . channel . ChannelHandlerContext ; import java . util . List ; public class FixedLengthFrameDecoder extends ByteToMessageDecoder { private final int frameLength ; public FixedLengthFrameDecoder ( int frameLength ) { if ( frameLength < = <int> ) { throw new IllegalArgumentException ( <str> + frameLength ) ; } this . frameLength = frameLength ; } @Override protected final void decode ( ChannelHandlerContext ctx , ByteBuf in , List < Object > out ) throws Exception { Object decoded = decode ( ctx , in ) ; if ( decoded ! = null ) { out . add ( decoded ) ; } } protected Object decode ( @SuppressWarnings ( <str> ) ChannelHandlerContext ctx , ByteBuf in ) throws Exception { if ( in . readableBytes ( ) < frameLength ) { return null ; } else { return in . readSlice ( frameLength ) . retain ( ) ; } } } 
