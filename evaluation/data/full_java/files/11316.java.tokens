package org . gradle . api . internal ; import org . gradle . api . Action ; import org . gradle . api . Transformer ; import org . gradle . api . UncheckedIOException ; import org . gradle . listener . ActionBroadcast ; import java . io . IOException ; import java . io . OutputStream ; import java . util . Properties ; public class PropertiesTransformer implements Transformer < Properties , Properties > { private final ActionBroadcast < Properties > actions = new ActionBroadcast < Properties > ( ) ; public void addAction ( Action < ? super Properties > action ) { actions . add ( action ) ; } public Properties transform ( Properties original ) { return doTransform ( original ) ; } public void transform ( Properties original , OutputStream destination ) { try { doTransform ( original ) . store ( destination , <str> ) ; } catch ( IOException e ) { throw new UncheckedIOException ( e ) ; } } private Properties doTransform ( Properties original ) { actions . execute ( original ) ; return original ; } } 
