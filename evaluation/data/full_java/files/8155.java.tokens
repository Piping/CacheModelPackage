package org . elasticsearch . index . mapper . core ; import org . elasticsearch . index . mapper . FieldTypeTestCase ; import org . elasticsearch . index . mapper . MappedFieldType ; import org . elasticsearch . search . suggest . completion . context . ContextBuilder ; import org . elasticsearch . search . suggest . completion . context . ContextMappings ; import org . junit . Before ; import java . util . Arrays ; public class CompletionFieldTypeTests extends FieldTypeTestCase { @Override protected MappedFieldType createDefaultFieldType ( ) { return new CompletionFieldMapper . CompletionFieldType ( ) ; } @Before public void setupProperties ( ) { addModifier ( new Modifier ( <str> , false , true ) { @Override public void modify ( MappedFieldType ft ) { CompletionFieldMapper . CompletionFieldType cft = ( CompletionFieldMapper . CompletionFieldType ) ft ; cft . setPreserveSep ( false ) ; } } ) ; addModifier ( new Modifier ( <str> , false , true ) { @Override public void modify ( MappedFieldType ft ) { CompletionFieldMapper . CompletionFieldType cft = ( CompletionFieldMapper . CompletionFieldType ) ft ; cft . setPreservePositionIncrements ( false ) ; } } ) ; addModifier ( new Modifier ( <str> , false , true ) { @Override public void modify ( MappedFieldType ft ) { CompletionFieldMapper . CompletionFieldType cft = ( CompletionFieldMapper . CompletionFieldType ) ft ; ContextMappings contextMappings = new ContextMappings ( Arrays . asList ( ContextBuilder . category ( <str> ) . build ( ) , ContextBuilder . geo ( <str> ) . build ( ) ) ) ; cft . setContextMappings ( contextMappings ) ; } } ) ; } } 
