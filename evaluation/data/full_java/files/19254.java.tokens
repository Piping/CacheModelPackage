package io . netty . handler . codec . spdy ; public class SpdySessionStatus implements Comparable < SpdySessionStatus > { public static final SpdySessionStatus OK = new SpdySessionStatus ( <int> , <str> ) ; public static final SpdySessionStatus PROTOCOL_ERROR = new SpdySessionStatus ( <int> , <str> ) ; public static final SpdySessionStatus INTERNAL_ERROR = new SpdySessionStatus ( <int> , <str> ) ; public static SpdySessionStatus valueOf ( int code ) { switch ( code ) { case <int> : return OK ; case <int> : return PROTOCOL_ERROR ; case <int> : return INTERNAL_ERROR ; } return new SpdySessionStatus ( code , <str> + code + <str> ) ; } private final int code ; private final String statusPhrase ; public SpdySessionStatus ( int code , String statusPhrase ) { if ( statusPhrase = = null ) { throw new NullPointerException ( <str> ) ; } this . code = code ; this . statusPhrase = statusPhrase ; } public int code ( ) { return code ; } public String statusPhrase ( ) { return statusPhrase ; } @Override public int hashCode ( ) { return code ( ) ; } @Override public boolean equals ( Object o ) { if ( ! ( o instanceof SpdySessionStatus ) ) { return false ; } return code ( ) = = ( ( SpdySessionStatus ) o ) . code ( ) ; } @Override public String toString ( ) { return statusPhrase ( ) ; } @Override public int compareTo ( SpdySessionStatus o ) { return code ( ) - o . code ( ) ; } } 
