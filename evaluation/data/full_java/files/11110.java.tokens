package org . gradle . api ; import groovy . lang . Closure ; import org . gradle . api . file . ConfigurableFileCollection ; import org . gradle . api . file . ConfigurableFileTree ; import org . gradle . api . file . CopySpec ; import org . gradle . api . file . FileTree ; import org . gradle . api . initialization . dsl . ScriptHandler ; import org . gradle . api . logging . Logger ; import org . gradle . api . logging . LoggingManager ; import org . gradle . api . resources . ResourceHandler ; import org . gradle . api . tasks . WorkResult ; import org . gradle . process . ExecResult ; import org . gradle . process . ExecSpec ; import org . gradle . process . JavaExecSpec ; import java . io . File ; import java . net . URI ; import java . util . Map ; public interface Script { void apply ( Closure closure ) ; void apply ( Map < String , ? > options ) ; ScriptHandler getBuildscript ( ) ; void buildscript ( Closure configureClosure ) ; File file ( Object path ) ; File file ( Object path , PathValidation validation ) throws InvalidUserDataException ; URI uri ( Object path ) ; ConfigurableFileCollection files ( Object . . . paths ) ; ConfigurableFileCollection files ( Object paths , Closure configureClosure ) ; String relativePath ( Object path ) ; ConfigurableFileTree fileTree ( Object baseDir ) ; ConfigurableFileTree fileTree ( Map < String , ? > args ) ; ConfigurableFileTree fileTree ( Object baseDir , Closure configureClosure ) ; FileTree zipTree ( Object zipPath ) ; FileTree tarTree ( Object tarPath ) ; WorkResult copy ( Closure closure ) ; CopySpec copySpec ( Closure closure ) ; File mkdir ( Object path ) ; boolean delete ( Object . . . paths ) ; ExecResult javaexec ( Closure closure ) ; ExecResult javaexec ( Action < ? super JavaExecSpec > action ) ; ExecResult exec ( Closure closure ) ; ExecResult exec ( Action < ? super ExecSpec > action ) ; LoggingManager getLogging ( ) ; Logger getLogger ( ) ; ResourceHandler getResources ( ) ; } 
