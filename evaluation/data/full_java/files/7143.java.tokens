package org . elasticsearch . search . aggregations ; import org . elasticsearch . common . xcontent . XContentBuilder ; import org . elasticsearch . script . Script ; import org . elasticsearch . script . ScriptService . ScriptType ; import java . io . IOException ; import java . util . Map ; public abstract class ValuesSourceAggregationBuilder < B extends ValuesSourceAggregationBuilder < B > > extends AggregationBuilder < B > { private Script script ; private String field ; @Deprecated private String scriptString ; @Deprecated private String lang ; @Deprecated private Map < String , Object > params ; private Object missing ; protected ValuesSourceAggregationBuilder ( String name , String type ) { super ( name , type ) ; } @SuppressWarnings ( <str> ) public B field ( String field ) { this . field = field ; return ( B ) this ; } @SuppressWarnings ( <str> ) public B script ( Script script ) { this . script = script ; return ( B ) this ; } public B missing ( Object missingValue ) { this . missing = missingValue ; return ( B ) this ; } @Override protected final XContentBuilder internalXContent ( XContentBuilder builder , Params builderParams ) throws IOException { builder . startObject ( ) ; if ( field ! = null ) { builder . field ( <str> , field ) ; } if ( script = = null ) { if ( scriptString ! = null ) { builder . field ( <str> , new Script ( scriptString , ScriptType . INLINE , lang , params ) ) ; } } else { builder . field ( <str> , script ) ; } if ( missing ! = null ) { builder . field ( <str> , missing ) ; } doInternalXContent ( builder , builderParams ) ; return builder . endObject ( ) ; } protected abstract XContentBuilder doInternalXContent ( XContentBuilder builder , Params params ) throws IOException ; } 
