package org . apache . cassandra . db . commitlog ; import org . apache . cassandra . config . DatabaseDescriptor ; import org . apache . cassandra . utils . concurrent . WaitQueue ; class PeriodicCommitLogService extends AbstractCommitLogService { private static final int blockWhenSyncLagsMillis = ( int ) ( DatabaseDescriptor . getCommitLogSyncPeriod ( ) * <float> ) ; public PeriodicCommitLogService ( final CommitLog commitLog ) { super ( commitLog , <str> , DatabaseDescriptor . getCommitLogSyncPeriod ( ) ) ; } protected void maybeWaitForSync ( CommitLogSegment . Allocation alloc ) { if ( waitForSyncToCatchUp ( Long . MAX_VALUE ) ) { long started = System . currentTimeMillis ( ) ; pending . incrementAndGet ( ) ; while ( waitForSyncToCatchUp ( started ) ) { WaitQueue . Signal signal = syncComplete . register ( commitLog . metrics . waitingOnCommit . time ( ) ) ; if ( waitForSyncToCatchUp ( started ) ) signal . awaitUninterruptibly ( ) ; else signal . cancel ( ) ; } pending . decrementAndGet ( ) ; } } private boolean waitForSyncToCatchUp ( long started ) { return started > lastSyncedAt + blockWhenSyncLagsMillis ; } } 
