package com . google . common . collect ; import static com . google . common . base . Preconditions . checkArgument ; import com . google . common . collect . testing . features . CollectionFeature ; import com . google . common . collect . testing . features . CollectionSize ; import com . google . common . collect . testing . features . MapFeature ; import com . google . common . collect . testing . google . SetMultimapTestSuiteBuilder ; import com . google . common . collect . testing . google . TestStringSetMultimapGenerator ; import junit . framework . Test ; import junit . framework . TestCase ; import java . io . Serializable ; import java . util . Map . Entry ; public class ConstrainedSetMultimapTest extends TestCase { private enum Constraint implements Serializable , MapConstraint < String , String > { INSTANCE ; @Override public void checkKeyValue ( String key , String value ) { checkArgument ( ! <str> . equals ( key ) ) ; checkArgument ( ! <str> . equals ( value ) ) ; } } public static Test suite ( ) { return SetMultimapTestSuiteBuilder . using ( new TestStringSetMultimapGenerator ( ) { @Override protected SetMultimap < String , String > create ( Entry < String , String > [ ] entries ) { SetMultimap < String , String > multimap = HashMultimap . create ( ) ; for ( Entry < String , String > entry : entries ) { multimap . put ( entry . getKey ( ) , entry . getValue ( ) ) ; } return MapConstraints . constrainedSetMultimap ( multimap , Constraint . INSTANCE ) ; } } ) . named ( <str> ) . withFeatures ( MapFeature . ALLOWS_NULL_KEYS , MapFeature . ALLOWS_NULL_VALUES , MapFeature . ALLOWS_ANY_NULL_QUERIES , MapFeature . GENERAL_PURPOSE , CollectionSize . ANY , CollectionFeature . SERIALIZABLE , CollectionFeature . SUPPORTS_ITERATOR_REMOVE ) . createTestSuite ( ) ; } } 
