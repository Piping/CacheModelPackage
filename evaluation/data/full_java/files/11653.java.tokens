package org . gradle . api . internal . project . antbuilder ; import org . gradle . api . internal . classloading . GroovySystemLoader ; import org . gradle . internal . classpath . ClassPath ; import java . lang . ref . PhantomReference ; import java . lang . ref . ReferenceQueue ; public class Cleanup extends PhantomReference < CachedClassLoader > { private final ClassPath key ; private final ClassLoader classLoader ; private final GroovySystemLoader groovySystemForClassLoader ; private final GroovySystemLoader gradleApiGroovyLoader ; private final GroovySystemLoader antBuilderGroovyLoader ; public Cleanup ( ClassPath classPath , CachedClassLoader cachedClassLoader , ReferenceQueue < CachedClassLoader > referenceQueue , ClassLoader classLoader , GroovySystemLoader groovySystemForClassLoader , GroovySystemLoader gradleApiGroovyLoader , GroovySystemLoader antBuilderGroovyLoader ) { super ( cachedClassLoader , referenceQueue ) ; this . groovySystemForClassLoader = groovySystemForClassLoader ; this . gradleApiGroovyLoader = gradleApiGroovyLoader ; this . antBuilderGroovyLoader = antBuilderGroovyLoader ; this . key = classPath ; this . classLoader = classLoader ; } public ClassPath getKey ( ) { return key ; } public void cleanup ( ) { groovySystemForClassLoader . shutdown ( ) ; gradleApiGroovyLoader . discardTypesFrom ( classLoader ) ; antBuilderGroovyLoader . discardTypesFrom ( classLoader ) ; } } 
