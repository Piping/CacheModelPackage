package org . gradle . execution ; import org . gradle . api . BuildCancelledException ; import org . gradle . api . Project ; import org . gradle . api . internal . project . ProjectInternal ; import org . gradle . initialization . BuildCancellationToken ; public class TaskPathProjectEvaluator implements ProjectConfigurer { private final BuildCancellationToken cancellationToken ; public TaskPathProjectEvaluator ( BuildCancellationToken cancellationToken ) { this . cancellationToken = cancellationToken ; } public void configure ( ProjectInternal project ) { if ( cancellationToken . isCancellationRequested ( ) ) { throw new BuildCancelledException ( ) ; } project . evaluate ( ) ; } public void configureHierarchy ( ProjectInternal project ) { if ( cancellationToken . isCancellationRequested ( ) ) { throw new BuildCancelledException ( ) ; } project . evaluate ( ) ; for ( Project sub : project . getSubprojects ( ) ) { if ( cancellationToken . isCancellationRequested ( ) ) { throw new BuildCancelledException ( ) ; } ( ( ProjectInternal ) sub ) . evaluate ( ) ; } } } 
