package org . nd4j . linalg . api . ops ; import lombok . NoArgsConstructor ; import org . nd4j . linalg . api . ndarray . INDArray ; @NoArgsConstructor public abstract class BaseBroadcastOp extends BaseOp implements BroadcastOp { protected int [ ] dimension ; public BaseBroadcastOp ( INDArray x , INDArray y , INDArray z , int . . . dimension ) { super ( x , y , z , x . length ( ) ) ; this . dimension = dimension ; for ( int i = <int> ; i < dimension . length ; i + + ) if ( dimension [ i ] < <int> ) dimension [ i ] + = x . rank ( ) ; } public BaseBroadcastOp ( INDArray x , INDArray y , INDArray z , int n ) { this ( x , y , z , new int [ ] { n } ) ; } @Override public int broadcastLength ( ) { if ( y = = null ) throw new IllegalStateException ( <str> ) ; return y . length ( ) ; } @Override public int [ ] broadcastShape ( ) { if ( y = = null ) throw new IllegalStateException ( <str> ) ; return y . shape ( ) ; } @Override public int [ ] getDimension ( ) { return dimension ; } @Override public void setDimension ( int . . . dimension ) { this . dimension = dimension ; } @Override public Op opForDimension ( int index , int dimension ) { throw new UnsupportedOperationException ( <str> ) ; } @Override public Op opForDimension ( int index , int . . . dimension ) { throw new UnsupportedOperationException ( <str> ) ; } } 
