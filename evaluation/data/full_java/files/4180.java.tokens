package org . eclipse . debug . internal . ui . importexport . breakpoints ; import org . eclipse . debug . core . DebugException ; import org . eclipse . debug . core . DebugPlugin ; import org . eclipse . debug . internal . ui . DebugUIPlugin ; import org . eclipse . debug . internal . ui . actions . AbstractDebugActionDelegate ; import org . eclipse . debug . ui . IDebugUIConstants ; import org . eclipse . jface . action . IAction ; import org . eclipse . jface . viewers . ISelection ; import org . eclipse . jface . viewers . IStructuredSelection ; import org . eclipse . jface . wizard . WizardDialog ; import org . eclipse . ui . IViewPart ; public class ExportBreakpoints extends AbstractDebugActionDelegate { @Override public void run ( IAction action ) { IViewPart fViewpart = DebugUIPlugin . getActiveWorkbenchWindow ( ) . getActivePage ( ) . findView ( IDebugUIConstants . ID_BREAKPOINT_VIEW ) ; WizardExportBreakpoints wiz = new WizardExportBreakpoints ( ) ; wiz . init ( DebugUIPlugin . getDefault ( ) . getWorkbench ( ) , ( IStructuredSelection ) fViewpart . getViewSite ( ) . getSelectionProvider ( ) . getSelection ( ) ) ; WizardDialog wizdialog = new WizardDialog ( DebugUIPlugin . getShell ( ) , wiz ) ; wizdialog . setBlockOnOpen ( true ) ; wizdialog . open ( ) ; } @Override protected void update ( IAction action , ISelection s ) { getAction ( ) . setEnabled ( DebugPlugin . getDefault ( ) . getBreakpointManager ( ) . hasBreakpoints ( ) ) ; } @Override protected void doAction ( Object element ) throws DebugException { } } 
