package com . badlogic . gdx . physics . box2d . joints ; import com . badlogic . gdx . math . Vector2 ; import com . badlogic . gdx . physics . box2d . JointDef ; public class RopeJointDef extends JointDef { public RopeJointDef ( ) { type = JointType . RopeJoint ; } public final Vector2 localAnchorA = new Vector2 ( - <int> , <int> ) ; public final Vector2 localAnchorB = new Vector2 ( <int> , <int> ) ; public float maxLength = <int> ; @Override public org . jbox2d . dynamics . joints . JointDef toJBox2d ( ) { org . jbox2d . dynamics . joints . RopeJointDef fd = new org . jbox2d . dynamics . joints . RopeJointDef ( ) ; fd . bodyA = bodyA . body ; fd . bodyB = bodyB . body ; fd . collideConnected = collideConnected ; fd . maxLength = maxLength ; fd . localAnchorA . set ( localAnchorA . x , localAnchorA . y ) ; fd . localAnchorB . set ( localAnchorB . x , localAnchorB . y ) ; fd . type = org . jbox2d . dynamics . joints . JointType . ROPE ; return fd ; } } 
