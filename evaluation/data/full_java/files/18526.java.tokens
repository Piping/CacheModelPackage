package com . badlogic . gdx . tests ; import java . io . IOException ; import java . util . zip . Deflater ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . files . FileHandle ; import com . badlogic . gdx . graphics . GL20 ; import com . badlogic . gdx . graphics . Pixmap ; import com . badlogic . gdx . graphics . PixmapIO . PNG ; import com . badlogic . gdx . graphics . Texture ; import com . badlogic . gdx . graphics . g2d . SpriteBatch ; import com . badlogic . gdx . math . MathUtils ; import com . badlogic . gdx . tests . utils . GdxTest ; import com . badlogic . gdx . utils . ScreenUtils ; public class PngTest extends GdxTest { SpriteBatch batch ; Texture badlogic , screenshot ; public void create ( ) { batch = new SpriteBatch ( ) ; badlogic = new Texture ( Gdx . files . internal ( <str> ) ) ; } public void render ( ) { Gdx . gl . glClear ( GL20 . GL_COLOR_BUFFER_BIT ) ; batch . begin ( ) ; if ( screenshot = = null ) { int width = Gdx . graphics . getWidth ( ) , height = Gdx . graphics . getHeight ( ) ; for ( int i = <int> ; i < <int> ; i + + ) batch . draw ( badlogic , MathUtils . random ( width ) , MathUtils . random ( height ) ) ; batch . flush ( ) ; FileHandle file = FileHandle . tempFile ( <str> ) ; System . out . println ( file . file ( ) . getAbsolutePath ( ) ) ; Pixmap pixmap = ScreenUtils . getFrameBufferPixmap ( <int> , <int> , Gdx . graphics . getWidth ( ) , Gdx . graphics . getHeight ( ) ) ; try { PNG writer = new PNG ( ( int ) ( pixmap . getWidth ( ) * pixmap . getHeight ( ) * <float> ) ) ; writer . write ( file , pixmap ) ; writer . write ( file , pixmap ) ; writer . dispose ( ) ; } catch ( IOException ex ) { throw new RuntimeException ( ex ) ; } screenshot = new Texture ( file ) ; } batch . draw ( screenshot , <int> , <int> ) ; batch . end ( ) ; } } 
