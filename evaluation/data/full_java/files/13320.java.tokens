package org . gradle . util ; import org . junit . rules . MethodRule ; import org . junit . runners . model . FrameworkMethod ; import org . junit . runners . model . Statement ; public class ExpectedFailureRule implements MethodRule { @Override public Statement apply ( final Statement base , final FrameworkMethod method , Object target ) { return new Statement ( ) { @Override public void evaluate ( ) throws Throwable { boolean expectedToFail = method . getAnnotation ( ExpectedFailure . class ) ! = null ; boolean failed = false ; try { base . evaluate ( ) ; } catch ( Throwable t ) { failed = true ; if ( ! expectedToFail ) { throw t ; } } if ( expectedToFail & & ! failed ) { throw new AssertionError ( <str> ) ; } } } ; } } 
