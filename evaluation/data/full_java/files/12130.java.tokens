package org . gradle . internal . typeconversion ; import org . gradle . internal . exceptions . DiagnosticsVisitor ; class CharSequenceNotationConverter < N , T > implements NotationConverter < N , T > { private final NotationConverter < String , ? extends T > delegate ; public CharSequenceNotationConverter ( NotationConverter < String , ? extends T > delegate ) { this . delegate = delegate ; } public void convert ( N notation , NotationConvertResult < ? super T > result ) throws TypeConversionException { if ( notation instanceof CharSequence ) { CharSequence charSequence = ( CharSequence ) notation ; delegate . convert ( charSequence . toString ( ) , result ) ; } } @Override public void describe ( DiagnosticsVisitor visitor ) { delegate . describe ( visitor ) ; } } 
