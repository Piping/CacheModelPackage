package org . apache . cassandra . cql3 . selection ; import java . nio . ByteBuffer ; import java . util . List ; import org . apache . cassandra . cql3 . functions . AggregateFunction ; import org . apache . cassandra . cql3 . functions . Function ; import org . apache . cassandra . cql3 . selection . Selection . ResultSetBuilder ; import org . apache . cassandra . exceptions . InvalidRequestException ; final class AggregateFunctionSelector extends AbstractFunctionSelector < AggregateFunction > { private final AggregateFunction . Aggregate aggregate ; public boolean isAggregate ( ) { return true ; } public void addInput ( int protocolVersion , ResultSetBuilder rs ) throws InvalidRequestException { for ( int i = <int> , m = argSelectors . size ( ) ; i < m ; i + + ) { Selector s = argSelectors . get ( i ) ; s . addInput ( protocolVersion , rs ) ; args . set ( i , s . getOutput ( protocolVersion ) ) ; s . reset ( ) ; } this . aggregate . addInput ( protocolVersion , args ) ; } public ByteBuffer getOutput ( int protocolVersion ) throws InvalidRequestException { return aggregate . compute ( protocolVersion ) ; } public void reset ( ) { aggregate . reset ( ) ; } AggregateFunctionSelector ( Function fun , List < Selector > argSelectors ) throws InvalidRequestException { super ( ( AggregateFunction ) fun , argSelectors ) ; this . aggregate = this . fun . newAggregate ( ) ; } } 
