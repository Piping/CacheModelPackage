package com . badlogic . gdx . scenes . scene2d . ui ; import com . badlogic . gdx . graphics . g2d . Batch ; import com . badlogic . gdx . scenes . scene2d . Actor ; import com . badlogic . gdx . scenes . scene2d . Group ; import com . badlogic . gdx . scenes . scene2d . Stage ; import com . badlogic . gdx . scenes . scene2d . utils . Layout ; public class Widget extends Actor implements Layout { private boolean needsLayout = true ; private boolean fillParent ; private boolean layoutEnabled = true ; public float getMinWidth ( ) { return getPrefWidth ( ) ; } public float getMinHeight ( ) { return getPrefHeight ( ) ; } public float getPrefWidth ( ) { return <int> ; } public float getPrefHeight ( ) { return <int> ; } public float getMaxWidth ( ) { return <int> ; } public float getMaxHeight ( ) { return <int> ; } public void setLayoutEnabled ( boolean enabled ) { layoutEnabled = enabled ; if ( enabled ) invalidateHierarchy ( ) ; } public void validate ( ) { if ( ! layoutEnabled ) return ; Group parent = getParent ( ) ; if ( fillParent & & parent ! = null ) { float parentWidth , parentHeight ; Stage stage = getStage ( ) ; if ( stage ! = null & & parent = = stage . getRoot ( ) ) { parentWidth = stage . getWidth ( ) ; parentHeight = stage . getHeight ( ) ; } else { parentWidth = parent . getWidth ( ) ; parentHeight = parent . getHeight ( ) ; } setSize ( parentWidth , parentHeight ) ; } if ( ! needsLayout ) return ; needsLayout = false ; layout ( ) ; } public boolean needsLayout ( ) { return needsLayout ; } public void invalidate ( ) { needsLayout = true ; } public void invalidateHierarchy ( ) { if ( ! layoutEnabled ) return ; invalidate ( ) ; Group parent = getParent ( ) ; if ( parent instanceof Layout ) ( ( Layout ) parent ) . invalidateHierarchy ( ) ; } protected void sizeChanged ( ) { invalidate ( ) ; } public void pack ( ) { setSize ( getPrefWidth ( ) , getPrefHeight ( ) ) ; validate ( ) ; } public void setFillParent ( boolean fillParent ) { this . fillParent = fillParent ; } public void draw ( Batch batch , float parentAlpha ) { validate ( ) ; } public void layout ( ) { } } 
