package com . badlogic . gdx . tests . net ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import com . badlogic . gdx . ApplicationAdapter ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . Net . Protocol ; import com . badlogic . gdx . net . ServerSocket ; import com . badlogic . gdx . net . ServerSocketHints ; import com . badlogic . gdx . net . Socket ; import com . badlogic . gdx . net . SocketHints ; import com . badlogic . gdx . tests . utils . GdxTest ; public class PingPongSocketExample extends GdxTest { @Override public void create ( ) { new Thread ( new Runnable ( ) { @Override public void run ( ) { ServerSocketHints hints = new ServerSocketHints ( ) ; ServerSocket server = Gdx . net . newServerSocket ( Protocol . TCP , <str> , <int> , hints ) ; Socket client = server . accept ( null ) ; try { String message = new BufferedReader ( new InputStreamReader ( client . getInputStream ( ) ) ) . readLine ( ) ; Gdx . app . log ( <str> , <str> + message ) ; client . getOutputStream ( ) . write ( <str> . getBytes ( ) ) ; } catch ( IOException e ) { Gdx . app . log ( <str> , <str> , e ) ; } } } ) . start ( ) ; SocketHints hints = new SocketHints ( ) ; Socket client = Gdx . net . newClientSocket ( Protocol . TCP , <str> , <int> , hints ) ; try { client . getOutputStream ( ) . write ( <str> . getBytes ( ) ) ; String response = new BufferedReader ( new InputStreamReader ( client . getInputStream ( ) ) ) . readLine ( ) ; Gdx . app . log ( <str> , <str> + response ) ; } catch ( IOException e ) { Gdx . app . log ( <str> , <str> , e ) ; } } } 
