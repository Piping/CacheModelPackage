package com . badlogic . gdx . backends . android ; import java . lang . reflect . Constructor ; import android . content . Context ; import com . badlogic . gdx . Application ; public class AndroidInputFactory { public static AndroidInput newAndroidInput ( Application activity , Context context , Object view , AndroidApplicationConfiguration config ) { try { Class < ? > clazz = null ; AndroidInput input = null ; int sdkVersion = android . os . Build . VERSION . SDK_INT ; if ( sdkVersion > = <int> ) { clazz = Class . forName ( <str> ) ; } else { clazz = Class . forName ( <str> ) ; } Constructor < ? > constructor = clazz . getConstructor ( Application . class , Context . class , Object . class , AndroidApplicationConfiguration . class ) ; input = ( AndroidInput ) constructor . newInstance ( activity , context , view , config ) ; return input ; } catch ( Exception e ) { throw new RuntimeException ( <str> , e ) ; } } } 
