package org . elasticsearch . search . fetch ; import com . carrotsearch . hppc . IntArrayList ; import org . apache . lucene . search . ScoreDoc ; import org . elasticsearch . action . IndicesRequest ; import org . elasticsearch . action . OriginalIndices ; import org . elasticsearch . action . search . SearchRequest ; import org . elasticsearch . action . support . IndicesOptions ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import java . io . IOException ; public class ShardFetchSearchRequest extends ShardFetchRequest implements IndicesRequest { private OriginalIndices originalIndices ; public ShardFetchSearchRequest ( ) { } public ShardFetchSearchRequest ( SearchRequest request , long id , IntArrayList list ) { this ( request , id , list , null ) ; } public ShardFetchSearchRequest ( SearchRequest request , long id , IntArrayList list , ScoreDoc lastEmittedDoc ) { super ( request , id , list , lastEmittedDoc ) ; this . originalIndices = new OriginalIndices ( request ) ; } @Override public String [ ] indices ( ) { if ( originalIndices = = null ) { return null ; } return originalIndices . indices ( ) ; } @Override public IndicesOptions indicesOptions ( ) { if ( originalIndices = = null ) { return null ; } return originalIndices . indicesOptions ( ) ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; originalIndices = OriginalIndices . readOriginalIndices ( in ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; OriginalIndices . writeOriginalIndices ( originalIndices , out ) ; } } 
