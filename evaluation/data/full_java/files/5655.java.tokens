package org . elasticsearch . common ; import java . util . EnumSet ; import java . util . HashSet ; public class ParseField { private final String camelCaseName ; private final String underscoreName ; private final String [ ] deprecatedNames ; private String allReplacedWith = null ; static final EnumSet < Flag > EMPTY_FLAGS = EnumSet . noneOf ( Flag . class ) ; static final EnumSet < Flag > STRICT_FLAGS = EnumSet . of ( Flag . STRICT ) ; enum Flag { STRICT } public ParseField ( String value , String . . . deprecatedNames ) { camelCaseName = Strings . toCamelCase ( value ) ; underscoreName = Strings . toUnderscoreCase ( value ) ; if ( deprecatedNames = = null | | deprecatedNames . length = = <int> ) { this . deprecatedNames = Strings . EMPTY_ARRAY ; } else { final HashSet < String > set = new HashSet < > ( ) ; for ( String depName : deprecatedNames ) { set . add ( Strings . toCamelCase ( depName ) ) ; set . add ( Strings . toUnderscoreCase ( depName ) ) ; } this . deprecatedNames = set . toArray ( new String [ set . size ( ) ] ) ; } } public String getPreferredName ( ) { return underscoreName ; } public String [ ] getAllNamesIncludedDeprecated ( ) { String [ ] allNames = new String [ <int> + deprecatedNames . length ] ; allNames [ <int> ] = camelCaseName ; allNames [ <int> ] = underscoreName ; for ( int i = <int> ; i < deprecatedNames . length ; i + + ) { allNames [ i + <int> ] = deprecatedNames [ i ] ; } return allNames ; } public ParseField withDeprecation ( String . . . deprecatedNames ) { return new ParseField ( this . underscoreName , deprecatedNames ) ; } public ParseField withAllDeprecated ( String allReplacedWith ) { ParseField parseField = this . withDeprecation ( getAllNamesIncludedDeprecated ( ) ) ; parseField . allReplacedWith = allReplacedWith ; return parseField ; } boolean match ( String currentFieldName , EnumSet < Flag > flags ) { if ( allReplacedWith = = null & & ( currentFieldName . equals ( camelCaseName ) | | currentFieldName . equals ( underscoreName ) ) ) { return true ; } String msg ; for ( String depName : deprecatedNames ) { if ( currentFieldName . equals ( depName ) ) { if ( flags . contains ( Flag . STRICT ) ) { msg = <str> + currentFieldName + <str> + underscoreName + <str> ; if ( allReplacedWith ! = null ) { msg = <str> + currentFieldName + <str> + allReplacedWith + <str> ; } throw new IllegalArgumentException ( msg ) ; } return true ; } } return false ; } @Override public String toString ( ) { return getPreferredName ( ) ; } public String getAllReplacedWith ( ) { return allReplacedWith ; } public String getCamelCaseName ( ) { return camelCaseName ; } public String [ ] getDeprecatedNames ( ) { return deprecatedNames ; } } 
