package com . badlogic . gdx . jglfw . tests ; import java . awt . BorderLayout ; import java . awt . HeadlessException ; import java . awt . event . ActionEvent ; import java . awt . event . ActionListener ; import java . awt . event . KeyAdapter ; import java . awt . event . KeyEvent ; import java . awt . event . MouseAdapter ; import java . awt . event . MouseEvent ; import javax . swing . DefaultListSelectionModel ; import javax . swing . JButton ; import javax . swing . JFrame ; import javax . swing . JList ; import javax . swing . JPanel ; import javax . swing . JScrollPane ; import javax . swing . ListSelectionModel ; import javax . swing . UIManager ; import com . badlogic . gdx . LifecycleListener ; import com . badlogic . gdx . Preferences ; import com . badlogic . gdx . backends . jglfw . JglfwApplication ; import com . badlogic . gdx . backends . jglfw . JglfwApplicationConfiguration ; import com . badlogic . gdx . backends . jglfw . JglfwFiles ; import com . badlogic . gdx . backends . jglfw . JglfwPreferences ; import com . badlogic . gdx . files . FileHandle ; import com . badlogic . gdx . tests . utils . GdxTest ; import com . badlogic . gdx . tests . utils . GdxTests ; import com . badlogic . gdx . utils . GdxRuntimeException ; public class JglfwTestStarter extends JFrame { public JglfwTestStarter ( ) throws HeadlessException { super ( <str> ) ; setDefaultCloseOperation ( JFrame . EXIT_ON_CLOSE ) ; setContentPane ( new TestList ( ) ) ; pack ( ) ; setSize ( getWidth ( ) , <int> ) ; setLocationRelativeTo ( null ) ; setVisible ( true ) ; } public static JglfwApplication runTest ( String testName ) { final GdxTest test = GdxTests . newTest ( testName ) ; if ( test = = null ) throw new GdxRuntimeException ( <str> + testName ) ; final JglfwApplicationConfiguration config = new JglfwApplicationConfiguration ( ) ; config . width = <int> ; config . height = <int> ; config . title = testName ; config . forceExit = false ; return new JglfwApplication ( test , config ) ; } class TestList extends JPanel { public TestList ( ) { setLayout ( new BorderLayout ( ) ) ; final JButton button = new JButton ( <str> ) ; final JList list = new JList ( GdxTests . getNames ( ) . toArray ( ) ) ; JScrollPane pane = new JScrollPane ( list ) ; DefaultListSelectionModel m = new DefaultListSelectionModel ( ) ; m . setSelectionMode ( ListSelectionModel . SINGLE_SELECTION ) ; m . setLeadAnchorNotificationEnabled ( false ) ; list . setSelectionModel ( m ) ; list . addMouseListener ( new MouseAdapter ( ) { public void mouseClicked ( MouseEvent event ) { if ( event . getClickCount ( ) = = <int> ) button . doClick ( ) ; } } ) ; list . addKeyListener ( new KeyAdapter ( ) { public void keyPressed ( KeyEvent e ) { if ( e . getKeyCode ( ) = = KeyEvent . VK_ENTER ) button . doClick ( ) ; } } ) ; final Preferences prefs = new JglfwPreferences ( new FileHandle ( new JglfwFiles ( ) . getExternalStoragePath ( ) + <str> ) ) ; list . setSelectedValue ( prefs . getString ( <str> , null ) , true ) ; button . addActionListener ( new ActionListener ( ) { @Override public void actionPerformed ( ActionEvent e ) { String testName = ( String ) list . getSelectedValue ( ) ; prefs . putString ( <str> , testName ) ; prefs . flush ( ) ; JglfwTestStarter . this . setVisible ( false ) ; runTest ( testName ) . addLifecycleListener ( new LifecycleListener ( ) { public void resume ( ) { } public void pause ( ) { } public void dispose ( ) { JglfwTestStarter . this . setVisible ( true ) ; } } ) ; } } ) ; add ( pane , BorderLayout . CENTER ) ; add ( button , BorderLayout . SOUTH ) ; } } public static void main ( String [ ] argv ) throws Exception { if ( argv . length > <int> ) { runTest ( argv [ <int> ] ) ; return ; } UIManager . setLookAndFeel ( UIManager . getSystemLookAndFeelClassName ( ) ) ; new JglfwTestStarter ( ) ; } } 
