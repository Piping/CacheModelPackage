package org . gradle . jvm . internal ; import groovy . lang . Closure ; import org . gradle . api . InvalidUserDataException ; import org . gradle . jvm . JvmApiSpec ; import org . gradle . platform . base . DependencySpecContainer ; import org . gradle . platform . base . internal . DefaultDependencySpecContainer ; import org . gradle . util . ConfigureUtil ; import java . util . HashSet ; import java . util . Set ; import static java . lang . String . format ; public class DefaultJvmApiSpec implements JvmApiSpec { private final Set < String > exports = new HashSet < String > ( ) ; private final DefaultDependencySpecContainer dependencies = new DefaultDependencySpecContainer ( ) ; @Override public void exports ( String value ) { validatePackageName ( value ) ; if ( ! exports . add ( value ) ) { throw new InvalidUserDataException ( format ( <str> , value ) ) ; } } private void validatePackageName ( String value ) { try { JvmPackageName . of ( value ) ; } catch ( IllegalArgumentException cause ) { throw new InvalidUserDataException ( format ( <str> , cause . getMessage ( ) ) , cause ) ; } } @Override public Set < String > getExports ( ) { return exports ; } @Override public DependencySpecContainer getDependencies ( ) { return dependencies ; } @Override public void dependencies ( Closure < ? > configureAction ) { ConfigureUtil . configure ( configureAction , dependencies ) ; } } 
