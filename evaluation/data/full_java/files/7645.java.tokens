package org . elasticsearch . transport ; import org . elasticsearch . cluster . node . DiscoveryNode ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import java . io . IOException ; public class ConnectTransportException extends ActionTransportException { private final DiscoveryNode node ; public ConnectTransportException ( DiscoveryNode node , String msg ) { this ( node , msg , null , null ) ; } public ConnectTransportException ( DiscoveryNode node , String msg , String action ) { this ( node , msg , action , null ) ; } public ConnectTransportException ( DiscoveryNode node , String msg , Throwable cause ) { this ( node , msg , null , cause ) ; } public ConnectTransportException ( DiscoveryNode node , String msg , String action , Throwable cause ) { super ( node = = null ? null : node . name ( ) , node = = null ? null : node . address ( ) , action , msg , cause ) ; this . node = node ; } public ConnectTransportException ( StreamInput in ) throws IOException { super ( in ) ; if ( in . readBoolean ( ) ) { node = DiscoveryNode . readNode ( in ) ; } else { node = null ; } } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeOptionalStreamable ( node ) ; } public DiscoveryNode node ( ) { return node ; } } 
