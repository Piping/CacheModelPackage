package org . eclipse . debug . internal . ui . views . variables ; import org . eclipse . core . runtime . Assert ; import org . eclipse . debug . internal . ui . viewers . model . provisional . TreeModelViewer ; import org . eclipse . jface . util . LocalSelectionTransfer ; import org . eclipse . jface . util . TransferDragSourceListener ; import org . eclipse . jface . viewers . ISelection ; import org . eclipse . swt . dnd . DragSourceAdapter ; import org . eclipse . swt . dnd . DragSourceEvent ; import org . eclipse . swt . dnd . Transfer ; public class SelectionDragAdapter extends DragSourceAdapter implements TransferDragSourceListener { private TreeModelViewer fViewer ; public SelectionDragAdapter ( TreeModelViewer viewer ) { Assert . isNotNull ( viewer ) ; fViewer = viewer ; } @Override public Transfer getTransfer ( ) { return LocalSelectionTransfer . getTransfer ( ) ; } @Override public void dragStart ( DragSourceEvent event ) { ISelection selection = fViewer . getSelection ( ) ; LocalSelectionTransfer . getTransfer ( ) . setSelection ( selection ) ; LocalSelectionTransfer . getTransfer ( ) . setSelectionSetTime ( event . time & <hex> ) ; event . doit = ! selection . isEmpty ( ) ; } @Override public void dragSetData ( DragSourceEvent event ) { event . data = LocalSelectionTransfer . getTransfer ( ) . getSelection ( ) ; } @Override public void dragFinished ( DragSourceEvent event ) { LocalSelectionTransfer . getTransfer ( ) . setSelection ( null ) ; LocalSelectionTransfer . getTransfer ( ) . setSelectionSetTime ( <int> ) ; } } 
