package org . gradle . api . publish . maven . internal . publisher ; import org . gradle . api . artifacts . repositories . MavenArtifactRepository ; import java . util . concurrent . locks . Lock ; import java . util . concurrent . locks . ReentrantLock ; public class StaticLockingMavenPublisher implements MavenPublisher { private static final Lock STATIC_LOCK = new ReentrantLock ( ) ; private final MavenPublisher delegate ; public StaticLockingMavenPublisher ( MavenPublisher delegate ) { this . delegate = delegate ; } public void publish ( MavenNormalizedPublication publication , MavenArtifactRepository artifactRepository ) { STATIC_LOCK . lock ( ) ; try { delegate . publish ( publication , artifactRepository ) ; } finally { STATIC_LOCK . unlock ( ) ; } } } 
