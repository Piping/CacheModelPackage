package org . elasticsearch . common . inject . internal ; import org . elasticsearch . common . inject . TypeLiteral ; import org . elasticsearch . common . inject . matcher . Matcher ; import org . elasticsearch . common . inject . spi . TypeConverter ; import java . util . Objects ; public final class MatcherAndConverter { private final Matcher < ? super TypeLiteral < ? > > typeMatcher ; private final TypeConverter typeConverter ; private final Object source ; public MatcherAndConverter ( Matcher < ? super TypeLiteral < ? > > typeMatcher , TypeConverter typeConverter , Object source ) { this . typeMatcher = Objects . requireNonNull ( typeMatcher , <str> ) ; this . typeConverter = Objects . requireNonNull ( typeConverter , <str> ) ; this . source = source ; } public TypeConverter getTypeConverter ( ) { return typeConverter ; } public Matcher < ? super TypeLiteral < ? > > getTypeMatcher ( ) { return typeMatcher ; } public Object getSource ( ) { return source ; } @Override public String toString ( ) { return typeConverter + <str> + typeMatcher + <str> + source + <str> ; } } 
