package org . gradle . api . internal . artifacts . repositories . resolver ; import org . gradle . api . artifacts . ModuleIdentifier ; import org . gradle . internal . resolve . result . ResourceAwareResolveResult ; import org . gradle . internal . component . model . IvyArtifactName ; import org . gradle . internal . resource . ExternalResourceName ; import org . gradle . internal . resource . ResourceException ; import org . gradle . internal . resource . transport . ExternalResourceRepository ; import java . util . Collection ; import java . util . HashSet ; import java . util . Set ; public class MavenVersionLister implements VersionLister { private final MavenMetadataLoader mavenMetadataLoader ; public MavenVersionLister ( ExternalResourceRepository repository ) { this . mavenMetadataLoader = new MavenMetadataLoader ( repository ) ; } public VersionPatternVisitor newVisitor ( final ModuleIdentifier module , final Collection < String > dest , final ResourceAwareResolveResult result ) { return new VersionPatternVisitor ( ) { final Set < ExternalResourceName > searched = new HashSet < ExternalResourceName > ( ) ; public void visit ( ResourcePattern pattern , IvyArtifactName artifact ) throws ResourceException { ExternalResourceName metadataLocation = pattern . toModulePath ( module ) . resolve ( <str> ) ; if ( ! searched . add ( metadataLocation ) ) { return ; } result . attempted ( metadataLocation ) ; MavenMetadata mavenMetaData = mavenMetadataLoader . load ( metadataLocation . getUri ( ) ) ; for ( String version : mavenMetaData . versions ) { dest . add ( version ) ; } } } ; } } 
