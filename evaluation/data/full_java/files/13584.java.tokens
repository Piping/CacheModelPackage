package org . gradle . external . javadoc . internal ; import org . gradle . external . javadoc . JavadocOfflineLink ; import org . jmock . Expectations ; import org . jmock . integration . junit4 . JUnit4Mockery ; import org . jmock . lib . legacy . ClassImposteriser ; import org . junit . Before ; import org . junit . Test ; import java . io . IOException ; public class LinksOfflineJavadocOptionFileOptionTest { private final JUnit4Mockery context = new JUnit4Mockery ( ) ; private JavadocOptionFileWriterContext writerContextMock ; private final String optionName = <str> ; private LinksOfflineJavadocOptionFileOption linksOfflineOption ; @Before public void setUp ( ) { context . setImposteriser ( ClassImposteriser . INSTANCE ) ; writerContextMock = context . mock ( JavadocOptionFileWriterContext . class ) ; linksOfflineOption = new LinksOfflineJavadocOptionFileOption ( optionName ) ; } @Test public void writeNullValue ( ) throws IOException { linksOfflineOption . write ( writerContextMock ) ; } @Test public void writeNoneNullValue ( ) throws IOException { final String extDocUrl = <str> ; final String packageListLoc = <str> ; linksOfflineOption . getValue ( ) . add ( new JavadocOfflineLink ( extDocUrl , packageListLoc ) ) ; context . checking ( new Expectations ( ) { { one ( writerContextMock ) . writeValueOption ( optionName , extDocUrl + <str> + packageListLoc ) ; } } ) ; linksOfflineOption . write ( writerContextMock ) ; } } 
