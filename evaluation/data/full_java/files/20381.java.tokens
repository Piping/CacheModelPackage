package io . netty . channel . epoll ; public final class EpollTcpInfo { final int [ ] info = new int [ <int> ] ; public int state ( ) { return info [ <int> ] & <hex> ; } public int caState ( ) { return info [ <int> ] & <hex> ; } public int retransmits ( ) { return info [ <int> ] & <hex> ; } public int probes ( ) { return info [ <int> ] & <hex> ; } public int backoff ( ) { return info [ <int> ] & <hex> ; } public int options ( ) { return info [ <int> ] & <hex> ; } public int sndWscale ( ) { return info [ <int> ] & <hex> ; } public int rcvWscale ( ) { return info [ <int> ] & <hex> ; } public long rto ( ) { return info [ <int> ] & <hex> ; } public long ato ( ) { return info [ <int> ] & <hex> ; } public long sndMss ( ) { return info [ <int> ] & <hex> ; } public long rcvMss ( ) { return info [ <int> ] & <hex> ; } public long unacked ( ) { return info [ <int> ] & <hex> ; } public long sacked ( ) { return info [ <int> ] & <hex> ; } public long lost ( ) { return info [ <int> ] & <hex> ; } public long retrans ( ) { return info [ <int> ] & <hex> ; } public long fackets ( ) { return info [ <int> ] & <hex> ; } public long lastDataSent ( ) { return info [ <int> ] & <hex> ; } public long lastAckSent ( ) { return info [ <int> ] & <hex> ; } public long lastDataRecv ( ) { return info [ <int> ] & <hex> ; } public long lastAckRecv ( ) { return info [ <int> ] & <hex> ; } public long pmtu ( ) { return info [ <int> ] & <hex> ; } public long rcvSsthresh ( ) { return info [ <int> ] & <hex> ; } public long rtt ( ) { return info [ <int> ] & <hex> ; } public long rttvar ( ) { return info [ <int> ] & <hex> ; } public long sndSsthresh ( ) { return info [ <int> ] & <hex> ; } public long sndCwnd ( ) { return info [ <int> ] & <hex> ; } public long advmss ( ) { return info [ <int> ] & <hex> ; } public long reordering ( ) { return info [ <int> ] & <hex> ; } public long rcvRtt ( ) { return info [ <int> ] & <hex> ; } public long rcvSpace ( ) { return info [ <int> ] & <hex> ; } public long totalRetrans ( ) { return info [ <int> ] & <hex> ; } } 
