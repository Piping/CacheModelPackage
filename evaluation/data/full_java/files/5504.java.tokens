package org . elasticsearch . client . support ; import org . elasticsearch . common . inject . Inject ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . transport . TransportMessage ; public class Headers { public static final String PREFIX = <str> ; public static final Headers EMPTY = new Headers ( Settings . EMPTY ) { @Override public < M extends TransportMessage < ? > > M applyTo ( M message ) { return message ; } } ; private final Settings headers ; @Inject public Headers ( Settings settings ) { headers = resolveHeaders ( settings ) ; } public < M extends TransportMessage < ? > > M applyTo ( M message ) { for ( String key : headers . names ( ) ) { if ( ! message . hasHeader ( key ) ) { message . putHeader ( key , headers . get ( key ) ) ; } } return message ; } public Settings headers ( ) { return headers ; } static Settings resolveHeaders ( Settings settings ) { Settings headers = settings . getAsSettings ( PREFIX ) ; return headers ! = null ? headers : Settings . EMPTY ; } } 
