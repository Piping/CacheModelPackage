package org . gradle . internal . resource . local ; import org . gradle . internal . Factory ; import org . gradle . internal . hash . HashUtil ; import org . gradle . internal . hash . HashValue ; import java . io . File ; import java . util . List ; public class LazyLocallyAvailableResourceCandidates implements LocallyAvailableResourceCandidates { private final Factory < List < File > > filesFactory ; private List < File > files ; public LazyLocallyAvailableResourceCandidates ( Factory < List < File > > filesFactory ) { this . filesFactory = filesFactory ; } protected List < File > getFiles ( ) { if ( files = = null ) { files = filesFactory . create ( ) ; } return files ; } public boolean isNone ( ) { return getFiles ( ) . isEmpty ( ) ; } public LocallyAvailableResource findByHashValue ( HashValue targetHash ) { HashValue thisHash ; for ( File file : getFiles ( ) ) { thisHash = HashUtil . sha1 ( file ) ; if ( thisHash . equals ( targetHash ) ) { return new DefaultLocallyAvailableResource ( file , thisHash ) ; } } return null ; } } 
