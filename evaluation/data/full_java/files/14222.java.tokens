package org . gradle . messaging . remote . internal . protocol ; import org . gradle . messaging . remote . internal . Message ; import java . util . UUID ; public abstract class ProducerMessage extends Message implements RoutableMessage { protected final UUID producerId ; protected final Object consumerId ; public ProducerMessage ( UUID producerId , Object consumerId ) { this . consumerId = consumerId ; this . producerId = producerId ; } public Object getConsumerId ( ) { return consumerId ; } public UUID getProducerId ( ) { return producerId ; } public Object getDestination ( ) { return consumerId ; } @Override public boolean equals ( Object o ) { if ( o = = this ) { return true ; } if ( o = = null | | o . getClass ( ) ! = getClass ( ) ) { return false ; } ProducerMessage other = ( ProducerMessage ) o ; return consumerId . equals ( other . consumerId ) & & producerId . equals ( other . producerId ) ; } @Override public int hashCode ( ) { return consumerId . hashCode ( ) ^ producerId . hashCode ( ) ; } @Override public String toString ( ) { return String . format ( <str> , getClass ( ) . getSimpleName ( ) , producerId , consumerId ) ; } } 
