package org . gradle . api . internal . artifacts . ivyservice . resolveengine . graph ; import org . gradle . api . internal . artifacts . ResolvedConfigurationIdentifier ; import org . gradle . api . internal . artifacts . ivyservice . resolveengine . artifact . ArtifactSet ; import org . gradle . api . internal . artifacts . ivyservice . resolveengine . artifact . DependencyArtifactsVisitor ; import java . util . Arrays ; import java . util . List ; public class CompositeDependencyArtifactsVisitor implements DependencyArtifactsVisitor { private final List < DependencyArtifactsVisitor > visitors ; public CompositeDependencyArtifactsVisitor ( DependencyArtifactsVisitor . . . visitors ) { this . visitors = Arrays . asList ( visitors ) ; } @Override public void visitArtifacts ( ResolvedConfigurationIdentifier parent , ResolvedConfigurationIdentifier child , ArtifactSet artifacts ) { for ( DependencyArtifactsVisitor visitor : visitors ) { visitor . visitArtifacts ( parent , child , artifacts ) ; } } @Override public void finishArtifacts ( ) { for ( DependencyArtifactsVisitor visitor : visitors ) { visitor . finishArtifacts ( ) ; } } } 
