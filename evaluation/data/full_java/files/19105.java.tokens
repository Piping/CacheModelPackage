package io . netty . handler . codec . http ; import io . netty . buffer . ByteBuf ; import io . netty . channel . ChannelPipeline ; import io . netty . handler . codec . TooLongFrameException ; public class HttpRequestDecoder extends HttpObjectDecoder { public HttpRequestDecoder ( ) { } public HttpRequestDecoder ( int maxInitialLineLength , int maxHeaderSize , int maxChunkSize ) { super ( maxInitialLineLength , maxHeaderSize , maxChunkSize , true ) ; } public HttpRequestDecoder ( int maxInitialLineLength , int maxHeaderSize , int maxChunkSize , boolean validateHeaders ) { super ( maxInitialLineLength , maxHeaderSize , maxChunkSize , true , validateHeaders ) ; } @Override protected HttpMessage createMessage ( String [ ] initialLine ) throws Exception { return new DefaultHttpRequest ( HttpVersion . valueOf ( initialLine [ <int> ] ) , HttpMethod . valueOf ( initialLine [ <int> ] ) , initialLine [ <int> ] , validateHeaders ) ; } @Override protected HttpMessage createInvalidMessage ( ) { return new DefaultFullHttpRequest ( HttpVersion . HTTP_1_0 , HttpMethod . GET , <str> , validateHeaders ) ; } @Override protected boolean isDecodingRequest ( ) { return true ; } } 
