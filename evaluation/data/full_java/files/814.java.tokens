package org . apache . cassandra . metrics ; import static org . apache . cassandra . metrics . CassandraMetricsRegistry . Metrics ; import com . codahale . metrics . Counter ; import com . codahale . metrics . Timer ; import com . codahale . metrics . Gauge ; public class ViewWriteMetrics extends ClientRequestMetrics { public final Counter viewReplicasAttempted ; public final Counter viewReplicasSuccess ; public final Timer viewWriteLatency ; public ViewWriteMetrics ( String scope ) { super ( scope ) ; viewReplicasAttempted = Metrics . counter ( factory . createMetricName ( <str> ) ) ; viewReplicasSuccess = Metrics . counter ( factory . createMetricName ( <str> ) ) ; viewWriteLatency = Metrics . timer ( factory . createMetricName ( <str> ) ) ; Metrics . register ( factory . createMetricName ( <str> ) , new Gauge < Long > ( ) { public Long getValue ( ) { return viewReplicasAttempted . getCount ( ) - viewReplicasSuccess . getCount ( ) ; } } ) ; } public void release ( ) { super . release ( ) ; Metrics . remove ( factory . createMetricName ( <str> ) ) ; Metrics . remove ( factory . createMetricName ( <str> ) ) ; Metrics . remove ( factory . createMetricName ( <str> ) ) ; Metrics . remove ( factory . createMetricName ( <str> ) ) ; } } 
