package org . gradle . launcher . cli ; import org . gradle . StartParameter ; import org . gradle . initialization . * ; import org . gradle . internal . service . ServiceRegistry ; import org . gradle . launcher . exec . BuildActionExecuter ; import org . gradle . launcher . exec . BuildActionParameters ; public class RunBuildAction implements Runnable { private final BuildActionExecuter < BuildActionParameters > executer ; private final StartParameter startParameter ; private final BuildClientMetaData clientMetaData ; private final long startTime ; private final BuildActionParameters buildActionParameters ; private final ServiceRegistry sharedServices ; public RunBuildAction ( BuildActionExecuter < BuildActionParameters > executer , StartParameter startParameter , BuildClientMetaData clientMetaData , long startTime , BuildActionParameters buildActionParameters , ServiceRegistry sharedServices ) { this . executer = executer ; this . startParameter = startParameter ; this . clientMetaData = clientMetaData ; this . startTime = startTime ; this . buildActionParameters = buildActionParameters ; this . sharedServices = sharedServices ; } public void run ( ) { executer . execute ( new ExecuteBuildAction ( startParameter ) , new DefaultBuildRequestContext ( new DefaultBuildRequestMetaData ( clientMetaData , startTime ) , new DefaultBuildCancellationToken ( ) , new NoOpBuildEventConsumer ( ) ) , buildActionParameters , sharedServices ) ; } } 
