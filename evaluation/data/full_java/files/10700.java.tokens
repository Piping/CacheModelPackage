package org . gradle . build . docs . dsl . docbook ; import org . gradle . build . docs . dsl . docbook . model . ClassDoc ; import org . w3c . dom . Element ; import java . util . ArrayList ; import java . util . List ; public class ClassDocRenderer { private final GenerationListener listener = new DefaultGenerationListener ( ) ; private final ClassDescriptionRenderer descriptionRenderer = new ClassDescriptionRenderer ( ) ; private final List < ClassDocMemberRenderer > memberRenderers = new ArrayList < ClassDocMemberRenderer > ( ) ; public ClassDocRenderer ( LinkRenderer linkRenderer ) { memberRenderers . add ( new PropertiesRenderer ( linkRenderer , listener ) ) ; memberRenderers . add ( new MethodsRenderer ( linkRenderer , listener ) ) ; memberRenderers . add ( new BlocksRenderer ( linkRenderer , listener ) ) ; } public void mergeContent ( ClassDoc classDoc , Element parent ) { listener . start ( String . format ( <str> , classDoc . getName ( ) ) ) ; try { Element chapter = parent . getOwnerDocument ( ) . createElement ( <str> ) ; parent . appendChild ( chapter ) ; chapter . setAttribute ( <str> , classDoc . getId ( ) ) ; descriptionRenderer . renderTo ( classDoc , chapter ) ; merge ( classDoc , chapter ) ; } finally { listener . finish ( ) ; } } void merge ( ClassDoc classDoc , Element chapter ) { for ( ClassDocMemberRenderer memberRenderer : memberRenderers ) { memberRenderer . renderSummaryTo ( classDoc , chapter ) ; } for ( ClassDocMemberRenderer memberRenderer : memberRenderers ) { memberRenderer . renderDetailsTo ( classDoc , chapter ) ; } } } 
