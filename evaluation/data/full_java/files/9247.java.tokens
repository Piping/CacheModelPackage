package com . google . common . collect ; import com . google . common . annotations . GwtCompatible ; import com . google . common . primitives . Ints ; import javax . annotation . Nullable ; @GwtCompatible final class Hashing { private Hashing ( ) { } private static final int C1 = <hex> ; private static final int C2 = <hex> ; static int smear ( int hashCode ) { return C2 * Integer . rotateLeft ( hashCode * C1 , <int> ) ; } static int smearedHash ( @Nullable Object o ) { return smear ( ( o = = null ) ? <int> : o . hashCode ( ) ) ; } private static int MAX_TABLE_SIZE = Ints . MAX_POWER_OF_TWO ; static int closedTableSize ( int expectedEntries , double loadFactor ) { expectedEntries = Math . max ( expectedEntries , <int> ) ; int tableSize = Integer . highestOneBit ( expectedEntries ) ; if ( expectedEntries > ( int ) ( loadFactor * tableSize ) ) { tableSize < < = <int> ; return ( tableSize > <int> ) ? tableSize : MAX_TABLE_SIZE ; } return tableSize ; } static boolean needsResizing ( int size , int tableSize , double loadFactor ) { return size > loadFactor * tableSize & & tableSize < MAX_TABLE_SIZE ; } } 
