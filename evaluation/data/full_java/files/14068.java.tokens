package org . gradle . api . publication . maven . internal ; import org . gradle . api . artifacts . maven . MavenPom ; import org . gradle . api . artifacts . maven . PublishFilter ; import org . jmock . integration . junit4 . JMock ; import org . jmock . integration . junit4 . JUnit4Mockery ; import org . junit . Before ; import org . junit . Test ; import org . junit . runner . RunWith ; import static org . junit . Assert . assertEquals ; import static org . junit . Assert . assertSame ; @RunWith ( JMock . class ) public class DefaultPomFilterTest { private static final String TEST_NAME = <str> ; private DefaultPomFilter pomFilter ; private MavenPom mavenPomMock ; private PublishFilter publishFilterMock ; private JUnit4Mockery context = new JUnit4Mockery ( ) ; @Before public void setUp ( ) { mavenPomMock = context . mock ( MavenPom . class ) ; publishFilterMock = context . mock ( PublishFilter . class ) ; pomFilter = new DefaultPomFilter ( TEST_NAME , mavenPomMock , publishFilterMock ) ; } @Test public void testGetName ( ) { assertEquals ( TEST_NAME , pomFilter . getName ( ) ) ; assertSame ( mavenPomMock , pomFilter . getPomTemplate ( ) ) ; assertSame ( publishFilterMock , pomFilter . getFilter ( ) ) ; } } 
