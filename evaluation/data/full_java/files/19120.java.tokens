package io . netty . handler . codec . http ; import java . io . UnsupportedEncodingException ; import java . net . URI ; import java . net . URISyntaxException ; import java . net . URLEncoder ; import java . nio . charset . Charset ; import java . nio . charset . UnsupportedCharsetException ; import java . util . ArrayList ; import java . util . List ; public class QueryStringEncoder { private final Charset charset ; private final String uri ; private final List < Param > params = new ArrayList < Param > ( ) ; public QueryStringEncoder ( String uri ) { this ( uri , HttpConstants . DEFAULT_CHARSET ) ; } public QueryStringEncoder ( String uri , Charset charset ) { if ( uri = = null ) { throw new NullPointerException ( <str> ) ; } if ( charset = = null ) { throw new NullPointerException ( <str> ) ; } this . uri = uri ; this . charset = charset ; } public void addParam ( String name , String value ) { if ( name = = null ) { throw new NullPointerException ( <str> ) ; } params . add ( new Param ( name , value ) ) ; } public URI toUri ( ) throws URISyntaxException { return new URI ( toString ( ) ) ; } @Override public String toString ( ) { if ( params . isEmpty ( ) ) { return uri ; } else { StringBuilder sb = new StringBuilder ( uri ) . append ( <str> ) ; for ( int i = <int> ; i < params . size ( ) ; i + + ) { Param param = params . get ( i ) ; sb . append ( encodeComponent ( param . name , charset ) ) ; if ( param . value ! = null ) { sb . append ( <str> ) ; sb . append ( encodeComponent ( param . value , charset ) ) ; } if ( i ! = params . size ( ) - <int> ) { sb . append ( <str> ) ; } } return sb . toString ( ) ; } } private static String encodeComponent ( String s , Charset charset ) { try { return URLEncoder . encode ( s , charset . name ( ) ) . replace ( <str> , <str> ) ; } catch ( UnsupportedEncodingException ignored ) { throw new UnsupportedCharsetException ( charset . name ( ) ) ; } } private static final class Param { final String name ; final String value ; Param ( String name , String value ) { this . value = value ; this . name = name ; } } } 
