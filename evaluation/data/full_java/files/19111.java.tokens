package io . netty . handler . codec . http ; import io . netty . util . AsciiString ; public final class HttpScheme { public static final HttpScheme HTTP = new HttpScheme ( <int> , <str> ) ; public static final HttpScheme HTTPS = new HttpScheme ( <int> , <str> ) ; private final int port ; private final AsciiString name ; private HttpScheme ( int port , String name ) { this . port = port ; this . name = new AsciiString ( name ) ; } public AsciiString name ( ) { return name ; } public int port ( ) { return port ; } @Override public boolean equals ( Object o ) { if ( ! ( o instanceof HttpScheme ) ) { return false ; } HttpScheme other = ( HttpScheme ) o ; return other . port ( ) = = port & & other . name ( ) . equals ( name ) ; } @Override public int hashCode ( ) { return port * <int> + name . hashCode ( ) ; } @Override public String toString ( ) { return name . toString ( ) ; } } 
