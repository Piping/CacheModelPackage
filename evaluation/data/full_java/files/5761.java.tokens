package org . elasticsearch . common . inject ; import org . elasticsearch . common . inject . internal . Errors ; import org . elasticsearch . common . inject . spi . Element ; import org . elasticsearch . common . inject . spi . MembersInjectorLookup ; import org . elasticsearch . common . inject . spi . ProviderLookup ; import java . util . ArrayList ; import java . util . List ; class DeferredLookups implements Lookups { private final InjectorImpl injector ; private final List < Element > lookups = new ArrayList < > ( ) ; public DeferredLookups ( InjectorImpl injector ) { this . injector = injector ; } public void initialize ( Errors errors ) { injector . lookups = injector ; new LookupProcessor ( errors ) . process ( injector , lookups ) ; } @Override public < T > Provider < T > getProvider ( Key < T > key ) { ProviderLookup < T > lookup = new ProviderLookup < > ( key , key ) ; lookups . add ( lookup ) ; return lookup . getProvider ( ) ; } @Override public < T > MembersInjector < T > getMembersInjector ( TypeLiteral < T > type ) { MembersInjectorLookup < T > lookup = new MembersInjectorLookup < > ( type , type ) ; lookups . add ( lookup ) ; return lookup . getMembersInjector ( ) ; } } 
