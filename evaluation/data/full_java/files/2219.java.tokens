package org . nd4j . linalg . indexing ; import org . nd4j . linalg . api . ndarray . INDArray ; public class SpecifiedIndex implements INDArrayIndex { private int [ ] indexes ; private int counter = <int> ; public SpecifiedIndex ( int . . . indexes ) { this . indexes = indexes ; } @Override public int end ( ) { return indexes [ indexes . length - <int> ] ; } @Override public int offset ( ) { return indexes [ <int> ] ; } @Override public int length ( ) { return indexes . length ; } @Override public int stride ( ) { return <int> ; } @Override public int current ( ) { return indexes [ counter - <int> ] ; } @Override public boolean hasNext ( ) { return counter < indexes . length ; } @Override public int next ( ) { return indexes [ counter + + ] ; } @Override public void reverse ( ) { } @Override public boolean isInterval ( ) { return false ; } @Override public void setInterval ( boolean isInterval ) { } @Override public void init ( INDArray arr , int begin , int dimension ) { } @Override public void init ( INDArray arr , int dimension ) { } @Override public void init ( int begin , int end ) { } @Override public void reset ( ) { counter = <int> ; } } 
