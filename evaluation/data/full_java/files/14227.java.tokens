package org . gradle . messaging . remote . internal . protocol ; import org . gradle . messaging . remote . internal . Message ; public class Request extends AbstractPayloadMessage implements RoutableMessage , PayloadMessage { private final Object consumerId ; private final Object payload ; public Request ( Object consumerId , Object payload ) { this . consumerId = consumerId ; this . payload = payload ; } public Object getDestination ( ) { return consumerId ; } public Object getPayload ( ) { return payload ; } public Message withPayload ( Object payload ) { return new Request ( consumerId , payload ) ; } @Override public String toString ( ) { return String . format ( <str> , consumerId , payload ) ; } @Override public boolean equals ( Object o ) { if ( o = = this ) { return true ; } if ( o = = null | | o . getClass ( ) ! = getClass ( ) ) { return false ; } Request other = ( Request ) o ; return consumerId . equals ( other . consumerId ) & & payload . equals ( other . payload ) ; } @Override public int hashCode ( ) { return consumerId . hashCode ( ) ^ payload . hashCode ( ) ; } } 
