package org . eclipse . debug . internal . ui . stringsubstitution ; import org . eclipse . jface . dialogs . Dialog ; import org . eclipse . jface . dialogs . IDialogConstants ; import org . eclipse . jface . window . Window ; import org . eclipse . swt . SWT ; import org . eclipse . swt . layout . GridData ; import org . eclipse . swt . widgets . Composite ; import org . eclipse . swt . widgets . Control ; import org . eclipse . swt . widgets . Label ; import org . eclipse . swt . widgets . Shell ; import org . eclipse . swt . widgets . Text ; public class PasswordPrompt extends PromptingResolver { private String returnValue ; @Override public void prompt ( ) { Dialog dialog = new Dialog ( ( Shell ) null ) { private Text text ; @Override protected Control createDialogArea ( Composite parent ) { Composite composite = ( Composite ) super . createDialogArea ( parent ) ; if ( dialogMessage ! = null ) { Label label = new Label ( composite , SWT . WRAP ) ; label . setText ( dialogMessage ) ; GridData data = new GridData ( GridData . GRAB_HORIZONTAL | GridData . GRAB_VERTICAL | GridData . HORIZONTAL_ALIGN_FILL | GridData . VERTICAL_ALIGN_CENTER ) ; data . widthHint = convertHorizontalDLUsToPixels ( IDialogConstants . MINIMUM_MESSAGE_AREA_WIDTH ) ; label . setLayoutData ( data ) ; label . setFont ( parent . getFont ( ) ) ; } text = new Text ( composite , SWT . SINGLE | SWT . BORDER | SWT . PASSWORD ) ; text . setLayoutData ( new GridData ( GridData . GRAB_HORIZONTAL | GridData . HORIZONTAL_ALIGN_FILL ) ) ; String value = defaultValue = = null ? lastValue : defaultValue ; if ( value ! = null ) { text . setText ( value ) ; } applyDialogFont ( composite ) ; return composite ; } @Override protected void buttonPressed ( int buttonId ) { if ( buttonId = = IDialogConstants . OK_ID ) { returnValue = text . getText ( ) ; } else { returnValue = null ; } super . buttonPressed ( buttonId ) ; } @Override protected void configureShell ( Shell newShell ) { super . configureShell ( newShell ) ; newShell . setText ( StringSubstitutionMessages . StringPromptExpander_0 ) ; } } ; int dialogResult = dialog . open ( ) ; if ( dialogResult = = Window . OK ) { dialogResultString = returnValue ; } } } 
