package org . gradle . api . internal . cache ; import org . gradle . internal . Factory ; abstract public class CacheSupport < K , V > implements Cache < K , V > { public V get ( K key , Factory < V > factory ) { V value = doGet ( key ) ; if ( value = = null ) { value = factory . create ( ) ; doCache ( key , value ) ; } return value ; } abstract protected < T extends K > V doGet ( T key ) ; abstract protected < T extends K , N extends V > void doCache ( T key , N value ) ; } 
