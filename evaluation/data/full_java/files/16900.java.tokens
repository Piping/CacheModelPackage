package java . io ; public abstract class InputStream implements Closeable { public abstract int read ( ) throws IOException ; public int read ( byte [ ] buf , int start , int len ) throws IOException { int end = start + len ; for ( int i = start ; i < end ; i + + ) { int r = read ( ) ; if ( r = = - <int> ) { return i = = start ? - <int> : i - start ; } buf [ i ] = ( byte ) r ; } return len ; } public int read ( byte [ ] buf ) throws IOException { return read ( buf , <int> , buf . length ) ; } public void close ( ) throws IOException { } public int available ( ) { return <int> ; } } 
