package com . google . common . collect . testing . testers ; import static com . google . common . collect . testing . features . CollectionFeature . SUPPORTS_REMOVE ; import static com . google . common . collect . testing . features . CollectionSize . ONE ; import static com . google . common . collect . testing . features . CollectionSize . ZERO ; import com . google . common . annotations . GwtCompatible ; import com . google . common . collect . testing . MinimalCollection ; import com . google . common . collect . testing . features . CollectionFeature ; import com . google . common . collect . testing . features . CollectionSize ; @SuppressWarnings ( <str> ) @GwtCompatible public class ListRemoveAllTester < E > extends AbstractListTester < E > { @CollectionFeature.Require ( SUPPORTS_REMOVE ) @CollectionSize.Require ( absent = { ZERO , ONE } ) public void testRemoveAll_duplicate ( ) { ArrayWithDuplicate < E > arrayAndDuplicate = createArrayWithDuplicateElement ( ) ; collection = getSubjectGenerator ( ) . create ( arrayAndDuplicate . elements ) ; E duplicate = arrayAndDuplicate . duplicate ; assertTrue ( <str> , getList ( ) . removeAll ( MinimalCollection . of ( duplicate ) ) ) ; assertFalse ( <str> + <str> , getList ( ) . contains ( duplicate ) ) ; } } 
