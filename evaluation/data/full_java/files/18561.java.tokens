package com . badlogic . gdx . tests ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . graphics . GL20 ; import com . badlogic . gdx . graphics . g2d . SpriteBatch ; import com . badlogic . gdx . scenes . scene2d . Stage ; import com . badlogic . gdx . scenes . scene2d . ui . Skin ; import com . badlogic . gdx . scenes . scene2d . ui . TextArea ; import com . badlogic . gdx . scenes . scene2d . ui . TextField ; import com . badlogic . gdx . tests . utils . GdxTest ; public class TextAreaTest extends GdxTest { private Stage stage ; private Skin skin ; @Override public void create ( ) { stage = new Stage ( ) ; Gdx . input . setInputProcessor ( stage ) ; skin = new Skin ( Gdx . files . internal ( <str> ) ) ; TextArea textArea = new TextArea ( <str> + <str> , skin ) ; textArea . setX ( <int> ) ; textArea . setY ( <int> ) ; textArea . setWidth ( <int> ) ; textArea . setHeight ( <int> ) ; TextField textField = new TextField ( <str> , skin ) ; textField . setX ( <int> ) ; textField . setY ( <int> ) ; textField . setWidth ( <int> ) ; textField . setHeight ( <int> ) ; stage . addActor ( textArea ) ; stage . addActor ( textField ) ; } @Override public void render ( ) { Gdx . gl . glClearColor ( <float> , <float> , <float> , <int> ) ; Gdx . gl . glClear ( GL20 . GL_COLOR_BUFFER_BIT ) ; stage . draw ( ) ; Gdx . app . log ( <str> , <str> + Gdx . graphics . getFramesPerSecond ( ) ) ; SpriteBatch spriteBatch = ( SpriteBatch ) stage . getBatch ( ) ; Gdx . app . log ( <str> , <str> + spriteBatch . totalRenderCalls ) ; spriteBatch . totalRenderCalls = <int> ; } @Override public void resize ( int width , int height ) { stage . getViewport ( ) . update ( width , height , true ) ; } @Override public void dispose ( ) { stage . dispose ( ) ; skin . dispose ( ) ; } } 
