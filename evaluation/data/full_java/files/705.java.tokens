package org . apache . cassandra . io . sstable ; import java . io . File ; import java . io . IOException ; import com . google . common . base . Throwables ; import org . apache . cassandra . config . CFMetaData ; import org . apache . cassandra . db . * ; import org . apache . cassandra . db . partitions . PartitionUpdate ; import org . apache . cassandra . dht . IPartitioner ; class SSTableSimpleWriter extends AbstractSSTableSimpleWriter { protected DecoratedKey currentKey ; protected PartitionUpdate update ; private SSTableTxnWriter writer ; protected SSTableSimpleWriter ( File directory , CFMetaData metadata , PartitionColumns columns ) { super ( directory , metadata , columns ) ; } private SSTableTxnWriter getOrCreateWriter ( ) { if ( writer = = null ) writer = createWriter ( ) ; return writer ; } PartitionUpdate getUpdateFor ( DecoratedKey key ) throws IOException { assert key ! = null ; if ( ! key . equals ( currentKey ) ) { if ( update ! = null ) writePartition ( update ) ; currentKey = key ; update = new PartitionUpdate ( metadata , currentKey , columns , <int> ) ; } assert update ! = null ; return update ; } public void close ( ) { try { if ( update ! = null ) writePartition ( update ) ; if ( writer ! = null ) writer . finish ( false ) ; } catch ( Throwable t ) { throw Throwables . propagate ( writer = = null ? t : writer . abort ( t ) ) ; } } private void writePartition ( PartitionUpdate update ) throws IOException { getOrCreateWriter ( ) . append ( update . unfilteredIterator ( ) ) ; } } 
