package org . gradle . api . internal . tasks ; import org . gradle . api . Action ; import org . gradle . api . Task ; import org . gradle . api . internal . DynamicObject ; import org . gradle . api . internal . PolymorphicDomainObjectContainerInternal ; import org . gradle . api . internal . TaskInternal ; import org . gradle . api . tasks . TaskContainer ; import org . gradle . model . internal . core . ModelPath ; import org . gradle . model . internal . type . ModelType ; public interface TaskContainerInternal extends TaskContainer , TaskResolver , PolymorphicDomainObjectContainerInternal < Task > { ModelPath MODEL_PATH = ModelPath . path ( <str> ) ; ModelType < TaskContainerInternal > MODEL_TYPE = ModelType . of ( TaskContainerInternal . class ) ; ModelType < Task > TASK_MODEL_TYPE = ModelType . of ( Task . class ) ; DynamicObject getTasksAsDynamicObject ( ) ; < T extends TaskInternal > void addPlaceholderAction ( String placeholderName , Class < T > type , Action < ? super T > configure ) ; void realize ( ) ; void discoverTasks ( ) ; void prepareForExecution ( Task task ) ; } 
