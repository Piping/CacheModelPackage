package org . gradle . buildinit . plugins . internal ; import org . gradle . api . internal . file . FileResolver ; import org . gradle . util . GUtil ; public class GroovyLibraryProjectInitDescriptor extends LanguageLibraryProjectInitDescriptor { public GroovyLibraryProjectInitDescriptor ( TemplateOperationFactory templateOperationFactory , final FileResolver fileResolver , TemplateLibraryVersionProvider libraryVersionProvider , TemplateOperation delegate ) { super ( <str> , templateOperationFactory , fileResolver ) ; register ( delegate ) ; register ( templateOperationFactory . newTemplateOperation ( ) . withTemplate ( <str> ) . withTarget ( <str> ) . withDocumentationBindings ( GUtil . map ( <str> , <str> ) ) . withBindings ( GUtil . map ( <str> , libraryVersionProvider . getVersion ( <str> ) ) ) . withBindings ( GUtil . map ( <str> , libraryVersionProvider . getVersion ( <str> ) ) ) . withBindings ( GUtil . map ( <str> , libraryVersionProvider . getVersion ( <str> ) ) ) . create ( ) ) ; TemplateOperation groovyLibTemplateOperation = fromClazzTemplate ( <str> , <str> ) ; TemplateOperation groovyTestTemplateOperation = fromClazzTemplate ( <str> , <str> ) ; register ( whenNoSourcesAvailable ( groovyLibTemplateOperation , groovyTestTemplateOperation ) ) ; } } 
