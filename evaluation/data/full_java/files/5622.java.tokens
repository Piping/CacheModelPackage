package org . elasticsearch . cluster . routing . allocation . decider ; import org . elasticsearch . cluster . routing . RoutingNode ; import org . elasticsearch . cluster . routing . ShardRouting ; import org . elasticsearch . cluster . routing . allocation . RoutingAllocation ; import org . elasticsearch . common . component . AbstractComponent ; import org . elasticsearch . common . settings . Settings ; public abstract class AllocationDecider extends AbstractComponent { protected AllocationDecider ( Settings settings ) { super ( settings ) ; } public Decision canRebalance ( ShardRouting shardRouting , RoutingAllocation allocation ) { return Decision . ALWAYS ; } public Decision canAllocate ( ShardRouting shardRouting , RoutingNode node , RoutingAllocation allocation ) { return Decision . ALWAYS ; } public Decision canRemain ( ShardRouting shardRouting , RoutingNode node , RoutingAllocation allocation ) { return Decision . ALWAYS ; } public Decision canAllocate ( ShardRouting shardRouting , RoutingAllocation allocation ) { return Decision . ALWAYS ; } public Decision canAllocate ( RoutingNode node , RoutingAllocation allocation ) { return Decision . ALWAYS ; } public Decision canRebalance ( RoutingAllocation allocation ) { return Decision . ALWAYS ; } } 
