package io . netty . handler . codec . socks ; import io . netty . channel . embedded . EmbeddedChannel ; import io . netty . util . internal . logging . InternalLogger ; import io . netty . util . internal . logging . InternalLoggerFactory ; import org . junit . Test ; import static org . junit . Assert . * ; public class SocksAuthResponseDecoderTest { private static final InternalLogger logger = InternalLoggerFactory . getInstance ( SocksAuthResponseDecoderTest . class ) ; private static void testSocksAuthResponseDecoderWithDifferentParams ( SocksAuthStatus authStatus ) { logger . debug ( <str> + authStatus ) ; SocksAuthResponse msg = new SocksAuthResponse ( authStatus ) ; SocksAuthResponseDecoder decoder = new SocksAuthResponseDecoder ( ) ; EmbeddedChannel embedder = new EmbeddedChannel ( decoder ) ; SocksCommonTestUtils . writeMessageIntoEmbedder ( embedder , msg ) ; msg = embedder . readInbound ( ) ; assertSame ( msg . authStatus ( ) , authStatus ) ; assertNull ( embedder . readInbound ( ) ) ; } @Test public void testSocksCmdResponseDecoder ( ) { for ( SocksAuthStatus authStatus : SocksAuthStatus . values ( ) ) { testSocksAuthResponseDecoderWithDifferentParams ( authStatus ) ; } } } 
