package org . gradle . api . internal . file ; import org . gradle . api . file . FileCollection ; import org . gradle . testfixtures . internal . NativeServicesTestFixture ; import org . jmock . integration . junit4 . JMock ; import org . jmock . integration . junit4 . JUnit4Mockery ; import org . junit . Before ; import org . junit . Test ; import org . junit . runner . RunWith ; import static org . gradle . util . WrapUtil . toList ; import static org . hamcrest . Matchers . equalTo ; import static org . junit . Assert . assertThat ; import static org . junit . Assert . fail ; @RunWith ( JMock . class ) public class UnionFileTreeTest { private final JUnit4Mockery context = new JUnit4Mockery ( ) ; private final UnionFileTree set = new UnionFileTree ( <str> ) ; @Before public void setUp ( ) { NativeServicesTestFixture . initialize ( ) ; } @Test public void canAddFileTree ( ) { FileTreeInternal set1 = context . mock ( FileTreeInternal . class , <str> ) ; set . add ( set1 ) ; assertThat ( set . getSourceCollections ( ) , equalTo ( ( Iterable ) toList ( ( Object ) set1 ) ) ) ; } @Test public void cannotAddFileCollection ( ) { try { set . add ( context . mock ( FileCollection . class ) ) ; fail ( ) ; } catch ( UnsupportedOperationException e ) { assertThat ( e . getMessage ( ) , equalTo ( <str> ) ) ; } } } 
