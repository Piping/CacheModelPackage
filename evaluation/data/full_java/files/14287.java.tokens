package org . gradle . model . internal . core ; public enum ModelActionRole { Discover ( ModelNode . State . Discovered , false ) , Create ( ModelNode . State . Created , false ) , Defaults ( ModelNode . State . DefaultsApplied , true ) , Initialize ( ModelNode . State . Initialized , true ) , Mutate ( ModelNode . State . Mutated , true ) , Finalize ( ModelNode . State . Finalized , true ) , Validate ( ModelNode . State . SelfClosed , true ) ; private final ModelNode . State target ; private final boolean subjectViewAvailable ; ModelActionRole ( ModelNode . State target , boolean subjectViewAvailable ) { this . target = target ; this . subjectViewAvailable = subjectViewAvailable ; } public ModelNode . State getTargetState ( ) { return target ; } public boolean isSubjectViewAvailable ( ) { return subjectViewAvailable ; } } 
