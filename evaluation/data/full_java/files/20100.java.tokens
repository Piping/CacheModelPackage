package io . netty . resolver ; import io . netty . util . concurrent . Future ; import io . netty . util . concurrent . Promise ; import java . io . Closeable ; import java . net . SocketAddress ; import java . nio . channels . UnsupportedAddressTypeException ; import java . util . List ; public interface NameResolver < T extends SocketAddress > extends Closeable { boolean isSupported ( SocketAddress address ) ; boolean isResolved ( SocketAddress address ) ; Future < T > resolve ( String inetHost , int inetPort ) ; Future < T > resolve ( String inetHost , int inetPort , Promise < T > promise ) ; Future < T > resolve ( SocketAddress address ) ; Future < T > resolve ( SocketAddress address , Promise < T > promise ) ; Future < List < T > > resolveAll ( String inetHost , int inetPort ) ; Future < List < T > > resolveAll ( String inetHost , int inetPort , Promise < List < T > > promise ) ; Future < List < T > > resolveAll ( SocketAddress address ) ; Future < List < T > > resolveAll ( SocketAddress address , Promise < List < T > > promise ) ; @Override void close ( ) ; } 
