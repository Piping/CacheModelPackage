package org . gradle . nativeplatform . internal ; import org . gradle . nativeplatform . * ; import org . gradle . nativeplatform . tasks . InstallExecutable ; import org . gradle . nativeplatform . tasks . LinkExecutable ; import org . gradle . nativeplatform . tasks . ObjectFilesToBinary ; import org . gradle . platform . base . BinaryTasksCollection ; import org . gradle . platform . base . internal . BinaryTasksCollectionWrapper ; import java . io . File ; public class DefaultNativeExecutableBinarySpec extends AbstractNativeBinarySpec implements NativeExecutableBinary , NativeExecutableBinarySpecInternal { private final DefaultTasksCollection tasks = new DefaultTasksCollection ( super . getTasks ( ) ) ; private final NativeInstallationSpec installation = new NativeInstallationSpec ( ) ; private final NativeExecutableFileSpec executable = new NativeExecutableFileSpec ( ) ; @Override public NativeExecutableSpec getComponent ( ) { return getComponentAs ( NativeExecutableSpec . class ) ; } @Override public NativeExecutableSpec getApplication ( ) { return getComponentAs ( NativeExecutableSpec . class ) ; } @Override public NativeExecutableFileSpec getExecutable ( ) { return executable ; } @Override public File getExecutableFile ( ) { return getExecutable ( ) . getFile ( ) ; } @Override public NativeInstallationSpec getInstallation ( ) { return installation ; } public File getPrimaryOutput ( ) { return getExecutableFile ( ) ; } @Override protected ObjectFilesToBinary getCreateOrLink ( ) { return tasks . getLink ( ) ; } @Override public NativeExecutableBinarySpec . TasksCollection getTasks ( ) { return tasks ; } private static class DefaultTasksCollection extends BinaryTasksCollectionWrapper implements NativeExecutableBinarySpec . TasksCollection { public DefaultTasksCollection ( BinaryTasksCollection delegate ) { super ( delegate ) ; } public LinkExecutable getLink ( ) { return findSingleTaskWithType ( LinkExecutable . class ) ; } public InstallExecutable getInstall ( ) { return findSingleTaskWithType ( InstallExecutable . class ) ; } } } 
