package com . badlogic . gdx . graphics . g3d . decals ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . graphics . g2d . TextureRegion ; public class DecalMaterial { public static final int NO_BLEND = - <int> ; protected TextureRegion textureRegion ; protected int srcBlendFactor ; protected int dstBlendFactor ; public void set ( ) { textureRegion . getTexture ( ) . bind ( ) ; if ( ! isOpaque ( ) ) { Gdx . gl . glBlendFunc ( srcBlendFactor , dstBlendFactor ) ; } } public boolean isOpaque ( ) { return srcBlendFactor = = NO_BLEND ; } public int getSrcBlendFactor ( ) { return srcBlendFactor ; } public int getDstBlendFactor ( ) { return dstBlendFactor ; } @Override public boolean equals ( Object o ) { if ( o = = null ) return false ; DecalMaterial material = ( DecalMaterial ) o ; return dstBlendFactor = = material . dstBlendFactor & & srcBlendFactor = = material . srcBlendFactor & & textureRegion . getTexture ( ) = = material . textureRegion . getTexture ( ) ; } @Override public int hashCode ( ) { int result = textureRegion . getTexture ( ) ! = null ? textureRegion . getTexture ( ) . hashCode ( ) : <int> ; result = <int> * result + srcBlendFactor ; result = <int> * result + dstBlendFactor ; return result ; } } 
