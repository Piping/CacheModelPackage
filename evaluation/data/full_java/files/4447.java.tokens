package org . eclipse . debug . internal . ui . viewers . model . provisional ; import org . eclipse . debug . internal . ui . viewers . model . InternalTreeModelViewer ; import org . eclipse . jface . viewers . TreePath ; import org . eclipse . jface . viewers . ViewerLabel ; import org . eclipse . swt . widgets . Composite ; import org . eclipse . ui . IMemento ; public class TreeModelViewer extends InternalTreeModelViewer { public TreeModelViewer ( Composite parent , int style , IPresentationContext context ) { super ( parent , style , context ) ; } @Override public IPresentationContext getPresentationContext ( ) { return super . getPresentationContext ( ) ; } @Override public void addModelChangedListener ( IModelChangedListener listener ) { super . addModelChangedListener ( listener ) ; } @Override public void removeModelChangedListener ( IModelChangedListener listener ) { super . removeModelChangedListener ( listener ) ; } @Override public void addViewerUpdateListener ( IViewerUpdateListener listener ) { super . addViewerUpdateListener ( listener ) ; } @Override public void removeViewerUpdateListener ( IViewerUpdateListener listener ) { super . removeViewerUpdateListener ( listener ) ; } @Override public boolean canToggleColumns ( ) { return super . canToggleColumns ( ) ; } @Override public IColumnPresentation getColumnPresentation ( ) { return super . getColumnPresentation ( ) ; } @Override public String [ ] getVisibleColumns ( ) { return super . getVisibleColumns ( ) ; } @Override public void initState ( IMemento memento ) { super . initState ( memento ) ; } @Override public void saveState ( IMemento memento ) { super . saveState ( memento ) ; } @Override public boolean isShowColumns ( ) { return super . isShowColumns ( ) ; } @Override public void resetColumnSizes ( String [ ] columnIds ) { super . resetColumnSizes ( columnIds ) ; } @Override public void setShowColumns ( boolean show ) { super . setShowColumns ( show ) ; } @Override public void setVisibleColumns ( String [ ] ids ) { super . setVisibleColumns ( ids ) ; } @Override public ViewerLabel getElementLabel ( TreePath path , String columnId ) { return super . getElementLabel ( path , columnId ) ; } } 
