package org . gradle . internal . resource ; import org . gradle . api . Action ; import org . gradle . api . Transformer ; import org . gradle . internal . resource . metadata . ExternalResourceMetaData ; import java . io . * ; import java . net . URI ; public interface ExternalResource extends Closeable { public URI getURI ( ) ; public String getName ( ) ; public boolean isLocal ( ) ; void writeTo ( File destination ) throws ResourceException ; void writeTo ( OutputStream destination ) throws ResourceException ; void withContent ( Action < ? super InputStream > readAction ) throws ResourceException ; < T > T withContent ( Transformer < ? extends T , ? super InputStream > readAction ) throws ResourceException ; < T > T withContent ( ContentAction < ? extends T > readAction ) throws ResourceException ; void close ( ) throws ResourceException ; ExternalResourceMetaData getMetaData ( ) ; interface ContentAction < T > { T execute ( InputStream inputStream , ExternalResourceMetaData metaData ) throws IOException ; } } 
