package org . gradle . api . internal . tasks ; import groovy . lang . Closure ; import org . gradle . api . file . SourceDirectorySet ; import org . gradle . api . internal . file . DefaultSourceDirectorySet ; import org . gradle . api . internal . file . FileResolver ; import org . gradle . api . tasks . GroovySourceSet ; import org . gradle . util . ConfigureUtil ; public class DefaultGroovySourceSet implements GroovySourceSet { private final SourceDirectorySet groovy ; private final SourceDirectorySet allGroovy ; public DefaultGroovySourceSet ( String displayName , FileResolver fileResolver ) { groovy = new DefaultSourceDirectorySet ( String . format ( <str> , displayName ) , fileResolver ) ; groovy . getFilter ( ) . include ( <str> , <str> ) ; allGroovy = new DefaultSourceDirectorySet ( String . format ( <str> , displayName ) , fileResolver ) ; allGroovy . source ( groovy ) ; allGroovy . getFilter ( ) . include ( <str> ) ; } public SourceDirectorySet getGroovy ( ) { return groovy ; } public GroovySourceSet groovy ( Closure configureClosure ) { ConfigureUtil . configure ( configureClosure , getGroovy ( ) ) ; return this ; } public SourceDirectorySet getAllGroovy ( ) { return allGroovy ; } } 
