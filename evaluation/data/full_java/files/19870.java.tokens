package io . netty . example . sctp ; import io . netty . bootstrap . Bootstrap ; import io . netty . channel . ChannelFuture ; import io . netty . channel . ChannelInitializer ; import io . netty . channel . EventLoopGroup ; import io . netty . channel . nio . NioEventLoopGroup ; import io . netty . channel . sctp . SctpChannel ; import io . netty . channel . sctp . SctpChannelOption ; import io . netty . channel . sctp . nio . NioSctpChannel ; public final class SctpEchoClient { static final String HOST = System . getProperty ( <str> , <str> ) ; static final int PORT = Integer . parseInt ( System . getProperty ( <str> , <str> ) ) ; static final int SIZE = Integer . parseInt ( System . getProperty ( <str> , <str> ) ) ; public static void main ( String [ ] args ) throws Exception { EventLoopGroup group = new NioEventLoopGroup ( ) ; try { Bootstrap b = new Bootstrap ( ) ; b . group ( group ) . channel ( NioSctpChannel . class ) . option ( SctpChannelOption . SCTP_NODELAY , true ) . handler ( new ChannelInitializer < SctpChannel > ( ) { @Override public void initChannel ( SctpChannel ch ) throws Exception { ch . pipeline ( ) . addLast ( new SctpEchoClientHandler ( ) ) ; } } ) ; ChannelFuture f = b . connect ( HOST , PORT ) . sync ( ) ; f . channel ( ) . closeFuture ( ) . sync ( ) ; } finally { group . shutdownGracefully ( ) ; } } } 
