package org . gradle . groovy . scripts ; import org . gradle . internal . resource . CachingResource ; import org . gradle . internal . resource . Resource ; import org . jmock . Expectations ; import org . jmock . integration . junit4 . JMock ; import org . jmock . integration . junit4 . JUnit4Mockery ; import org . junit . Test ; import org . junit . runner . RunWith ; import static org . hamcrest . Matchers . * ; import static org . junit . Assert . * ; @RunWith ( JMock . class ) public class CachingScriptSourceTest { private final JUnit4Mockery context = new JUnit4Mockery ( ) ; private final ScriptSource delegate = context . mock ( ScriptSource . class ) ; @Test public void cachesContentOfSource ( ) { context . checking ( new Expectations ( ) { { one ( delegate ) . getResource ( ) ; will ( returnValue ( context . mock ( Resource . class ) ) ) ; } } ) ; CachingScriptSource source = new CachingScriptSource ( delegate ) ; assertThat ( source . getResource ( ) , instanceOf ( CachingResource . class ) ) ; assertThat ( source . getResource ( ) , sameInstance ( source . getResource ( ) ) ) ; } } 
