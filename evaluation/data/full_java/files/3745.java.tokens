package org . eclipse . debug . examples . core . pda . model ; import org . eclipse . debug . core . DebugEvent ; import org . eclipse . debug . core . DebugException ; import org . eclipse . debug . core . model . IMemoryBlock ; public class PDAMemoryBlock extends PDADebugElement implements IMemoryBlock { private byte [ ] fBytes = null ; private long fStart , fLength ; public PDAMemoryBlock ( PDADebugTarget target , long start , long length ) { super ( target ) ; fBytes = new byte [ ( int ) length ] ; fStart = start ; fLength = length ; byte b = <int> ; for ( int i = <int> ; i < fBytes . length ; i + + ) { fBytes [ i ] = b + + ; } } @Override public long getStartAddress ( ) { return fStart ; } @Override public long getLength ( ) { return fLength ; } @Override public byte [ ] getBytes ( ) throws DebugException { return fBytes ; } @Override public boolean supportsValueModification ( ) { return true ; } @Override public void setValue ( long offset , byte [ ] bytes ) throws DebugException { int i = <int> ; long off = offset ; while ( off < fBytes . length & & i < bytes . length ) { fBytes [ ( int ) off + + ] = bytes [ i + + ] ; } fireChangeEvent ( DebugEvent . CONTENT ) ; } } 
