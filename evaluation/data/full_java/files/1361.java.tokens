package org . apache . cassandra . cql3 ; import java . util . ArrayList ; import java . util . List ; import java . util . concurrent . ThreadLocalRandom ; import org . junit . Test ; import junit . framework . Assert ; import org . apache . cassandra . utils . ByteBufferUtil ; public class SerializationMirrorTest extends CQLTester { @Test public void testManyClusterings ( ) throws Throwable { StringBuilder table = new StringBuilder ( <str> ) ; StringBuilder cols = new StringBuilder ( ) ; StringBuilder args = new StringBuilder ( <str> ) ; List < Object > vals = new ArrayList < > ( ) ; vals . add ( <str> ) ; for ( int i = <int> ; i < <int> ; i + + ) { table . append ( <str> ) . append ( i ) . append ( <str> ) ; cols . append ( <str> ) . append ( i ) ; if ( ThreadLocalRandom . current ( ) . nextBoolean ( ) ) vals . add ( Integer . toString ( i ) ) ; else vals . add ( <str> ) ; args . append ( <str> ) ; } args . append ( <str> ) ; vals . add ( <str> ) ; table . append ( <str> ) . append ( cols ) . append ( <str> ) ; createTable ( table . toString ( ) ) ; execute ( <str> + cols + <str> + args + <str> , vals . toArray ( ) ) ; flush ( ) ; UntypedResultSet . Row row = execute ( <str> ) . one ( ) ; for ( int i = <int> ; i < row . getColumns ( ) . size ( ) ; i + + ) Assert . assertEquals ( vals . get ( i ) , row . getString ( i = = <int> ? <str> : i < <int> ? <str> + ( i - <int> ) : <str> ) ) ; } } 
