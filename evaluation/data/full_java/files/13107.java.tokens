package org . gradle . sample ; import org . gradle . tooling . * ; import org . gradle . tooling . model . * ; import org . gradle . tooling . model . eclipse . * ; import java . io . File ; import java . lang . String ; import java . lang . System ; public class Main { public static void main ( String [ ] args ) { GradleConnector connector = GradleConnector . newConnector ( ) ; if ( args . length > <int> ) { connector . useInstallation ( new File ( args [ <int> ] ) ) ; if ( args . length > <int> ) { connector . useGradleUserHomeDir ( new File ( args [ <int> ] ) ) ; } } connector . forProjectDirectory ( new File ( <str> ) ) ; ProjectConnection connection = connector . connect ( ) ; try { EclipseProject project = connection . getModel ( EclipseProject . class ) ; System . out . println ( <str> + project . getName ( ) ) ; System . out . println ( <str> + project . getProjectDirectory ( ) ) ; System . out . println ( <str> ) ; for ( EclipseSourceDirectory srcDir : project . getSourceDirectories ( ) ) { System . out . println ( srcDir . getPath ( ) ) ; } System . out . println ( <str> ) ; for ( ExternalDependency externalDependency : project . getClasspath ( ) ) { System . out . println ( externalDependency . getFile ( ) . getName ( ) ) ; } System . out . println ( <str> ) ; System . out . println ( project . getGradleProject ( ) ) ; } finally { connection . close ( ) ; } } } 
