package org . gradle . internal . resolve ; import org . gradle . api . artifacts . component . ComponentArtifactIdentifier ; import java . util . List ; public class ArtifactNotFoundException extends ArtifactResolveException { public ArtifactNotFoundException ( ComponentArtifactIdentifier artifact , List < String > attemptedLocations ) { super ( format ( artifact , attemptedLocations ) ) ; } private static String format ( ComponentArtifactIdentifier artifact , List < String > locations ) { StringBuilder builder = new StringBuilder ( ) ; builder . append ( String . format ( <str> , artifact . getDisplayName ( ) ) ) ; if ( ! locations . isEmpty ( ) ) { builder . append ( String . format ( <str> ) ) ; for ( String location : locations ) { builder . append ( String . format ( <str> , location . replace ( <str> , <str> ) ) ) ; } } return builder . toString ( ) ; } } 
