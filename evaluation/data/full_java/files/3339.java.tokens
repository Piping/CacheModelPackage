package org . nd4j . linalg . jcublas . buffer . factory ; import org . nd4j . linalg . api . buffer . DataBuffer ; import org . nd4j . linalg . api . buffer . IntBuffer ; import org . nd4j . linalg . api . buffer . factory . DataBufferFactory ; import org . nd4j . linalg . jcublas . buffer . CudaDoubleDataBuffer ; import org . nd4j . linalg . jcublas . buffer . CudaFloatDataBuffer ; import org . nd4j . linalg . jcublas . buffer . CudaIntDataBuffer ; import org . nd4j . linalg . util . ArrayUtil ; import java . nio . ByteBuffer ; public class CudaDataBufferFactory implements DataBufferFactory { @Override public DataBuffer createInt ( ByteBuffer buffer , int length ) { return new CudaIntDataBuffer ( buffer , length ) ; } @Override public DataBuffer createFloat ( ByteBuffer buffer , int length ) { return new CudaFloatDataBuffer ( buffer , length ) ; } @Override public DataBuffer createDouble ( ByteBuffer buffer , int length ) { return new CudaDoubleDataBuffer ( buffer , length ) ; } @Override public DataBuffer createDouble ( int length ) { return new CudaDoubleDataBuffer ( length ) ; } @Override public DataBuffer createFloat ( int length ) { return new CudaFloatDataBuffer ( length ) ; } @Override public DataBuffer createInt ( int length ) { return new CudaIntDataBuffer ( length ) ; } @Override public DataBuffer createDouble ( int [ ] data ) { return new CudaDoubleDataBuffer ( ArrayUtil . toDoubles ( data ) ) ; } @Override public DataBuffer createFloat ( int [ ] data ) { return new CudaFloatDataBuffer ( ArrayUtil . toFloats ( data ) ) ; } @Override public DataBuffer createInt ( int [ ] data ) { return new CudaIntDataBuffer ( data ) ; } @Override public DataBuffer createDouble ( double [ ] data ) { return new CudaDoubleDataBuffer ( data ) ; } @Override public DataBuffer createDouble ( byte [ ] data , int length ) { return new CudaDoubleDataBuffer ( data , length ) ; } @Override public DataBuffer createFloat ( byte [ ] data , int length ) { return new CudaFloatDataBuffer ( data , length ) ; } @Override public DataBuffer createFloat ( double [ ] data ) { return new CudaFloatDataBuffer ( ArrayUtil . toFloats ( data ) ) ; } @Override public DataBuffer createInt ( double [ ] data ) { return new CudaIntDataBuffer ( ArrayUtil . toInts ( data ) ) ; } @Override public DataBuffer createDouble ( float [ ] data ) { return new CudaDoubleDataBuffer ( ArrayUtil . toDoubles ( data ) ) ; } @Override public DataBuffer createFloat ( float [ ] data ) { return new CudaFloatDataBuffer ( data ) ; } @Override public DataBuffer createInt ( float [ ] data ) { return new CudaIntDataBuffer ( ArrayUtil . toInts ( data ) ) ; } @Override public DataBuffer createDouble ( int [ ] data , boolean copy ) { return new CudaDoubleDataBuffer ( ArrayUtil . toDouble ( data ) ) ; } @Override public DataBuffer createFloat ( int [ ] data , boolean copy ) { return new CudaFloatDataBuffer ( ArrayUtil . toFloats ( data ) ) ; } @Override public DataBuffer createInt ( int [ ] data , boolean copy ) { return new CudaIntDataBuffer ( data ) ; } @Override public DataBuffer createDouble ( double [ ] data , boolean copy ) { return new CudaDoubleDataBuffer ( data ) ; } @Override public DataBuffer createFloat ( double [ ] data , boolean copy ) { return new CudaFloatDataBuffer ( ArrayUtil . toFloats ( data ) ) ; } @Override public DataBuffer createInt ( double [ ] data , boolean copy ) { return new CudaIntDataBuffer ( ArrayUtil . toInts ( data ) ) ; } @Override public DataBuffer createDouble ( float [ ] data , boolean copy ) { return new CudaDoubleDataBuffer ( ArrayUtil . toDoubles ( data ) ) ; } @Override public DataBuffer createFloat ( float [ ] data , boolean copy ) { return new CudaFloatDataBuffer ( data ) ; } @Override public DataBuffer createInt ( float [ ] data , boolean copy ) { return new CudaIntDataBuffer ( ArrayUtil . toInts ( data ) ) ; } } 
