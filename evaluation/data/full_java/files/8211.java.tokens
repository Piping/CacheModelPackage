package org . elasticsearch . index . mapper . path ; import org . elasticsearch . index . mapper . DocumentMapper ; import org . elasticsearch . test . ESSingleNodeTestCase ; import java . io . IOException ; import static org . elasticsearch . test . StreamsUtils . copyToStringFromClasspath ; import static org . hamcrest . Matchers . notNullValue ; import static org . hamcrest . Matchers . nullValue ; public class PathMapperTests extends ESSingleNodeTestCase { public void testPathMapping ( ) throws IOException { String mapping = copyToStringFromClasspath ( <str> ) ; DocumentMapper docMapper = createIndex ( <str> ) . mapperService ( ) . documentMapperParser ( ) . parse ( mapping ) ; assertThat ( docMapper . mappers ( ) . getMapper ( <str> ) , nullValue ( ) ) ; assertThat ( docMapper . mappers ( ) . getMapper ( <str> ) , notNullValue ( ) ) ; assertThat ( docMapper . mappers ( ) . getMapper ( <str> ) , nullValue ( ) ) ; assertThat ( docMapper . mappers ( ) . getMapper ( <str> ) , nullValue ( ) ) ; assertThat ( docMapper . mappers ( ) . getMapper ( <str> ) , notNullValue ( ) ) ; assertThat ( docMapper . mappers ( ) . getMapper ( <str> ) , nullValue ( ) ) ; assertThat ( docMapper . mappers ( ) . getMapper ( <str> ) , nullValue ( ) ) ; assertThat ( docMapper . mappers ( ) . getMapper ( <str> ) , notNullValue ( ) ) ; assertThat ( docMapper . mappers ( ) . getMapper ( <str> ) , nullValue ( ) ) ; assertThat ( docMapper . mappers ( ) . getMapper ( <str> ) , nullValue ( ) ) ; assertThat ( docMapper . mappers ( ) . getMapper ( <str> ) , nullValue ( ) ) ; assertThat ( docMapper . mappers ( ) . getMapper ( <str> ) , notNullValue ( ) ) ; } } 
