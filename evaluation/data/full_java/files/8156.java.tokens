package org . elasticsearch . index . mapper . core ; import org . elasticsearch . common . joda . Joda ; import org . elasticsearch . index . mapper . FieldTypeTestCase ; import org . elasticsearch . index . mapper . MappedFieldType ; import org . junit . Before ; import java . util . Locale ; import java . util . concurrent . TimeUnit ; public class DateFieldTypeTests extends FieldTypeTestCase { @Override protected MappedFieldType createDefaultFieldType ( ) { return new DateFieldMapper . DateFieldType ( ) ; } @Before public void setupProperties ( ) { setDummyNullValue ( <int> ) ; addModifier ( new Modifier ( <str> , true , true ) { @Override public void modify ( MappedFieldType ft ) { ( ( DateFieldMapper . DateFieldType ) ft ) . setDateTimeFormatter ( Joda . forPattern ( <str> , Locale . ROOT ) ) ; } } ) ; addModifier ( new Modifier ( <str> , true , true ) { @Override public void modify ( MappedFieldType ft ) { ( ( DateFieldMapper . DateFieldType ) ft ) . setDateTimeFormatter ( Joda . forPattern ( <str> , Locale . CANADA ) ) ; } } ) ; addModifier ( new Modifier ( <str> , true , true ) { @Override public void modify ( MappedFieldType ft ) { ( ( DateFieldMapper . DateFieldType ) ft ) . setTimeUnit ( TimeUnit . HOURS ) ; } } ) ; } } 
