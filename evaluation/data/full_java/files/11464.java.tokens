package org . gradle . api . internal . file ; import org . gradle . api . InvalidUserDataException ; import org . gradle . api . Transformer ; import org . gradle . internal . UncheckedException ; import org . gradle . util . GFileUtils ; import java . io . File ; import java . net . URI ; import java . net . URISyntaxException ; import java . util . regex . Pattern ; public class BasicFileResolver implements Transformer < File , String > { private static final Pattern URI_SCHEME = Pattern . compile ( <str> ) ; private final File baseDir ; public BasicFileResolver ( File baseDir ) { this . baseDir = baseDir ; } public File transform ( String original ) { if ( original . startsWith ( <str> ) ) { try { return GFileUtils . canonicalise ( new File ( new URI ( original ) ) ) ; } catch ( URISyntaxException e ) { throw UncheckedException . throwAsUncheckedException ( e ) ; } } File file = new File ( original ) ; if ( file . isAbsolute ( ) ) { return GFileUtils . canonicalise ( file ) ; } if ( URI_SCHEME . matcher ( original ) . matches ( ) ) { throw new InvalidUserDataException ( String . format ( <str> , original ) ) ; } file = new File ( baseDir , original ) ; return GFileUtils . canonicalise ( file ) ; } } 
