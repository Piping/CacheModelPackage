package com . badlogic . gdx . physics . box2d . joints ; import com . badlogic . gdx . math . Vector2 ; import com . badlogic . gdx . physics . box2d . Body ; import com . badlogic . gdx . physics . box2d . JointDef ; public class WheelJointDef extends JointDef { public WheelJointDef ( ) { type = JointType . WheelJoint ; } public void initialize ( Body bodyA , Body bodyB , Vector2 anchor , Vector2 axis ) { this . bodyA = bodyA ; this . bodyB = bodyB ; localAnchorA . set ( bodyA . getLocalPoint ( anchor ) ) ; localAnchorB . set ( bodyB . getLocalPoint ( anchor ) ) ; localAxisA . set ( bodyA . getLocalVector ( axis ) ) ; } public final Vector2 localAnchorA = new Vector2 ( ) ; public final Vector2 localAnchorB = new Vector2 ( ) ; public final Vector2 localAxisA = new Vector2 ( <int> , <int> ) ; public boolean enableMotor = false ; public float maxMotorTorque = <int> ; public float motorSpeed = <int> ; public float frequencyHz = <int> ; public float dampingRatio = <float> ; @Override public org . jbox2d . dynamics . joints . JointDef toJBox2d ( ) { org . jbox2d . dynamics . joints . WheelJointDef fd = new org . jbox2d . dynamics . joints . WheelJointDef ( ) ; fd . bodyA = bodyA . body ; fd . bodyB = bodyB . body ; fd . collideConnected = collideConnected ; fd . localAxisA . set ( localAxisA . x , localAxisA . y ) ; fd . enableMotor = enableMotor ; fd . maxMotorTorque = maxMotorTorque ; fd . motorSpeed = motorSpeed ; fd . frequencyHz = frequencyHz ; fd . dampingRatio = dampingRatio ; fd . localAnchorA . set ( localAnchorA . x , localAnchorA . y ) ; fd . localAnchorB . set ( localAnchorB . x , localAnchorB . y ) ; fd . type = org . jbox2d . dynamics . joints . JointType . WHEEL ; return fd ; } } 
