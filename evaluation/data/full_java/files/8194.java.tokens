package org . elasticsearch . index . mapper . internal ; import org . elasticsearch . Version ; import org . elasticsearch . cluster . metadata . IndexMetaData ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . common . xcontent . XContentFactory ; import org . elasticsearch . index . mapper . DocumentMapper ; import org . elasticsearch . test . ESSingleNodeTestCase ; public class TypeFieldMapperTests extends ESSingleNodeTestCase { public void testDocValues ( ) throws Exception { String mapping = XContentFactory . jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . endObject ( ) . endObject ( ) . string ( ) ; DocumentMapper docMapper = createIndex ( <str> ) . mapperService ( ) . documentMapperParser ( ) . parse ( mapping ) ; TypeFieldMapper typeMapper = docMapper . metadataMapper ( TypeFieldMapper . class ) ; assertTrue ( typeMapper . fieldType ( ) . hasDocValues ( ) ) ; } public void testDocValuesPre21 ( ) throws Exception { String mapping = XContentFactory . jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . endObject ( ) . endObject ( ) . string ( ) ; Settings bwcSettings = Settings . builder ( ) . put ( IndexMetaData . SETTING_VERSION_CREATED , Version . V_2_0_0_beta1 . id ) . build ( ) ; DocumentMapper docMapper = createIndex ( <str> , bwcSettings ) . mapperService ( ) . documentMapperParser ( ) . parse ( mapping ) ; TypeFieldMapper typeMapper = docMapper . metadataMapper ( TypeFieldMapper . class ) ; assertFalse ( typeMapper . fieldType ( ) . hasDocValues ( ) ) ; } } 
