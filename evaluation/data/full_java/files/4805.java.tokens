package org . eclipse . ui . console . actions ; import org . eclipse . jface . action . Action ; import org . eclipse . jface . text . IDocument ; import org . eclipse . jface . text . ITextViewer ; import org . eclipse . swt . custom . BusyIndicator ; import org . eclipse . ui . PlatformUI ; import org . eclipse . ui . console . ConsolePlugin ; import org . eclipse . ui . console . IConsoleConstants ; import org . eclipse . ui . console . TextConsole ; import org . eclipse . ui . internal . console . ConsoleMessages ; import org . eclipse . ui . internal . console . ConsolePluginImages ; import org . eclipse . ui . internal . console . IConsoleHelpContextIds ; import org . eclipse . ui . internal . console . IInternalConsoleConstants ; public class ClearOutputAction extends Action { private ITextViewer fViewer ; private TextConsole fIOConsole ; private ClearOutputAction ( ) { super ( ConsoleMessages . ClearOutputAction_title ) ; setToolTipText ( ConsoleMessages . ClearOutputAction_toolTipText ) ; setHoverImageDescriptor ( ConsolePluginImages . getImageDescriptor ( IConsoleConstants . IMG_LCL_CLEAR ) ) ; setDisabledImageDescriptor ( ConsolePluginImages . getImageDescriptor ( IInternalConsoleConstants . IMG_DLCL_CLEAR ) ) ; setImageDescriptor ( ConsolePluginImages . getImageDescriptor ( IInternalConsoleConstants . IMG_ELCL_CLEAR ) ) ; PlatformUI . getWorkbench ( ) . getHelpSystem ( ) . setHelp ( this , IConsoleHelpContextIds . CLEAR_CONSOLE_ACTION ) ; } public ClearOutputAction ( TextConsole ioConsole ) { this ( ) ; fIOConsole = ioConsole ; } public ClearOutputAction ( ITextViewer viewer ) { this ( ) ; fViewer = viewer ; } @Override public void run ( ) { BusyIndicator . showWhile ( ConsolePlugin . getStandardDisplay ( ) , new Runnable ( ) { @Override public void run ( ) { if ( fIOConsole = = null ) { IDocument document = fViewer . getDocument ( ) ; if ( document ! = null ) { document . set ( <str> ) ; } fViewer . setSelectedRange ( <int> , <int> ) ; } else { fIOConsole . clearConsole ( ) ; } } } ) ; } } 
