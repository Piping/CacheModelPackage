package com . google . common . base ; import com . google . caliper . BeforeExperiment ; import com . google . caliper . Benchmark ; import com . google . caliper . Param ; import com . google . common . collect . Iterables ; public class SplitterBenchmark { @Param ( { <str> , <str> , <str> , <str> } ) int length ; @Param ( { <str> , <str> , <str> , <str> } ) String text ; private String input ; private static final Splitter CHAR_SPLITTER = Splitter . on ( <str> ) ; private static final Splitter STRING_SPLITTER = Splitter . on ( <str> ) ; @BeforeExperiment void setUp ( ) { input = Strings . repeat ( text , length ) ; } @Benchmark void charSplitter ( int reps ) { int total = <int> ; for ( int i = <int> ; i < reps ; i + + ) { total + = Iterables . size ( CHAR_SPLITTER . split ( input ) ) ; } } @Benchmark void stringSplitter ( int reps ) { int total = <int> ; for ( int i = <int> ; i < reps ; i + + ) { total + = Iterables . size ( STRING_SPLITTER . split ( input ) ) ; } } } 
