package org . gradle . jvm . tasks . api . internal ; import com . google . common . collect . Lists ; import org . objectweb . asm . AnnotationVisitor ; import java . util . List ; import static org . objectweb . asm . Opcodes . ASM5 ; public class SortingAnnotationVisitor extends AnnotationVisitor { private final List < AnnotationValue < ? > > annotationValues = Lists . newLinkedList ( ) ; private final AnnotationMember annotation ; private SortingAnnotationVisitor parentVisitor ; private String annotationValueName ; private String arrayValueName ; public SortingAnnotationVisitor ( AnnotationMember parentAnnotation , AnnotationVisitor av ) { super ( ASM5 , av ) ; this . annotation = parentAnnotation ; } @Override public AnnotationVisitor visitAnnotation ( String name , String desc ) { AnnotationMember annotation = new AnnotationMember ( desc , true ) ; SortingAnnotationVisitor visitor = new SortingAnnotationVisitor ( annotation , super . visitAnnotation ( name , desc ) ) ; visitor . parentVisitor = this ; visitor . annotationValueName = ( name = = null ) ? <str> : name ; return visitor ; } @Override public void visit ( String name , Object value ) { annotationValues . add ( new SimpleAnnotationValue ( name , value ) ) ; super . visit ( name , value ) ; } @Override public AnnotationVisitor visitArray ( String name ) { SortingAnnotationVisitor visitor = new SortingAnnotationVisitor ( annotation , super . visitArray ( name ) ) ; visitor . arrayValueName = name ; return visitor ; } @Override public void visitEnum ( String name , String desc , String value ) { annotationValues . add ( new EnumAnnotationValue ( name = = null ? <str> : name , value , desc ) ) ; super . visitEnum ( name , desc , value ) ; } @Override public void visitEnd ( ) { if ( annotationValueName ! = null ) { AnnotationAnnotationValue value = new AnnotationAnnotationValue ( annotationValueName , annotation ) ; parentVisitor . annotationValues . add ( value ) ; annotationValueName = null ; } else if ( arrayValueName ! = null ) { ArrayAnnotationValue value = new ArrayAnnotationValue ( arrayValueName , annotationValues . toArray ( new AnnotationValue < ? > [ annotationValues . size ( ) ] ) ) ; annotation . addValue ( value ) ; arrayValueName = null ; } annotation . addValues ( annotationValues ) ; annotationValues . clear ( ) ; super . visitEnd ( ) ; } } 
