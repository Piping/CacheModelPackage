package org . elasticsearch . action . admin . cluster . node . liveness ; import org . elasticsearch . cluster . ClusterName ; import org . elasticsearch . cluster . ClusterService ; import org . elasticsearch . common . inject . Inject ; import org . elasticsearch . threadpool . ThreadPool ; import org . elasticsearch . transport . * ; public final class TransportLivenessAction implements TransportRequestHandler < LivenessRequest > { private final ClusterService clusterService ; private final ClusterName clusterName ; public static final String NAME = <str> ; @Inject public TransportLivenessAction ( ClusterName clusterName , ClusterService clusterService , TransportService transportService ) { this . clusterService = clusterService ; this . clusterName = clusterName ; transportService . registerRequestHandler ( NAME , LivenessRequest : : new , ThreadPool . Names . SAME , this ) ; } @Override public void messageReceived ( LivenessRequest request , TransportChannel channel ) throws Exception { channel . sendResponse ( new LivenessResponse ( clusterName , clusterService . localNode ( ) ) ) ; } } 
