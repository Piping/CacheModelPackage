package org . elasticsearch . action . suggest ; import org . elasticsearch . action . support . broadcast . BroadcastShardResponse ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . index . shard . ShardId ; import org . elasticsearch . search . suggest . Suggest ; import java . io . IOException ; class ShardSuggestResponse extends BroadcastShardResponse { private final Suggest suggest ; ShardSuggestResponse ( ) { this . suggest = new Suggest ( ) ; } ShardSuggestResponse ( ShardId shardId , Suggest suggest ) { super ( shardId ) ; this . suggest = suggest ; } public Suggest getSuggest ( ) { return this . suggest ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; suggest . readFrom ( in ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; suggest . writeTo ( out ) ; } } 
