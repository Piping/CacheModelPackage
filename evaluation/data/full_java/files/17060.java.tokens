package com . badlogic . gdx . physics . box2d . joints ; import com . badlogic . gdx . math . Vector2 ; import com . badlogic . gdx . physics . box2d . Joint ; import com . badlogic . gdx . physics . box2d . World ; public class MouseJoint extends Joint { public MouseJoint ( World world , long addr ) { super ( world , addr ) ; } public void setTarget ( Vector2 target ) { jniSetTarget ( addr , target . x , target . y ) ; } private native void jniSetTarget ( long addr , float x , float y ) ; final float [ ] tmp = new float [ <int> ] ; private final Vector2 target = new Vector2 ( ) ; public Vector2 getTarget ( ) { jniGetTarget ( addr , tmp ) ; target . x = tmp [ <int> ] ; target . y = tmp [ <int> ] ; return target ; } private native void jniGetTarget ( long addr , float [ ] target ) ; public void setMaxForce ( float force ) { jniSetMaxForce ( addr , force ) ; } private native void jniSetMaxForce ( long addr , float force ) ; public float getMaxForce ( ) { return jniGetMaxForce ( addr ) ; } private native float jniGetMaxForce ( long addr ) ; public void setFrequency ( float hz ) { jniSetFrequency ( addr , hz ) ; } private native void jniSetFrequency ( long addr , float hz ) ; public float getFrequency ( ) { return jniGetFrequency ( addr ) ; } private native float jniGetFrequency ( long addr ) ; public void setDampingRatio ( float ratio ) { jniSetDampingRatio ( addr , ratio ) ; } private native void jniSetDampingRatio ( long addr , float ratio ) ; public float getDampingRatio ( ) { return jniGetDampingRatio ( addr ) ; } private native float jniGetDampingRatio ( long addr ) ; } 
