package org . apache . cassandra ; import java . util . Iterator ; import ch . qos . logback . core . Appender ; import ch . qos . logback . core . UnsynchronizedAppenderBase ; import ch . qos . logback . core . spi . AppenderAttachable ; import ch . qos . logback . core . spi . AppenderAttachableImpl ; public class TeeingAppender < E > extends UnsynchronizedAppenderBase < E > implements AppenderAttachable < E > { AppenderAttachableImpl < E > aai = new AppenderAttachableImpl < > ( ) ; @Override protected void append ( E e ) { aai . appendLoopOnAppenders ( e ) ; } @Override public void addAppender ( Appender < E > appender ) { aai . addAppender ( appender ) ; } @Override public void detachAndStopAllAppenders ( ) { aai . detachAndStopAllAppenders ( ) ; } @Override public boolean detachAppender ( Appender < E > appender ) { return aai . detachAppender ( appender ) ; } @Override public boolean detachAppender ( String name ) { return aai . detachAppender ( name ) ; } @Override public Appender < E > getAppender ( String name ) { return aai . getAppender ( name ) ; } @Override public boolean isAttached ( Appender < E > appender ) { return aai . isAttached ( appender ) ; } @Override public Iterator < Appender < E > > iteratorForAppenders ( ) { return aai . iteratorForAppenders ( ) ; } @Override public void stop ( ) { try { if ( started ) detachAndStopAllAppenders ( ) ; } finally { super . stop ( ) ; } } } 
