package com . google . gwt . webgl . client ; import com . google . gwt . canvas . dom . client . ImageData ; import com . google . gwt . core . client . JavaScriptObject ; import com . google . gwt . core . client . JsArray ; import com . google . gwt . core . client . JsArrayString ; import com . google . gwt . dom . client . CanvasElement ; import com . google . gwt . dom . client . ImageElement ; import com . google . gwt . dom . client . VideoElement ; import com . google . gwt . typedarrays . shared . ArrayBuffer ; import com . google . gwt . typedarrays . shared . ArrayBufferView ; import com . google . gwt . typedarrays . shared . Float32Array ; import com . google . gwt . typedarrays . shared . Int32Array ; import com . google . gwt . typedarrays . shared . TypedArrays ; public class WebGLRenderingContext extends JavaScriptObject { public static final int DEPTH_BUFFER_BIT = <hex> ; public static final int STENCIL_BUFFER_BIT = <hex> ; public static final int COLOR_BUFFER_BIT = <hex> ; public static final int POINTS = <hex> ; public static final int LINES = <hex> ; public static final int LINE_LOOP = <hex> ; public static final int LINE_STRIP = <hex> ; public static final int TRIANGLES = <hex> ; public static final int TRIANGLE_STRIP = <hex> ; public static final int TRIANGLE_FAN = <hex> ; public static final int ZERO = <int> ; public static final int ONE = <int> ; public static final int SRC_COLOR = <hex> ; public static final int ONE_MINUS_SRC_COLOR = <hex> ; public static final int SRC_ALPHA = <hex> ; public static final int ONE_MINUS_SRC_ALPHA = <hex> ; public static final int DST_ALPHA = <hex> ; public static final int ONE_MINUS_DST_ALPHA = <hex> ; public static final int DST_COLOR = <hex> ; public static final int ONE_MINUS_DST_COLOR = <hex> ; public static final int SRC_ALPHA_SATURATE = <hex> ; public static final int FUNC_ADD = <hex> ; public static final int BLEND_EQUATION = <hex> ; public static final int BLEND_EQUATION_RGB = <hex> ; public static final int BLEND_EQUATION_ALPHA = <hex> ; public static final int FUNC_SUBTRACT = <hex> ; public static final int FUNC_REVERSE_SUBTRACT = <hex> ; public static final int BLEND_DST_RGB = <hex> ; public static final int BLEND_SRC_RGB = <hex> ; public static final int BLEND_DST_ALPHA = <hex> ; public static final int BLEND_SRC_ALPHA = <hex> ; public static final int CONSTANT_COLOR = <hex> ; public static final int ONE_MINUS_CONSTANT_COLOR = <hex> ; public static final int CONSTANT_ALPHA = <hex> ; public static final int ONE_MINUS_CONSTANT_ALPHA = <hex> ; public static final int BLEND_COLOR = <hex> ; public static final int ARRAY_BUFFER = <hex> ; public static final int ELEMENT_ARRAY_BUFFER = <hex> ; public static final int ARRAY_BUFFER_BINDING = <hex> ; public static final int ELEMENT_ARRAY_BUFFER_BINDING = <hex> ; public static final int STREAM_DRAW = <hex> ; public static final int STATIC_DRAW = <hex> ; public static final int DYNAMIC_DRAW = <hex> ; public static final int BUFFER_SIZE = <hex> ; public static final int BUFFER_USAGE = <hex> ; public static final int CURRENT_VERTEX_ATTRIB = <hex> ; public static final int FRONT = <hex> ; public static final int BACK = <hex> ; public static final int FRONT_AND_BACK = <hex> ; public static final int TEXTURE_2D = <hex> ; public static final int CULL_FACE = <hex> ; public static final int BLEND = <hex> ; public static final int DITHER = <hex> ; public static final int STENCIL_TEST = <hex> ; public static final int DEPTH_TEST = <hex> ; public static final int SCISSOR_TEST = <hex> ; public static final int POLYGON_OFFSET_FILL = <hex> ; public static final int SAMPLE_ALPHA_TO_COVERAGE = <hex> ; public static final int SAMPLE_COVERAGE = <hex> ; public static final int NO_ERROR = <int> ; public static final int INVALID_ENUM = <hex> ; public static final int INVALID_VALUE = <hex> ; public static final int INVALID_OPERATION = <hex> ; public static final int OUT_OF_MEMORY = <hex> ; public static final int CW = <hex> ; public static final int CCW = <hex> ; public static final int LINE_WIDTH = <hex> ; public static final int ALIASED_POINT_SIZE_RANGE = <hex> ; public static final int ALIASED_LINE_WIDTH_RANGE = <hex> ; public static final int CULL_FACE_MODE = <hex> ; public static final int FRONT_FACE = <hex> ; public static final int DEPTH_RANGE = <hex> ; public static final int DEPTH_WRITEMASK = <hex> ; public static final int DEPTH_CLEAR_VALUE = <hex> ; public static final int DEPTH_FUNC = <hex> ; public static final int STENCIL_CLEAR_VALUE = <hex> ; public static final int STENCIL_FUNC = <hex> ; public static final int STENCIL_FAIL = <hex> ; public static final int STENCIL_PASS_DEPTH_FAIL = <hex> ; public static final int STENCIL_PASS_DEPTH_PASS = <hex> ; public static final int STENCIL_REF = <hex> ; public static final int STENCIL_VALUE_MASK = <hex> ; public static final int STENCIL_WRITEMASK = <hex> ; public static final int STENCIL_BACK_FUNC = <hex> ; public static final int STENCIL_BACK_FAIL = <hex> ; public static final int STENCIL_BACK_PASS_DEPTH_FAIL = <hex> ; public static final int STENCIL_BACK_PASS_DEPTH_PASS = <hex> ; public static final int STENCIL_BACK_REF = <hex> ; public static final int STENCIL_BACK_VALUE_MASK = <hex> ; public static final int STENCIL_BACK_WRITEMASK = <hex> ; public static final int VIEWPORT = <hex> ; public static final int SCISSOR_BOX = <hex> ; public static final int COLOR_CLEAR_VALUE = <hex> ; public static final int COLOR_WRITEMASK = <hex> ; public static final int UNPACK_ALIGNMENT = <hex> ; public static final int PACK_ALIGNMENT = <hex> ; public static final int MAX_TEXTURE_SIZE = <hex> ; public static final int MAX_VIEWPORT_DIMS = <hex> ; public static final int SUBPIXEL_BITS = <hex> ; public static final int RED_BITS = <hex> ; public static final int GREEN_BITS = <hex> ; public static final int BLUE_BITS = <hex> ; public static final int ALPHA_BITS = <hex> ; public static final int DEPTH_BITS = <hex> ; public static final int STENCIL_BITS = <hex> ; public static final int POLYGON_OFFSET_UNITS = <hex> ; public static final int POLYGON_OFFSET_FACTOR = <hex> ; public static final int TEXTURE_BINDING_2D = <hex> ; public static final int SAMPLE_BUFFERS = <hex> ; public static final int SAMPLES = <hex> ; public static final int SAMPLE_COVERAGE_VALUE = <hex> ; public static final int SAMPLE_COVERAGE_INVERT = <hex> ; public static final int NUM_COMPRESSED_TEXTURE_FORMATS = <hex> ; public static final int COMPRESSED_TEXTURE_FORMATS = <hex> ; public static final int DONT_CARE = <hex> ; public static final int FASTEST = <hex> ; public static final int NICEST = <hex> ; public static final int GENERATE_MIPMAP_HINT = <hex> ; public static final int BYTE = <hex> ; public static final int UNSIGNED_BYTE = <hex> ; public static final int SHORT = <hex> ; public static final int UNSIGNED_SHORT = <hex> ; public static final int INT = <hex> ; public static final int UNSIGNED_INT = <hex> ; public static final int FLOAT = <hex> ; public static final int DEPTH_COMPONENT = <hex> ; public static final int ALPHA = <hex> ; public static final int RGB = <hex> ; public static final int RGBA = <hex> ; public static final int LUMINANCE = <hex> ; public static final int LUMINANCE_ALPHA = <hex> ; public static final int UNSIGNED_SHORT_4_4_4_4 = <hex> ; public static final int UNSIGNED_SHORT_5_5_5_1 = <hex> ; public static final int UNSIGNED_SHORT_5_6_5 = <hex> ; public static final int FRAGMENT_SHADER = <hex> ; public static final int VERTEX_SHADER = <hex> ; public static final int MAX_VERTEX_ATTRIBS = <hex> ; public static final int MAX_VERTEX_UNIFORM_VECTORS = <hex> ; public static final int MAX_VARYING_VECTORS = <hex> ; public static final int MAX_COMBINED_TEXTURE_IMAGE_UNITS = <hex> ; public static final int MAX_VERTEX_TEXTURE_IMAGE_UNITS = <hex> ; public static final int MAX_TEXTURE_IMAGE_UNITS = <hex> ; public static final int MAX_FRAGMENT_UNIFORM_VECTORS = <hex> ; public static final int SHADER_TYPE = <hex> ; public static final int DELETE_STATUS = <hex> ; public static final int LINK_STATUS = <hex> ; public static final int VALIDATE_STATUS = <hex> ; public static final int ATTACHED_SHADERS = <hex> ; public static final int ACTIVE_UNIFORMS = <hex> ; public static final int ACTIVE_UNIFORM_MAX_LENGTH = <hex> ; public static final int ACTIVE_ATTRIBUTES = <hex> ; public static final int ACTIVE_ATTRIBUTE_MAX_LENGTH = <hex> ; public static final int SHADING_LANGUAGE_VERSION = <hex> ; public static final int CURRENT_PROGRAM = <hex> ; public static final int NEVER = <hex> ; public static final int LESS = <hex> ; public static final int EQUAL = <hex> ; public static final int LEQUAL = <hex> ; public static final int GREATER = <hex> ; public static final int NOTEQUAL = <hex> ; public static final int GEQUAL = <hex> ; public static final int ALWAYS = <hex> ; public static final int KEEP = <hex> ; public static final int REPLACE = <hex> ; public static final int INCR = <hex> ; public static final int DECR = <hex> ; public static final int INVERT = <hex> ; public static final int INCR_WRAP = <hex> ; public static final int DECR_WRAP = <hex> ; public static final int VENDOR = <hex> ; public static final int RENDERER = <hex> ; public static final int VERSION = <hex> ; public static final int NEAREST = <hex> ; public static final int LINEAR = <hex> ; public static final int NEAREST_MIPMAP_NEAREST = <hex> ; public static final int LINEAR_MIPMAP_NEAREST = <hex> ; public static final int NEAREST_MIPMAP_LINEAR = <hex> ; public static final int LINEAR_MIPMAP_LINEAR = <hex> ; public static final int TEXTURE_MAG_FILTER = <hex> ; public static final int TEXTURE_MIN_FILTER = <hex> ; public static final int TEXTURE_WRAP_S = <hex> ; public static final int TEXTURE_WRAP_T = <hex> ; public static final int TEXTURE = <hex> ; public static final int TEXTURE_CUBE_MAP = <hex> ; public static final int TEXTURE_BINDING_CUBE_MAP = <hex> ; public static final int TEXTURE_CUBE_MAP_POSITIVE_X = <hex> ; public static final int TEXTURE_CUBE_MAP_NEGATIVE_X = <hex> ; public static final int TEXTURE_CUBE_MAP_POSITIVE_Y = <hex> ; public static final int TEXTURE_CUBE_MAP_NEGATIVE_Y = <hex> ; public static final int TEXTURE_CUBE_MAP_POSITIVE_Z = <hex> ; public static final int TEXTURE_CUBE_MAP_NEGATIVE_Z = <hex> ; public static final int MAX_CUBE_MAP_TEXTURE_SIZE = <hex> ; public static final int TEXTURE0 = <hex> ; public static final int TEXTURE1 = <hex> ; public static final int TEXTURE2 = <hex> ; public static final int TEXTURE3 = <hex> ; public static final int TEXTURE4 = <hex> ; public static final int TEXTURE5 = <hex> ; public static final int TEXTURE6 = <hex> ; public static final int TEXTURE7 = <hex> ; public static final int TEXTURE8 = <hex> ; public static final int TEXTURE9 = <hex> ; public static final int TEXTURE10 = <hex> ; public static final int TEXTURE11 = <hex> ; public static final int TEXTURE12 = <hex> ; public static final int TEXTURE13 = <hex> ; public static final int TEXTURE14 = <hex> ; public static final int TEXTURE15 = <hex> ; public static final int TEXTURE16 = <hex> ; public static final int TEXTURE17 = <hex> ; public static final int TEXTURE18 = <hex> ; public static final int TEXTURE19 = <hex> ; public static final int TEXTURE20 = <hex> ; public static final int TEXTURE21 = <hex> ; public static final int TEXTURE22 = <hex> ; public static final int TEXTURE23 = <hex> ; public static final int TEXTURE24 = <hex> ; public static final int TEXTURE25 = <hex> ; public static final int TEXTURE26 = <hex> ; public static final int TEXTURE27 = <hex> ; public static final int TEXTURE28 = <hex> ; public static final int TEXTURE29 = <hex> ; public static final int TEXTURE30 = <hex> ; public static final int TEXTURE31 = <hex> ; public static final int ACTIVE_TEXTURE = <hex> ; public static final int REPEAT = <hex> ; public static final int CLAMP_TO_EDGE = <hex> ; public static final int MIRRORED_REPEAT = <hex> ; public static final int FLOAT_VEC2 = <hex> ; public static final int FLOAT_VEC3 = <hex> ; public static final int FLOAT_VEC4 = <hex> ; public static final int INT_VEC2 = <hex> ; public static final int INT_VEC3 = <hex> ; public static final int INT_VEC4 = <hex> ; public static final int BOOL = <hex> ; public static final int BOOL_VEC2 = <hex> ; public static final int BOOL_VEC3 = <hex> ; public static final int BOOL_VEC4 = <hex> ; public static final int FLOAT_MAT2 = <hex> ; public static final int FLOAT_MAT3 = <hex> ; public static final int FLOAT_MAT4 = <hex> ; public static final int SAMPLER_2D = <hex> ; public static final int SAMPLER_CUBE = <hex> ; public static final int VERTEX_ATTRIB_ARRAY_ENABLED = <hex> ; public static final int VERTEX_ATTRIB_ARRAY_SIZE = <hex> ; public static final int VERTEX_ATTRIB_ARRAY_STRIDE = <hex> ; public static final int VERTEX_ATTRIB_ARRAY_TYPE = <hex> ; public static final int VERTEX_ATTRIB_ARRAY_NORMALIZED = <hex> ; public static final int VERTEX_ATTRIB_ARRAY_POINTER = <hex> ; public static final int VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = <hex> ; public static final int IMPLEMENTATION_COLOR_READ_TYPE = <hex> ; public static final int IMPLEMENTATION_COLOR_READ_FORMAT = <hex> ; public static final int COMPILE_STATUS = <hex> ; public static final int INFO_LOG_LENGTH = <hex> ; public static final int SHADER_SOURCE_LENGTH = <hex> ; public static final int LOW_FLOAT = <hex> ; public static final int MEDIUM_FLOAT = <hex> ; public static final int HIGH_FLOAT = <hex> ; public static final int LOW_INT = <hex> ; public static final int MEDIUM_INT = <hex> ; public static final int HIGH_INT = <hex> ; public static final int FRAMEBUFFER = <hex> ; public static final int RENDERBUFFER = <hex> ; public static final int RGBA4 = <hex> ; public static final int RGB5_A1 = <hex> ; public static final int RGB565 = <hex> ; public static final int DEPTH_COMPONENT16 = <hex> ; public static final int STENCIL_INDEX = <hex> ; public static final int STENCIL_INDEX8 = <hex> ; public static final int DEPTH_STENCIL = <hex> ; public static final int RENDERBUFFER_WIDTH = <hex> ; public static final int RENDERBUFFER_HEIGHT = <hex> ; public static final int RENDERBUFFER_INTERNAL_FORMAT = <hex> ; public static final int RENDERBUFFER_RED_SIZE = <hex> ; public static final int RENDERBUFFER_GREEN_SIZE = <hex> ; public static final int RENDERBUFFER_BLUE_SIZE = <hex> ; public static final int RENDERBUFFER_ALPHA_SIZE = <hex> ; public static final int RENDERBUFFER_DEPTH_SIZE = <hex> ; public static final int RENDERBUFFER_STENCIL_SIZE = <hex> ; public static final int FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = <hex> ; public static final int FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = <hex> ; public static final int FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = <hex> ; public static final int FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = <hex> ; public static final int COLOR_ATTACHMENT0 = <hex> ; public static final int DEPTH_ATTACHMENT = <hex> ; public static final int STENCIL_ATTACHMENT = <hex> ; public static final int DEPTH_STENCIL_ATTACHMENT = <hex> ; public static final int NONE = <int> ; public static final int FRAMEBUFFER_COMPLETE = <hex> ; public static final int FRAMEBUFFER_INCOMPLETE_ATTACHMENT = <hex> ; public static final int FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = <hex> ; public static final int FRAMEBUFFER_INCOMPLETE_DIMENSIONS = <hex> ; public static final int FRAMEBUFFER_UNSUPPORTED = <hex> ; public static final int FRAMEBUFFER_BINDING = <hex> ; public static final int RENDERBUFFER_BINDING = <hex> ; public static final int MAX_RENDERBUFFER_SIZE = <hex> ; public static final int INVALID_FRAMEBUFFER_OPERATION = <hex> ; public static final int UNPACK_FLIP_Y_WEBGL = <hex> ; public static final int UNPACK_PREMULTIPLY_ALPHA_WEBGL = <hex> ; public static final int CONTEXT_LOST_WEBGL = <hex> ; public static WebGLRenderingContext getContext ( CanvasElement canvas ) { return getContext ( canvas , WebGLContextAttributes . create ( ) ) ; } public static native WebGLRenderingContext getContext ( CanvasElement canvas , WebGLContextAttributes attributes ) ; protected WebGLRenderingContext ( ) { } public final native CanvasElement getCanvas ( ) ; public final native WebGLContextAttributes getContextAttributes ( ) ; public final native boolean isContextLost ( ) ; public final native JsArrayString getSupportedExtensions ( ) ; public final native JavaScriptObject getExtension ( String name ) ; public final native void activeTexture ( int texture ) ; public final native void attachShader ( WebGLProgram program , WebGLShader shader ) ; public final native void bindAttribLocation ( WebGLProgram program , int index , String name ) ; public final native void bindBuffer ( int target , WebGLBuffer buffer ) ; public final native void bindFramebuffer ( int target , WebGLFramebuffer framebuffer ) ; public final native void bindRenderbuffer ( int target , WebGLRenderbuffer renderbuffer ) ; public final native void bindTexture ( int target , WebGLTexture texture ) ; public final native void blendColor ( float red , float green , float blue , float alpha ) ; public final native void blendEquation ( int mode ) ; public final native void blendEquationSeparate ( int modeRGB , int modeAlpha ) ; public final native void blendFunc ( int sfactor , int dfactor ) ; public final native void blendFuncSeparate ( int srcRGB , int dstRGB , int srcAlpha , int dstAlpha ) ; public final native void bufferData ( int target , int size , int usage ) ; public final native void bufferData ( int target , ArrayBufferView data , int usage ) ; public final native void bufferData ( int target , ArrayBuffer data , int usage ) ; public final native void bufferSubData ( int target , int offset , ArrayBufferView data ) ; public final native void bufferSubData ( int target , int offset , ArrayBuffer data ) ; public final native int checkFramebufferStatus ( int target ) ; public final native void clear ( int mask ) ; public final native void clearColor ( float red , float green , float blue , float alpha ) ; public final native void clearDepth ( float depth ) ; public final native void clearStencil ( int s ) ; public final native void colorMask ( boolean red , boolean green , boolean blue , boolean alpha ) ; public final native void compileShader ( WebGLShader shader ) ; public final native void copyTexImage2D ( int target , int level , int internalformat , int x , int y , int width , int height , int border ) ; public final native void copyTexSubImage2D ( int target , int level , int xoffset , int yoffset , int x , int y , int width , int height ) ; public final native WebGLBuffer createBuffer ( ) ; public final native WebGLFramebuffer createFramebuffer ( ) ; public final native WebGLProgram createProgram ( ) ; public final native WebGLRenderbuffer createRenderbuffer ( ) ; public final native WebGLShader createShader ( int type ) ; public final native WebGLTexture createTexture ( ) ; public final native void cullFace ( int mode ) ; public final native void deleteBuffer ( WebGLBuffer buffer ) ; public final native void deleteFramebuffer ( WebGLFramebuffer framebuffer ) ; public final native void deleteProgram ( WebGLProgram program ) ; public final native void deleteRenderbuffer ( WebGLRenderbuffer renderbuffer ) ; public final native void deleteShader ( WebGLShader shader ) ; public final native void deleteTexture ( WebGLTexture texture ) ; public final native void depthFunc ( int func ) ; public final native void depthMask ( boolean flag ) ; public final native void depthRange ( float zNear , float zFar ) ; public final native void detachShader ( WebGLProgram program , WebGLShader shader ) ; public final native void disable ( int cap ) ; public final native void disableVertexAttribArray ( int index ) ; public final native void drawArrays ( int mode , int first , int count ) ; public final native void drawElements ( int mode , int count , int type , int offset ) ; public final native void enable ( int cap ) ; public final native void enableVertexAttribArray ( int index ) ; public final native void finish ( ) ; public final native void flush ( ) ; public final native void framebufferRenderbuffer ( int target , int attachment , int renderbuffertarget , WebGLRenderbuffer renderbuffer ) ; public final native void framebufferTexture2D ( int target , int attachment , int textarget , WebGLTexture texture , int level ) ; public final native void frontFace ( int mode ) ; public final native void generateMipmap ( int target ) ; public final native WebGLActiveInfo getActiveAttrib ( WebGLProgram program , int index ) ; public final native WebGLActiveInfo getActiveUniform ( WebGLProgram program , int index ) ; public final native JsArray < WebGLShader > getAttachedShaders ( WebGLProgram program ) ; public final native int getAttribLocation ( WebGLProgram program , String name ) ; public final native int getError ( ) ; public final native String getProgramInfoLog ( WebGLProgram program ) ; public final native String getShaderInfoLog ( WebGLShader shader ) ; public final native String getShaderSource ( WebGLShader shader ) ; public final native WebGLUniformLocation getUniformLocation ( WebGLProgram program , String name ) ; public final native int getVertexAttribOffset ( int index , int pname ) ; public final native void hint ( int target , int mode ) ; public final native boolean isBuffer ( WebGLBuffer buffer ) ; public final native boolean isEnabled ( int cap ) ; public final native boolean isFramebuffer ( WebGLFramebuffer framebuffer ) ; public final native boolean isProgram ( WebGLProgram program ) ; public final native boolean isRenderbuffer ( WebGLRenderbuffer renderbuffer ) ; public final native boolean isShader ( WebGLShader shader ) ; public final native boolean isTexture ( WebGLTexture texture ) ; public final native void lineWidth ( float width ) ; public final native void linkProgram ( WebGLProgram program ) ; public final native void pixelStorei ( int pname , int param ) ; public final native void polygonOffset ( float factor , float units ) ; public final native void readPixels ( int x , int y , int width , int height , int format , int type , ArrayBufferView pixels ) ; public final native void renderbufferStorage ( int target , int internalformat , int width , int height ) ; public final native void sampleCoverage ( float value , boolean invert ) ; public final native void scissor ( int x , int y , int width , int height ) ; public final native void shaderSource ( WebGLShader shader , String source ) ; public final native void stencilFunc ( int func , int ref , int mask ) ; public final native void stencilFuncSeparate ( int face , int func , int ref , int mask ) ; public final native void stencilMask ( int mask ) ; public final native void stencilMaskSeparate ( int face , int mask ) ; public final native void stencilOp ( int fail , int zfail , int zpass ) ; public final native void stencilOpSeparate ( int face , int fail , int zfail , int zpass ) ; public final native void texImage2D ( int target , int level , int internalformat , int width , int height , int border , int format , int type , ArrayBufferView pixels ) ; public final native void texImage2D ( int target , int level , int internalformat , int format , int type , ImageData pixels ) ; public final native void texImage2D ( int target , int level , int internalformat , int format , int type , ImageElement image ) ; public final native void texImage2D ( int target , int level , int internalformat , int format , int type , CanvasElement canvas ) ; public final native void texImage2D ( int target , int level , int internalformat , int format , int type , VideoElement video ) ; public final native void texParameterf ( int target , int pname , float param ) ; public final native void texParameteri ( int target , int pname , int param ) ; public final native void texSubImage2D ( int target , int level , int xoffset , int yoffset , int width , int height , int format , int type , ArrayBufferView pixels ) ; public final native void texSubImage2D ( int target , int level , int xoffset , int yoffset , int format , int type , ImageData pixels ) ; public final native void texSubImage2D ( int target , int level , int xoffset , int yoffset , int format , int type , ImageElement image ) ; public final native void texSubImage2D ( int target , int level , int xoffset , int yoffset , int format , int type , CanvasElement canvas ) ; public final native void texSubImage2D ( int target , int level , int xoffset , int yoffset , int format , int type , VideoElement video ) ; public final native void uniform1f ( WebGLUniformLocation location , float x ) ; public final void uniform1fv ( WebGLUniformLocation location , Float32Array v ) { this . uniform1fv ( location , ( JavaScriptObject ) v ) ; } public final void uniform1fv ( WebGLUniformLocation location , float [ ] v ) { this . uniform1fv ( location , toJsArray ( v ) ) ; } private final native void uniform1fv ( WebGLUniformLocation location , JavaScriptObject v ) ; public final native void uniform1i ( WebGLUniformLocation location , int x ) ; public final void uniform1iv ( WebGLUniformLocation location , Int32Array v ) { this . uniform1iv ( location , ( JavaScriptObject ) v ) ; } public final void uniform1iv ( WebGLUniformLocation location , int [ ] v ) { this . uniform1iv ( location , toJsArray ( v ) ) ; } private final native void uniform1iv ( WebGLUniformLocation location , JavaScriptObject v ) ; public final native void uniform2f ( WebGLUniformLocation location , float x , float y ) ; public final void uniform2fv ( WebGLUniformLocation location , Float32Array v ) { this . uniform2fv ( location , ( JavaScriptObject ) v ) ; } public final void uniform2fv ( WebGLUniformLocation location , float [ ] v ) { this . uniform2fv ( location , toJsArray ( v ) ) ; } private final native void uniform2fv ( WebGLUniformLocation location , JavaScriptObject v ) ; public final native void uniform2i ( WebGLUniformLocation location , int x , int y ) ; public final void uniform2iv ( WebGLUniformLocation location , Int32Array v ) { this . uniform2iv ( location , ( JavaScriptObject ) v ) ; } public final void uniform2iv ( WebGLUniformLocation location , int [ ] v ) { this . uniform2iv ( location , toJsArray ( v ) ) ; } private final native void uniform2iv ( WebGLUniformLocation location , JavaScriptObject v ) ; public final native void uniform3f ( WebGLUniformLocation location , float x , float y , float z ) ; public final void uniform3fv ( WebGLUniformLocation location , Float32Array v ) { this . uniform3fv ( location , ( JavaScriptObject ) v ) ; } public final void uniform3fv ( WebGLUniformLocation location , float [ ] v ) { this . uniform3fv ( location , toJsArray ( v ) ) ; } private final native void uniform3fv ( WebGLUniformLocation location , JavaScriptObject v ) ; public final native void uniform3i ( WebGLUniformLocation location , int x , int y , int z ) ; public final void uniform3iv ( WebGLUniformLocation location , Int32Array v ) { this . uniform3iv ( location , ( JavaScriptObject ) v ) ; } public final void uniform3iv ( WebGLUniformLocation location , int [ ] v ) { this . uniform3iv ( location , toJsArray ( v ) ) ; } private final native void uniform3iv ( WebGLUniformLocation location , JavaScriptObject v ) ; public final native void uniform4f ( WebGLUniformLocation location , float x , float y , float z , float w ) ; public final void uniform4fv ( WebGLUniformLocation location , Float32Array v ) { this . uniform4fv ( location , ( JavaScriptObject ) v ) ; } public final void uniform4fv ( WebGLUniformLocation location , float [ ] v ) { this . uniform4fv ( location , toJsArray ( v ) ) ; } private final native void uniform4fv ( WebGLUniformLocation location , JavaScriptObject v ) ; public final native void uniform4i ( WebGLUniformLocation location , int x , int y , int z , int w ) ; public final void uniform4iv ( WebGLUniformLocation location , Int32Array v ) { this . uniform4iv ( location , ( JavaScriptObject ) v ) ; } public final void uniform4iv ( WebGLUniformLocation location , int [ ] v ) { this . uniform4iv ( location , toJsArray ( v ) ) ; } private final native void uniform4iv ( WebGLUniformLocation location , JavaScriptObject v ) ; public final void uniformMatrix2fv ( WebGLUniformLocation location , boolean transpose , Float32Array value ) { this . uniformMatrix2fv ( location , transpose , ( JavaScriptObject ) value ) ; } public final void uniformMatrix2fv ( WebGLUniformLocation location , boolean transpose , float [ ] value ) { this . uniformMatrix2fv ( location , transpose , toJsArray ( value ) ) ; } private final native void uniformMatrix2fv ( WebGLUniformLocation location , boolean transpose , JavaScriptObject value ) ; public final void uniformMatrix3fv ( WebGLUniformLocation location , boolean transpose , Float32Array value ) { this . uniformMatrix3fv ( location , transpose , ( JavaScriptObject ) value ) ; } public final void uniformMatrix3fv ( WebGLUniformLocation location , boolean transpose , float [ ] value ) { this . uniformMatrix3fv ( location , transpose , toJsArray ( value ) ) ; } private final native void uniformMatrix3fv ( WebGLUniformLocation location , boolean transpose , JavaScriptObject value ) ; public final void uniformMatrix4fv ( WebGLUniformLocation location , boolean transpose , Float32Array value ) { this . uniformMatrix4fv ( location , transpose , ( JavaScriptObject ) value ) ; } public final void uniformMatrix4fv ( WebGLUniformLocation location , boolean transpose , float [ ] value ) { uniformMatrix4fv ( location , transpose , toJsArray ( value ) ) ; } private final native void uniformMatrix4fv ( WebGLUniformLocation location , boolean transpose , JavaScriptObject value ) ; public final native void useProgram ( WebGLProgram program ) ; public final native void validateProgram ( WebGLProgram program ) ; public final native void vertexAttrib1f ( int indx , float x ) ; public final void vertexAttrib1fv ( int indx , Float32Array values ) { this . vertexAttrib1fv ( indx , ( JavaScriptObject ) values ) ; } public final void vertexAttrib1fv ( int indx , float [ ] values ) { this . vertexAttrib1fv ( indx , toJsArray ( values ) ) ; } private final native void vertexAttrib1fv ( int indx , JavaScriptObject values ) ; public final native void vertexAttrib2f ( int indx , float x , float y ) ; public final void vertexAttrib2fv ( int indx , Float32Array values ) { this . vertexAttrib2fv ( indx , ( JavaScriptObject ) values ) ; } public final void vertexAttrib2fv ( int indx , float [ ] values ) { this . vertexAttrib2fv ( indx , toJsArray ( values ) ) ; } private final native void vertexAttrib2fv ( int indx , JavaScriptObject values ) ; public final native void vertexAttrib3f ( int indx , float x , float y , float z ) ; public final void vertexAttrib3fv ( int indx , Float32Array values ) { this . vertexAttrib3fv ( indx , ( JavaScriptObject ) values ) ; } public final void vertexAttrib3fv ( int indx , float [ ] values ) { this . vertexAttrib3fv ( indx , toJsArray ( values ) ) ; } private final native void vertexAttrib3fv ( int indx , JavaScriptObject values ) ; public final native void vertexAttrib4f ( int indx , float x , float y , float z , float w ) ; public final void vertexAttrib4fv ( int indx , Float32Array values ) { this . vertexAttrib4fv ( indx , ( JavaScriptObject ) values ) ; } public final void vertexAttrib4fv ( int indx , float [ ] values ) { this . vertexAttrib4fv ( indx , toJsArray ( values ) ) ; } public final Float32Array toJsArray ( float [ ] values ) { Float32Array array = TypedArrays . createFloat32Array ( values . length ) ; array . set ( values ) ; return array ; } public final Int32Array toJsArray ( int [ ] values ) { Int32Array array = TypedArrays . createInt32Array ( values . length ) ; array . set ( values ) ; return array ; } private final native void vertexAttrib4fv ( int indx , JavaScriptObject values ) ; public final native void vertexAttribPointer ( int indx , int size , int type , boolean normalized , int stride , int offset ) ; public final native void viewport ( int x , int y , int width , int height ) ; public final native String getParameterString ( int pname ) ; public final native int getParameteri ( int pname ) ; public final native boolean getParameterb ( int pname ) ; public final native float getParameterf ( int pname ) ; public final native < T extends WebGLObject > T getParametero ( int pname ) ; public final native < T extends ArrayBufferView > T getParameterv ( int pname ) ; public final native boolean getUniformb ( WebGLProgram program , WebGLUniformLocation location ) ; public final native int getUniformi ( WebGLProgram program , WebGLUniformLocation location ) ; public final native float getUniformf ( WebGLProgram program , WebGLUniformLocation location ) ; public final native < T extends ArrayBufferView > T getUniformv ( WebGLProgram program , WebGLUniformLocation location ) ; public final native int getVertexAttribi ( int index , int pname ) ; public final native boolean getVertexAttribb ( int index , int pname ) ; public final native < T extends WebGLObject > T getVertexAttribo ( int index , int pname ) ; public final native Float32Array getVertexAttribv ( int index , int pname ) ; public final native int getTexParameter ( int target , int pname ) ; public final native boolean getShaderParameterb ( WebGLShader shader , int pname ) ; public final native int getShaderParameteri ( WebGLShader shader , int pname ) ; public final native int getRenderbufferParameter ( int target , int pname ) ; public final native boolean getProgramParameterb ( WebGLProgram program , int pname ) ; public final native int getProgramParameteri ( WebGLProgram program , int pname ) ; public final native int getBufferParameter ( int target , int pname ) ; public final native int getFramebufferAttachmentParameteri ( int target , int attachment , int pname ) ; public final native < T extends WebGLObject > T getFramebufferAttachmentParametero ( int target , int attachment , int pname ) ; } 
