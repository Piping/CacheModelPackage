package org . gradle . internal . graph ; import org . gradle . api . Action ; import org . gradle . logging . StyledTextOutput ; import static org . gradle . logging . StyledTextOutput . Style . Info ; public class GraphRenderer { private final StyledTextOutput output ; private StringBuilder prefix = new StringBuilder ( ) ; private boolean seenRootChildren ; private boolean lastChild = true ; public GraphRenderer ( StyledTextOutput output ) { this . output = output ; } public void visit ( Action < ? super StyledTextOutput > node , boolean lastChild ) { if ( seenRootChildren ) { output . withStyle ( Info ) . text ( prefix + ( lastChild ? <str> : <str> ) ) ; } this . lastChild = lastChild ; node . execute ( output ) ; output . println ( ) ; } public void startChildren ( ) { if ( seenRootChildren ) { prefix . append ( lastChild ? <str> : <str> ) ; } seenRootChildren = true ; } public void completeChildren ( ) { if ( prefix . length ( ) = = <int> ) { seenRootChildren = false ; } else { prefix . setLength ( prefix . length ( ) - <int> ) ; } } public StyledTextOutput getOutput ( ) { return output ; } } 
