package org . elasticsearch . script ; import org . elasticsearch . test . ESTestCase ; import java . security . AllPermission ; import java . security . PermissionCollection ; public class ClassPermissionTests extends ESTestCase { public void testEquals ( ) { assertEquals ( new ClassPermission ( <str> ) , new ClassPermission ( <str> ) ) ; assertFalse ( new ClassPermission ( <str> ) . equals ( new AllPermission ( ) ) ) ; } public void testImplies ( ) { assertTrue ( new ClassPermission ( <str> ) . implies ( new ClassPermission ( <str> ) ) ) ; assertFalse ( new ClassPermission ( <str> ) . implies ( new ClassPermission ( <str> ) ) ) ; assertFalse ( new ClassPermission ( <str> ) . implies ( null ) ) ; assertFalse ( new ClassPermission ( <str> ) . implies ( new AllPermission ( ) ) ) ; } public void testStandard ( ) { assertTrue ( new ClassPermission ( <str> ) . implies ( new ClassPermission ( <str> ) ) ) ; assertFalse ( new ClassPermission ( <str> ) . implies ( new ClassPermission ( <str> ) ) ) ; } public void testPermissionCollection ( ) { ClassPermission math = new ClassPermission ( <str> ) ; PermissionCollection collection = math . newPermissionCollection ( ) ; collection . add ( math ) ; assertTrue ( collection . implies ( new ClassPermission ( <str> ) ) ) ; assertFalse ( collection . implies ( new ClassPermission ( <str> ) ) ) ; } public void testPermissionCollectionStandard ( ) { ClassPermission standard = new ClassPermission ( <str> ) ; PermissionCollection collection = standard . newPermissionCollection ( ) ; collection . add ( standard ) ; assertTrue ( collection . implies ( new ClassPermission ( <str> ) ) ) ; assertFalse ( collection . implies ( new ClassPermission ( <str> ) ) ) ; } public void testWildcards ( ) { assertTrue ( new ClassPermission ( <str> ) . implies ( new ClassPermission ( <str> ) ) ) ; assertTrue ( new ClassPermission ( <str> ) . implies ( new ClassPermission ( <str> ) ) ) ; assertTrue ( new ClassPermission ( <str> ) . implies ( new ClassPermission ( <str> ) ) ) ; assertFalse ( new ClassPermission ( <str> ) . implies ( new ClassPermission ( <str> ) ) ) ; assertFalse ( new ClassPermission ( <str> ) . implies ( new ClassPermission ( <str> ) ) ) ; } public void testPermissionCollectionWildcards ( ) { ClassPermission lang = new ClassPermission ( <str> ) ; PermissionCollection collection = lang . newPermissionCollection ( ) ; collection . add ( lang ) ; assertTrue ( collection . implies ( new ClassPermission ( <str> ) ) ) ; assertFalse ( collection . implies ( new ClassPermission ( <str> ) ) ) ; } } 
