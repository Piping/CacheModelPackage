package org . gradle . api . publication . maven . internal . action ; import org . sonatype . aether . RepositorySystemSession ; import org . sonatype . aether . artifact . Artifact ; import org . sonatype . aether . deployment . DeployRequest ; import org . sonatype . aether . impl . MetadataGenerator ; import org . sonatype . aether . impl . MetadataGeneratorFactory ; import org . sonatype . aether . installation . InstallRequest ; import org . sonatype . aether . metadata . Metadata ; import java . util . Collection ; import java . util . Collections ; class SnapshotVersionManager implements MetadataGeneratorFactory , MetadataGenerator { private boolean uniqueVersion = true ; public void setUniqueVersion ( boolean uniqueVersion ) { this . uniqueVersion = uniqueVersion ; } @Override public int getPriority ( ) { return - <int> ; } @Override public MetadataGenerator newInstance ( RepositorySystemSession session , InstallRequest request ) { return null ; } @Override public MetadataGenerator newInstance ( RepositorySystemSession session , DeployRequest request ) { return uniqueVersion ? null : this ; } @Override public Collection < ? extends Metadata > prepare ( Collection < ? extends Artifact > artifacts ) { return Collections . emptySet ( ) ; } @Override public Artifact transformArtifact ( Artifact artifact ) { if ( artifact . isSnapshot ( ) ) { artifact = artifact . setVersion ( artifact . getBaseVersion ( ) ) ; } return artifact ; } @Override public Collection < ? extends Metadata > finish ( Collection < ? extends Artifact > artifacts ) { return Collections . emptySet ( ) ; } } 
