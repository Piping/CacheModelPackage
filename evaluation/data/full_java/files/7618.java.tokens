package org . elasticsearch . search . suggest . term ; import org . elasticsearch . common . HasContextAndHeaders ; import org . elasticsearch . common . ParseFieldMatcher ; import org . elasticsearch . common . xcontent . XContentParser ; import org . elasticsearch . index . fielddata . IndexFieldDataService ; import org . elasticsearch . index . mapper . MapperService ; import org . elasticsearch . search . suggest . DirectSpellcheckerSettings ; import org . elasticsearch . search . suggest . SuggestContextParser ; import org . elasticsearch . search . suggest . SuggestUtils ; import org . elasticsearch . search . suggest . SuggestionSearchContext ; import java . io . IOException ; public final class TermSuggestParser implements SuggestContextParser { private TermSuggester suggester ; public TermSuggestParser ( TermSuggester suggester ) { this . suggester = suggester ; } @Override public SuggestionSearchContext . SuggestionContext parse ( XContentParser parser , MapperService mapperService , IndexFieldDataService fieldDataService , HasContextAndHeaders headersContext ) throws IOException { XContentParser . Token token ; String fieldName = null ; TermSuggestionContext suggestion = new TermSuggestionContext ( suggester ) ; DirectSpellcheckerSettings settings = suggestion . getDirectSpellCheckerSettings ( ) ; while ( ( token = parser . nextToken ( ) ) ! = XContentParser . Token . END_OBJECT ) { if ( token = = XContentParser . Token . FIELD_NAME ) { fieldName = parser . currentName ( ) ; } else if ( token . isValue ( ) ) { parseTokenValue ( parser , mapperService , fieldName , suggestion , settings , mapperService . getIndexSettings ( ) . getParseFieldMatcher ( ) ) ; } else { throw new IllegalArgumentException ( <str> + fieldName + <str> ) ; } } return suggestion ; } private void parseTokenValue ( XContentParser parser , MapperService mapperService , String fieldName , TermSuggestionContext suggestion , DirectSpellcheckerSettings settings , ParseFieldMatcher parseFieldMatcher ) throws IOException { if ( ! ( SuggestUtils . parseSuggestContext ( parser , mapperService , fieldName , suggestion , parseFieldMatcher ) | | SuggestUtils . parseDirectSpellcheckerSettings ( parser , fieldName , settings , parseFieldMatcher ) ) ) { throw new IllegalArgumentException ( <str> + fieldName + <str> ) ; } } } 
