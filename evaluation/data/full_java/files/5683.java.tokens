package org . elasticsearch . common . breaker ; import org . elasticsearch . ElasticsearchException ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . common . xcontent . XContentBuilder ; import java . io . IOException ; public class CircuitBreakingException extends ElasticsearchException { private final long bytesWanted ; private final long byteLimit ; public CircuitBreakingException ( String message ) { super ( message ) ; this . bytesWanted = <int> ; this . byteLimit = <int> ; } public CircuitBreakingException ( StreamInput in ) throws IOException { super ( in ) ; byteLimit = in . readLong ( ) ; bytesWanted = in . readLong ( ) ; } public CircuitBreakingException ( String message , long bytesWanted , long byteLimit ) { super ( message ) ; this . bytesWanted = bytesWanted ; this . byteLimit = byteLimit ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeLong ( byteLimit ) ; out . writeLong ( bytesWanted ) ; } public long getBytesWanted ( ) { return this . bytesWanted ; } public long getByteLimit ( ) { return this . byteLimit ; } @Override protected void innerToXContent ( XContentBuilder builder , Params params ) throws IOException { builder . field ( <str> , bytesWanted ) ; builder . field ( <str> , byteLimit ) ; super . innerToXContent ( builder , params ) ; } } 
