package org . elasticsearch . index . suggest . stats ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . common . io . stream . Streamable ; import org . elasticsearch . common . unit . TimeValue ; import org . elasticsearch . common . xcontent . ToXContent ; import org . elasticsearch . common . xcontent . XContentBuilder ; import org . elasticsearch . common . xcontent . XContentBuilderString ; import java . io . IOException ; public class SuggestStats implements Streamable , ToXContent { private long suggestCount ; private long suggestTimeInMillis ; private long current ; public SuggestStats ( ) { } SuggestStats ( long suggestCount , long suggestTimeInMillis , long current ) { this . suggestCount = suggestCount ; this . suggestTimeInMillis = suggestTimeInMillis ; this . current = current ; } public long getCount ( ) { return suggestCount ; } public long getTimeInMillis ( ) { return suggestTimeInMillis ; } public TimeValue getTime ( ) { return new TimeValue ( getTimeInMillis ( ) ) ; } public long getCurrent ( ) { return current ; } public void add ( SuggestStats suggestStats ) { if ( suggestStats ! = null ) { suggestCount + = suggestStats . getCount ( ) ; suggestTimeInMillis + = suggestStats . getTimeInMillis ( ) ; current + = suggestStats . getCurrent ( ) ; } } public static SuggestStats readSuggestStats ( StreamInput in ) throws IOException { SuggestStats stats = new SuggestStats ( ) ; stats . readFrom ( in ) ; return stats ; } static final class Fields { static final XContentBuilderString SUGGEST = new XContentBuilderString ( <str> ) ; static final XContentBuilderString TOTAL = new XContentBuilderString ( <str> ) ; static final XContentBuilderString TIME = new XContentBuilderString ( <str> ) ; static final XContentBuilderString TIME_IN_MILLIS = new XContentBuilderString ( <str> ) ; static final XContentBuilderString CURRENT = new XContentBuilderString ( <str> ) ; } @Override public void readFrom ( StreamInput in ) throws IOException { suggestCount = in . readVLong ( ) ; suggestTimeInMillis = in . readVLong ( ) ; current = in . readVLong ( ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { out . writeVLong ( suggestCount ) ; out . writeVLong ( suggestTimeInMillis ) ; out . writeVLong ( current ) ; } @Override public XContentBuilder toXContent ( XContentBuilder builder , Params params ) throws IOException { builder . startObject ( Fields . SUGGEST ) ; builder . field ( Fields . TOTAL , suggestCount ) ; builder . timeValueField ( Fields . TIME_IN_MILLIS , Fields . TIME , suggestTimeInMillis ) ; builder . field ( Fields . CURRENT , current ) ; builder . endObject ( ) ; return builder ; } } 
