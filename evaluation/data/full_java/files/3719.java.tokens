package org . eclipse . debug . internal . core . sourcelookup . containers ; import org . eclipse . core . resources . IProject ; import org . eclipse . core . resources . IWorkspace ; import org . eclipse . core . resources . ResourcesPlugin ; import org . eclipse . core . runtime . CoreException ; import org . eclipse . debug . core . sourcelookup . ISourceContainer ; import org . eclipse . debug . core . sourcelookup . containers . AbstractSourceContainerTypeDelegate ; import org . eclipse . debug . core . sourcelookup . containers . ProjectSourceContainer ; import org . eclipse . debug . internal . core . sourcelookup . SourceLookupMessages ; import org . w3c . dom . Document ; import org . w3c . dom . Element ; import org . w3c . dom . Node ; public class ProjectSourceContainerType extends AbstractSourceContainerTypeDelegate { @Override public String getMemento ( ISourceContainer container ) throws CoreException { ProjectSourceContainer project = ( ProjectSourceContainer ) container ; Document document = newDocument ( ) ; Element element = document . createElement ( <str> ) ; element . setAttribute ( <str> , project . getContainer ( ) . getName ( ) ) ; String referenced = <str> ; if ( project . isSearchReferencedProjects ( ) ) { referenced = <str> ; } element . setAttribute ( <str> , referenced ) ; document . appendChild ( element ) ; return serializeDocument ( document ) ; } @Override public ISourceContainer createSourceContainer ( String memento ) throws CoreException { Node node = parseDocument ( memento ) ; if ( node . getNodeType ( ) = = Node . ELEMENT_NODE ) { Element element = ( Element ) node ; if ( <str> . equals ( element . getNodeName ( ) ) ) { String string = element . getAttribute ( <str> ) ; if ( string = = null | | string . length ( ) = = <int> ) { abort ( SourceLookupMessages . ProjectSourceContainerType_10 , null ) ; } String nest = element . getAttribute ( <str> ) ; boolean ref = <str> . equals ( nest ) ; IWorkspace workspace = ResourcesPlugin . getWorkspace ( ) ; IProject project = workspace . getRoot ( ) . getProject ( string ) ; return new ProjectSourceContainer ( project , ref ) ; } abort ( SourceLookupMessages . ProjectSourceContainerType_11 , null ) ; } abort ( SourceLookupMessages . ProjectSourceContainerType_12 , null ) ; return null ; } } 
