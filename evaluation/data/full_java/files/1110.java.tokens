package org . apache . cassandra . tools . nodetool ; import static java . lang . String . format ; import io . airlift . command . Command ; import org . apache . cassandra . tools . NodeProbe ; import org . apache . cassandra . tools . NodeTool . NodeToolCmd ; @Command ( name = <str> , description = <str> ) public class ProxyHistograms extends NodeToolCmd { @Override public void execute ( NodeProbe probe ) { String [ ] percentiles = new String [ ] { <str> , <str> , <str> , <str> , <str> , <str> , <str> } ; double [ ] readLatency = probe . metricPercentilesAsArray ( probe . getProxyMetric ( <str> ) ) ; double [ ] writeLatency = probe . metricPercentilesAsArray ( probe . getProxyMetric ( <str> ) ) ; double [ ] rangeLatency = probe . metricPercentilesAsArray ( probe . getProxyMetric ( <str> ) ) ; System . out . println ( <str> ) ; System . out . println ( format ( <str> , <str> , <str> , <str> , <str> ) ) ; System . out . println ( format ( <str> , <str> , <str> , <str> , <str> ) ) ; for ( int i = <int> ; i < percentiles . length ; i + + ) { System . out . println ( format ( <str> , percentiles [ i ] , readLatency [ i ] , writeLatency [ i ] , rangeLatency [ i ] ) ) ; } System . out . println ( ) ; } } 
