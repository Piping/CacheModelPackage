package org . gradle . process . internal . child ; import org . gradle . api . Action ; import org . gradle . api . logging . LogLevel ; import java . net . URL ; import java . util . Collection ; import java . util . concurrent . Callable ; public class SystemApplicationClassLoaderWorker implements Callable < Void > { private final int logLevel ; private final Collection < String > sharedPackages ; private final Collection < URL > workerClassPath ; private final byte [ ] serializedWorker ; public SystemApplicationClassLoaderWorker ( int logLevel , Collection < String > sharedPackages , Collection < URL > workerClassPath , byte [ ] serializedWorker ) { this . logLevel = logLevel ; this . sharedPackages = sharedPackages ; this . workerClassPath = workerClassPath ; this . serializedWorker = serializedWorker ; } public Void call ( ) throws Exception { final Action < WorkerContext > action = new ImplementationClassLoaderWorker ( LogLevel . values ( ) [ logLevel ] , sharedPackages , workerClassPath , serializedWorker ) ; action . execute ( new WorkerContext ( ) { public ClassLoader getApplicationClassLoader ( ) { return ClassLoader . getSystemClassLoader ( ) ; } } ) ; return null ; } } 
