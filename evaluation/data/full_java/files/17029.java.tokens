package com . badlogic . gdx . physics . box2d ; import com . badlogic . gdx . math . Vector2 ; public class CircleShape extends Shape { public CircleShape ( ) { addr = newCircleShape ( ) ; } private native long newCircleShape ( ) ; protected CircleShape ( long addr ) { this . addr = addr ; } @Override public Type getType ( ) { return Type . Circle ; } private final float [ ] tmp = new float [ <int> ] ; private final Vector2 position = new Vector2 ( ) ; public Vector2 getPosition ( ) { jniGetPosition ( addr , tmp ) ; position . x = tmp [ <int> ] ; position . y = tmp [ <int> ] ; return position ; } private native void jniGetPosition ( long addr , float [ ] position ) ; public void setPosition ( Vector2 position ) { jniSetPosition ( addr , position . x , position . y ) ; } private native void jniSetPosition ( long addr , float positionX , float positionY ) ; } 
