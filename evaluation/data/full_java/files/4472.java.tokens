package org . eclipse . debug . internal . ui . viewers . update ; import org . eclipse . debug . core . DebugEvent ; import org . eclipse . debug . core . model . IDebugElement ; import org . eclipse . debug . core . model . IDebugTarget ; import org . eclipse . debug . core . model . IStackFrame ; public class DefaultVariableViewModelProxy extends EventHandlerModelProxy { private IStackFrame fFrame ; public DefaultVariableViewModelProxy ( IStackFrame frame ) { super ( ) ; fFrame = frame ; } @Override public void dispose ( ) { super . dispose ( ) ; fFrame = null ; } @Override protected DebugEventHandler [ ] createEventHandlers ( ) { return new DebugEventHandler [ ] { new VariablesViewEventHandler ( this , fFrame ) } ; } @Override protected synchronized boolean containsEvent ( DebugEvent event ) { if ( ! isDisposed ( ) ) { Object source = event . getSource ( ) ; if ( source instanceof IDebugElement ) { IDebugTarget debugTarget = ( ( IDebugElement ) source ) . getDebugTarget ( ) ; if ( debugTarget ! = null ) { return debugTarget . equals ( fFrame . getDebugTarget ( ) ) ; } } } return false ; } } 
