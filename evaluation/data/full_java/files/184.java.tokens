package org . apache . cassandra . cql3 . functions ; import java . nio . ByteBuffer ; import java . util . List ; import com . datastax . driver . core . DataType ; public abstract class JavaUDF { private final DataType returnDataType ; private final DataType [ ] argDataTypes ; protected JavaUDF ( DataType returnDataType , DataType [ ] argDataTypes ) { this . returnDataType = returnDataType ; this . argDataTypes = argDataTypes ; } protected abstract ByteBuffer executeImpl ( int protocolVersion , List < ByteBuffer > params ) ; protected Object compose ( int protocolVersion , int argIndex , ByteBuffer value ) { return UDFunction . compose ( argDataTypes , protocolVersion , argIndex , value ) ; } protected ByteBuffer decompose ( int protocolVersion , Object value ) { return UDFunction . decompose ( returnDataType , protocolVersion , value ) ; } protected float compose_float ( int protocolVersion , int argIndex , ByteBuffer value ) { assert value ! = null & & value . remaining ( ) > <int> ; return ( float ) UDHelper . deserialize ( DataType . cfloat ( ) , protocolVersion , value ) ; } protected double compose_double ( int protocolVersion , int argIndex , ByteBuffer value ) { assert value ! = null & & value . remaining ( ) > <int> ; return ( double ) UDHelper . deserialize ( DataType . cdouble ( ) , protocolVersion , value ) ; } protected byte compose_byte ( int protocolVersion , int argIndex , ByteBuffer value ) { assert value ! = null & & value . remaining ( ) > <int> ; return ( byte ) UDHelper . deserialize ( DataType . tinyint ( ) , protocolVersion , value ) ; } protected short compose_short ( int protocolVersion , int argIndex , ByteBuffer value ) { assert value ! = null & & value . remaining ( ) > <int> ; return ( short ) UDHelper . deserialize ( DataType . smallint ( ) , protocolVersion , value ) ; } protected int compose_int ( int protocolVersion , int argIndex , ByteBuffer value ) { assert value ! = null & & value . remaining ( ) > <int> ; return ( int ) UDHelper . deserialize ( DataType . cint ( ) , protocolVersion , value ) ; } protected long compose_long ( int protocolVersion , int argIndex , ByteBuffer value ) { assert value ! = null & & value . remaining ( ) > <int> ; return ( long ) UDHelper . deserialize ( DataType . bigint ( ) , protocolVersion , value ) ; } protected boolean compose_boolean ( int protocolVersion , int argIndex , ByteBuffer value ) { assert value ! = null & & value . remaining ( ) > <int> ; return ( boolean ) UDHelper . deserialize ( DataType . cboolean ( ) , protocolVersion , value ) ; } } 
