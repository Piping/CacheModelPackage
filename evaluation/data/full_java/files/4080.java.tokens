package org . eclipse . debug . internal . ui . actions . breakpoints ; import org . eclipse . core . runtime . CoreException ; import org . eclipse . debug . core . DebugPlugin ; import org . eclipse . debug . ui . DebugUITools ; import org . eclipse . debug . ui . actions . IToggleBreakpointsTarget ; import org . eclipse . jface . action . IAction ; import org . eclipse . jface . viewers . ISelection ; import org . eclipse . jface . viewers . IStructuredSelection ; import org . eclipse . swt . widgets . Event ; import org . eclipse . ui . IActionDelegate2 ; import org . eclipse . ui . IObjectActionDelegate ; import org . eclipse . ui . IWorkbenchPart ; public abstract class ToggleBreakpointObjectActionDelegate implements IObjectActionDelegate , IActionDelegate2 { private IWorkbenchPart fPart ; private IStructuredSelection fSelection ; @Override public void setActivePart ( IAction action , IWorkbenchPart targetPart ) { fPart = targetPart ; } @Override public void run ( IAction action ) { IToggleBreakpointsTarget target = DebugUITools . getToggleBreakpointsTargetManager ( ) . getToggleBreakpointsTarget ( fPart , fSelection ) ; if ( target ! = null ) { try { performAction ( target , fPart , fSelection ) ; } catch ( CoreException e ) { DebugPlugin . log ( e ) ; } } } protected abstract void performAction ( IToggleBreakpointsTarget target , IWorkbenchPart part , ISelection selection ) throws CoreException ; @Override public void selectionChanged ( IAction action , ISelection selection ) { boolean enabled = false ; if ( selection instanceof IStructuredSelection ) { IStructuredSelection ss = ( IStructuredSelection ) selection ; this . fSelection = ss ; if ( fPart ! = null ) { IToggleBreakpointsTarget target = DebugUITools . getToggleBreakpointsTargetManager ( ) . getToggleBreakpointsTarget ( fPart , fSelection ) ; enabled = target ! = null ; } } action . setEnabled ( enabled ) ; } @Override public void init ( IAction action ) { } @Override public void dispose ( ) { fSelection = null ; fPart = null ; } @Override public void runWithEvent ( IAction action , Event event ) { run ( action ) ; } } 
