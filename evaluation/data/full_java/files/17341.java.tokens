package com . badlogic . gdx . physics . bullet . collision ; import com . badlogic . gdx . physics . bullet . BulletBase ; import com . badlogic . gdx . physics . bullet . linearmath . * ; import com . badlogic . gdx . math . Vector3 ; import com . badlogic . gdx . math . Quaternion ; import com . badlogic . gdx . math . Matrix3 ; import com . badlogic . gdx . math . Matrix4 ; public class btCylinderShapeData extends BulletBase { private long swigCPtr ; protected btCylinderShapeData ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , cPtr , cMemoryOwn ) ; swigCPtr = cPtr ; } public btCylinderShapeData ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( swigCPtr = cPtr , cMemoryOwn ) ; } public static long getCPtr ( btCylinderShapeData obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; CollisionJNI . delete_btCylinderShapeData ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } public void setConvexInternalShapeData ( btConvexInternalShapeData value ) { CollisionJNI . btCylinderShapeData_convexInternalShapeData_set ( swigCPtr , this , btConvexInternalShapeData . getCPtr ( value ) , value ) ; } public btConvexInternalShapeData getConvexInternalShapeData ( ) { long cPtr = CollisionJNI . btCylinderShapeData_convexInternalShapeData_get ( swigCPtr , this ) ; return ( cPtr = = <int> ) ? null : new btConvexInternalShapeData ( cPtr , false ) ; } public void setUpAxis ( int value ) { CollisionJNI . btCylinderShapeData_upAxis_set ( swigCPtr , this , value ) ; } public int getUpAxis ( ) { return CollisionJNI . btCylinderShapeData_upAxis_get ( swigCPtr , this ) ; } public void setPadding ( String value ) { CollisionJNI . btCylinderShapeData_padding_set ( swigCPtr , this , value ) ; } public String getPadding ( ) { return CollisionJNI . btCylinderShapeData_padding_get ( swigCPtr , this ) ; } public btCylinderShapeData ( ) { this ( CollisionJNI . new_btCylinderShapeData ( ) , true ) ; } } 
