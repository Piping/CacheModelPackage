package com . badlogic . gdx . tests . box2d ; import com . badlogic . gdx . math . Vector2 ; import com . badlogic . gdx . physics . box2d . Body ; import com . badlogic . gdx . physics . box2d . BodyDef ; import com . badlogic . gdx . physics . box2d . BodyDef . BodyType ; import com . badlogic . gdx . physics . box2d . CircleShape ; import com . badlogic . gdx . physics . box2d . EdgeShape ; import com . badlogic . gdx . physics . box2d . World ; public class SphereStack extends Box2DTest { int e_count = <int> ; @Override protected void createWorld ( World world ) { { BodyDef bd = new BodyDef ( ) ; Body ground = world . createBody ( bd ) ; EdgeShape shape = new EdgeShape ( ) ; shape . set ( new Vector2 ( - <int> , <int> ) , new Vector2 ( <int> , <int> ) ) ; ground . createFixture ( shape , <int> ) ; shape . dispose ( ) ; } { CircleShape shape = new CircleShape ( ) ; shape . setRadius ( <float> ) ; for ( int i = <int> ; i < e_count ; i + + ) { BodyDef bd = new BodyDef ( ) ; bd . type = BodyType . DynamicBody ; bd . position . set ( <int> , <float> + <float> * i ) ; Body body = world . createBody ( bd ) ; body . createFixture ( shape , <float> ) ; } shape . dispose ( ) ; } } } 
