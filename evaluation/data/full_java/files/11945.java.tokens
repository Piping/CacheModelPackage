package org . gradle . execution . taskpath ; import org . gradle . api . InvalidUserDataException ; import org . gradle . api . Project ; import org . gradle . api . internal . project . ProjectInternal ; import org . gradle . util . NameMatcher ; import java . util . Map ; public class ProjectFinderByTaskPath { public ProjectInternal findProject ( String projectPath , ProjectInternal startFrom ) { if ( projectPath . equals ( Project . PATH_SEPARATOR ) ) { return startFrom . getRootProject ( ) ; } Project current = startFrom ; if ( projectPath . startsWith ( Project . PATH_SEPARATOR ) ) { current = current . getRootProject ( ) ; projectPath = projectPath . substring ( <int> ) ; } for ( String pattern : projectPath . split ( Project . PATH_SEPARATOR ) ) { Map < String , Project > children = current . getChildProjects ( ) ; NameMatcher matcher = new NameMatcher ( ) ; Project child = matcher . find ( pattern , children ) ; if ( child ! = null ) { current = child ; continue ; } throw new ProjectLookupException ( matcher . formatErrorMessage ( <str> , current ) ) ; } return ( ProjectInternal ) current ; } public static class ProjectLookupException extends InvalidUserDataException { public ProjectLookupException ( String message ) { super ( message ) ; } } } 
