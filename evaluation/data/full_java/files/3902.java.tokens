package org . eclipse . debug . tests . launching ; import java . net . URI ; import java . net . URISyntaxException ; import java . util . HashMap ; import java . util . Map ; import org . eclipse . core . filesystem . IFileStore ; import org . eclipse . core . filesystem . provider . FileSystem ; import org . eclipse . core . runtime . Path ; public class DebugFileSystem extends FileSystem { public static final byte [ ] DIRECTORY_BYTES = new byte [ ] { <int> , <int> , <int> , <int> } ; private static DebugFileSystem system ; private final Map < URI , byte [ ] > files = new HashMap < URI , byte [ ] > ( ) ; public DebugFileSystem ( ) { system = this ; try { setContents ( new URI ( <str> , Path . ROOT . toString ( ) , null ) , DIRECTORY_BYTES ) ; } catch ( URISyntaxException e ) { } } static DebugFileSystem getDefault ( ) { return system ; } @Override public IFileStore getStore ( URI uri ) { return new DebugFileStore ( uri ) ; } @Override public boolean canDelete ( ) { return true ; } @Override public boolean canWrite ( ) { return true ; } public byte [ ] getContents ( URI uri ) { return files . get ( uri ) ; } public void delete ( URI uri ) { files . remove ( uri ) ; } public void setContents ( URI uri , byte [ ] bytes ) { files . put ( uri , bytes ) ; } public URI [ ] getFileURIs ( ) { return files . keySet ( ) . toArray ( new URI [ files . size ( ) ] ) ; } } 
