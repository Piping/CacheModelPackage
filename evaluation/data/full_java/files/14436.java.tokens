package org . gradle . model . internal . registry ; import com . google . common . collect . Multimap ; import org . gradle . model . RuleSource ; import org . gradle . model . internal . core . * ; public interface ModelRegistryInternal extends ModelRegistry { < T extends ModelNodeInternal > T registerNode ( T node , Multimap < ModelActionRole , ? extends ModelAction < ? > > actions ) ; < T > void bind ( ModelReference < T > subject , ModelActionRole role , ModelAction < ? > mutator , ModelPath scope ) ; ModelRegistry configureMatching ( ModelPredicate predicate , ModelActionRole role , ModelAction < ? > action ) ; ModelRegistry configureMatching ( ModelPredicate predicate , Class < ? extends RuleSource > rules ) ; void transition ( ModelNodeInternal node , ModelNode . State desired , boolean laterOk ) ; } 
