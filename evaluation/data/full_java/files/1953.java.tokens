package org . nd4j . linalg . api . blas ; import org . nd4j . linalg . api . buffer . DataBuffer ; import org . nd4j . linalg . api . complex . IComplexNDArray ; import org . nd4j . linalg . api . complex . IComplexNumber ; import org . nd4j . linalg . api . ndarray . INDArray ; public interface Level1 { double dot ( int n , double alpha , INDArray X , INDArray Y ) ; double dot ( int n , DataBuffer dx , int offsetX , int incrX , DataBuffer y , int offsetY , int incrY ) ; IComplexNumber dot ( int n , IComplexNumber alpha , IComplexNDArray X , IComplexNDArray Y ) ; double nrm2 ( INDArray arr ) ; IComplexNumber nrm2 ( IComplexNDArray arr ) ; double asum ( INDArray arr ) ; double asum ( int n , DataBuffer x , int offsetX , int incrX ) ; IComplexNumber asum ( IComplexNDArray arr ) ; int iamax ( INDArray arr ) ; int iamax ( int n , INDArray arr , int stride ) ; int iamax ( int n , DataBuffer x , int offsetX , int incrX ) ; int iamax ( IComplexNDArray arr ) ; int iamin ( INDArray arr ) ; int iamin ( IComplexNDArray arr ) ; void swap ( INDArray x , INDArray y ) ; void swap ( IComplexNDArray x , IComplexNDArray y ) ; void copy ( INDArray x , INDArray y ) ; void copy ( int n , DataBuffer x , int offsetX , int incrX , DataBuffer y , int offsetY , int incrY ) ; void copy ( IComplexNDArray x , IComplexNDArray y ) ; void axpy ( int n , double alpha , INDArray x , INDArray y ) ; void axpy ( int n , double alpha , DataBuffer x , int offsetX , int incrX , DataBuffer y , int offsetY , int incrY ) ; void axpy ( int n , IComplexNumber alpha , IComplexNDArray x , IComplexNDArray y ) ; void rotg ( INDArray a , INDArray b , INDArray c , INDArray s ) ; void rot ( int N , INDArray X , INDArray Y , double c , double s ) ; void rot ( int N , IComplexNDArray X , IComplexNDArray Y , IComplexNumber c , IComplexNumber s ) ; void rotmg ( INDArray d1 , INDArray d2 , INDArray b1 , double b2 , INDArray P ) ; void rotmg ( IComplexNDArray d1 , IComplexNDArray d2 , IComplexNDArray b1 , IComplexNumber b2 , IComplexNDArray P ) ; void scal ( int N , double alpha , INDArray X ) ; void scal ( int N , IComplexNumber alpha , IComplexNDArray X ) ; public boolean supportsDataBufferL1Ops ( ) ; } 
