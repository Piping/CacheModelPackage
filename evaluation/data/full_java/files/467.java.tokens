package org . apache . cassandra . db . monitoring ; public abstract class MonitorableImpl implements Monitorable { private MonitoringState state ; private ConstructionTime constructionTime ; private long timeout ; protected MonitorableImpl ( ) { this . state = MonitoringState . IN_PROGRESS ; } public void setMonitoringTime ( ConstructionTime constructionTime , long timeout ) { this . constructionTime = constructionTime ; this . timeout = timeout ; } public ConstructionTime constructionTime ( ) { return constructionTime ; } public long timeout ( ) { return timeout ; } public boolean isInProgress ( ) { check ( ) ; return state = = MonitoringState . IN_PROGRESS ; } public boolean isAborted ( ) { check ( ) ; return state = = MonitoringState . ABORTED ; } public boolean isCompleted ( ) { check ( ) ; return state = = MonitoringState . COMPLETED ; } public boolean abort ( ) { if ( state = = MonitoringState . IN_PROGRESS ) { if ( constructionTime ! = null ) MonitoringTask . addFailedOperation ( this , ApproximateTime . currentTimeMillis ( ) ) ; state = MonitoringState . ABORTED ; return true ; } return state = = MonitoringState . ABORTED ; } public boolean complete ( ) { if ( state = = MonitoringState . IN_PROGRESS ) { state = MonitoringState . COMPLETED ; return true ; } return state = = MonitoringState . COMPLETED ; } private void check ( ) { if ( constructionTime = = null | | state ! = MonitoringState . IN_PROGRESS ) return ; long elapsed = ApproximateTime . currentTimeMillis ( ) - constructionTime . timestamp ; if ( elapsed > = timeout ) abort ( ) ; } } 
