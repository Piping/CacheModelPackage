package com . badlogic . gdx . physics . box2d ; import com . badlogic . gdx . math . Vector2 ; public class WorldManifold { protected final Vector2 normal = new Vector2 ( ) ; protected final Vector2 [ ] points = { new Vector2 ( ) , new Vector2 ( ) } ; protected final float [ ] separations = new float [ <int> ] ; protected int numContactPoints ; protected WorldManifold ( ) { } protected WorldManifold ( org . jbox2d . collision . WorldManifold manifold ) { normal . set ( manifold . normal . x , manifold . normal . y ) ; for ( int i = <int> ; i < manifold . points . length ; i + + ) { points [ i ] . set ( manifold . points [ i ] . x , manifold . points [ i ] . y ) ; } numContactPoints = manifold . points . length ; separations [ <int> ] = manifold . separations [ <int> ] ; separations [ <int> ] = manifold . separations [ <int> ] ; } public Vector2 getNormal ( ) { return normal ; } public Vector2 [ ] getPoints ( ) { return points ; } public float [ ] getSeparations ( ) { return separations ; } public int getNumberOfContactPoints ( ) { return numContactPoints ; } } 
