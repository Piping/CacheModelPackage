package org . gradle . execution ; import com . google . common . collect . Lists ; import org . gradle . api . internal . GradleInternal ; import java . util . List ; public class DefaultBuildExecuter implements BuildExecuter { private final List < BuildExecutionAction > executionActions ; public DefaultBuildExecuter ( Iterable < ? extends BuildExecutionAction > executionActions ) { this . executionActions = Lists . newArrayList ( executionActions ) ; } public void execute ( GradleInternal gradle ) { execute ( gradle , <int> ) ; } private void execute ( final GradleInternal gradle , final int index ) { if ( index > = executionActions . size ( ) ) { return ; } executionActions . get ( index ) . execute ( new BuildExecutionContext ( ) { public GradleInternal getGradle ( ) { return gradle ; } public void proceed ( ) { execute ( gradle , index + <int> ) ; } } ) ; } } 
