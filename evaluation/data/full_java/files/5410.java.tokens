package org . elasticsearch . action . support ; import org . apache . lucene . store . AlreadyClosedException ; import org . elasticsearch . ExceptionsHelper ; import org . elasticsearch . action . NoShardAvailableActionException ; import org . elasticsearch . action . UnavailableShardsException ; import org . elasticsearch . index . IndexNotFoundException ; import org . elasticsearch . index . shard . IllegalIndexShardStateException ; import org . elasticsearch . index . shard . ShardNotFoundException ; public class TransportActions { public static boolean isShardNotAvailableException ( Throwable t ) { Throwable actual = ExceptionsHelper . unwrapCause ( t ) ; if ( actual instanceof ShardNotFoundException | | actual instanceof IndexNotFoundException | | actual instanceof IllegalIndexShardStateException | | actual instanceof NoShardAvailableActionException | | actual instanceof UnavailableShardsException | | actual instanceof AlreadyClosedException ) { return true ; } return false ; } public static boolean isReadOverrideException ( Throwable t ) { if ( isShardNotAvailableException ( t ) ) { return false ; } return true ; } } 
