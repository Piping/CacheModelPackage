package com . badlogic . gdx ; import com . badlogic . gdx . graphics . Pixmap ; import com . badlogic . gdx . utils . ObjectIntMap ; public interface Input { static public interface TextInputListener { public void input ( String text ) ; public void canceled ( ) ; } static public class Buttons { public static final int LEFT = <int> ; public static final int RIGHT = <int> ; public static final int MIDDLE = <int> ; public static final int BACK = <int> ; public static final int FORWARD = <int> ; } static public class Keys { public static final int ANY_KEY = - <int> ; public static final int NUM_0 = <int> ; public static final int NUM_1 = <int> ; public static final int NUM_2 = <int> ; public static final int NUM_3 = <int> ; public static final int NUM_4 = <int> ; public static final int NUM_5 = <int> ; public static final int NUM_6 = <int> ; public static final int NUM_7 = <int> ; public static final int NUM_8 = <int> ; public static final int NUM_9 = <int> ; public static final int A = <int> ; public static final int ALT_LEFT = <int> ; public static final int ALT_RIGHT = <int> ; public static final int APOSTROPHE = <int> ; public static final int AT = <int> ; public static final int B = <int> ; public static final int BACK = <int> ; public static final int BACKSLASH = <int> ; public static final int C = <int> ; public static final int CALL = <int> ; public static final int CAMERA = <int> ; public static final int CLEAR = <int> ; public static final int COMMA = <int> ; public static final int D = <int> ; public static final int DEL = <int> ; public static final int BACKSPACE = <int> ; public static final int FORWARD_DEL = <int> ; public static final int DPAD_CENTER = <int> ; public static final int DPAD_DOWN = <int> ; public static final int DPAD_LEFT = <int> ; public static final int DPAD_RIGHT = <int> ; public static final int DPAD_UP = <int> ; public static final int CENTER = <int> ; public static final int DOWN = <int> ; public static final int LEFT = <int> ; public static final int RIGHT = <int> ; public static final int UP = <int> ; public static final int E = <int> ; public static final int ENDCALL = <int> ; public static final int ENTER = <int> ; public static final int ENVELOPE = <int> ; public static final int EQUALS = <int> ; public static final int EXPLORER = <int> ; public static final int F = <int> ; public static final int FOCUS = <int> ; public static final int G = <int> ; public static final int GRAVE = <int> ; public static final int H = <int> ; public static final int HEADSETHOOK = <int> ; public static final int HOME = <int> ; public static final int I = <int> ; public static final int J = <int> ; public static final int K = <int> ; public static final int L = <int> ; public static final int LEFT_BRACKET = <int> ; public static final int M = <int> ; public static final int MEDIA_FAST_FORWARD = <int> ; public static final int MEDIA_NEXT = <int> ; public static final int MEDIA_PLAY_PAUSE = <int> ; public static final int MEDIA_PREVIOUS = <int> ; public static final int MEDIA_REWIND = <int> ; public static final int MEDIA_STOP = <int> ; public static final int MENU = <int> ; public static final int MINUS = <int> ; public static final int MUTE = <int> ; public static final int N = <int> ; public static final int NOTIFICATION = <int> ; public static final int NUM = <int> ; public static final int O = <int> ; public static final int P = <int> ; public static final int PERIOD = <int> ; public static final int PLUS = <int> ; public static final int POUND = <int> ; public static final int POWER = <int> ; public static final int Q = <int> ; public static final int R = <int> ; public static final int RIGHT_BRACKET = <int> ; public static final int S = <int> ; public static final int SEARCH = <int> ; public static final int SEMICOLON = <int> ; public static final int SHIFT_LEFT = <int> ; public static final int SHIFT_RIGHT = <int> ; public static final int SLASH = <int> ; public static final int SOFT_LEFT = <int> ; public static final int SOFT_RIGHT = <int> ; public static final int SPACE = <int> ; public static final int STAR = <int> ; public static final int SYM = <int> ; public static final int T = <int> ; public static final int TAB = <int> ; public static final int U = <int> ; public static final int UNKNOWN = <int> ; public static final int V = <int> ; public static final int VOLUME_DOWN = <int> ; public static final int VOLUME_UP = <int> ; public static final int W = <int> ; public static final int X = <int> ; public static final int Y = <int> ; public static final int Z = <int> ; public static final int META_ALT_LEFT_ON = <int> ; public static final int META_ALT_ON = <int> ; public static final int META_ALT_RIGHT_ON = <int> ; public static final int META_SHIFT_LEFT_ON = <int> ; public static final int META_SHIFT_ON = <int> ; public static final int META_SHIFT_RIGHT_ON = <int> ; public static final int META_SYM_ON = <int> ; public static final int CONTROL_LEFT = <int> ; public static final int CONTROL_RIGHT = <int> ; public static final int ESCAPE = <int> ; public static final int END = <int> ; public static final int INSERT = <int> ; public static final int PAGE_UP = <int> ; public static final int PAGE_DOWN = <int> ; public static final int PICTSYMBOLS = <int> ; public static final int SWITCH_CHARSET = <int> ; public static final int BUTTON_CIRCLE = <int> ; public static final int BUTTON_A = <int> ; public static final int BUTTON_B = <int> ; public static final int BUTTON_C = <int> ; public static final int BUTTON_X = <int> ; public static final int BUTTON_Y = <int> ; public static final int BUTTON_Z = <int> ; public static final int BUTTON_L1 = <int> ; public static final int BUTTON_R1 = <int> ; public static final int BUTTON_L2 = <int> ; public static final int BUTTON_R2 = <int> ; public static final int BUTTON_THUMBL = <int> ; public static final int BUTTON_THUMBR = <int> ; public static final int BUTTON_START = <int> ; public static final int BUTTON_SELECT = <int> ; public static final int BUTTON_MODE = <int> ; public static final int NUMPAD_0 = <int> ; public static final int NUMPAD_1 = <int> ; public static final int NUMPAD_2 = <int> ; public static final int NUMPAD_3 = <int> ; public static final int NUMPAD_4 = <int> ; public static final int NUMPAD_5 = <int> ; public static final int NUMPAD_6 = <int> ; public static final int NUMPAD_7 = <int> ; public static final int NUMPAD_8 = <int> ; public static final int NUMPAD_9 = <int> ; public static final int COLON = <int> ; public static final int F1 = <int> ; public static final int F2 = <int> ; public static final int F3 = <int> ; public static final int F4 = <int> ; public static final int F5 = <int> ; public static final int F6 = <int> ; public static final int F7 = <int> ; public static final int F8 = <int> ; public static final int F9 = <int> ; public static final int F10 = <int> ; public static final int F11 = <int> ; public static final int F12 = <int> ; public static String toString ( int keycode ) { if ( keycode < <int> ) throw new IllegalArgumentException ( <str> + keycode ) ; if ( keycode > <int> ) throw new IllegalArgumentException ( <str> + keycode ) ; switch ( keycode ) { case UNKNOWN : return <str> ; case SOFT_LEFT : return <str> ; case SOFT_RIGHT : return <str> ; case HOME : return <str> ; case BACK : return <str> ; case CALL : return <str> ; case ENDCALL : return <str> ; case NUM_0 : return <str> ; case NUM_1 : return <str> ; case NUM_2 : return <str> ; case NUM_3 : return <str> ; case NUM_4 : return <str> ; case NUM_5 : return <str> ; case NUM_6 : return <str> ; case NUM_7 : return <str> ; case NUM_8 : return <str> ; case NUM_9 : return <str> ; case STAR : return <str> ; case POUND : return <str> ; case UP : return <str> ; case DOWN : return <str> ; case LEFT : return <str> ; case RIGHT : return <str> ; case CENTER : return <str> ; case VOLUME_UP : return <str> ; case VOLUME_DOWN : return <str> ; case POWER : return <str> ; case CAMERA : return <str> ; case CLEAR : return <str> ; case A : return <str> ; case B : return <str> ; case C : return <str> ; case D : return <str> ; case E : return <str> ; case F : return <str> ; case G : return <str> ; case H : return <str> ; case I : return <str> ; case J : return <str> ; case K : return <str> ; case L : return <str> ; case M : return <str> ; case N : return <str> ; case O : return <str> ; case P : return <str> ; case Q : return <str> ; case R : return <str> ; case S : return <str> ; case T : return <str> ; case U : return <str> ; case V : return <str> ; case W : return <str> ; case X : return <str> ; case Y : return <str> ; case Z : return <str> ; case COMMA : return <str> ; case PERIOD : return <str> ; case ALT_LEFT : return <str> ; case ALT_RIGHT : return <str> ; case SHIFT_LEFT : return <str> ; case SHIFT_RIGHT : return <str> ; case TAB : return <str> ; case SPACE : return <str> ; case SYM : return <str> ; case EXPLORER : return <str> ; case ENVELOPE : return <str> ; case ENTER : return <str> ; case DEL : return <str> ; case GRAVE : return <str> ; case MINUS : return <str> ; case EQUALS : return <str> ; case LEFT_BRACKET : return <str> ; case RIGHT_BRACKET : return <str> ; case BACKSLASH : return <str> ; case SEMICOLON : return <str> ; case APOSTROPHE : return <str> ; case SLASH : return <str> ; case AT : return <str> ; case NUM : return <str> ; case HEADSETHOOK : return <str> ; case FOCUS : return <str> ; case PLUS : return <str> ; case MENU : return <str> ; case NOTIFICATION : return <str> ; case SEARCH : return <str> ; case MEDIA_PLAY_PAUSE : return <str> ; case MEDIA_STOP : return <str> ; case MEDIA_NEXT : return <str> ; case MEDIA_PREVIOUS : return <str> ; case MEDIA_REWIND : return <str> ; case MEDIA_FAST_FORWARD : return <str> ; case MUTE : return <str> ; case PAGE_UP : return <str> ; case PAGE_DOWN : return <str> ; case PICTSYMBOLS : return <str> ; case SWITCH_CHARSET : return <str> ; case BUTTON_A : return <str> ; case BUTTON_B : return <str> ; case BUTTON_C : return <str> ; case BUTTON_X : return <str> ; case BUTTON_Y : return <str> ; case BUTTON_Z : return <str> ; case BUTTON_L1 : return <str> ; case BUTTON_R1 : return <str> ; case BUTTON_L2 : return <str> ; case BUTTON_R2 : return <str> ; case BUTTON_THUMBL : return <str> ; case BUTTON_THUMBR : return <str> ; case BUTTON_START : return <str> ; case BUTTON_SELECT : return <str> ; case BUTTON_MODE : return <str> ; case FORWARD_DEL : return <str> ; case CONTROL_LEFT : return <str> ; case CONTROL_RIGHT : return <str> ; case ESCAPE : return <str> ; case END : return <str> ; case INSERT : return <str> ; case NUMPAD_0 : return <str> ; case NUMPAD_1 : return <str> ; case NUMPAD_2 : return <str> ; case NUMPAD_3 : return <str> ; case NUMPAD_4 : return <str> ; case NUMPAD_5 : return <str> ; case NUMPAD_6 : return <str> ; case NUMPAD_7 : return <str> ; case NUMPAD_8 : return <str> ; case NUMPAD_9 : return <str> ; case COLON : return <str> ; case F1 : return <str> ; case F2 : return <str> ; case F3 : return <str> ; case F4 : return <str> ; case F5 : return <str> ; case F6 : return <str> ; case F7 : return <str> ; case F8 : return <str> ; case F9 : return <str> ; case F10 : return <str> ; case F11 : return <str> ; case F12 : return <str> ; default : return null ; } } private static ObjectIntMap < String > keyNames ; public static int valueOf ( String keyname ) { if ( keyNames = = null ) initializeKeyNames ( ) ; return keyNames . get ( keyname , - <int> ) ; } private static void initializeKeyNames ( ) { keyNames = new ObjectIntMap < String > ( ) ; for ( int i = <int> ; i < <int> ; i + + ) { String name = toString ( i ) ; if ( name ! = null ) keyNames . put ( name , i ) ; } } } public enum Peripheral { HardwareKeyboard , OnscreenKeyboard , MultitouchScreen , Accelerometer , Compass , Vibrator } public float getAccelerometerX ( ) ; public float getAccelerometerY ( ) ; public float getAccelerometerZ ( ) ; public int getX ( ) ; public int getX ( int pointer ) ; public int getDeltaX ( ) ; public int getDeltaX ( int pointer ) ; public int getY ( ) ; public int getY ( int pointer ) ; public int getDeltaY ( ) ; public int getDeltaY ( int pointer ) ; public boolean isTouched ( ) ; public boolean justTouched ( ) ; public boolean isTouched ( int pointer ) ; public boolean isButtonPressed ( int button ) ; public boolean isKeyPressed ( int key ) ; public boolean isKeyJustPressed ( int key ) ; public void getTextInput ( TextInputListener listener , String title , String text , String hint ) ; public void setOnscreenKeyboardVisible ( boolean visible ) ; public void vibrate ( int milliseconds ) ; public void vibrate ( long [ ] pattern , int repeat ) ; public void cancelVibrate ( ) ; public float getAzimuth ( ) ; public float getPitch ( ) ; public float getRoll ( ) ; public void getRotationMatrix ( float [ ] matrix ) ; public long getCurrentEventTime ( ) ; public void setCatchBackKey ( boolean catchBack ) ; public boolean isCatchBackKey ( ) ; public void setCatchMenuKey ( boolean catchMenu ) ; public boolean isCatchMenuKey ( ) ; public void setInputProcessor ( InputProcessor processor ) ; public InputProcessor getInputProcessor ( ) ; public boolean isPeripheralAvailable ( Peripheral peripheral ) ; public int getRotation ( ) ; public Orientation getNativeOrientation ( ) ; public enum Orientation { Landscape , Portrait } public void setCursorCatched ( boolean catched ) ; public boolean isCursorCatched ( ) ; public void setCursorPosition ( int x , int y ) ; } 
