package io . netty . handler . codec . http2 ; import io . netty . buffer . ByteBuf ; import io . netty . channel . ChannelFuture ; import io . netty . channel . ChannelHandlerContext ; import io . netty . channel . ChannelPromise ; import java . io . Closeable ; public interface Http2FrameWriter extends Http2DataWriter , Closeable { interface Configuration { Http2HeaderTable headerTable ( ) ; Http2FrameSizePolicy frameSizePolicy ( ) ; } ChannelFuture writeHeaders ( ChannelHandlerContext ctx , int streamId , Http2Headers headers , int padding , boolean endStream , ChannelPromise promise ) ; ChannelFuture writeHeaders ( ChannelHandlerContext ctx , int streamId , Http2Headers headers , int streamDependency , short weight , boolean exclusive , int padding , boolean endStream , ChannelPromise promise ) ; ChannelFuture writePriority ( ChannelHandlerContext ctx , int streamId , int streamDependency , short weight , boolean exclusive , ChannelPromise promise ) ; ChannelFuture writeRstStream ( ChannelHandlerContext ctx , int streamId , long errorCode , ChannelPromise promise ) ; ChannelFuture writeSettings ( ChannelHandlerContext ctx , Http2Settings settings , ChannelPromise promise ) ; ChannelFuture writeSettingsAck ( ChannelHandlerContext ctx , ChannelPromise promise ) ; ChannelFuture writePing ( ChannelHandlerContext ctx , boolean ack , ByteBuf data , ChannelPromise promise ) ; ChannelFuture writePushPromise ( ChannelHandlerContext ctx , int streamId , int promisedStreamId , Http2Headers headers , int padding , ChannelPromise promise ) ; ChannelFuture writeGoAway ( ChannelHandlerContext ctx , int lastStreamId , long errorCode , ByteBuf debugData , ChannelPromise promise ) ; ChannelFuture writeWindowUpdate ( ChannelHandlerContext ctx , int streamId , int windowSizeIncrement , ChannelPromise promise ) ; ChannelFuture writeFrame ( ChannelHandlerContext ctx , byte frameType , int streamId , Http2Flags flags , ByteBuf payload , ChannelPromise promise ) ; Configuration configuration ( ) ; @Override void close ( ) ; } 
