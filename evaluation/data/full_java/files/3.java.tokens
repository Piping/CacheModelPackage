package org . apache . cassandra . triggers ; import java . io . InputStream ; import java . util . Collection ; import java . util . Collections ; import java . util . Properties ; import org . apache . cassandra . config . Schema ; import org . apache . cassandra . db . Mutation ; import org . apache . cassandra . db . RowUpdateBuilder ; import org . apache . cassandra . db . partitions . Partition ; import org . apache . cassandra . io . util . FileUtils ; import org . apache . cassandra . utils . FBUtilities ; import org . apache . cassandra . utils . UUIDGen ; public class AuditTrigger implements ITrigger { private Properties properties = loadProperties ( ) ; public Collection < Mutation > augment ( Partition update ) { String auditKeyspace = properties . getProperty ( <str> ) ; String auditTable = properties . getProperty ( <str> ) ; RowUpdateBuilder audit = new RowUpdateBuilder ( Schema . instance . getCFMetaData ( auditKeyspace , auditTable ) , FBUtilities . timestampMicros ( ) , UUIDGen . getTimeUUID ( ) ) ; audit . add ( <str> , update . metadata ( ) . ksName ) ; audit . add ( <str> , update . metadata ( ) . cfName ) ; audit . add ( <str> , update . metadata ( ) . getKeyValidator ( ) . getString ( update . partitionKey ( ) . getKey ( ) ) ) ; return Collections . singletonList ( audit . build ( ) ) ; } private static Properties loadProperties ( ) { Properties properties = new Properties ( ) ; InputStream stream = AuditTrigger . class . getClassLoader ( ) . getResourceAsStream ( <str> ) ; try { properties . load ( stream ) ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } finally { FileUtils . closeQuietly ( stream ) ; } return properties ; } } 
