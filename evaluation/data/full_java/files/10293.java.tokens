package com . google . common . collect ; import junit . framework . TestCase ; import java . util . IdentityHashMap ; import java . util . Iterator ; import java . util . Map . Entry ; public class AbstractBiMapTest extends TestCase { public void testIdentityKeySetIteratorRemove ( ) { BiMap < Integer , String > bimap = new AbstractBiMap < Integer , String > ( new IdentityHashMap < Integer , String > ( ) , new IdentityHashMap < String , Integer > ( ) ) { } ; bimap . put ( <int> , <str> ) ; bimap . put ( <int> , <str> ) ; bimap . put ( <int> , <str> ) ; Iterator < Integer > iterator = bimap . keySet ( ) . iterator ( ) ; iterator . next ( ) ; iterator . next ( ) ; iterator . remove ( ) ; iterator . next ( ) ; iterator . remove ( ) ; assertEquals ( <int> , bimap . size ( ) ) ; assertEquals ( <int> , bimap . inverse ( ) . size ( ) ) ; } public void testIdentityEntrySetIteratorRemove ( ) { BiMap < Integer , String > bimap = new AbstractBiMap < Integer , String > ( new IdentityHashMap < Integer , String > ( ) , new IdentityHashMap < String , Integer > ( ) ) { } ; bimap . put ( <int> , <str> ) ; bimap . put ( <int> , <str> ) ; bimap . put ( <int> , <str> ) ; Iterator < Entry < Integer , String > > iterator = bimap . entrySet ( ) . iterator ( ) ; iterator . next ( ) ; iterator . next ( ) ; iterator . remove ( ) ; iterator . next ( ) ; iterator . remove ( ) ; assertEquals ( <int> , bimap . size ( ) ) ; assertEquals ( <int> , bimap . inverse ( ) . size ( ) ) ; } } 
