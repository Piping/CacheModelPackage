package org . nd4j . linalg . jcublas . buffer . allocation ; import jcuda . Pointer ; import org . nd4j . linalg . api . buffer . DataBuffer ; import org . nd4j . linalg . jcublas . context . CudaContext ; public interface MemoryStrategy { void getData ( DataBuffer buffer , int offset , int stride , int length , DataBuffer get , CudaContext ctx , int getStride , int getOffset ) ; void getData ( DataBuffer buffer , int offset , DataBuffer get , CudaContext ctx ) ; void setData ( Pointer buffer , int offset , int stride , int length , Pointer hostPointer ) ; void setData ( DataBuffer buffer , int offset , int stride , int length ) ; void setData ( DataBuffer buffer , int offset ) ; Object copyToHost ( DataBuffer copy , int offset , CudaContext context ) ; Object copyToHost ( DataBuffer copy , int offset , int stride , int length , CudaContext context , int hostOffset , int hostStride ) ; Object alloc ( DataBuffer buffer , int stride , int offset , int length , boolean initData ) ; void free ( DataBuffer buffer , int offset , int length ) ; void validate ( DataBuffer buffer , CudaContext context ) throws Exception ; } 
