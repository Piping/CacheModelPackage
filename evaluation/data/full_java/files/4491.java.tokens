package org . eclipse . debug . internal . ui . views . breakpoints ; import org . eclipse . core . runtime . IAdaptable ; import org . eclipse . debug . internal . core . IInternalDebugCoreConstants ; import org . eclipse . debug . internal . ui . breakpoints . provisional . IBreakpointContainer ; import org . eclipse . jface . resource . ImageDescriptor ; import org . eclipse . swt . graphics . FontData ; import org . eclipse . swt . graphics . RGB ; import org . eclipse . ui . model . IWorkbenchAdapter ; import org . eclipse . ui . model . IWorkbenchAdapter2 ; public class BreakpointContainerWorkbenchAdapter implements IWorkbenchAdapter , IWorkbenchAdapter2 { @Override public Object [ ] getChildren ( Object o ) { return null ; } @Override public ImageDescriptor getImageDescriptor ( Object object ) { if ( object instanceof IBreakpointContainer ) { IBreakpointContainer container = ( IBreakpointContainer ) object ; IAdaptable category = container . getCategory ( ) ; if ( category ! = null ) { IWorkbenchAdapter adapter = category . getAdapter ( IWorkbenchAdapter . class ) ; if ( adapter ! = null ) { return adapter . getImageDescriptor ( category ) ; } return container . getOrganizer ( ) . getImageDescriptor ( ) ; } } return null ; } @Override public String getLabel ( Object object ) { if ( object instanceof IBreakpointContainer ) { IBreakpointContainer container = ( IBreakpointContainer ) object ; IAdaptable category = container . getCategory ( ) ; if ( category ! = null ) { IWorkbenchAdapter adapter = category . getAdapter ( IWorkbenchAdapter . class ) ; if ( adapter ! = null ) { return adapter . getLabel ( category ) ; } return container . getOrganizer ( ) . getLabel ( ) ; } } return IInternalDebugCoreConstants . EMPTY_STRING ; } @Override public Object getParent ( Object o ) { return null ; } @Override public RGB getForeground ( Object object ) { if ( object instanceof IBreakpointContainer ) { IBreakpointContainer container = ( IBreakpointContainer ) object ; IAdaptable category = container . getCategory ( ) ; IWorkbenchAdapter2 adapter = category . getAdapter ( IWorkbenchAdapter2 . class ) ; if ( adapter ! = null ) { return adapter . getForeground ( category ) ; } } return null ; } @Override public RGB getBackground ( Object object ) { if ( object instanceof IBreakpointContainer ) { IBreakpointContainer container = ( IBreakpointContainer ) object ; IAdaptable category = container . getCategory ( ) ; IWorkbenchAdapter2 adapter = category . getAdapter ( IWorkbenchAdapter2 . class ) ; if ( adapter ! = null ) { return adapter . getBackground ( category ) ; } } return null ; } @Override public FontData getFont ( Object object ) { if ( object instanceof IBreakpointContainer ) { IBreakpointContainer container = ( IBreakpointContainer ) object ; IAdaptable category = container . getCategory ( ) ; IWorkbenchAdapter2 adapter = category . getAdapter ( IWorkbenchAdapter2 . class ) ; if ( adapter ! = null ) { return adapter . getFont ( category ) ; } } return null ; } } 
