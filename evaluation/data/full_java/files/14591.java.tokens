package org . gradle . performance . fixture ; import com . google . common . collect . Lists ; import org . gradle . performance . measure . MeasuredOperation ; import java . io . File ; import java . util . Arrays ; import java . util . List ; public class CompositeDataCollector implements DataCollector { private final List < DataCollector > collectors ; public CompositeDataCollector ( DataCollector . . . collectors ) { this . collectors = Arrays . asList ( collectors ) ; } @Override public List < String > getAdditionalJvmOpts ( File workingDir ) { List < String > additional = Lists . newLinkedList ( ) ; for ( DataCollector collector : collectors ) { additional . addAll ( collector . getAdditionalJvmOpts ( workingDir ) ) ; } return additional ; } @Override public List < String > getAdditionalArgs ( File workingDir ) { List < String > additional = Lists . newLinkedList ( ) ; for ( DataCollector collector : collectors ) { additional . addAll ( collector . getAdditionalArgs ( workingDir ) ) ; } return additional ; } public void collect ( BuildExperimentInvocationInfo invocationInfo , MeasuredOperation operation ) { for ( DataCollector collector : collectors ) { collector . collect ( invocationInfo , operation ) ; } } } 
