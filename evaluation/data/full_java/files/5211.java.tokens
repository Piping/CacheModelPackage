package org . elasticsearch . action . admin . indices . template . get ; import org . elasticsearch . action . ActionRequestValidationException ; import org . elasticsearch . action . support . master . MasterNodeReadRequest ; import org . elasticsearch . common . Strings ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import java . io . IOException ; import static org . elasticsearch . action . ValidateActions . addValidationError ; public class GetIndexTemplatesRequest extends MasterNodeReadRequest < GetIndexTemplatesRequest > { private String [ ] names ; public GetIndexTemplatesRequest ( ) { } public GetIndexTemplatesRequest ( String . . . names ) { this . names = names ; } @Override public ActionRequestValidationException validate ( ) { ActionRequestValidationException validationException = null ; if ( names = = null ) { validationException = addValidationError ( <str> , validationException ) ; } else { for ( String name : names ) { if ( name = = null | | ! Strings . hasText ( name ) ) { validationException = addValidationError ( <str> , validationException ) ; } } } return validationException ; } public GetIndexTemplatesRequest names ( String . . . names ) { this . names = names ; return this ; } public String [ ] names ( ) { return this . names ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; names = in . readStringArray ( ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeStringArray ( names ) ; } } 
