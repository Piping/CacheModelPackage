package org . elasticsearch . indices . template ; import org . elasticsearch . ElasticsearchParseException ; import org . elasticsearch . action . ActionRequestValidationException ; import org . elasticsearch . action . admin . indices . alias . Alias ; import org . elasticsearch . action . admin . indices . alias . get . GetAliasesResponse ; import org . elasticsearch . action . admin . indices . settings . get . GetSettingsResponse ; import org . elasticsearch . action . admin . indices . template . get . GetIndexTemplatesResponse ; import org . elasticsearch . action . admin . indices . template . put . PutIndexTemplateRequestBuilder ; import org . elasticsearch . action . bulk . BulkResponse ; import org . elasticsearch . action . index . IndexRequest ; import org . elasticsearch . action . search . SearchResponse ; import org . elasticsearch . cluster . metadata . AliasMetaData ; import org . elasticsearch . common . ParsingException ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . common . xcontent . XContentFactory ; import org . elasticsearch . index . query . QueryBuilders ; import org . elasticsearch . indices . IndexTemplateAlreadyExistsException ; import org . elasticsearch . indices . InvalidAliasNameException ; import org . elasticsearch . search . SearchHit ; import org . elasticsearch . test . ESIntegTestCase ; import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashSet ; import java . util . List ; import java . util . Set ; import static org . elasticsearch . index . query . QueryBuilders . termQuery ; import static org . elasticsearch . test . hamcrest . ElasticsearchAssertions . assertAcked ; import static org . elasticsearch . test . hamcrest . ElasticsearchAssertions . assertHitCount ; import static org . elasticsearch . test . hamcrest . ElasticsearchAssertions . assertThrows ; import static org . hamcrest . Matchers . anyOf ; import static org . hamcrest . Matchers . containsInAnyOrder ; import static org . hamcrest . Matchers . containsString ; import static org . hamcrest . Matchers . empty ; import static org . hamcrest . Matchers . equalTo ; import static org . hamcrest . Matchers . hasSize ; import static org . hamcrest . Matchers . instanceOf ; import static org . hamcrest . Matchers . is ; import static org . hamcrest . Matchers . notNullValue ; import static org . hamcrest . Matchers . nullValue ; public class SimpleIndexTemplateIT extends ESIntegTestCase { public void testSimpleIndexTemplateTests ( ) throws Exception { client ( ) . admin ( ) . indices ( ) . prepareDeleteTemplate ( <str> ) . get ( ) ; GetIndexTemplatesResponse response = client ( ) . admin ( ) . indices ( ) . prepareGetTemplates ( ) . get ( ) ; assertThat ( response . getIndexTemplates ( ) , empty ( ) ) ; client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setSettings ( indexSettings ( ) ) . setOrder ( <int> ) . addMapping ( <str> , XContentFactory . jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . startObject ( <str> ) . startObject ( <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . endObject ( ) . startObject ( <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . endObject ( ) . endObject ( ) . endObject ( ) . endObject ( ) ) . get ( ) ; client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setSettings ( indexSettings ( ) ) . setOrder ( <int> ) . addMapping ( <str> , XContentFactory . jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . startObject ( <str> ) . startObject ( <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . endObject ( ) . endObject ( ) . endObject ( ) . endObject ( ) ) . get ( ) ; assertThrows ( client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setSettings ( indexSettings ( ) ) . setCreate ( true ) . setOrder ( <int> ) . addMapping ( <str> , XContentFactory . jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . startObject ( <str> ) . startObject ( <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . endObject ( ) . endObject ( ) . endObject ( ) . endObject ( ) ) , IndexTemplateAlreadyExistsException . class ) ; response = client ( ) . admin ( ) . indices ( ) . prepareGetTemplates ( ) . get ( ) ; assertThat ( response . getIndexTemplates ( ) , hasSize ( <int> ) ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> , <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; ensureGreen ( ) ; SearchResponse searchResponse = client ( ) . prepareSearch ( <str> ) . setQuery ( termQuery ( <str> , <str> ) ) . addField ( <str> ) . addField ( <str> ) . execute ( ) . actionGet ( ) ; assertHitCount ( searchResponse , <int> ) ; assertThat ( searchResponse . getHits ( ) . getAt ( <int> ) . field ( <str> ) . value ( ) . toString ( ) , equalTo ( <str> ) ) ; assertThat ( searchResponse . getHits ( ) . getAt ( <int> ) . field ( <str> ) , nullValue ( ) ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> , <str> , <str> ) . setRefresh ( true ) . execute ( ) . actionGet ( ) ; ensureGreen ( ) ; searchResponse = client ( ) . prepareSearch ( <str> ) . setQuery ( termQuery ( <str> , <str> ) ) . addField ( <str> ) . addField ( <str> ) . execute ( ) . actionGet ( ) ; if ( searchResponse . getFailedShards ( ) > <int> ) { logger . warn ( <str> + Arrays . toString ( searchResponse . getShardFailures ( ) ) ) ; } assertHitCount ( searchResponse , <int> ) ; assertThat ( searchResponse . getHits ( ) . getAt ( <int> ) . field ( <str> ) . value ( ) . toString ( ) , equalTo ( <str> ) ) ; assertThat ( searchResponse . getHits ( ) . getAt ( <int> ) . field ( <str> ) . value ( ) . toString ( ) , equalTo ( <str> ) ) ; } public void testDeleteIndexTemplate ( ) throws Exception { final int existingTemplates = admin ( ) . cluster ( ) . prepareState ( ) . execute ( ) . actionGet ( ) . getState ( ) . metaData ( ) . templates ( ) . size ( ) ; logger . info ( <str> ) ; client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setOrder ( <int> ) . addMapping ( <str> , XContentFactory . jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . startObject ( <str> ) . startObject ( <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . endObject ( ) . startObject ( <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . endObject ( ) . endObject ( ) . endObject ( ) . endObject ( ) ) . execute ( ) . actionGet ( ) ; client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setOrder ( <int> ) . addMapping ( <str> , XContentFactory . jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . startObject ( <str> ) . startObject ( <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . endObject ( ) . endObject ( ) . endObject ( ) . endObject ( ) ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; admin ( ) . indices ( ) . prepareDeleteTemplate ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( admin ( ) . cluster ( ) . prepareState ( ) . execute ( ) . actionGet ( ) . getState ( ) . metaData ( ) . templates ( ) . size ( ) , equalTo ( <int> + existingTemplates ) ) ; assertThat ( admin ( ) . cluster ( ) . prepareState ( ) . execute ( ) . actionGet ( ) . getState ( ) . metaData ( ) . templates ( ) . containsKey ( <str> ) , equalTo ( true ) ) ; assertThat ( admin ( ) . cluster ( ) . prepareState ( ) . execute ( ) . actionGet ( ) . getState ( ) . metaData ( ) . templates ( ) . containsKey ( <str> ) , equalTo ( false ) ) ; logger . info ( <str> ) ; client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setOrder ( <int> ) . addMapping ( <str> , XContentFactory . jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . startObject ( <str> ) . startObject ( <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . endObject ( ) . startObject ( <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . endObject ( ) . endObject ( ) . endObject ( ) . endObject ( ) ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; admin ( ) . indices ( ) . prepareDeleteTemplate ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( admin ( ) . cluster ( ) . prepareState ( ) . execute ( ) . actionGet ( ) . getState ( ) . metaData ( ) . templates ( ) . size ( ) , equalTo ( existingTemplates ) ) ; logger . info ( <str> ) ; admin ( ) . indices ( ) . prepareDeleteTemplate ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( admin ( ) . cluster ( ) . prepareState ( ) . execute ( ) . actionGet ( ) . getState ( ) . metaData ( ) . templates ( ) . size ( ) , equalTo ( <int> ) ) ; } public void testThatGetIndexTemplatesWorks ( ) throws Exception { logger . info ( <str> ) ; client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setOrder ( <int> ) . addMapping ( <str> , XContentFactory . jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . startObject ( <str> ) . startObject ( <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . endObject ( ) . startObject ( <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . endObject ( ) . endObject ( ) . endObject ( ) . endObject ( ) ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; GetIndexTemplatesResponse getTemplate1Response = client ( ) . admin ( ) . indices ( ) . prepareGetTemplates ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( getTemplate1Response . getIndexTemplates ( ) , hasSize ( <int> ) ) ; assertThat ( getTemplate1Response . getIndexTemplates ( ) . get ( <int> ) , is ( notNullValue ( ) ) ) ; assertThat ( getTemplate1Response . getIndexTemplates ( ) . get ( <int> ) . getTemplate ( ) , is ( <str> ) ) ; assertThat ( getTemplate1Response . getIndexTemplates ( ) . get ( <int> ) . getOrder ( ) , is ( <int> ) ) ; logger . info ( <str> ) ; GetIndexTemplatesResponse getTemplate2Response = client ( ) . admin ( ) . indices ( ) . prepareGetTemplates ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( getTemplate2Response . getIndexTemplates ( ) , hasSize ( <int> ) ) ; } public void testThatGetIndexTemplatesWithSimpleRegexWorks ( ) throws Exception { logger . info ( <str> ) ; client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setOrder ( <int> ) . addMapping ( <str> , XContentFactory . jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . startObject ( <str> ) . startObject ( <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . endObject ( ) . startObject ( <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . endObject ( ) . endObject ( ) . endObject ( ) . endObject ( ) ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setOrder ( <int> ) . addMapping ( <str> , XContentFactory . jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . startObject ( <str> ) . startObject ( <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . endObject ( ) . startObject ( <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . endObject ( ) . endObject ( ) . endObject ( ) . endObject ( ) ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setOrder ( <int> ) . addMapping ( <str> , XContentFactory . jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . startObject ( <str> ) . startObject ( <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . endObject ( ) . startObject ( <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . field ( <str> , <str> ) . endObject ( ) . endObject ( ) . endObject ( ) . endObject ( ) ) . execute ( ) . actionGet ( ) ; logger . info ( <str> ) ; GetIndexTemplatesResponse getTemplate1Response = client ( ) . admin ( ) . indices ( ) . prepareGetTemplates ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( getTemplate1Response . getIndexTemplates ( ) , hasSize ( <int> ) ) ; List < String > templateNames = new ArrayList < > ( ) ; templateNames . add ( getTemplate1Response . getIndexTemplates ( ) . get ( <int> ) . name ( ) ) ; templateNames . add ( getTemplate1Response . getIndexTemplates ( ) . get ( <int> ) . name ( ) ) ; assertThat ( templateNames , containsInAnyOrder ( <str> , <str> ) ) ; logger . info ( <str> ) ; getTemplate1Response = client ( ) . admin ( ) . indices ( ) . prepareGetTemplates ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( getTemplate1Response . getIndexTemplates ( ) , hasSize ( <int> ) ) ; templateNames = new ArrayList < > ( ) ; templateNames . add ( getTemplate1Response . getIndexTemplates ( ) . get ( <int> ) . name ( ) ) ; templateNames . add ( getTemplate1Response . getIndexTemplates ( ) . get ( <int> ) . name ( ) ) ; templateNames . add ( getTemplate1Response . getIndexTemplates ( ) . get ( <int> ) . name ( ) ) ; assertThat ( templateNames , containsInAnyOrder ( <str> , <str> , <str> ) ) ; logger . info ( <str> ) ; getTemplate1Response = client ( ) . admin ( ) . indices ( ) . prepareGetTemplates ( <str> , <str> ) . execute ( ) . actionGet ( ) ; assertThat ( getTemplate1Response . getIndexTemplates ( ) , hasSize ( <int> ) ) ; templateNames = new ArrayList < > ( ) ; templateNames . add ( getTemplate1Response . getIndexTemplates ( ) . get ( <int> ) . name ( ) ) ; templateNames . add ( getTemplate1Response . getIndexTemplates ( ) . get ( <int> ) . name ( ) ) ; assertThat ( templateNames , containsInAnyOrder ( <str> , <str> ) ) ; } public void testThatInvalidGetIndexTemplatesFails ( ) throws Exception { logger . info ( <str> ) ; testExpectActionRequestValidationException ( ( String [ ] ) null ) ; logger . info ( <str> ) ; testExpectActionRequestValidationException ( <str> ) ; logger . info ( <str> ) ; testExpectActionRequestValidationException ( <str> , <str> , <str> ) ; logger . info ( <str> ) ; testExpectActionRequestValidationException ( <str> , null , <str> ) ; } private void testExpectActionRequestValidationException ( String . . . names ) { assertThrows ( client ( ) . admin ( ) . indices ( ) . prepareGetTemplates ( names ) , ActionRequestValidationException . class , <str> + Arrays . toString ( names ) ) ; } @AwaitsFix ( bugUrl = <str> ) public void testBrokenMapping ( ) throws Exception { client ( ) . admin ( ) . indices ( ) . prepareDeleteTemplate ( <str> ) . get ( ) ; GetIndexTemplatesResponse response = client ( ) . admin ( ) . indices ( ) . prepareGetTemplates ( ) . get ( ) ; assertThat ( response . getIndexTemplates ( ) , empty ( ) ) ; client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . addMapping ( <str> , <str> ) . get ( ) ; response = client ( ) . admin ( ) . indices ( ) . prepareGetTemplates ( ) . get ( ) ; assertThat ( response . getIndexTemplates ( ) , hasSize ( <int> ) ) ; assertThat ( response . getIndexTemplates ( ) . get ( <int> ) . getMappings ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . getIndexTemplates ( ) . get ( <int> ) . getMappings ( ) . get ( <str> ) . string ( ) , equalTo ( <str> ) ) ; try { createIndex ( <str> ) ; fail ( <str> ) ; } catch ( ElasticsearchParseException e ) { } } public void testInvalidSettings ( ) throws Exception { client ( ) . admin ( ) . indices ( ) . prepareDeleteTemplate ( <str> ) . get ( ) ; GetIndexTemplatesResponse response = client ( ) . admin ( ) . indices ( ) . prepareGetTemplates ( ) . get ( ) ; assertThat ( response . getIndexTemplates ( ) , empty ( ) ) ; client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setSettings ( Settings . builder ( ) . put ( <str> , <str> ) ) . get ( ) ; response = client ( ) . admin ( ) . indices ( ) . prepareGetTemplates ( ) . get ( ) ; assertThat ( response . getIndexTemplates ( ) , hasSize ( <int> ) ) ; assertThat ( response . getIndexTemplates ( ) . get ( <int> ) . getSettings ( ) . getAsMap ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . getIndexTemplates ( ) . get ( <int> ) . getSettings ( ) . get ( <str> ) , equalTo ( <str> ) ) ; createIndex ( <str> ) ; GetSettingsResponse getSettingsResponse = client ( ) . admin ( ) . indices ( ) . prepareGetSettings ( <str> ) . get ( ) ; assertThat ( getSettingsResponse . getIndexToSettings ( ) . get ( <str> ) . getAsMap ( ) . get ( <str> ) , equalTo ( <str> ) ) ; } public void testIndexTemplateWithAliases ( ) throws Exception { client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . addMapping ( <str> , <str> ) . addAlias ( new Alias ( <str> ) ) . addAlias ( new Alias ( <str> ) ) . addAlias ( new Alias ( <str> ) . filter ( <str> ) ) . addAlias ( new Alias ( <str> ) . filter ( QueryBuilders . termsQuery ( <str> , <str> , <str> , <str> ) ) ) . get ( ) ; assertAcked ( prepareCreate ( <str> ) . addMapping ( <str> ) . addMapping ( <str> ) . addMapping ( <str> ) . addMapping ( <str> ) . addMapping ( <str> ) ) ; ensureGreen ( ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . get ( ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . get ( ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . get ( ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . get ( ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . get ( ) ; GetAliasesResponse getAliasesResponse = client ( ) . admin ( ) . indices ( ) . prepareGetAliases ( ) . setIndices ( <str> ) . get ( ) ; assertThat ( getAliasesResponse . getAliases ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( getAliasesResponse . getAliases ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; refresh ( ) ; SearchResponse searchResponse = client ( ) . prepareSearch ( <str> ) . get ( ) ; assertHitCount ( searchResponse , <int> ) ; searchResponse = client ( ) . prepareSearch ( <str> ) . get ( ) ; assertHitCount ( searchResponse , <int> ) ; searchResponse = client ( ) . prepareSearch ( <str> ) . get ( ) ; assertHitCount ( searchResponse , <int> ) ; searchResponse = client ( ) . prepareSearch ( <str> ) . get ( ) ; assertHitCount ( searchResponse , <int> ) ; assertThat ( searchResponse . getHits ( ) . getAt ( <int> ) . type ( ) , equalTo ( <str> ) ) ; searchResponse = client ( ) . prepareSearch ( <str> ) . get ( ) ; assertHitCount ( searchResponse , <int> ) ; Set < String > types = new HashSet < > ( ) ; for ( SearchHit searchHit : searchResponse . getHits ( ) . getHits ( ) ) { types . add ( searchHit . getType ( ) ) ; } assertThat ( types . size ( ) , equalTo ( <int> ) ) ; assertThat ( types , containsInAnyOrder ( <str> , <str> , <str> ) ) ; } public void testIndexTemplateWithAliasesInSource ( ) { client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setSource ( <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ) . get ( ) ; assertAcked ( prepareCreate ( <str> ) . addMapping ( <str> ) . addMapping ( <str> ) ) ; ensureGreen ( ) ; GetAliasesResponse getAliasesResponse = client ( ) . admin ( ) . indices ( ) . prepareGetAliases ( ) . setIndices ( <str> ) . get ( ) ; assertThat ( getAliasesResponse . getAliases ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( getAliasesResponse . getAliases ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . get ( ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . get ( ) ; refresh ( ) ; SearchResponse searchResponse = client ( ) . prepareSearch ( <str> ) . get ( ) ; assertHitCount ( searchResponse , <int> ) ; searchResponse = client ( ) . prepareSearch ( <str> ) . get ( ) ; assertHitCount ( searchResponse , <int> ) ; assertThat ( searchResponse . getHits ( ) . getAt ( <int> ) . type ( ) , equalTo ( <str> ) ) ; } public void testIndexTemplateWithAliasesSource ( ) { client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setAliases ( <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> + <str> ) . get ( ) ; assertAcked ( prepareCreate ( <str> ) . addMapping ( <str> ) . addMapping ( <str> ) ) ; ensureGreen ( ) ; GetAliasesResponse getAliasesResponse = client ( ) . admin ( ) . indices ( ) . prepareGetAliases ( ) . setIndices ( <str> ) . get ( ) ; assertThat ( getAliasesResponse . getAliases ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( getAliasesResponse . getAliases ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . get ( ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> , <str> ) . get ( ) ; refresh ( ) ; SearchResponse searchResponse = client ( ) . prepareSearch ( <str> ) . get ( ) ; assertHitCount ( searchResponse , <int> ) ; searchResponse = client ( ) . prepareSearch ( <str> ) . get ( ) ; assertHitCount ( searchResponse , <int> ) ; searchResponse = client ( ) . prepareSearch ( <str> ) . get ( ) ; assertHitCount ( searchResponse , <int> ) ; assertThat ( searchResponse . getHits ( ) . getAt ( <int> ) . type ( ) , equalTo ( <str> ) ) ; } public void testDuplicateAlias ( ) throws Exception { client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . addAlias ( new Alias ( <str> ) . filter ( termQuery ( <str> , <str> ) ) ) . addAlias ( new Alias ( <str> ) . filter ( termQuery ( <str> , <str> ) ) ) . get ( ) ; GetIndexTemplatesResponse response = client ( ) . admin ( ) . indices ( ) . prepareGetTemplates ( <str> ) . get ( ) ; assertThat ( response . getIndexTemplates ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . getIndexTemplates ( ) . get ( <int> ) . getAliases ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . getIndexTemplates ( ) . get ( <int> ) . getAliases ( ) . get ( <str> ) . filter ( ) . string ( ) , containsString ( <str> ) ) ; } public void testAliasInvalidFilterValidJson ( ) throws Exception { client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . addAlias ( new Alias ( <str> ) . filter ( <str> ) ) . get ( ) ; GetIndexTemplatesResponse response = client ( ) . admin ( ) . indices ( ) . prepareGetTemplates ( <str> ) . get ( ) ; assertThat ( response . getIndexTemplates ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . getIndexTemplates ( ) . get ( <int> ) . getAliases ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . getIndexTemplates ( ) . get ( <int> ) . getAliases ( ) . get ( <str> ) . filter ( ) . string ( ) , equalTo ( <str> ) ) ; try { createIndex ( <str> ) ; fail ( <str> ) ; } catch ( IllegalArgumentException e ) { assertThat ( e . getMessage ( ) , equalTo ( <str> ) ) ; assertThat ( e . getCause ( ) , instanceOf ( ParsingException . class ) ) ; assertThat ( e . getCause ( ) . getMessage ( ) , equalTo ( <str> ) ) ; } } public void testAliasInvalidFilterInvalidJson ( ) throws Exception { PutIndexTemplateRequestBuilder putIndexTemplateRequestBuilder = client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . addAlias ( new Alias ( <str> ) . filter ( <str> ) ) ; try { putIndexTemplateRequestBuilder . get ( ) ; } catch ( IllegalArgumentException e ) { assertThat ( e . getMessage ( ) , equalTo ( <str> ) ) ; } GetIndexTemplatesResponse response = client ( ) . admin ( ) . indices ( ) . prepareGetTemplates ( <str> ) . get ( ) ; assertThat ( response . getIndexTemplates ( ) . size ( ) , equalTo ( <int> ) ) ; } public void testAliasNameExistingIndex ( ) throws Exception { createIndex ( <str> ) ; client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . addAlias ( new Alias ( <str> ) ) . get ( ) ; try { createIndex ( <str> ) ; fail ( <str> ) ; } catch ( InvalidAliasNameException e ) { assertThat ( e . getMessage ( ) , equalTo ( <str> ) ) ; } } public void testAliasEmptyName ( ) throws Exception { PutIndexTemplateRequestBuilder putIndexTemplateRequestBuilder = client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . addAlias ( new Alias ( <str> ) . indexRouting ( <str> ) ) ; try { putIndexTemplateRequestBuilder . get ( ) ; fail ( <str> ) ; } catch ( IllegalArgumentException e ) { assertThat ( e . getMessage ( ) , equalTo ( <str> ) ) ; } } public void testAliasWithMultipleIndexRoutings ( ) throws Exception { PutIndexTemplateRequestBuilder putIndexTemplateRequestBuilder = client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . addAlias ( new Alias ( <str> ) . indexRouting ( <str> ) ) ; try { putIndexTemplateRequestBuilder . get ( ) ; fail ( <str> ) ; } catch ( IllegalArgumentException e ) { assertThat ( e . getMessage ( ) , equalTo ( <str> ) ) ; } } public void testMultipleAliasesPrecedence ( ) throws Exception { client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setOrder ( <int> ) . addAlias ( new Alias ( <str> ) ) . addAlias ( new Alias ( <str> ) ) . addAlias ( new Alias ( <str> ) . filter ( QueryBuilders . boolQuery ( ) . mustNot ( QueryBuilders . existsQuery ( <str> ) ) ) ) . addAlias ( new Alias ( <str> ) ) . get ( ) ; client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setOrder ( <int> ) . addAlias ( new Alias ( <str> ) . routing ( <str> ) ) . addAlias ( new Alias ( <str> ) ) . get ( ) ; assertAcked ( prepareCreate ( <str> ) . addAlias ( new Alias ( <str> ) . searchRouting ( <str> ) ) ) ; ensureGreen ( ) ; GetAliasesResponse getAliasesResponse = client ( ) . admin ( ) . indices ( ) . prepareGetAliases ( ) . addIndices ( <str> ) . get ( ) ; assertThat ( getAliasesResponse . getAliases ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; for ( AliasMetaData aliasMetaData : getAliasesResponse . getAliases ( ) . get ( <str> ) ) { assertThat ( aliasMetaData . alias ( ) , anyOf ( equalTo ( <str> ) , equalTo ( <str> ) , equalTo ( <str> ) , equalTo ( <str> ) ) ) ; if ( <str> . equals ( aliasMetaData . alias ( ) ) ) { assertThat ( aliasMetaData . indexRouting ( ) , equalTo ( <str> ) ) ; assertThat ( aliasMetaData . searchRouting ( ) , equalTo ( <str> ) ) ; } else if ( <str> . equals ( aliasMetaData . alias ( ) ) ) { assertThat ( aliasMetaData . filter ( ) , nullValue ( ) ) ; } else if ( <str> . equals ( aliasMetaData . alias ( ) ) ) { assertThat ( aliasMetaData . indexRouting ( ) , nullValue ( ) ) ; assertThat ( aliasMetaData . searchRouting ( ) , equalTo ( <str> ) ) ; } } } public void testStrictAliasParsingInIndicesCreatedViaTemplates ( ) throws Exception { client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setOrder ( <int> ) . addMapping ( <str> , <str> , <str> ) . addAlias ( new Alias ( <str> ) . filter ( termQuery ( <str> , <str> ) ) ) . get ( ) ; client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setOrder ( <int> ) . addMapping ( <str> , <str> , <str> ) . addMapping ( <str> ) . addAlias ( new Alias ( <str> ) . filter ( termQuery ( <str> , <str> ) ) ) . get ( ) ; client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setOrder ( <int> ) . addMapping ( <str> , <str> , <str> ) . addAlias ( new Alias ( <str> ) . filter ( termQuery ( <str> , <str> ) ) ) . get ( ) ; client ( ) . admin ( ) . indices ( ) . preparePutTemplate ( <str> ) . setTemplate ( <str> ) . setOrder ( <int> ) . addAlias ( new Alias ( <str> ) . filter ( termQuery ( <str> , <str> ) ) ) . get ( ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> ) . get ( ) ; BulkResponse response = client ( ) . prepareBulk ( ) . add ( new IndexRequest ( <str> , <str> , <str> ) . source ( <str> ) ) . get ( ) ; assertThat ( response . hasFailures ( ) , is ( false ) ) ; assertThat ( response . getItems ( ) [ <int> ] . isFailed ( ) , equalTo ( false ) ) ; assertThat ( response . getItems ( ) [ <int> ] . getIndex ( ) , equalTo ( <str> ) ) ; assertThat ( response . getItems ( ) [ <int> ] . getType ( ) , equalTo ( <str> ) ) ; assertThat ( response . getItems ( ) [ <int> ] . getId ( ) , equalTo ( <str> ) ) ; assertThat ( response . getItems ( ) [ <int> ] . getVersion ( ) , equalTo ( <int> ) ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> ) . get ( ) ; response = client ( ) . prepareBulk ( ) . add ( new IndexRequest ( <str> , <str> , <str> ) . source ( <str> ) ) . get ( ) ; assertThat ( response . hasFailures ( ) , is ( false ) ) ; assertThat ( response . getItems ( ) [ <int> ] . isFailed ( ) , equalTo ( false ) ) ; assertThat ( response . getItems ( ) [ <int> ] . getIndex ( ) , equalTo ( <str> ) ) ; assertThat ( response . getItems ( ) [ <int> ] . getType ( ) , equalTo ( <str> ) ) ; assertThat ( response . getItems ( ) [ <int> ] . getId ( ) , equalTo ( <str> ) ) ; assertThat ( response . getItems ( ) [ <int> ] . getVersion ( ) , equalTo ( <int> ) ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> ) . get ( ) ; response = client ( ) . prepareBulk ( ) . add ( new IndexRequest ( <str> , <str> , <str> ) . source ( <str> ) ) . get ( ) ; assertThat ( response . hasFailures ( ) , is ( false ) ) ; assertThat ( response . getItems ( ) [ <int> ] . isFailed ( ) , equalTo ( false ) ) ; assertThat ( response . getItems ( ) [ <int> ] . getIndex ( ) , equalTo ( <str> ) ) ; assertThat ( response . getItems ( ) [ <int> ] . getType ( ) , equalTo ( <str> ) ) ; assertThat ( response . getItems ( ) [ <int> ] . getId ( ) , equalTo ( <str> ) ) ; assertThat ( response . getItems ( ) [ <int> ] . getVersion ( ) , equalTo ( <int> ) ) ; client ( ) . prepareIndex ( <str> , <str> , <str> ) . setSource ( <str> ) . get ( ) ; response = client ( ) . prepareBulk ( ) . add ( new IndexRequest ( <str> , <str> , <str> ) . source ( <str> ) ) . get ( ) ; assertThat ( response . hasFailures ( ) , is ( false ) ) ; assertThat ( response . getItems ( ) [ <int> ] . isFailed ( ) , equalTo ( false ) ) ; assertThat ( response . getItems ( ) [ <int> ] . getId ( ) , equalTo ( <str> ) ) ; assertThat ( response . getItems ( ) [ <int> ] . getVersion ( ) , equalTo ( <int> ) ) ; } } 
