package org . gradle . messaging . remote . internal . protocol ; import org . gradle . messaging . remote . internal . Message ; import java . util . UUID ; public abstract class ParticipantAvailable extends Message implements RouteAvailableMessage { private final String channelKey ; private final UUID id ; private final String displayName ; public ParticipantAvailable ( UUID id , String displayName , String channelKey ) { this . id = id ; this . displayName = displayName ; this . channelKey = channelKey ; } public UUID getId ( ) { return id ; } public String getDisplayName ( ) { return displayName ; } public String getChannelKey ( ) { return channelKey ; } public Object getSource ( ) { return id ; } @Override public String toString ( ) { return String . format ( <str> , getClass ( ) . getSimpleName ( ) , id , displayName , channelKey ) ; } @Override public boolean equals ( Object o ) { if ( o = = this ) { return true ; } if ( o = = null | | o . getClass ( ) ! = getClass ( ) ) { return false ; } ParticipantAvailable other = ( ParticipantAvailable ) o ; return id . equals ( other . id ) & & displayName . equals ( other . displayName ) & & channelKey . equals ( other . channelKey ) ; } @Override public int hashCode ( ) { return id . hashCode ( ) ^ displayName . hashCode ( ) ^ channelKey . hashCode ( ) ; } } 
