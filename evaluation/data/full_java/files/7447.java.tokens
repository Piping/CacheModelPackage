package org . elasticsearch . search . aggregations . support ; import org . elasticsearch . script . SearchScript ; import org . elasticsearch . search . aggregations . support . format . ValueFormat ; import org . elasticsearch . search . aggregations . support . format . ValueFormatter ; import org . elasticsearch . search . aggregations . support . format . ValueParser ; public class ValuesSourceConfig < VS extends ValuesSource > { final Class < VS > valueSourceType ; FieldContext fieldContext ; SearchScript script ; ValueType scriptValueType ; boolean unmapped = false ; String formatPattern ; ValueFormat format = ValueFormat . RAW ; Object missing ; public ValuesSourceConfig ( Class < VS > valueSourceType ) { this . valueSourceType = valueSourceType ; } public Class < VS > valueSourceType ( ) { return valueSourceType ; } public FieldContext fieldContext ( ) { return fieldContext ; } public SearchScript script ( ) { return script ; } public boolean unmapped ( ) { return unmapped ; } public boolean valid ( ) { return fieldContext ! = null | | script ! = null | | unmapped ; } public ValuesSourceConfig < VS > fieldContext ( FieldContext fieldContext ) { this . fieldContext = fieldContext ; return this ; } public ValuesSourceConfig < VS > script ( SearchScript script ) { this . script = script ; return this ; } public ValuesSourceConfig < VS > unmapped ( boolean unmapped ) { this . unmapped = unmapped ; return this ; } public ValueFormat format ( ) { return format ; } public ValueFormatter formatter ( ) { return format . formatter ( ) ; } public ValueParser parser ( ) { return format . parser ( ) ; } } 
