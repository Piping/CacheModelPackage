package org . gradle . api . internal . tasks . scala ; import com . google . common . collect . Lists ; import org . gradle . language . scala . tasks . BaseScalaCompileOptions ; import java . util . List ; public class ZincScalaCompilerArgumentsGenerator { public List < String > generate ( ScalaCompileSpec spec ) { List < String > result = Lists . newArrayList ( ) ; BaseScalaCompileOptions options = spec . getScalaCompileOptions ( ) ; addFlag ( <str> , options . isDeprecation ( ) , result ) ; addFlag ( <str> , options . isUnchecked ( ) , result ) ; addConcatenatedOption ( <str> , options . getDebugLevel ( ) , result ) ; addFlag ( <str> , options . isOptimize ( ) , result ) ; addOption ( <str> , options . getEncoding ( ) , result ) ; addFlag ( <str> , <str> . equals ( options . getDebugLevel ( ) ) , result ) ; addFlag ( <str> , <str> . equals ( options . getDebugLevel ( ) ) , result ) ; if ( options . getLoggingPhases ( ) ! = null ) { for ( String phase : options . getLoggingPhases ( ) ) { addConcatenatedOption ( <str> , phase , result ) ; } } if ( options . getAdditionalParameters ( ) ! = null ) { result . addAll ( options . getAdditionalParameters ( ) ) ; } return result ; } private void addFlag ( String name , boolean value , List < String > result ) { if ( value ) { result . add ( name ) ; } } private void addOption ( String name , Object value , List < String > result ) { if ( value ! = null ) { result . add ( name ) ; result . add ( value . toString ( ) ) ; } } private void addConcatenatedOption ( String name , Object value , List < String > result ) { if ( value ! = null ) { result . add ( name + value . toString ( ) ) ; } } } 
