package org . gradle . plugin . use . resolve . service . internal ; import org . gradle . internal . serialize . Decoder ; import org . gradle . internal . serialize . Encoder ; public class ClientStatus { private final String deprecationMessage ; public ClientStatus ( String deprecationMessage ) { this . deprecationMessage = deprecationMessage ; } public String getDeprecationMessage ( ) { return deprecationMessage ; } @Override public boolean equals ( Object o ) { if ( this = = o ) { return true ; } if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) { return false ; } ClientStatus that = ( ClientStatus ) o ; if ( deprecationMessage ! = null ? ! deprecationMessage . equals ( that . deprecationMessage ) : that . deprecationMessage ! = null ) { return false ; } return true ; } @Override public int hashCode ( ) { return deprecationMessage ! = null ? deprecationMessage . hashCode ( ) : <int> ; } public static class Serializer implements org . gradle . internal . serialize . Serializer < ClientStatus > { public ClientStatus read ( Decoder decoder ) throws Exception { return new ClientStatus ( decoder . readNullableString ( ) ) ; } public void write ( Encoder encoder , ClientStatus value ) throws Exception { encoder . writeNullableString ( value . deprecationMessage ) ; } } } 
