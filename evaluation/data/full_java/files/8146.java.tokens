package org . elasticsearch . index . mapper . camelcase ; import org . elasticsearch . common . xcontent . XContentFactory ; import org . elasticsearch . index . IndexService ; import org . elasticsearch . index . mapper . DocumentMapper ; import org . elasticsearch . index . mapper . ParsedDocument ; import org . elasticsearch . test . ESSingleNodeTestCase ; public class CamelCaseFieldNameTests extends ESSingleNodeTestCase { public void testCamelCaseFieldNameStaysAsIs ( ) throws Exception { String mapping = XContentFactory . jsonBuilder ( ) . startObject ( ) . startObject ( <str> ) . endObject ( ) . endObject ( ) . string ( ) ; IndexService index = createIndex ( <str> ) ; client ( ) . admin ( ) . indices ( ) . preparePutMapping ( <str> ) . setType ( <str> ) . setSource ( mapping ) . get ( ) ; DocumentMapper documentMapper = index . mapperService ( ) . documentMapper ( <str> ) ; ParsedDocument doc = documentMapper . parse ( <str> , <str> , <str> , XContentFactory . jsonBuilder ( ) . startObject ( ) . field ( <str> , <str> ) . endObject ( ) . bytes ( ) ) ; assertNotNull ( doc . dynamicMappingsUpdate ( ) ) ; client ( ) . admin ( ) . indices ( ) . preparePutMapping ( <str> ) . setType ( <str> ) . setSource ( doc . dynamicMappingsUpdate ( ) . toString ( ) ) . get ( ) ; assertNotNull ( documentMapper . mappers ( ) . getMapper ( <str> ) ) ; assertNull ( documentMapper . mappers ( ) . getMapper ( <str> ) ) ; documentMapper = index . mapperService ( ) . documentMapperParser ( ) . parse ( documentMapper . mappingSource ( ) . string ( ) ) ; assertNotNull ( documentMapper . mappers ( ) . getMapper ( <str> ) ) ; assertNull ( documentMapper . mappers ( ) . getMapper ( <str> ) ) ; } } 
