package org . gradle . messaging . remote . internal . protocol ; import org . gradle . messaging . remote . Address ; import org . gradle . messaging . remote . internal . MessageOriginator ; public class ChannelAvailable extends DiscoveryMessage { private final String channel ; private final Address address ; public ChannelAvailable ( MessageOriginator originator , String group , String channel , Address address ) { super ( originator , group ) ; this . channel = channel ; this . address = address ; } @Override public boolean equals ( Object o ) { if ( ! super . equals ( o ) ) { return false ; } ChannelAvailable other = ( ChannelAvailable ) o ; return channel . equals ( other . channel ) & & address . equals ( other . address ) ; } @Override public int hashCode ( ) { return super . hashCode ( ) ^ channel . hashCode ( ) ^ address . hashCode ( ) ; } @Override public String toString ( ) { return String . format ( <str> , channel , address , getOriginator ( ) ) ; } public String getChannel ( ) { return channel ; } public Address getAddress ( ) { return address ; } } 
