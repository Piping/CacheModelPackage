package org . gradle . initialization ; import org . gradle . api . internal . ExceptionAnalyser ; import org . gradle . execution . MultipleBuildFailures ; import java . util . ArrayList ; import java . util . List ; public class MultipleBuildFailuresExceptionAnalyser implements ExceptionAnalyser { private final ExceptionAnalyser delegate ; public MultipleBuildFailuresExceptionAnalyser ( ExceptionAnalyser delegate ) { this . delegate = delegate ; } public Throwable transform ( Throwable exception ) { if ( exception instanceof MultipleBuildFailures ) { MultipleBuildFailures multipleBuildFailures = ( MultipleBuildFailures ) exception ; List < Throwable > transformedCauses = new ArrayList < Throwable > ( multipleBuildFailures . getCauses ( ) . size ( ) ) ; for ( Throwable cause : multipleBuildFailures . getCauses ( ) ) { transformedCauses . add ( transform ( cause ) ) ; } multipleBuildFailures . replaceCauses ( transformedCauses ) ; return exception ; } return delegate . transform ( exception ) ; } } 
