package org . nd4j . linalg . jcublas ; import org . nd4j . linalg . api . buffer . DataBuffer ; import org . nd4j . linalg . api . buffer . FloatBuffer ; import org . nd4j . linalg . api . ndarray . BaseNDArray ; import org . nd4j . linalg . api . ndarray . INDArray ; import org . nd4j . linalg . factory . Nd4j ; import java . util . List ; public class JCublasNDArray extends BaseNDArray { public JCublasNDArray ( double [ ] [ ] data ) { super ( data ) ; } public JCublasNDArray ( double [ ] [ ] data , char ordering ) { super ( data , ordering ) ; } public JCublasNDArray ( int [ ] shape , DataBuffer buffer ) { super ( shape , buffer ) ; } public JCublasNDArray ( float [ ] data , int [ ] shape , char ordering ) { super ( data , shape , ordering ) ; } public JCublasNDArray ( float [ ] data , int [ ] shape , int offset , char ordering ) { super ( data , shape , offset , ordering ) ; } public JCublasNDArray ( int [ ] shape , int [ ] stride , int offset , char ordering ) { super ( shape , stride , offset , ordering ) ; } public JCublasNDArray ( int [ ] shape , int [ ] stride , char ordering ) { super ( shape , stride , ordering ) ; } public JCublasNDArray ( int [ ] shape , int offset , char ordering ) { super ( shape , offset , ordering ) ; } public JCublasNDArray ( int [ ] shape ) { super ( shape ) ; } public JCublasNDArray ( int newRows , int newColumns , char ordering ) { super ( newRows , newColumns , ordering ) ; } public JCublasNDArray ( List < INDArray > slices , int [ ] shape , char ordering ) { super ( slices , shape , ordering ) ; } public JCublasNDArray ( List < INDArray > slices , int [ ] shape , int [ ] stride , char ordering ) { super ( slices , shape , stride , ordering ) ; } public JCublasNDArray ( float [ ] data , int [ ] shape , int [ ] stride , char ordering ) { super ( data , shape , stride , ordering ) ; } public JCublasNDArray ( float [ ] data , int [ ] shape , int [ ] stride , int offset , char ordering ) { super ( data , shape , stride , offset , ordering ) ; } public JCublasNDArray ( DataBuffer data , int [ ] shape , int [ ] stride , int offset ) { super ( data , shape , stride , offset ) ; } public JCublasNDArray ( int [ ] data , int [ ] shape , int [ ] strides ) { super ( data , shape , strides ) ; } public JCublasNDArray ( DataBuffer data , int [ ] shape ) { super ( data , shape ) ; } public JCublasNDArray ( DataBuffer buffer , int [ ] shape , int offset ) { super ( buffer , shape , offset ) ; } public JCublasNDArray ( float [ ] data , int [ ] shape ) { super ( data , shape ) ; } public JCublasNDArray ( float [ ] data , int [ ] shape , int offset ) { super ( data , shape , offset ) ; } public JCublasNDArray ( int [ ] shape , int [ ] stride , int offset ) { super ( shape , stride , offset ) ; } public JCublasNDArray ( int [ ] shape , int [ ] stride ) { super ( shape , stride ) ; } public JCublasNDArray ( int [ ] shape , int offset ) { super ( shape , offset ) ; } public JCublasNDArray ( int [ ] shape , char ordering ) { super ( shape , ordering ) ; } public JCublasNDArray ( int newRows , int newColumns ) { super ( newRows , newColumns ) ; } public JCublasNDArray ( List < INDArray > slices , int [ ] shape ) { super ( slices , shape ) ; } public JCublasNDArray ( List < INDArray > slices , int [ ] shape , int [ ] stride ) { super ( slices , shape , stride ) ; } public JCublasNDArray ( float [ ] data , int [ ] shape , int [ ] stride ) { super ( data , shape , stride ) ; } public JCublasNDArray ( float [ ] data , int [ ] shape , int [ ] stride , int offset ) { super ( data , shape , stride , offset ) ; } public JCublasNDArray ( float [ ] data ) { super ( data ) ; } public JCublasNDArray ( JCublasNDArray doubleMatrix ) { this ( new int [ ] { doubleMatrix . rows , doubleMatrix . columns } ) ; this . data = dup ( ) . data ( ) ; } public JCublasNDArray ( double [ ] data , int [ ] shape , int [ ] stride , int offset ) { this . data = Nd4j . createBuffer ( data ) ; this . stride = stride ; this . offset = offset ; init ( shape ) ; } public JCublasNDArray ( float [ ] [ ] floats ) { super ( floats ) ; } public JCublasNDArray ( float [ ] [ ] data , char ordering ) { super ( data , ordering ) ; } public JCublasNDArray ( DataBuffer buffer , int [ ] shape , int offset , char ordering ) { super ( buffer , shape , offset , ordering ) ; } public JCublasNDArray ( ) { } public JCublasNDArray ( DataBuffer buffer ) { super ( buffer ) ; } public JCublasNDArray ( DataBuffer buffer , int [ ] shape , int [ ] stride , int offset , char ordering ) { super ( buffer , shape , stride , offset , ordering ) ; } public JCublasNDArray ( float [ ] data , char order ) { super ( data , order ) ; } public JCublasNDArray ( FloatBuffer floatBuffer , char order ) { super ( floatBuffer , order ) ; } public JCublasNDArray ( DataBuffer buffer , int [ ] shape , int [ ] strides ) { super ( buffer , shape , strides ) ; } public JCublasNDArray ( double [ ] data , int [ ] shape , char ordering ) { super ( data , shape , ordering ) ; } public JCublasNDArray ( double [ ] data , int [ ] shape , int [ ] stride , int offset , char ordering ) { super ( data , shape , stride , offset , ordering ) ; } } 
