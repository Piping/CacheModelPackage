package org . elasticsearch . action . bulk ; import org . elasticsearch . action . ReplicationResponse ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . index . shard . ShardId ; import java . io . IOException ; public class BulkShardResponse extends ReplicationResponse { private ShardId shardId ; private BulkItemResponse [ ] responses ; BulkShardResponse ( ) { } BulkShardResponse ( ShardId shardId , BulkItemResponse [ ] responses ) { this . shardId = shardId ; this . responses = responses ; } public ShardId getShardId ( ) { return shardId ; } public BulkItemResponse [ ] getResponses ( ) { return responses ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; shardId = ShardId . readShardId ( in ) ; responses = new BulkItemResponse [ in . readVInt ( ) ] ; for ( int i = <int> ; i < responses . length ; i + + ) { responses [ i ] = BulkItemResponse . readBulkItem ( in ) ; } } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; shardId . writeTo ( out ) ; out . writeVInt ( responses . length ) ; for ( BulkItemResponse response : responses ) { response . writeTo ( out ) ; } } } 
