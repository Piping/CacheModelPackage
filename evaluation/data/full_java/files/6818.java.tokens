package org . elasticsearch . index . warmer ; import org . elasticsearch . common . logging . ESLogger ; import org . elasticsearch . common . metrics . CounterMetric ; import org . elasticsearch . common . metrics . MeanMetric ; import org . elasticsearch . index . IndexSettings ; import org . elasticsearch . index . shard . AbstractIndexShardComponent ; import org . elasticsearch . index . shard . ShardId ; import java . util . concurrent . TimeUnit ; public class ShardIndexWarmerService extends AbstractIndexShardComponent { private final CounterMetric current = new CounterMetric ( ) ; private final MeanMetric warmerMetric = new MeanMetric ( ) ; public ShardIndexWarmerService ( ShardId shardId , IndexSettings indexSettings ) { super ( shardId , indexSettings ) ; } public ESLogger logger ( ) { return this . logger ; } public void onPreWarm ( ) { current . inc ( ) ; } public void onPostWarm ( long tookInNanos ) { current . dec ( ) ; warmerMetric . inc ( tookInNanos ) ; } public WarmerStats stats ( ) { return new WarmerStats ( current . count ( ) , warmerMetric . count ( ) , TimeUnit . NANOSECONDS . toMillis ( warmerMetric . sum ( ) ) ) ; } } 
