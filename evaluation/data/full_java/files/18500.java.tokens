package com . badlogic . gdx . tests ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . graphics . GL20 ; import com . badlogic . gdx . graphics . g2d . BitmapFont ; import com . badlogic . gdx . graphics . g2d . BitmapFontCache ; import com . badlogic . gdx . graphics . g2d . SpriteBatch ; import com . badlogic . gdx . graphics . g2d . TextureAtlas ; import com . badlogic . gdx . tests . utils . GdxTest ; import com . badlogic . gdx . utils . Align ; public class IntegerBitmapFontTest extends GdxTest { BitmapFont font ; BitmapFontCache singleLineCacheNonInteger ; BitmapFontCache multiLineCacheNonInteger ; BitmapFontCache singleLineCache ; BitmapFontCache multiLineCache ; SpriteBatch batch ; public void create ( ) { TextureAtlas textureAtlas = new TextureAtlas ( <str> ) ; font = new BitmapFont ( Gdx . files . internal ( <str> ) , textureAtlas . findRegion ( <str> ) , false ) ; singleLineCache = new BitmapFontCache ( font , true ) ; multiLineCache = new BitmapFontCache ( font , true ) ; singleLineCacheNonInteger = new BitmapFontCache ( font , false ) ; multiLineCacheNonInteger = new BitmapFontCache ( font , false ) ; batch = new SpriteBatch ( ) ; fillCaches ( ) ; } @Override public void dispose ( ) { batch . dispose ( ) ; font . dispose ( ) ; } public void render ( ) { Gdx . gl . glClear ( GL20 . GL_COLOR_BUFFER_BIT ) ; batch . begin ( ) ; font . setUseIntegerPositions ( false ) ; font . setColor ( <int> , <int> , <int> , <int> ) ; singleLineCacheNonInteger . draw ( batch ) ; multiLineCacheNonInteger . draw ( batch ) ; drawTexts ( ) ; font . setUseIntegerPositions ( true ) ; font . setColor ( <int> , <int> , <int> , <int> ) ; singleLineCache . draw ( batch ) ; multiLineCache . draw ( batch ) ; drawTexts ( ) ; batch . end ( ) ; } private void fillCaches ( ) { String text = <str> ; singleLineCache . setColor ( <int> , <int> , <int> , <int> ) ; singleLineCache . setText ( text , <float> , <float> ) ; multiLineCache . setColor ( <int> , <int> , <int> , <int> ) ; multiLineCache . setText ( text , <float> , <float> , <int> , Align . center , false ) ; singleLineCacheNonInteger . setColor ( <int> , <int> , <int> , <int> ) ; singleLineCacheNonInteger . setText ( text , <float> , <float> ) ; multiLineCacheNonInteger . setColor ( <int> , <int> , <int> , <int> ) ; multiLineCacheNonInteger . setText ( text , <float> , <float> , <int> , Align . center , false ) ; } private void drawTexts ( ) { String text = <str> ; font . draw ( batch , text , <float> , <float> ) ; font . draw ( batch , text , <float> , <float> ) ; font . draw ( batch , text , <float> , <float> , <int> , Align . center , false ) ; } } 
