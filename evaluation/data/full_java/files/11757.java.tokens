package org . gradle . api . tasks ; import groovy . lang . Closure ; import org . gradle . api . Action ; import org . gradle . api . file . * ; import org . gradle . api . internal . ConventionTask ; import org . gradle . api . internal . file . FileLookup ; import org . gradle . api . internal . file . FileResolver ; import org . gradle . api . internal . file . copy . * ; import org . gradle . api . specs . Spec ; import org . gradle . internal . nativeplatform . filesystem . FileSystem ; import org . gradle . internal . reflect . Instantiator ; import javax . inject . Inject ; import java . io . FilterReader ; import java . util . Map ; import java . util . Set ; import java . util . regex . Pattern ; public abstract class AbstractCopyTask extends ConventionTask implements CopySpec , CopySpecSource { private final CopySpecInternal rootSpec ; private final CopySpecInternal mainSpec ; protected AbstractCopyTask ( ) { this . rootSpec = createRootSpec ( ) ; this . mainSpec = rootSpec . addChild ( ) ; } protected CopySpecInternal createRootSpec ( ) { Instantiator instantiator = getInstantiator ( ) ; FileResolver fileResolver = getFileResolver ( ) ; return instantiator . newInstance ( DefaultCopySpec . class , fileResolver , instantiator ) ; } protected abstract CopyAction createCopyAction ( ) ; @Inject protected Instantiator getInstantiator ( ) { throw new UnsupportedOperationException ( ) ; } @Inject protected FileSystem getFileSystem ( ) { throw new UnsupportedOperationException ( ) ; } @Inject protected FileResolver getFileResolver ( ) { throw new UnsupportedOperationException ( ) ; } @Inject protected FileLookup getFileLookup ( ) { throw new UnsupportedOperationException ( ) ; } @TaskAction protected void copy ( ) { Instantiator instantiator = getInstantiator ( ) ; FileSystem fileSystem = getFileSystem ( ) ; CopyActionExecuter copyActionExecuter = new CopyActionExecuter ( instantiator , fileSystem ) ; CopyAction copyAction = createCopyAction ( ) ; WorkResult didWork = copyActionExecuter . execute ( rootSpec , copyAction ) ; setDidWork ( didWork . getDidWork ( ) ) ; } @InputFiles @SkipWhenEmpty @Optional public FileCollection getSource ( ) { return rootSpec . buildRootResolver ( ) . getAllSource ( ) ; } public CopySpecInternal getRootSpec ( ) { return rootSpec ; } protected CopySpecInternal getMainSpec ( ) { return mainSpec ; } public boolean isCaseSensitive ( ) { return getMainSpec ( ) . isCaseSensitive ( ) ; } public void setCaseSensitive ( boolean caseSensitive ) { getMainSpec ( ) . setCaseSensitive ( caseSensitive ) ; } public boolean getIncludeEmptyDirs ( ) { return getMainSpec ( ) . getIncludeEmptyDirs ( ) ; } public void setIncludeEmptyDirs ( boolean includeEmptyDirs ) { getMainSpec ( ) . setIncludeEmptyDirs ( includeEmptyDirs ) ; } public void setDuplicatesStrategy ( DuplicatesStrategy strategy ) { getRootSpec ( ) . setDuplicatesStrategy ( strategy ) ; } public DuplicatesStrategy getDuplicatesStrategy ( ) { return getRootSpec ( ) . getDuplicatesStrategy ( ) ; } public AbstractCopyTask from ( Object . . . sourcePaths ) { getMainSpec ( ) . from ( sourcePaths ) ; return this ; } public AbstractCopyTask filesMatching ( String pattern , Action < ? super FileCopyDetails > action ) { getMainSpec ( ) . filesMatching ( pattern , action ) ; return this ; } public AbstractCopyTask filesNotMatching ( String pattern , Action < ? super FileCopyDetails > action ) { getMainSpec ( ) . filesNotMatching ( pattern , action ) ; return this ; } public AbstractCopyTask from ( Object sourcePath , Closure c ) { getMainSpec ( ) . from ( sourcePath , c ) ; return this ; } public CopySpec with ( CopySpec . . . sourceSpecs ) { getMainSpec ( ) . with ( sourceSpecs ) ; return this ; } public AbstractCopyTask into ( Object destDir ) { getRootSpec ( ) . into ( destDir ) ; return this ; } public AbstractCopyTask into ( Object destPath , Closure configureClosure ) { getMainSpec ( ) . into ( destPath , configureClosure ) ; return this ; } public AbstractCopyTask include ( String . . . includes ) { getMainSpec ( ) . include ( includes ) ; return this ; } public AbstractCopyTask include ( Iterable < String > includes ) { getMainSpec ( ) . include ( includes ) ; return this ; } public AbstractCopyTask include ( Spec < FileTreeElement > includeSpec ) { getMainSpec ( ) . include ( includeSpec ) ; return this ; } public AbstractCopyTask include ( Closure includeSpec ) { getMainSpec ( ) . include ( includeSpec ) ; return this ; } public AbstractCopyTask exclude ( String . . . excludes ) { getMainSpec ( ) . exclude ( excludes ) ; return this ; } public AbstractCopyTask exclude ( Iterable < String > excludes ) { getMainSpec ( ) . exclude ( excludes ) ; return this ; } public AbstractCopyTask exclude ( Spec < FileTreeElement > excludeSpec ) { getMainSpec ( ) . exclude ( excludeSpec ) ; return this ; } public AbstractCopyTask exclude ( Closure excludeSpec ) { getMainSpec ( ) . exclude ( excludeSpec ) ; return this ; } public AbstractCopyTask setIncludes ( Iterable < String > includes ) { getMainSpec ( ) . setIncludes ( includes ) ; return this ; } public Set < String > getIncludes ( ) { return getMainSpec ( ) . getIncludes ( ) ; } public AbstractCopyTask setExcludes ( Iterable < String > excludes ) { getMainSpec ( ) . setExcludes ( excludes ) ; return this ; } public Set < String > getExcludes ( ) { return getMainSpec ( ) . getExcludes ( ) ; } public AbstractCopyTask rename ( Closure closure ) { getMainSpec ( ) . rename ( closure ) ; return this ; } public AbstractCopyTask rename ( String sourceRegEx , String replaceWith ) { getMainSpec ( ) . rename ( sourceRegEx , replaceWith ) ; return this ; } public AbstractCopyTask rename ( Pattern sourceRegEx , String replaceWith ) { getMainSpec ( ) . rename ( sourceRegEx , replaceWith ) ; return this ; } public AbstractCopyTask filter ( Map < String , ? > properties , Class < ? extends FilterReader > filterType ) { getMainSpec ( ) . filter ( properties , filterType ) ; return this ; } public AbstractCopyTask filter ( Class < ? extends FilterReader > filterType ) { getMainSpec ( ) . filter ( filterType ) ; return this ; } public AbstractCopyTask filter ( Closure closure ) { getMainSpec ( ) . filter ( closure ) ; return this ; } public AbstractCopyTask expand ( Map < String , ? > properties ) { getMainSpec ( ) . expand ( properties ) ; return this ; } public Integer getDirMode ( ) { return getMainSpec ( ) . getDirMode ( ) ; } public Integer getFileMode ( ) { return getMainSpec ( ) . getFileMode ( ) ; } public AbstractCopyTask setDirMode ( Integer mode ) { getMainSpec ( ) . setDirMode ( mode ) ; return this ; } public AbstractCopyTask setFileMode ( Integer mode ) { getMainSpec ( ) . setFileMode ( mode ) ; return this ; } public AbstractCopyTask eachFile ( Action < ? super FileCopyDetails > action ) { getMainSpec ( ) . eachFile ( action ) ; return this ; } public AbstractCopyTask eachFile ( Closure closure ) { getMainSpec ( ) . eachFile ( closure ) ; return this ; } } 
