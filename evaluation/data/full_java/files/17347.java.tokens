package com . badlogic . gdx . physics . bullet . collision ; import com . badlogic . gdx . physics . bullet . BulletBase ; import com . badlogic . gdx . physics . bullet . linearmath . * ; import com . badlogic . gdx . math . Vector3 ; import com . badlogic . gdx . math . Quaternion ; import com . badlogic . gdx . math . Matrix3 ; import com . badlogic . gdx . math . Matrix4 ; public class btDbvtNode extends BulletBase { private long swigCPtr ; protected btDbvtNode ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , cPtr , cMemoryOwn ) ; swigCPtr = cPtr ; } public btDbvtNode ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( swigCPtr = cPtr , cMemoryOwn ) ; } public static long getCPtr ( btDbvtNode obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; CollisionJNI . delete_btDbvtNode ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } public void setVolume ( btDbvtAabbMm value ) { CollisionJNI . btDbvtNode_volume_set ( swigCPtr , this , btDbvtAabbMm . getCPtr ( value ) , value ) ; } public btDbvtAabbMm getVolume ( ) { long cPtr = CollisionJNI . btDbvtNode_volume_get ( swigCPtr , this ) ; return ( cPtr = = <int> ) ? null : new btDbvtAabbMm ( cPtr , false ) ; } public void setParent ( btDbvtNode value ) { CollisionJNI . btDbvtNode_parent_set ( swigCPtr , this , btDbvtNode . getCPtr ( value ) , value ) ; } public btDbvtNode getParent ( ) { long cPtr = CollisionJNI . btDbvtNode_parent_get ( swigCPtr , this ) ; return ( cPtr = = <int> ) ? null : new btDbvtNode ( cPtr , false ) ; } public boolean isleaf ( ) { return CollisionJNI . btDbvtNode_isleaf ( swigCPtr , this ) ; } public boolean isinternal ( ) { return CollisionJNI . btDbvtNode_isinternal ( swigCPtr , this ) ; } public void setChilds ( SWIGTYPE_p_p_btDbvtNode value ) { CollisionJNI . btDbvtNode_childs_set ( swigCPtr , this , SWIGTYPE_p_p_btDbvtNode . getCPtr ( value ) ) ; } public SWIGTYPE_p_p_btDbvtNode getChilds ( ) { long cPtr = CollisionJNI . btDbvtNode_childs_get ( swigCPtr , this ) ; return ( cPtr = = <int> ) ? null : new SWIGTYPE_p_p_btDbvtNode ( cPtr , false ) ; } public void setData ( long value ) { CollisionJNI . btDbvtNode_data_set ( swigCPtr , this , value ) ; } public long getData ( ) { return CollisionJNI . btDbvtNode_data_get ( swigCPtr , this ) ; } public void setDataAsInt ( int value ) { CollisionJNI . btDbvtNode_dataAsInt_set ( swigCPtr , this , value ) ; } public int getDataAsInt ( ) { return CollisionJNI . btDbvtNode_dataAsInt_get ( swigCPtr , this ) ; } public btDbvtNode getChild ( int index ) { long cPtr = CollisionJNI . btDbvtNode_getChild ( swigCPtr , this , index ) ; return ( cPtr = = <int> ) ? null : new btDbvtNode ( cPtr , false ) ; } public btDbvtNode getChild0 ( ) { long cPtr = CollisionJNI . btDbvtNode_getChild0 ( swigCPtr , this ) ; return ( cPtr = = <int> ) ? null : new btDbvtNode ( cPtr , false ) ; } public btDbvtNode getChild1 ( ) { long cPtr = CollisionJNI . btDbvtNode_getChild1 ( swigCPtr , this ) ; return ( cPtr = = <int> ) ? null : new btDbvtNode ( cPtr , false ) ; } public btDbvtNode ( ) { this ( CollisionJNI . new_btDbvtNode ( ) , true ) ; } } 
