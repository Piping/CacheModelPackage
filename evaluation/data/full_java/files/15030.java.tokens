package org . gradle . nativeplatform . toolchain . internal . clang ; import org . gradle . api . internal . file . FileResolver ; import org . gradle . internal . operations . BuildOperationProcessor ; import org . gradle . internal . os . OperatingSystem ; import org . gradle . internal . reflect . Instantiator ; import org . gradle . nativeplatform . toolchain . Clang ; import org . gradle . nativeplatform . toolchain . internal . gcc . AbstractGccCompatibleToolChain ; import org . gradle . nativeplatform . toolchain . internal . gcc . DefaultGccPlatformToolChain ; import org . gradle . nativeplatform . toolchain . internal . gcc . version . CompilerMetaDataProviderFactory ; import org . gradle . process . internal . ExecActionFactory ; public class ClangToolChain extends AbstractGccCompatibleToolChain implements Clang { public static final String DEFAULT_NAME = <str> ; public ClangToolChain ( String name , BuildOperationProcessor buildOperationProcessor , OperatingSystem operatingSystem , FileResolver fileResolver , ExecActionFactory execActionFactory , CompilerMetaDataProviderFactory metaDataProviderFactory , Instantiator instantiator ) { super ( name , buildOperationProcessor , operatingSystem , fileResolver , execActionFactory , metaDataProviderFactory . clang ( ) , instantiator ) ; } @Override protected void configureDefaultTools ( DefaultGccPlatformToolChain toolChain ) { toolChain . getLinker ( ) . setExecutable ( <str> ) ; toolChain . getcCompiler ( ) . setExecutable ( <str> ) ; toolChain . getCppCompiler ( ) . setExecutable ( <str> ) ; toolChain . getObjcCompiler ( ) . setExecutable ( <str> ) ; toolChain . getObjcppCompiler ( ) . setExecutable ( <str> ) ; toolChain . getAssembler ( ) . setExecutable ( <str> ) ; } @Override protected String getTypeName ( ) { return <str> ; } } 
