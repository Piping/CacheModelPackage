package org . gradle . api . internal . artifacts . ivyservice . resolveengine . graph ; import java . util . Arrays ; import java . util . List ; public class CompositeDependencyGraphVisitor implements DependencyGraphVisitor { private final List < DependencyGraphVisitor > visitors ; public CompositeDependencyGraphVisitor ( DependencyGraphVisitor . . . visitors ) { this . visitors = Arrays . asList ( visitors ) ; } public void start ( DependencyGraphNode root ) { for ( DependencyGraphVisitor visitor : visitors ) { visitor . start ( root ) ; } } public void visitNode ( DependencyGraphNode resolvedConfiguration ) { for ( DependencyGraphVisitor visitor : visitors ) { visitor . visitNode ( resolvedConfiguration ) ; } } public void visitEdge ( DependencyGraphNode resolvedConfiguration ) { for ( DependencyGraphVisitor visitor : visitors ) { visitor . visitEdge ( resolvedConfiguration ) ; } } public void finish ( DependencyGraphNode root ) { for ( DependencyGraphVisitor visitor : visitors ) { visitor . finish ( root ) ; } } } 
