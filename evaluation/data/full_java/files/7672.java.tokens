package org . elasticsearch . transport ; import org . elasticsearch . transport . local . LocalTransport ; import org . elasticsearch . transport . netty . NettyTransport ; import java . util . Arrays ; public enum Transports { ; public final static String TEST_MOCK_TRANSPORT_THREAD_PREFIX = <str> ; public static final boolean isTransportThread ( Thread t ) { final String threadName = t . getName ( ) ; for ( String s : Arrays . asList ( LocalTransport . LOCAL_TRANSPORT_THREAD_NAME_PREFIX , NettyTransport . HTTP_SERVER_BOSS_THREAD_NAME_PREFIX , NettyTransport . HTTP_SERVER_WORKER_THREAD_NAME_PREFIX , NettyTransport . TRANSPORT_CLIENT_WORKER_THREAD_NAME_PREFIX , NettyTransport . TRANSPORT_CLIENT_BOSS_THREAD_NAME_PREFIX , TEST_MOCK_TRANSPORT_THREAD_PREFIX ) ) { if ( threadName . contains ( s ) ) { return true ; } } return false ; } public static boolean assertTransportThread ( ) { final Thread t = Thread . currentThread ( ) ; assert isTransportThread ( t ) : <str> + t + <str> ; return true ; } public static boolean assertNotTransportThread ( String reason ) { final Thread t = Thread . currentThread ( ) ; assert isTransportThread ( t ) = = false : <str> + t + <str> + reason + <str> ; return true ; } } 
