package org . eclipse . debug . examples . ui . midi . adapters ; import org . eclipse . debug . examples . ui . pda . views . CheckboxView ; import org . eclipse . debug . internal . ui . viewers . model . provisional . IColumnPresentation ; import org . eclipse . debug . internal . ui . viewers . model . provisional . IColumnPresentationFactory ; import org . eclipse . debug . internal . ui . viewers . model . provisional . IPresentationContext ; import org . eclipse . debug . ui . IDebugUIConstants ; public class SequencerColumnFactory implements IColumnPresentationFactory { @Override public IColumnPresentation createColumnPresentation ( IPresentationContext context , Object element ) { if ( IDebugUIConstants . ID_VARIABLE_VIEW . equals ( context . getId ( ) ) | | CheckboxView . ID . equals ( context . getId ( ) ) ) { return new SequencerColumnPresentation ( ) ; } return null ; } @Override public String getColumnPresentationId ( IPresentationContext context , Object element ) { if ( IDebugUIConstants . ID_VARIABLE_VIEW . equals ( context . getId ( ) ) | | CheckboxView . ID . equals ( context . getId ( ) ) ) { return SequencerColumnPresentation . ID ; } return null ; } } 
