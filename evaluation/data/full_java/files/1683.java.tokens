package org . apache . cassandra . stress ; import java . io . IOException ; import java . io . ObjectInputStream ; import java . io . PrintStream ; import java . net . InetAddress ; import java . net . ServerSocket ; import java . net . Socket ; import org . apache . commons . cli . * ; import org . apache . cassandra . stress . settings . StressSettings ; public class StressServer { private static final Options availableOptions = new Options ( ) ; static { availableOptions . addOption ( <str> , <str> , true , <str> ) ; } public static void main ( String [ ] args ) throws Exception { ServerSocket serverSocket = null ; CommandLineParser parser = new PosixParser ( ) ; InetAddress address = InetAddress . getByName ( <str> ) ; try { CommandLine cmd = parser . parse ( availableOptions , args ) ; if ( cmd . hasOption ( <str> ) ) { address = InetAddress . getByName ( cmd . getOptionValue ( <str> ) ) ; } } catch ( ParseException e ) { System . err . printf ( <str> ) ; System . exit ( <int> ) ; } try { serverSocket = new ServerSocket ( <int> , <int> , address ) ; } catch ( IOException e ) { System . err . printf ( <str> , address . getHostAddress ( ) ) ; System . exit ( <int> ) ; } for ( ; ; ) new StressThread ( serverSocket . accept ( ) ) . start ( ) ; } public static class StressThread extends Thread { private final Socket socket ; public StressThread ( Socket client ) { this . socket = client ; } public void run ( ) { try { ObjectInputStream in = new ObjectInputStream ( socket . getInputStream ( ) ) ; PrintStream out = new PrintStream ( socket . getOutputStream ( ) ) ; StressAction action = new StressAction ( ( StressSettings ) in . readObject ( ) , out ) ; Thread actionThread = new Thread ( action ) ; actionThread . start ( ) ; while ( actionThread . isAlive ( ) ) { try { if ( in . readInt ( ) = = <int> ) { actionThread . interrupt ( ) ; break ; } } catch ( Exception e ) { } } out . close ( ) ; in . close ( ) ; socket . close ( ) ; } catch ( IOException e ) { throw new RuntimeException ( e . getMessage ( ) , e ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } } } } 
