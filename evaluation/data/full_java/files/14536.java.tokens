package org . gradle . internal . nativeintegration . jna ; import org . gradle . internal . nativeintegration . NativeIntegrationException ; import org . gradle . internal . nativeintegration . NativeIntegrationUnavailableException ; import org . gradle . internal . nativeintegration . ProcessEnvironment ; import org . gradle . internal . os . OperatingSystem ; import java . io . File ; import java . util . Map ; public class UnsupportedEnvironment implements ProcessEnvironment { public boolean maybeSetEnvironment ( Map < String , String > source ) { return false ; } public void removeEnvironmentVariable ( String name ) throws NativeIntegrationException { throw notSupported ( ) ; } public boolean maybeRemoveEnvironmentVariable ( String name ) { return false ; } public void setEnvironmentVariable ( String name , String value ) throws NativeIntegrationException { throw notSupported ( ) ; } public boolean maybeSetEnvironmentVariable ( String name , String value ) { return false ; } public File getProcessDir ( ) throws NativeIntegrationException { throw notSupported ( ) ; } public void setProcessDir ( File processDir ) throws NativeIntegrationException { throw notSupported ( ) ; } public boolean maybeSetProcessDir ( File processDir ) { return false ; } public Long getPid ( ) throws NativeIntegrationException { throw notSupported ( ) ; } public Long maybeGetPid ( ) { return null ; } private NativeIntegrationException notSupported ( ) { return new NativeIntegrationUnavailableException ( <str> + OperatingSystem . current ( ) ) ; } } 
