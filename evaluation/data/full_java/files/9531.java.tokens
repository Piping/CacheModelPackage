package com . google . common . util . concurrent ; import static com . google . common . base . Preconditions . checkNotNull ; import com . google . common . annotations . Beta ; import java . util . concurrent . Callable ; import java . util . concurrent . TimeUnit ; @Beta public final class FakeTimeLimiter implements TimeLimiter { @Override public < T > T newProxy ( T target , Class < T > interfaceType , long timeoutDuration , TimeUnit timeoutUnit ) { checkNotNull ( target ) ; checkNotNull ( interfaceType ) ; checkNotNull ( timeoutUnit ) ; return target ; } @Override public < T > T callWithTimeout ( Callable < T > callable , long timeoutDuration , TimeUnit timeoutUnit , boolean amInterruptible ) throws Exception { checkNotNull ( timeoutUnit ) ; return callable . call ( ) ; } } 
