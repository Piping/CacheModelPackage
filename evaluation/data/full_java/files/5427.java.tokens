package org . elasticsearch . action . support . master ; import org . elasticsearch . action . ActionResponse ; import org . elasticsearch . action . support . ActionFilters ; import org . elasticsearch . cluster . ClusterService ; import org . elasticsearch . cluster . metadata . IndexNameExpressionResolver ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . threadpool . ThreadPool ; import org . elasticsearch . transport . TransportService ; import java . util . function . Supplier ; public abstract class TransportMasterNodeReadAction < Request extends MasterNodeReadRequest , Response extends ActionResponse > extends TransportMasterNodeAction < Request , Response > { public static final String FORCE_LOCAL_SETTING = <str> ; private Boolean forceLocal ; protected TransportMasterNodeReadAction ( Settings settings , String actionName , TransportService transportService , ClusterService clusterService , ThreadPool threadPool , ActionFilters actionFilters , IndexNameExpressionResolver indexNameExpressionResolver , Supplier < Request > request ) { super ( settings , actionName , transportService , clusterService , threadPool , actionFilters , indexNameExpressionResolver , request ) ; this . forceLocal = settings . getAsBoolean ( FORCE_LOCAL_SETTING , null ) ; } @Override protected final boolean localExecute ( Request request ) { if ( forceLocal ! = null ) { return forceLocal ; } return request . local ( ) ; } } 
