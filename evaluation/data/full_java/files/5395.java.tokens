package org . elasticsearch . action . support ; import org . elasticsearch . action . ActionListener ; import org . elasticsearch . action . ActionRequest ; import org . elasticsearch . action . ActionResponse ; import org . elasticsearch . common . component . AbstractComponent ; import org . elasticsearch . common . settings . Settings ; public interface ActionFilter { int order ( ) ; void apply ( String action , ActionRequest request , ActionListener listener , ActionFilterChain chain ) ; void apply ( String action , ActionResponse response , ActionListener listener , ActionFilterChain chain ) ; public static abstract class Simple extends AbstractComponent implements ActionFilter { protected Simple ( Settings settings ) { super ( settings ) ; } @Override public final void apply ( String action , ActionRequest request , ActionListener listener , ActionFilterChain chain ) { if ( apply ( action , request , listener ) ) { chain . proceed ( action , request , listener ) ; } } protected abstract boolean apply ( String action , ActionRequest request , ActionListener listener ) ; @Override public final void apply ( String action , ActionResponse response , ActionListener listener , ActionFilterChain chain ) { if ( apply ( action , response , listener ) ) { chain . proceed ( action , response , listener ) ; } } protected abstract boolean apply ( String action , ActionResponse response , ActionListener listener ) ; } } 
