package com . google . common . collect . testing ; import java . util . Arrays ; final class Platform { static boolean checkIsInstance ( Class < ? > clazz , Object obj ) { return true ; } static void checkCast ( Class < ? > clazz , Object obj ) { } static < T > T [ ] clone ( T [ ] array ) { return ( T [ ] ) Arrays . copyOfRange ( array , <int> , array . length ) ; } static String format ( String template , Object . . . args ) { StringBuilder builder = new StringBuilder ( template . length ( ) + <int> * args . length ) ; int templateStart = <int> ; int i = <int> ; while ( i < args . length ) { int placeholderStart = template . indexOf ( <str> , templateStart ) ; if ( placeholderStart = = - <int> ) { break ; } builder . append ( template . substring ( templateStart , placeholderStart ) ) ; builder . append ( args [ i + + ] ) ; templateStart = placeholderStart + <int> ; } builder . append ( template . substring ( templateStart ) ) ; if ( i < args . length ) { builder . append ( <str> ) ; builder . append ( args [ i + + ] ) ; while ( i < args . length ) { builder . append ( <str> ) ; builder . append ( args [ i + + ] ) ; } builder . append ( <str> ) ; } return builder . toString ( ) ; } private Platform ( ) { } } 
