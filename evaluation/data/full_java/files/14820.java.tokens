package org . gradle . jvm . internal ; import com . google . common . collect . Lists ; import org . gradle . api . JavaVersion ; import org . gradle . jvm . platform . JavaPlatform ; import org . gradle . jvm . platform . internal . DefaultJavaPlatform ; import org . gradle . platform . base . internal . PlatformRequirement ; import org . gradle . platform . base . internal . PlatformResolver ; import java . util . List ; public class JavaPlatformResolver implements PlatformResolver < JavaPlatform > { private final List < JavaPlatform > platforms = Lists . newArrayList ( ) ; public JavaPlatformResolver ( ) { for ( JavaVersion javaVersion : JavaVersion . values ( ) ) { DefaultJavaPlatform javaPlatform = new DefaultJavaPlatform ( javaVersion ) ; platforms . add ( javaPlatform ) ; } } @Override public Class < JavaPlatform > getType ( ) { return JavaPlatform . class ; } @Override public JavaPlatform resolve ( PlatformRequirement platformRequirement ) { for ( JavaPlatform platform : platforms ) { if ( platform . getName ( ) . equals ( platformRequirement . getPlatformName ( ) ) ) { return platform ; } } return null ; } } 
