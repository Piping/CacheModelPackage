package org . gradle . execution ; import org . gradle . api . Task ; import org . gradle . api . internal . GradleInternal ; import org . gradle . api . specs . Spec ; import org . gradle . api . specs . Specs ; import java . util . HashSet ; import java . util . Set ; public class ExcludedTaskFilteringBuildConfigurationAction implements BuildConfigurationAction { private final TaskSelector taskSelector ; public ExcludedTaskFilteringBuildConfigurationAction ( TaskSelector taskSelector ) { this . taskSelector = taskSelector ; } public void configure ( BuildExecutionContext context ) { GradleInternal gradle = context . getGradle ( ) ; Set < String > excludedTaskNames = gradle . getStartParameter ( ) . getExcludedTaskNames ( ) ; if ( ! excludedTaskNames . isEmpty ( ) ) { final Set < Spec < Task > > filters = new HashSet < Spec < Task > > ( ) ; for ( String taskName : excludedTaskNames ) { filters . add ( taskSelector . getFilter ( taskName ) ) ; } gradle . getTaskGraph ( ) . useFilter ( Specs . and ( filters ) ) ; } context . proceed ( ) ; } } 
