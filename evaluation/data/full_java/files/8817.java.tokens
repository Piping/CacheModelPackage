package org . elasticsearch . plan . a ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . script . CompiledScript ; import org . elasticsearch . script . ScriptService ; import org . elasticsearch . test . ESTestCase ; import org . junit . Before ; import java . util . Map ; public abstract class ScriptTestCase extends ESTestCase { protected PlanAScriptEngineService scriptEngine ; protected Settings getSettings ( ) { Settings . Builder builder = Settings . builder ( ) ; builder . put ( PlanAScriptEngineService . NUMERIC_OVERFLOW , random ( ) . nextBoolean ( ) ) ; return builder . build ( ) ; } @Before public void setup ( ) { scriptEngine = new PlanAScriptEngineService ( getSettings ( ) ) ; } public Object exec ( String script ) { return exec ( script , null ) ; } public Object exec ( String script , Map < String , Object > vars ) { Object object = scriptEngine . compile ( script ) ; CompiledScript compiled = new CompiledScript ( ScriptService . ScriptType . INLINE , getTestName ( ) , <str> , object ) ; return scriptEngine . executable ( compiled , vars ) . run ( ) ; } } 
