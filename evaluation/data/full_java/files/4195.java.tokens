package org . eclipse . debug . internal . ui . launchConfigurations ; import org . eclipse . core . resources . IProject ; import org . eclipse . core . resources . IResource ; import org . eclipse . core . runtime . CoreException ; import org . eclipse . debug . core . ILaunchConfiguration ; import org . eclipse . debug . core . ILaunchConfigurationType ; import org . eclipse . jface . viewers . Viewer ; import org . eclipse . jface . viewers . ViewerFilter ; public class ClosedProjectFilter extends ViewerFilter { public ClosedProjectFilter ( ) { super ( ) ; } @Override public boolean select ( Viewer viewer , Object parent , Object element ) { if ( element instanceof ILaunchConfigurationType ) { return true ; } if ( element instanceof ILaunchConfiguration ) { try { ILaunchConfiguration config = ( ILaunchConfiguration ) element ; IResource [ ] resources = config . getMappedResources ( ) ; if ( resources = = null ) { return true ; } for ( int i = <int> ; i < resources . length ; i + + ) { IProject project = resources [ i ] . getProject ( ) ; if ( project ! = null & & ( project . isOpen ( ) | | ! project . exists ( ) ) ) { return true ; } } } catch ( CoreException e ) { } } return false ; } } 
