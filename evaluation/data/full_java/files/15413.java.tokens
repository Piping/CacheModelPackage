package org . gradle . internal . resource . transport . http ; import com . google . common . collect . Sets ; import org . gradle . authentication . Authentication ; import org . gradle . authentication . http . BasicAuthentication ; import org . gradle . authentication . http . DigestAuthentication ; import org . gradle . internal . authentication . AllSchemesAuthentication ; import org . gradle . internal . resource . connector . ResourceConnectorFactory ; import org . gradle . internal . resource . connector . ResourceConnectorSpecification ; import org . gradle . internal . resource . transfer . DefaultExternalResourceConnector ; import org . gradle . internal . resource . transfer . ExternalResourceConnector ; import java . util . HashSet ; import java . util . Set ; public class HttpConnectorFactory implements ResourceConnectorFactory { @Override public Set < String > getSupportedProtocols ( ) { return Sets . newHashSet ( <str> , <str> ) ; } @Override public Set < Class < ? extends Authentication > > getSupportedAuthentication ( ) { Set < Class < ? extends Authentication > > supported = new HashSet < Class < ? extends Authentication > > ( ) ; supported . add ( BasicAuthentication . class ) ; supported . add ( DigestAuthentication . class ) ; supported . add ( AllSchemesAuthentication . class ) ; return supported ; } @Override public ExternalResourceConnector createResourceConnector ( ResourceConnectorSpecification connectionDetails ) { HttpClientHelper http = new HttpClientHelper ( new DefaultHttpSettings ( connectionDetails . getAuthentications ( ) ) ) ; HttpResourceAccessor accessor = new HttpResourceAccessor ( http ) ; HttpResourceLister lister = new HttpResourceLister ( accessor ) ; HttpResourceUploader uploader = new HttpResourceUploader ( http ) ; return new DefaultExternalResourceConnector ( accessor , lister , uploader ) ; } } 
