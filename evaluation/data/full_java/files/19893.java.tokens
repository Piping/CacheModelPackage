package io . netty . example . spdy . client ; import io . netty . channel . ChannelHandlerContext ; import io . netty . channel . ChannelOutboundHandlerAdapter ; import io . netty . channel . ChannelPromise ; import io . netty . handler . codec . http . HttpMessage ; import io . netty . handler . codec . spdy . SpdyHttpHeaders ; import io . netty . handler . codec . spdy . SpdyHttpHeaders . Names ; public class SpdyClientStreamIdHandler extends ChannelOutboundHandlerAdapter { private int currentStreamId = <int> ; public boolean acceptOutboundMessage ( Object msg ) { return msg instanceof HttpMessage ; } @Override public void write ( ChannelHandlerContext ctx , Object msg , ChannelPromise promise ) { if ( acceptOutboundMessage ( msg ) ) { HttpMessage httpMsg = ( HttpMessage ) msg ; if ( ! httpMsg . headers ( ) . contains ( SpdyHttpHeaders . Names . STREAM_ID ) ) { httpMsg . headers ( ) . setInt ( Names . STREAM_ID , currentStreamId ) ; currentStreamId + = <int> ; } } ctx . write ( msg , promise ) ; } } 
