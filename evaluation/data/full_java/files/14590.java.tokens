package org . gradle . performance . fixture ; import org . gradle . performance . measure . MeasuredOperation ; import java . io . File ; import java . util . ArrayList ; import java . util . Collections ; import java . util . List ; public class CompilationLoggingCollector implements DataCollector { private static final boolean HOTSPOT_LOGGING_ENABLED = System . getProperty ( <str> ) ! = null ; @Override public List < String > getAdditionalJvmOpts ( File workingDir ) { List < String > jvmOpts = new ArrayList < String > ( ) ; if ( HOTSPOT_LOGGING_ENABLED ) { jvmOpts . add ( <str> ) ; jvmOpts . add ( <str> ) ; jvmOpts . add ( <str> ) ; jvmOpts . add ( <str> ) ; jvmOpts . add ( <str> ) ; jvmOpts . add ( <str> ) ; } return jvmOpts ; } @Override public List < String > getAdditionalArgs ( File workingDir ) { return Collections . emptyList ( ) ; } @Override public void collect ( BuildExperimentInvocationInfo invocationInfo , MeasuredOperation operation ) { if ( HOTSPOT_LOGGING_ENABLED ) { File hotspotLog = new File ( invocationInfo . getProjectDir ( ) , <str> ) ; if ( hotspotLog . exists ( ) ) { LogFiles . copyLogFile ( hotspotLog , invocationInfo , <str> , <str> ) ; } } } } 
