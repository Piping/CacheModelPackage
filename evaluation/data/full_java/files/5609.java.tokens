package org . elasticsearch . cluster . routing . allocation ; import org . elasticsearch . ExceptionsHelper ; import org . elasticsearch . cluster . ClusterInfo ; import org . elasticsearch . cluster . node . DiscoveryNodes ; import org . elasticsearch . cluster . routing . RoutingNodes ; import org . elasticsearch . cluster . routing . ShardRouting ; import org . elasticsearch . cluster . routing . allocation . decider . AllocationDeciders ; import java . util . List ; public class FailedRerouteAllocation extends RoutingAllocation { public static class FailedShard { public final ShardRouting shard ; public final String message ; public final Throwable failure ; public FailedShard ( ShardRouting shard , String message , Throwable failure ) { this . shard = shard ; this . message = message ; this . failure = failure ; } @Override public String toString ( ) { return <str> + shard + <str> + message + <str> + ExceptionsHelper . detailedMessage ( failure ) + <str> ; } } private final List < FailedShard > failedShards ; public FailedRerouteAllocation ( AllocationDeciders deciders , RoutingNodes routingNodes , DiscoveryNodes nodes , List < FailedShard > failedShards , ClusterInfo clusterInfo ) { super ( deciders , routingNodes , nodes , clusterInfo , System . nanoTime ( ) ) ; this . failedShards = failedShards ; } public List < FailedShard > failedShards ( ) { return failedShards ; } } 
