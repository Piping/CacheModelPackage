package com . badlogic . gdx . backends . gwt ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . graphics . Cursor ; import com . badlogic . gdx . graphics . Pixmap ; import com . badlogic . gdx . utils . GdxRuntimeException ; import com . google . gwt . dom . client . CanvasElement ; public class GwtCursor implements Cursor { private String cssCursorProperty ; public GwtCursor ( Pixmap pixmap , int xHotspot , int yHotspot ) { if ( pixmap = = null ) { this . cssCursorProperty = <str> ; return ; } if ( pixmap . getFormat ( ) ! = Pixmap . Format . RGBA8888 ) { throw new GdxRuntimeException ( <str> ) ; } if ( ( pixmap . getWidth ( ) & ( pixmap . getWidth ( ) - <int> ) ) ! = <int> ) { throw new GdxRuntimeException ( <str> + pixmap . getWidth ( ) + <str> ) ; } if ( ( pixmap . getHeight ( ) & ( pixmap . getHeight ( ) - <int> ) ) ! = <int> ) { throw new GdxRuntimeException ( <str> + pixmap . getHeight ( ) + <str> ) ; } if ( xHotspot < <int> | | xHotspot > = pixmap . getWidth ( ) ) { throw new GdxRuntimeException ( <str> + xHotspot + <str> + pixmap . getWidth ( ) + <str> ) ; } if ( yHotspot < <int> | | yHotspot > = pixmap . getHeight ( ) ) { throw new GdxRuntimeException ( <str> + yHotspot + <str> + pixmap . getHeight ( ) + <str> ) ; } cssCursorProperty = <str> ; cssCursorProperty + = pixmap . getCanvasElement ( ) . toDataUrl ( <str> ) ; cssCursorProperty + = <str> ; cssCursorProperty + = xHotspot ; cssCursorProperty + = <str> ; cssCursorProperty + = yHotspot ; cssCursorProperty + = <str> ; } @Override public void setSystemCursor ( ) { ( ( GwtApplication ) Gdx . app ) . graphics . canvas . getStyle ( ) . setProperty ( <str> , cssCursorProperty ) ; } public static void resetCursor ( ) { ( ( GwtApplication ) Gdx . app ) . graphics . canvas . getStyle ( ) . setProperty ( <str> , <str> ) ; } } 
