package org . elasticsearch . common . inject ; import java . util . ArrayList ; import java . util . Iterator ; import java . util . List ; public class ModulesBuilder implements Iterable < Module > { private final List < Module > modules = new ArrayList < > ( ) ; public ModulesBuilder add ( Module . . . newModules ) { for ( Module module : newModules ) { modules . add ( module ) ; } return this ; } @Override public Iterator < Module > iterator ( ) { return modules . iterator ( ) ; } public Injector createInjector ( ) { Injector injector = Guice . createInjector ( modules ) ; Injectors . cleanCaches ( injector ) ; ( ( InjectorImpl ) injector ) . readOnlyAllSingletons ( ) ; return injector ; } public Injector createChildInjector ( Injector injector ) { Injector childInjector = injector . createChildInjector ( modules ) ; Injectors . cleanCaches ( childInjector ) ; ( ( InjectorImpl ) childInjector ) . readOnlyAllSingletons ( ) ; return childInjector ; } } 
