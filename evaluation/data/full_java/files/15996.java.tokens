package org . gradle . tooling . internal . consumer . converters ; import java . util . Comparator ; public class TaskNameComparator implements Comparator < String > { public int compare ( String taskName1 , String taskName2 ) { int depthDiff = getDepth ( taskName1 ) - getDepth ( taskName2 ) ; if ( depthDiff ! = <int> ) { return depthDiff ; } return compareSegments ( taskName1 , taskName2 ) ; } private int compareSegments ( String taskName1 , String taskName2 ) { int colon1 = taskName1 . indexOf ( <str> ) ; int colon2 = taskName2 . indexOf ( <str> ) ; if ( colon1 > <int> & & colon2 > <int> ) { int diff = taskName1 . substring ( <int> , colon1 ) . compareTo ( taskName2 . substring ( <int> , colon2 ) ) ; if ( diff ! = <int> ) { return diff ; } } return colon1 = = - <int> ? taskName1 . compareTo ( taskName2 ) : compareSegments ( taskName1 . substring ( colon1 + <int> ) , taskName2 . substring ( colon2 + <int> ) ) ; } private int getDepth ( String taskName ) { int counter = <int> ; for ( char c : taskName . toCharArray ( ) ) { if ( c = = <str> ) { counter + + ; } } return counter ; } } 
