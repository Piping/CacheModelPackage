package org . eclipse . debug . internal . ui . views . launch ; import org . eclipse . core . runtime . PlatformObject ; import org . eclipse . debug . core . DebugException ; import org . eclipse . debug . core . model . IStackFrame ; import org . eclipse . debug . internal . ui . views . DebugUIViewsMessages ; import org . eclipse . debug . ui . DebugUITools ; import org . eclipse . debug . ui . IDebugModelPresentation ; import org . eclipse . jface . resource . ImageDescriptor ; import org . eclipse . ui . IEditorInput ; import org . eclipse . ui . IPersistableElement ; import com . ibm . icu . text . MessageFormat ; public class SourceNotFoundEditorInput extends PlatformObject implements IEditorInput { private IStackFrame fFrame ; private String fFrameText ; public SourceNotFoundEditorInput ( IStackFrame frame ) { fFrame = frame ; IDebugModelPresentation pres = DebugUITools . newDebugModelPresentation ( frame . getModelIdentifier ( ) ) ; fFrameText = pres . getText ( frame ) ; pres . dispose ( ) ; } @Override public boolean exists ( ) { return false ; } @Override public ImageDescriptor getImageDescriptor ( ) { return DebugUITools . getDefaultImageDescriptor ( fFrame ) ; } @Override public String getName ( ) { try { return fFrame . getName ( ) ; } catch ( DebugException e ) { return DebugUIViewsMessages . SourceNotFoundEditorInput_Source_Not_Found_1 ; } } @Override public IPersistableElement getPersistable ( ) { return null ; } @Override public String getToolTipText ( ) { return MessageFormat . format ( DebugUIViewsMessages . SourceNotFoundEditorInput_Source_not_found_for__0__2 , new Object [ ] { fFrameText } ) ; } } 
