package org . junit . experimental . results ; import org . hamcrest . BaseMatcher ; import org . hamcrest . Description ; import org . hamcrest . Matcher ; import org . hamcrest . TypeSafeMatcher ; public class ResultMatchers { @Deprecated public ResultMatchers ( ) { } public static Matcher < PrintableResult > isSuccessful ( ) { return failureCountIs ( <int> ) ; } public static Matcher < PrintableResult > failureCountIs ( final int count ) { return new TypeSafeMatcher < PrintableResult > ( ) { public void describeTo ( Description description ) { description . appendText ( <str> + count + <str> ) ; } @Override public boolean matchesSafely ( PrintableResult item ) { return item . failureCount ( ) = = count ; } } ; } public static Matcher < Object > hasSingleFailureContaining ( final String string ) { return new BaseMatcher < Object > ( ) { public boolean matches ( Object item ) { return item . toString ( ) . contains ( string ) & & failureCountIs ( <int> ) . matches ( item ) ; } public void describeTo ( Description description ) { description . appendText ( <str> + string ) ; } } ; } public static Matcher < PrintableResult > hasFailureContaining ( final String string ) { return new BaseMatcher < PrintableResult > ( ) { public boolean matches ( Object item ) { return item . toString ( ) . contains ( string ) ; } public void describeTo ( Description description ) { description . appendText ( <str> + string ) ; } } ; } } 
