package org . elasticsearch . test . rest . test ; import org . elasticsearch . common . xcontent . yaml . YamlXContent ; import org . elasticsearch . test . rest . parser . RestTestParseException ; import org . elasticsearch . test . rest . parser . RestTestSuiteParseContext ; import org . elasticsearch . test . rest . parser . SetSectionParser ; import org . elasticsearch . test . rest . section . SetSection ; import static org . hamcrest . Matchers . equalTo ; import static org . hamcrest . Matchers . is ; import static org . hamcrest . Matchers . notNullValue ; public class SetSectionParserTests extends AbstractParserTestCase { public void testParseSetSectionSingleValue ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> ) ; SetSectionParser setSectionParser = new SetSectionParser ( ) ; SetSection setSection = setSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; assertThat ( setSection , notNullValue ( ) ) ; assertThat ( setSection . getStash ( ) , notNullValue ( ) ) ; assertThat ( setSection . getStash ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( setSection . getStash ( ) . get ( <str> ) , equalTo ( <str> ) ) ; } public void testParseSetSectionMultipleValues ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> ) ; SetSectionParser setSectionParser = new SetSectionParser ( ) ; SetSection setSection = setSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; assertThat ( setSection , notNullValue ( ) ) ; assertThat ( setSection . getStash ( ) , notNullValue ( ) ) ; assertThat ( setSection . getStash ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( setSection . getStash ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( setSection . getStash ( ) . get ( <str> ) , equalTo ( <str> ) ) ; assertThat ( setSection . getStash ( ) . get ( <str> ) , equalTo ( <str> ) ) ; } public void testParseSetSectionNoValues ( ) throws Exception { parser = YamlXContent . yamlXContent . createParser ( <str> ) ; SetSectionParser setSectionParser = new SetSectionParser ( ) ; try { setSectionParser . parse ( new RestTestSuiteParseContext ( <str> , <str> , parser ) ) ; fail ( <str> ) ; } catch ( RestTestParseException e ) { assertThat ( e . getMessage ( ) , is ( <str> ) ) ; } } } 
