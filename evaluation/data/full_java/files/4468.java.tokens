package org . eclipse . debug . internal . ui . viewers . update ; import org . eclipse . debug . core . DebugEvent ; import org . eclipse . debug . core . model . IExpression ; import org . eclipse . debug . core . model . IVariable ; public class DefaultExpressionModelProxy extends EventHandlerModelProxy { private IExpression fExpression ; public DefaultExpressionModelProxy ( IExpression expression ) { fExpression = expression ; } @Override public synchronized void dispose ( ) { super . dispose ( ) ; fExpression = null ; } @Override protected DebugEventHandler [ ] createEventHandlers ( ) { return new DebugEventHandler [ ] { new ExpressionEventHandler ( this ) } ; } @Override protected boolean containsEvent ( DebugEvent event ) { if ( event . getSource ( ) . equals ( fExpression ) | | event . getSource ( ) . equals ( fExpression . getDebugTarget ( ) ) ) { return true ; } return event . getKind ( ) = = DebugEvent . CHANGE & & event . getSource ( ) instanceof IVariable ; } protected IExpression getExpression ( ) { return fExpression ; } } 
