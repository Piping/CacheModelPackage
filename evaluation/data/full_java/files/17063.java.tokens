package com . badlogic . gdx . physics . box2d . joints ; import com . badlogic . gdx . math . Vector2 ; import com . badlogic . gdx . physics . box2d . Body ; import com . badlogic . gdx . physics . box2d . JointDef ; public class PrismaticJointDef extends JointDef { public PrismaticJointDef ( ) { type = JointType . PrismaticJoint ; } public void initialize ( Body bodyA , Body bodyB , Vector2 anchor , Vector2 axis ) { this . bodyA = bodyA ; this . bodyB = bodyB ; localAnchorA . set ( bodyA . getLocalPoint ( anchor ) ) ; localAnchorB . set ( bodyB . getLocalPoint ( anchor ) ) ; localAxisA . set ( bodyA . getLocalVector ( axis ) ) ; referenceAngle = bodyB . getAngle ( ) - bodyA . getAngle ( ) ; } public final Vector2 localAnchorA = new Vector2 ( ) ; public final Vector2 localAnchorB = new Vector2 ( ) ; public final Vector2 localAxisA = new Vector2 ( <int> , <int> ) ; public float referenceAngle = <int> ; public boolean enableLimit = false ; public float lowerTranslation = <int> ; public float upperTranslation = <int> ; public boolean enableMotor = false ; public float maxMotorForce = <int> ; public float motorSpeed = <int> ; } 
