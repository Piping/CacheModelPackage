package org . apache . cassandra . serializers ; import java . math . BigDecimal ; import java . math . BigInteger ; import java . nio . ByteBuffer ; import java . sql . Date ; import java . util . UUID ; import org . apache . cassandra . utils . UUIDGen ; import org . junit . Test ; public class ClientUtilsTest { @Test public void test ( ) { AsciiSerializer . instance . deserialize ( AsciiSerializer . instance . serialize ( <str> ) ) ; BooleanSerializer . instance . deserialize ( BooleanSerializer . instance . serialize ( true ) ) ; BytesSerializer . instance . deserialize ( BytesSerializer . instance . serialize ( ByteBuffer . wrap ( <str> . getBytes ( ) ) ) ) ; Date date = new Date ( System . currentTimeMillis ( ) ) ; ByteBuffer dateBB = TimestampSerializer . instance . serialize ( date ) ; TimestampSerializer . instance . deserialize ( dateBB ) ; DecimalSerializer . instance . deserialize ( DecimalSerializer . instance . serialize ( new BigDecimal ( <int> ) ) ) ; DoubleSerializer . instance . deserialize ( DoubleSerializer . instance . serialize ( new Double ( <float> ) ) ) ; FloatSerializer . instance . deserialize ( FloatSerializer . instance . serialize ( new Float ( <float> ) ) ) ; Int32Serializer . instance . deserialize ( Int32Serializer . instance . serialize ( <int> ) ) ; IntegerSerializer . instance . deserialize ( IntegerSerializer . instance . serialize ( new BigInteger ( <str> ) ) ) ; LongSerializer . instance . deserialize ( LongSerializer . instance . serialize ( <int> ) ) ; UTF8Serializer . instance . deserialize ( UTF8Serializer . instance . serialize ( <str> ) ) ; UUID uuid = UUIDGen . getTimeUUID ( ) ; UUIDSerializer . instance . deserialize ( UUIDSerializer . instance . serialize ( uuid ) ) ; } } 
