package org . elasticsearch . action . support ; import org . elasticsearch . ElasticsearchException ; import org . elasticsearch . ExceptionsHelper ; import org . elasticsearch . client . Requests ; import org . elasticsearch . common . bytes . BytesReference ; import org . elasticsearch . common . xcontent . ToXContent ; import org . elasticsearch . common . xcontent . XContentBuilder ; import org . elasticsearch . common . xcontent . XContentFactory ; import org . elasticsearch . common . xcontent . XContentType ; public abstract class ToXContentToBytes implements ToXContent { private final XContentType defaultType ; protected ToXContentToBytes ( ) { this . defaultType = Requests . CONTENT_TYPE ; } protected ToXContentToBytes ( XContentType defaultType ) { this . defaultType = defaultType ; } public final BytesReference buildAsBytes ( ) { return buildAsBytes ( defaultType ) ; } public final BytesReference buildAsBytes ( XContentType contentType ) { try { XContentBuilder builder = XContentFactory . contentBuilder ( contentType ) ; toXContent ( builder , ToXContent . EMPTY_PARAMS ) ; return builder . bytes ( ) ; } catch ( Exception e ) { throw new ElasticsearchException ( <str> , e ) ; } } @Override public final String toString ( ) { try { XContentBuilder builder = XContentFactory . jsonBuilder ( ) ; builder . prettyPrint ( ) ; toXContent ( builder , EMPTY_PARAMS ) ; return builder . string ( ) ; } catch ( Exception e ) { return <str> + ExceptionsHelper . detailedMessage ( e ) + <str> ; } } } 
