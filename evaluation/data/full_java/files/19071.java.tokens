package io . netty . handler . codec . http ; import io . netty . buffer . ByteBuf ; import io . netty . util . internal . StringUtil ; public class DefaultHttpContent extends DefaultHttpObject implements HttpContent { private final ByteBuf content ; public DefaultHttpContent ( ByteBuf content ) { if ( content = = null ) { throw new NullPointerException ( <str> ) ; } this . content = content ; } @Override public ByteBuf content ( ) { return content ; } @Override public HttpContent copy ( ) { return new DefaultHttpContent ( content . copy ( ) ) ; } @Override public HttpContent duplicate ( ) { return new DefaultHttpContent ( content . duplicate ( ) ) ; } @Override public int refCnt ( ) { return content . refCnt ( ) ; } @Override public HttpContent retain ( ) { content . retain ( ) ; return this ; } @Override public HttpContent retain ( int increment ) { content . retain ( increment ) ; return this ; } @Override public HttpContent touch ( ) { content . touch ( ) ; return this ; } @Override public HttpContent touch ( Object hint ) { content . touch ( hint ) ; return this ; } @Override public boolean release ( ) { return content . release ( ) ; } @Override public boolean release ( int decrement ) { return content . release ( decrement ) ; } @Override public String toString ( ) { return StringUtil . simpleClassName ( this ) + <str> + content ( ) + <str> + decoderResult ( ) + <str> ; } } 
