package org . elasticsearch . plan . a ; import java . text . ParseException ; import org . antlr . v4 . runtime . CharStream ; import org . antlr . v4 . runtime . LexerNoViableAltException ; import org . antlr . v4 . runtime . misc . Interval ; class ErrorHandlingLexer extends PlanALexer { public ErrorHandlingLexer ( CharStream charStream ) { super ( charStream ) ; } @Override public void recover ( LexerNoViableAltException lnvae ) { CharStream charStream = lnvae . getInputStream ( ) ; int startIndex = lnvae . getStartIndex ( ) ; String text = charStream . getText ( Interval . of ( startIndex , charStream . index ( ) ) ) ; ParseException parseException = new ParseException ( <str> + _tokenStartLine + <str> + _tokenStartCharPositionInLine + <str> + getErrorDisplay ( text ) + <str> , _tokenStartCharIndex ) ; parseException . initCause ( lnvae ) ; throw new RuntimeException ( parseException ) ; } } 
