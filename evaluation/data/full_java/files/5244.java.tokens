package org . elasticsearch . action . admin . indices . validate . query ; import org . elasticsearch . action . support . broadcast . BroadcastShardResponse ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . index . shard . ShardId ; import java . io . IOException ; class ShardValidateQueryResponse extends BroadcastShardResponse { private boolean valid ; private String explanation ; private String error ; ShardValidateQueryResponse ( ) { } ShardValidateQueryResponse ( ShardId shardId , boolean valid , String explanation , String error ) { super ( shardId ) ; this . valid = valid ; this . explanation = explanation ; this . error = error ; } public boolean isValid ( ) { return this . valid ; } public String getExplanation ( ) { return explanation ; } public String getError ( ) { return error ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; valid = in . readBoolean ( ) ; explanation = in . readOptionalString ( ) ; error = in . readOptionalString ( ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeBoolean ( valid ) ; out . writeOptionalString ( explanation ) ; out . writeOptionalString ( error ) ; } } 
