package org . elasticsearch . search . aggregations . bucket . filter ; import org . elasticsearch . common . xcontent . XContentBuilder ; import org . elasticsearch . index . query . QueryBuilder ; import org . elasticsearch . search . aggregations . AggregationBuilder ; import org . elasticsearch . search . builder . SearchSourceBuilderException ; import java . io . IOException ; public class FilterAggregationBuilder extends AggregationBuilder < FilterAggregationBuilder > { private QueryBuilder filter ; public FilterAggregationBuilder ( String name ) { super ( name , InternalFilter . TYPE . name ( ) ) ; } public FilterAggregationBuilder filter ( QueryBuilder filter ) { this . filter = filter ; return this ; } @Override protected XContentBuilder internalXContent ( XContentBuilder builder , Params params ) throws IOException { if ( filter = = null ) { throw new SearchSourceBuilderException ( <str> + getName ( ) + <str> ) ; } filter . toXContent ( builder , params ) ; return builder ; } } 
