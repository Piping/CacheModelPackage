package org . gradle . internal . typeconversion ; import org . gradle . internal . exceptions . DiagnosticsVisitor ; import org . gradle . util . GUtil ; import java . util . Collection ; import java . util . LinkedHashSet ; import java . util . Set ; public class FlatteningNotationParser < T > implements NotationParser < Object , Set < T > > { private final NotationParser < Object , T > delegate ; public FlatteningNotationParser ( NotationParser < Object , T > delegate ) { assert delegate ! = null : <str> ; this . delegate = delegate ; } @Override public void describe ( DiagnosticsVisitor visitor ) { delegate . describe ( visitor ) ; visitor . candidate ( <str> ) ; } public Set < T > parseNotation ( Object notation ) { Set < T > out = new LinkedHashSet < T > ( ) ; Collection notations = GUtil . collectionize ( notation ) ; for ( Object n : notations ) { out . add ( delegate . parseNotation ( n ) ) ; } return out ; } } 
