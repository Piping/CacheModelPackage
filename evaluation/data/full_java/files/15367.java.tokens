package org . gradle . internal . resource ; import org . gradle . internal . resource . metadata . DefaultExternalResourceMetaData ; import org . gradle . internal . resource . metadata . ExternalResourceMetaData ; import java . io . File ; import java . io . FileInputStream ; import java . io . IOException ; import java . io . InputStream ; import java . net . URI ; public class LocalFileStandInExternalResource extends AbstractExternalResource { private final File localFile ; private final URI source ; private ExternalResourceMetaData metaData ; public LocalFileStandInExternalResource ( URI source , File localFile , ExternalResourceMetaData metaData ) { this . source = source ; this . localFile = localFile ; this . metaData = metaData ; } public URI getURI ( ) { return source ; } public long getLastModifiedTime ( ) { return localFile . lastModified ( ) ; } public long getContentLength ( ) { return localFile . length ( ) ; } public boolean isLocal ( ) { return true ; } public InputStream openStream ( ) throws IOException { return new FileInputStream ( localFile ) ; } public ExternalResourceMetaData getMetaData ( ) { if ( metaData = = null ) { metaData = new DefaultExternalResourceMetaData ( source , getLastModifiedTime ( ) , getContentLength ( ) ) ; } return metaData ; } } 
