package io . netty . buffer ; import static io . netty . util . ReferenceCountUtil . releaseLater ; import static org . junit . Assert . assertEquals ; import io . netty . util . ByteProcessor ; import io . netty . util . CharsetUtil ; import org . junit . Test ; public class ByteProcessorTest { @Test public void testForward ( ) { final ByteBuf buf = releaseLater ( Unpooled . copiedBuffer ( <str> , CharsetUtil . ISO_8859_1 ) ) ; final int length = buf . readableBytes ( ) ; assertEquals ( <int> , buf . forEachByte ( <int> , length , ByteProcessor . FIND_CRLF ) ) ; assertEquals ( <int> , buf . forEachByte ( <int> , length - <int> , ByteProcessor . FIND_NON_CRLF ) ) ; assertEquals ( <int> , buf . forEachByte ( <int> , length - <int> , ByteProcessor . FIND_CR ) ) ; assertEquals ( <int> , buf . forEachByte ( <int> , length - <int> , ByteProcessor . FIND_NON_CR ) ) ; assertEquals ( <int> , buf . forEachByte ( <int> , length - <int> , ByteProcessor . FIND_LF ) ) ; assertEquals ( <int> , buf . forEachByte ( <int> , length - <int> , ByteProcessor . FIND_NON_LF ) ) ; assertEquals ( <int> , buf . forEachByte ( <int> , length - <int> , ByteProcessor . FIND_NUL ) ) ; assertEquals ( <int> , buf . forEachByte ( <int> , length - <int> , ByteProcessor . FIND_NON_NUL ) ) ; assertEquals ( <int> , buf . forEachByte ( <int> , length - <int> , ByteProcessor . FIND_LINEAR_WHITESPACE ) ) ; assertEquals ( <int> , buf . forEachByte ( <int> , length - <int> , ByteProcessor . FIND_NON_LINEAR_WHITESPACE ) ) ; assertEquals ( - <int> , buf . forEachByte ( <int> , length - <int> , ByteProcessor . FIND_LINEAR_WHITESPACE ) ) ; } @Test public void testBackward ( ) { final ByteBuf buf = releaseLater ( Unpooled . copiedBuffer ( <str> , CharsetUtil . ISO_8859_1 ) ) ; final int length = buf . readableBytes ( ) ; assertEquals ( <int> , buf . forEachByteDesc ( <int> , length , ByteProcessor . FIND_LINEAR_WHITESPACE ) ) ; assertEquals ( <int> , buf . forEachByteDesc ( <int> , <int> , ByteProcessor . FIND_NON_LINEAR_WHITESPACE ) ) ; assertEquals ( <int> , buf . forEachByteDesc ( <int> , <int> , ByteProcessor . FIND_NUL ) ) ; assertEquals ( <int> , buf . forEachByteDesc ( <int> , <int> , ByteProcessor . FIND_NON_NUL ) ) ; assertEquals ( <int> , buf . forEachByteDesc ( <int> , <int> , ByteProcessor . FIND_LF ) ) ; assertEquals ( <int> , buf . forEachByteDesc ( <int> , <int> , ByteProcessor . FIND_NON_LF ) ) ; assertEquals ( <int> , buf . forEachByteDesc ( <int> , <int> , ByteProcessor . FIND_CR ) ) ; assertEquals ( <int> , buf . forEachByteDesc ( <int> , <int> , ByteProcessor . FIND_NON_CR ) ) ; assertEquals ( <int> , buf . forEachByteDesc ( <int> , <int> , ByteProcessor . FIND_CRLF ) ) ; assertEquals ( <int> , buf . forEachByteDesc ( <int> , <int> , ByteProcessor . FIND_NON_CRLF ) ) ; assertEquals ( - <int> , buf . forEachByteDesc ( <int> , <int> , ByteProcessor . FIND_CRLF ) ) ; } } 
