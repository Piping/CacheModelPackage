package org . elasticsearch . action . admin . cluster . validate . template ; import org . elasticsearch . action . ActionRequest ; import org . elasticsearch . action . ActionRequestValidationException ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . script . Template ; import java . io . IOException ; public class RenderSearchTemplateRequest extends ActionRequest < RenderSearchTemplateRequest > { private Template template ; public void template ( Template template ) { this . template = template ; } public Template template ( ) { return template ; } @Override public ActionRequestValidationException validate ( ) { ActionRequestValidationException exception = null ; if ( template = = null ) { exception = new ActionRequestValidationException ( ) ; exception . addValidationError ( <str> ) ; } return exception ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; boolean hasTemplate = template ! = null ; out . writeBoolean ( hasTemplate ) ; if ( hasTemplate ) { template . writeTo ( out ) ; } } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; if ( in . readBoolean ( ) ) { template = Template . readTemplate ( in ) ; } } } 
