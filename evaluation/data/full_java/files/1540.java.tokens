package org . apache . cassandra . hints ; import java . io . File ; import java . io . IOException ; import java . nio . file . Files ; import java . util . * ; import org . junit . Test ; import static junit . framework . Assert . * ; public class HintsCatalogTest { @Test public void loadCompletenessAndOrderTest ( ) throws IOException { File directory = Files . createTempDirectory ( null ) . toFile ( ) ; try { loadCompletenessAndOrderTest ( directory ) ; } finally { directory . deleteOnExit ( ) ; } } public static void loadCompletenessAndOrderTest ( File directory ) throws IOException { UUID hostId1 = UUID . randomUUID ( ) ; UUID hostId2 = UUID . randomUUID ( ) ; long timestamp1 = System . currentTimeMillis ( ) ; long timestamp2 = System . currentTimeMillis ( ) + <int> ; long timestamp3 = System . currentTimeMillis ( ) + <int> ; long timestamp4 = System . currentTimeMillis ( ) + <int> ; HintsDescriptor descriptor1 = new HintsDescriptor ( hostId1 , timestamp1 ) ; HintsDescriptor descriptor2 = new HintsDescriptor ( hostId2 , timestamp3 ) ; HintsDescriptor descriptor3 = new HintsDescriptor ( hostId2 , timestamp2 ) ; HintsDescriptor descriptor4 = new HintsDescriptor ( hostId1 , timestamp4 ) ; writeDescriptor ( directory , descriptor1 ) ; writeDescriptor ( directory , descriptor2 ) ; writeDescriptor ( directory , descriptor3 ) ; writeDescriptor ( directory , descriptor4 ) ; HintsCatalog catalog = HintsCatalog . load ( directory ) ; assertEquals ( <int> , catalog . stores ( ) . count ( ) ) ; HintsStore store1 = catalog . get ( hostId1 ) ; assertNotNull ( store1 ) ; assertEquals ( descriptor1 , store1 . poll ( ) ) ; assertEquals ( descriptor4 , store1 . poll ( ) ) ; assertNull ( store1 . poll ( ) ) ; HintsStore store2 = catalog . get ( hostId2 ) ; assertNotNull ( store2 ) ; assertEquals ( descriptor3 , store2 . poll ( ) ) ; assertEquals ( descriptor2 , store2 . poll ( ) ) ; assertNull ( store2 . poll ( ) ) ; } @SuppressWarnings ( <str> ) private static void writeDescriptor ( File directory , HintsDescriptor descriptor ) throws IOException { try ( HintsWriter ignored = HintsWriter . create ( directory , descriptor ) ) { } } } 
