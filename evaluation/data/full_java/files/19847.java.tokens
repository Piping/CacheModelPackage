package io . netty . example . http2 . tiles ; import static io . netty . buffer . Unpooled . unmodifiableBuffer ; import static io . netty . buffer . Unpooled . unreleasableBuffer ; import static io . netty . example . http2 . Http2ExampleUtil . toByteBuf ; import io . netty . buffer . ByteBuf ; import java . io . IOException ; import java . util . HashMap ; import java . util . Map ; public final class ImageCache { public static ImageCache INSTANCE = new ImageCache ( ) ; private final Map < String , ByteBuf > imageBank = new HashMap < String , ByteBuf > ( <int> ) ; private ImageCache ( ) { init ( ) ; } public static String name ( int x , int y ) { return <str> + y + <str> + x + <str> ; } public ByteBuf image ( int x , int y ) { return imageBank . get ( name ( x , y ) ) ; } private void init ( ) { for ( int y = <int> ; y < <int> ; y + + ) { for ( int x = <int> ; x < <int> ; x + + ) { try { String name = name ( x , y ) ; ByteBuf fileBytes = unreleasableBuffer ( unmodifiableBuffer ( toByteBuf ( getClass ( ) . getResourceAsStream ( name ) ) ) ) ; imageBank . put ( name , fileBytes ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } } } } 
