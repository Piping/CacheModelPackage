package org . gradle . launcher . daemon . server . exec ; import org . gradle . api . logging . Logger ; import org . gradle . api . logging . Logging ; import org . gradle . launcher . daemon . protocol . Failure ; import org . gradle . launcher . daemon . protocol . Result ; import org . gradle . launcher . daemon . protocol . Success ; import org . gradle . launcher . daemon . server . api . DaemonCommandAction ; import org . gradle . launcher . daemon . server . api . DaemonCommandExecution ; public class ReturnResult implements DaemonCommandAction { private static final Logger LOGGER = Logging . getLogger ( ReturnResult . class ) ; public void execute ( DaemonCommandExecution execution ) { execution . proceed ( ) ; Result result ; Throwable commandException = execution . getException ( ) ; if ( commandException ! = null ) { result = new Failure ( commandException ) ; } else { result = new Success ( execution . getResult ( ) ) ; } LOGGER . debug ( <str> , result ) ; execution . getConnection ( ) . completed ( result ) ; } } 
