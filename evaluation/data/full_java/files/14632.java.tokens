package org . gradle . api . internal . resolve ; import org . gradle . api . UnknownProjectException ; import org . gradle . api . internal . project . ProjectInternal ; import org . gradle . api . internal . project . ProjectRegistry ; import org . gradle . model . internal . registry . ModelRegistry ; public class DefaultProjectModelResolver implements ProjectModelResolver { private final ProjectRegistry < ProjectInternal > delegate ; public DefaultProjectModelResolver ( ProjectRegistry < ProjectInternal > delegate ) { this . delegate = delegate ; } @Override public ModelRegistry resolveProjectModel ( String path ) { ProjectInternal projectInternal = delegate . getProject ( path ) ; if ( projectInternal = = null ) { throw new UnknownProjectException ( <str> + path + <str> ) ; } projectInternal . evaluate ( ) ; projectInternal . getTasks ( ) . discoverTasks ( ) ; return projectInternal . getModelRegistry ( ) ; } } 
