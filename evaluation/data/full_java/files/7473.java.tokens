package org . elasticsearch . search . fetch ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . search . SearchShardTarget ; import org . elasticsearch . transport . TransportResponse ; import java . io . IOException ; import static org . elasticsearch . search . SearchShardTarget . readSearchShardTarget ; import static org . elasticsearch . search . fetch . QueryFetchSearchResult . readQueryFetchSearchResult ; public class ScrollQueryFetchSearchResult extends TransportResponse { private QueryFetchSearchResult result ; private SearchShardTarget shardTarget ; public ScrollQueryFetchSearchResult ( ) { } public ScrollQueryFetchSearchResult ( QueryFetchSearchResult result , SearchShardTarget shardTarget ) { this . result = result ; this . shardTarget = shardTarget ; } public QueryFetchSearchResult result ( ) { return result ; } public SearchShardTarget shardTarget ( ) { return shardTarget ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; shardTarget = readSearchShardTarget ( in ) ; result = readQueryFetchSearchResult ( in ) ; result . shardTarget ( shardTarget ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; shardTarget . writeTo ( out ) ; result . writeTo ( out ) ; } } 
