package org . gradle . api . publication . maven . internal . pom ; import org . codehaus . plexus . logging . Logger ; public class PlexusLoggerAdapter implements Logger { org . slf4j . Logger logger ; public PlexusLoggerAdapter ( org . slf4j . Logger logger ) { this . logger = logger ; } public void debug ( String s ) { logger . debug ( s ) ; } public void debug ( String s , Throwable throwable ) { logger . debug ( s , throwable ) ; } public boolean isDebugEnabled ( ) { return logger . isDebugEnabled ( ) ; } public void info ( String s ) { logger . info ( s ) ; } public void info ( String s , Throwable throwable ) { logger . info ( s , throwable ) ; } public boolean isInfoEnabled ( ) { return logger . isInfoEnabled ( ) ; } public void warn ( String s ) { logger . warn ( s ) ; } public void warn ( String s , Throwable throwable ) { logger . warn ( s , throwable ) ; } public boolean isWarnEnabled ( ) { return logger . isWarnEnabled ( ) ; } public void error ( String s ) { logger . error ( s ) ; } public void error ( String s , Throwable throwable ) { logger . error ( s , throwable ) ; } public boolean isErrorEnabled ( ) { return logger . isErrorEnabled ( ) ; } public void fatalError ( String s ) { logger . error ( s ) ; } public void fatalError ( String s , Throwable throwable ) { logger . error ( s , throwable ) ; } public boolean isFatalErrorEnabled ( ) { return logger . isErrorEnabled ( ) ; } public Logger getChildLogger ( String s ) { throw new UnsupportedOperationException ( ) ; } public int getThreshold ( ) { throw new UnsupportedOperationException ( ) ; } public void setThreshold ( int arg0 ) { throw new UnsupportedOperationException ( ) ; } public String getName ( ) { return logger . getName ( ) ; } } 
