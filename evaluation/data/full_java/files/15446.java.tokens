package org . gradle . internal . resource . transport . sftp ; import com . jcraft . jsch . ChannelSftp ; import org . apache . commons . io . FilenameUtils ; import org . gradle . api . artifacts . repositories . PasswordCredentials ; import org . gradle . internal . resource . local . LocalResource ; import org . gradle . internal . resource . ResourceException ; import org . gradle . internal . resource . transfer . ExternalResourceUploader ; import java . io . IOException ; import java . io . InputStream ; import java . net . URI ; public class SftpResourceUploader implements ExternalResourceUploader { private final SftpClientFactory sftpClientFactory ; private final PasswordCredentials credentials ; public SftpResourceUploader ( SftpClientFactory sftpClientFactory , PasswordCredentials credentials ) { this . sftpClientFactory = sftpClientFactory ; this . credentials = credentials ; } @Override public void upload ( LocalResource resource , URI destination ) throws IOException { LockableSftpClient client = sftpClientFactory . createSftpClient ( destination , credentials ) ; try { ChannelSftp channel = client . getSftpClient ( ) ; ensureParentDirectoryExists ( channel , destination ) ; InputStream sourceStream = resource . open ( ) ; try { channel . put ( sourceStream , destination . getPath ( ) ) ; } finally { sourceStream . close ( ) ; } } catch ( com . jcraft . jsch . SftpException e ) { throw ResourceException . putFailed ( destination , e ) ; } finally { sftpClientFactory . releaseSftpClient ( client ) ; } } private void ensureParentDirectoryExists ( ChannelSftp channel , URI uri ) { String parentPath = FilenameUtils . getFullPathNoEndSeparator ( uri . getPath ( ) ) ; if ( parentPath . equals ( <str> ) ) { return ; } URI parent = uri . resolve ( parentPath ) ; try { channel . lstat ( parentPath ) ; return ; } catch ( com . jcraft . jsch . SftpException e ) { if ( e . id ! = ChannelSftp . SSH_FX_NO_SUCH_FILE ) { throw new ResourceException ( parent , String . format ( <str> , parent ) , e ) ; } } ensureParentDirectoryExists ( channel , parent ) ; try { channel . mkdir ( parentPath ) ; } catch ( com . jcraft . jsch . SftpException e ) { throw new ResourceException ( parent , String . format ( <str> , parent ) , e ) ; } } } 
