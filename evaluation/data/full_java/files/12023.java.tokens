package org . gradle . initialization ; import org . gradle . api . initialization . ProjectDescriptor ; import org . gradle . api . internal . GradleInternal ; import org . gradle . api . internal . initialization . ClassLoaderScope ; import org . gradle . api . internal . project . IProjectFactory ; import org . gradle . api . internal . project . ProjectInternal ; public class InstantiatingBuildLoader implements BuildLoader { private final IProjectFactory projectFactory ; public InstantiatingBuildLoader ( IProjectFactory projectFactory ) { this . projectFactory = projectFactory ; } public void load ( ProjectDescriptor rootProjectDescriptor , ProjectDescriptor defaultProject , GradleInternal gradle , ClassLoaderScope baseClassLoaderScope ) { createProjects ( rootProjectDescriptor , gradle , baseClassLoaderScope ) ; attachDefaultProject ( defaultProject , gradle ) ; } private void attachDefaultProject ( ProjectDescriptor defaultProject , GradleInternal gradle ) { gradle . setDefaultProject ( gradle . getRootProject ( ) . getProjectRegistry ( ) . getProject ( defaultProject . getPath ( ) ) ) ; } private void createProjects ( ProjectDescriptor rootProjectDescriptor , GradleInternal gradle , ClassLoaderScope baseClassLoaderScope ) { ProjectInternal rootProject = projectFactory . createProject ( rootProjectDescriptor , null , gradle , baseClassLoaderScope . createChild ( <str> ) , baseClassLoaderScope ) ; gradle . setRootProject ( rootProject ) ; addProjects ( rootProject , rootProjectDescriptor , gradle , baseClassLoaderScope ) ; } private void addProjects ( ProjectInternal parent , ProjectDescriptor parentProjectDescriptor , GradleInternal gradle , ClassLoaderScope baseClassLoaderScope ) { for ( ProjectDescriptor childProjectDescriptor : parentProjectDescriptor . getChildren ( ) ) { ProjectInternal childProject = projectFactory . createProject ( childProjectDescriptor , parent , gradle , parent . getClassLoaderScope ( ) . createChild ( <str> + childProjectDescriptor . getName ( ) ) , baseClassLoaderScope ) ; addProjects ( childProject , childProjectDescriptor , gradle , baseClassLoaderScope ) ; } } } 
