package org . gradle . api . internal . file . copy ; import org . gradle . api . tasks . WorkResult ; import org . gradle . internal . nativeintegration . filesystem . FileSystem ; import org . gradle . internal . reflect . Instantiator ; public class CopyActionExecuter { private final Instantiator instantiator ; private final FileSystem fileSystem ; public CopyActionExecuter ( Instantiator instantiator , FileSystem fileSystem ) { this . instantiator = instantiator ; this . fileSystem = fileSystem ; } public WorkResult execute ( final CopySpecInternal spec , CopyAction action ) { final CopyAction effectiveVisitor = new DuplicateHandlingCopyActionDecorator ( new NormalizingCopyActionDecorator ( action , fileSystem ) ) ; CopyActionProcessingStream processingStream = new CopySpecBackedCopyActionProcessingStream ( spec , instantiator , fileSystem ) ; return effectiveVisitor . execute ( processingStream ) ; } } 
