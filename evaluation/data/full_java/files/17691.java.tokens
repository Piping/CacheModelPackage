package com . badlogic . gdx . physics . bullet . softbody ; import com . badlogic . gdx . physics . bullet . BulletBase ; import com . badlogic . gdx . physics . bullet . linearmath . * ; import com . badlogic . gdx . physics . bullet . collision . * ; import com . badlogic . gdx . physics . bullet . dynamics . * ; import com . badlogic . gdx . math . Vector3 ; import com . badlogic . gdx . math . Quaternion ; import com . badlogic . gdx . math . Matrix3 ; import com . badlogic . gdx . math . Matrix4 ; public class btTriIndex extends BulletBase { private long swigCPtr ; protected btTriIndex ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , cPtr , cMemoryOwn ) ; swigCPtr = cPtr ; } public btTriIndex ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( swigCPtr = cPtr , cMemoryOwn ) ; } public static long getCPtr ( btTriIndex obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; SoftbodyJNI . delete_btTriIndex ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } public void setPartIdTriangleIndex ( int value ) { SoftbodyJNI . btTriIndex_PartIdTriangleIndex_set ( swigCPtr , this , value ) ; } public int getPartIdTriangleIndex ( ) { return SoftbodyJNI . btTriIndex_PartIdTriangleIndex_get ( swigCPtr , this ) ; } public void setChildShape ( btCollisionShape value ) { SoftbodyJNI . btTriIndex_childShape_set ( swigCPtr , this , btCollisionShape . getCPtr ( value ) , value ) ; } public btCollisionShape getChildShape ( ) { long cPtr = SoftbodyJNI . btTriIndex_childShape_get ( swigCPtr , this ) ; return ( cPtr = = <int> ) ? null : btCollisionShape . newDerivedObject ( cPtr , false ) ; } public btTriIndex ( int partId , int triangleIndex , btCollisionShape shape ) { this ( SoftbodyJNI . new_btTriIndex ( partId , triangleIndex , btCollisionShape . getCPtr ( shape ) , shape ) , true ) ; } public int getTriangleIndex ( ) { return SoftbodyJNI . btTriIndex_getTriangleIndex ( swigCPtr , this ) ; } public int getPartId ( ) { return SoftbodyJNI . btTriIndex_getPartId ( swigCPtr , this ) ; } public int getUid ( ) { return SoftbodyJNI . btTriIndex_getUid ( swigCPtr , this ) ; } } 
