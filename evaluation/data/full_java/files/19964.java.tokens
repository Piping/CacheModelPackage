package io . netty . handler . ssl ; import javax . net . ssl . SSLEngine ; public final class JdkNpnApplicationProtocolNegotiator extends JdkBaseApplicationProtocolNegotiator { private static final SslEngineWrapperFactory NPN_WRAPPER = new SslEngineWrapperFactory ( ) { { if ( ! JdkNpnSslEngine . isAvailable ( ) ) { throw new RuntimeException ( <str> + <str> ) ; } } @Override public SSLEngine wrapSslEngine ( SSLEngine engine , JdkApplicationProtocolNegotiator applicationNegotiator , boolean isServer ) { return new JdkNpnSslEngine ( engine , applicationNegotiator , isServer ) ; } } ; public JdkNpnApplicationProtocolNegotiator ( Iterable < String > protocols ) { this ( false , protocols ) ; } public JdkNpnApplicationProtocolNegotiator ( String . . . protocols ) { this ( false , protocols ) ; } public JdkNpnApplicationProtocolNegotiator ( boolean failIfNoCommonProtocols , Iterable < String > protocols ) { this ( failIfNoCommonProtocols , failIfNoCommonProtocols , protocols ) ; } public JdkNpnApplicationProtocolNegotiator ( boolean failIfNoCommonProtocols , String . . . protocols ) { this ( failIfNoCommonProtocols , failIfNoCommonProtocols , protocols ) ; } public JdkNpnApplicationProtocolNegotiator ( boolean clientFailIfNoCommonProtocols , boolean serverFailIfNoCommonProtocols , Iterable < String > protocols ) { this ( clientFailIfNoCommonProtocols ? FAIL_SELECTOR_FACTORY : NO_FAIL_SELECTOR_FACTORY , serverFailIfNoCommonProtocols ? FAIL_SELECTION_LISTENER_FACTORY : NO_FAIL_SELECTION_LISTENER_FACTORY , protocols ) ; } public JdkNpnApplicationProtocolNegotiator ( boolean clientFailIfNoCommonProtocols , boolean serverFailIfNoCommonProtocols , String . . . protocols ) { this ( clientFailIfNoCommonProtocols ? FAIL_SELECTOR_FACTORY : NO_FAIL_SELECTOR_FACTORY , serverFailIfNoCommonProtocols ? FAIL_SELECTION_LISTENER_FACTORY : NO_FAIL_SELECTION_LISTENER_FACTORY , protocols ) ; } public JdkNpnApplicationProtocolNegotiator ( ProtocolSelectorFactory selectorFactory , ProtocolSelectionListenerFactory listenerFactory , Iterable < String > protocols ) { super ( NPN_WRAPPER , selectorFactory , listenerFactory , protocols ) ; } public JdkNpnApplicationProtocolNegotiator ( ProtocolSelectorFactory selectorFactory , ProtocolSelectionListenerFactory listenerFactory , String . . . protocols ) { super ( NPN_WRAPPER , selectorFactory , listenerFactory , protocols ) ; } } 
