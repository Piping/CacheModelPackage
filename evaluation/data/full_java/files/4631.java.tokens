package org . eclipse . debug . internal . ui . views . memory . renderings ; import org . eclipse . debug . internal . ui . DebugUIMessages ; import org . eclipse . debug . internal . ui . DebugUIPlugin ; import org . eclipse . jface . action . IAction ; import org . eclipse . jface . preference . IPreferenceNode ; import org . eclipse . jface . preference . IPreferencePage ; import org . eclipse . jface . preference . PreferenceDialog ; import org . eclipse . jface . preference . PreferenceManager ; import org . eclipse . jface . preference . PreferenceNode ; import org . eclipse . jface . window . Window ; import org . eclipse . swt . custom . BusyIndicator ; import org . eclipse . ui . IViewActionDelegate ; import org . eclipse . ui . IViewPart ; import org . eclipse . ui . actions . ActionDelegate ; public class TableRenderingPrefAction extends ActionDelegate implements IViewActionDelegate { @Override public void run ( IAction action ) { IPreferencePage page = new TableRenderingPreferencePage ( DebugUIMessages . TableRenderingPrefAction_0 ) ; showPreferencePage ( <str> , page ) ; } @Override public void init ( IViewPart view ) { } protected void showPreferencePage ( String id , IPreferencePage page ) { final IPreferenceNode targetNode = new PreferenceNode ( id , page ) ; PreferenceManager manager = new PreferenceManager ( ) ; manager . addToRoot ( targetNode ) ; final PreferenceDialog dialog = new PreferenceDialog ( DebugUIPlugin . getShell ( ) , manager ) ; final boolean [ ] result = new boolean [ ] { false } ; BusyIndicator . showWhile ( DebugUIPlugin . getStandardDisplay ( ) , new Runnable ( ) { @Override public void run ( ) { dialog . create ( ) ; dialog . setMessage ( targetNode . getLabelText ( ) ) ; result [ <int> ] = ( dialog . open ( ) = = Window . OK ) ; } } ) ; } } 
