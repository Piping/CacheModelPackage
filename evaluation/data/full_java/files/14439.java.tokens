package org . gradle . model . internal . registry ; import org . gradle . api . Action ; import org . gradle . model . internal . core . ModelNode ; import org . gradle . model . internal . core . rule . describe . ModelRuleDescriptor ; class OneOfTypeBinderCreationListener extends ModelBinding { private final Action < ModelBinding > bindAction ; public OneOfTypeBinderCreationListener ( ModelRuleDescriptor descriptor , BindingPredicate predicate , boolean writable , Action < ModelBinding > bindAction ) { super ( descriptor , predicate , writable ) ; this . bindAction = bindAction ; } @Override public boolean canBindInState ( ModelNode . State state ) { return state . isAtLeast ( ModelNode . State . Discovered ) ; } public void doOnBind ( ModelNodeInternal node ) { boundTo = node ; bindAction . execute ( this ) ; } } 
