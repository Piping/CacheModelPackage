package org . gradle . nativeplatform . toolchain . internal . gcc ; import org . gradle . api . internal . file . FileResolver ; import org . gradle . internal . operations . BuildOperationProcessor ; import org . gradle . internal . os . OperatingSystem ; import org . gradle . internal . reflect . Instantiator ; import org . gradle . nativeplatform . toolchain . Gcc ; import org . gradle . nativeplatform . toolchain . internal . gcc . version . CompilerMetaDataProviderFactory ; import org . gradle . nativeplatform . toolchain . internal . gcc . version . GccVersionResult ; import org . gradle . process . internal . ExecActionFactory ; public class GccToolChain extends AbstractGccCompatibleToolChain implements Gcc { public static final String DEFAULT_NAME = <str> ; public GccToolChain ( Instantiator instantiator , String name , BuildOperationProcessor buildOperationProcessor , OperatingSystem operatingSystem , FileResolver fileResolver , ExecActionFactory execActionFactory , CompilerMetaDataProviderFactory metaDataProviderFactory ) { super ( name , buildOperationProcessor , operatingSystem , fileResolver , execActionFactory , metaDataProviderFactory . gcc ( ) , instantiator ) ; } @Override protected String getTypeName ( ) { return <str> ; } @Override protected void initForImplementation ( DefaultGccPlatformToolChain platformToolChain , GccVersionResult versionResult ) { platformToolChain . setCanUseCommandFile ( versionResult . getVersion ( ) . getMajor ( ) > = <int> ) ; } } 
