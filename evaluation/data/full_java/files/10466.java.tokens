package com . google . common . graph ; import static com . google . common . truth . Truth . assertThat ; import com . google . common . testing . EqualsTester ; import org . junit . Test ; import org . junit . runner . RunWith ; import org . junit . runners . JUnit4 ; @RunWith ( JUnit4 . class ) public final class GraphConfigTest { @Test public void testEquals ( ) throws Exception { GraphConfig configA1 = Graphs . config ( ) . expectedNodeCount ( <int> ) ; GraphConfig configA2 = Graphs . config ( ) . expectedNodeCount ( <int> ) ; GraphConfig configB = Graphs . config ( ) . expectedNodeCount ( <int> ) ; new EqualsTester ( ) . addEqualityGroup ( configA1 , configA2 ) . addEqualityGroup ( configB ) . testEquals ( ) ; } @Test public void toString_selfLoops ( ) { assertThat ( Graphs . config ( ) . toString ( ) ) . isEqualTo ( <str> ) ; } @Test public void toString_noSelfLoops ( ) { assertThat ( Graphs . config ( ) . noSelfLoops ( ) . toString ( ) ) . isEqualTo ( <str> ) ; } @Test public void toString_selfLoops_multigraph ( ) { assertThat ( Graphs . config ( ) . multigraph ( ) . toString ( ) ) . isEqualTo ( <str> ) ; } @Test public void toString_noSelfLoops_multigraph ( ) { assertThat ( Graphs . config ( ) . noSelfLoops ( ) . multigraph ( ) . toString ( ) ) . isEqualTo ( <str> ) ; } } 
