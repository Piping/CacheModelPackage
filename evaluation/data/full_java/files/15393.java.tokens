package org . gradle . internal . resource . metadata ; import org . gradle . api . Nullable ; import org . gradle . internal . Factory ; import java . util . Date ; public abstract class ExternalResourceMetaDataCompare { public static boolean isDefinitelyUnchanged ( @Nullable ExternalResourceMetaData local , Factory < ExternalResourceMetaData > remoteFactory ) { if ( local = = null ) { return false ; } String localEtag = local . getEtag ( ) ; Date localLastModified = local . getLastModified ( ) ; if ( localEtag = = null & & localLastModified = = null ) { return false ; } long localContentLength = local . getContentLength ( ) ; if ( localEtag = = null & & localContentLength < <int> ) { return false ; } ExternalResourceMetaData remote = remoteFactory . create ( ) ; if ( remote = = null ) { return false ; } String remoteEtag = remote . getEtag ( ) ; if ( localEtag ! = null & & remoteEtag ! = null ) { return localEtag . equals ( remoteEtag ) ; } Date remoteLastModified = remote . getLastModified ( ) ; if ( remoteLastModified = = null ) { return false ; } long remoteContentLength = remote . getContentLength ( ) ; if ( remoteContentLength < <int> ) { return false ; } return localContentLength = = remoteContentLength & & remoteLastModified . equals ( localLastModified ) ; } } 
