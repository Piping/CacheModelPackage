package com . badlogic . gdx . physics . box2d ; import com . badlogic . gdx . math . Vector2 ; public class EdgeShape extends Shape { public EdgeShape ( ) { addr = newEdgeShape ( ) ; } private native long newEdgeShape ( ) ; EdgeShape ( long addr ) { this . addr = addr ; } public void set ( Vector2 v1 , Vector2 v2 ) { set ( v1 . x , v1 . y , v2 . x , v2 . y ) ; } public void set ( float v1X , float v1Y , float v2X , float v2Y ) { jniSet ( addr , v1X , v1Y , v2X , v2Y ) ; } private native void jniSet ( long addr , float v1x , float v1y , float v2x , float v2y ) ; static final float [ ] vertex = new float [ <int> ] ; public void getVertex1 ( Vector2 vec ) { jniGetVertex1 ( addr , vertex ) ; vec . x = vertex [ <int> ] ; vec . y = vertex [ <int> ] ; } private native void jniGetVertex1 ( long addr , float [ ] vertex ) ; public void getVertex2 ( Vector2 vec ) { jniGetVertex2 ( addr , vertex ) ; vec . x = vertex [ <int> ] ; vec . y = vertex [ <int> ] ; } private native void jniGetVertex2 ( long addr , float [ ] vertex ) ; public void getVertex0 ( Vector2 vec ) { jniGetVertex0 ( addr , vertex ) ; vec . x = vertex [ <int> ] ; vec . y = vertex [ <int> ] ; } private native void jniGetVertex0 ( long addr , float [ ] vertex ) ; public void setVertex0 ( Vector2 vec ) { jniSetVertex0 ( addr , vec . x , vec . y ) ; } public void setVertex0 ( float x , float y ) { jniSetVertex0 ( addr , x , y ) ; } private native void jniSetVertex0 ( long addr , float x , float y ) ; public void getVertex3 ( Vector2 vec ) { jniGetVertex3 ( addr , vertex ) ; vec . x = vertex [ <int> ] ; vec . y = vertex [ <int> ] ; } private native void jniGetVertex3 ( long addr , float [ ] vertex ) ; public void setVertex3 ( Vector2 vec ) { jniSetVertex3 ( addr , vec . x , vec . y ) ; } public void setVertex3 ( float x , float y ) { jniSetVertex3 ( addr , x , y ) ; } private native void jniSetVertex3 ( long addr , float x , float y ) ; public boolean hasVertex0 ( ) { return jniHasVertex0 ( addr ) ; } private native boolean jniHasVertex0 ( long addr ) ; public void setHasVertex0 ( boolean hasVertex0 ) { jniSetHasVertex0 ( addr , hasVertex0 ) ; } private native void jniSetHasVertex0 ( long addr , boolean hasVertex0 ) ; public boolean hasVertex3 ( ) { return jniHasVertex3 ( addr ) ; } private native boolean jniHasVertex3 ( long addr ) ; public void setHasVertex3 ( boolean hasVertex3 ) { jniSetHasVertex3 ( addr , hasVertex3 ) ; } private native void jniSetHasVertex3 ( long addr , boolean hasVertex3 ) ; @Override public Type getType ( ) { return Type . Edge ; } } 
