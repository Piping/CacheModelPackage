package com . badlogic . gdx . physics . bullet . collision ; import com . badlogic . gdx . physics . bullet . BulletBase ; import com . badlogic . gdx . physics . bullet . linearmath . * ; import com . badlogic . gdx . math . Vector3 ; import com . badlogic . gdx . math . Quaternion ; import com . badlogic . gdx . math . Matrix3 ; import com . badlogic . gdx . math . Matrix4 ; public class btSubsimplexConvexCast extends btConvexCast { private long swigCPtr ; protected btSubsimplexConvexCast ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , CollisionJNI . btSubsimplexConvexCast_SWIGUpcast ( cPtr ) , cMemoryOwn ) ; swigCPtr = cPtr ; } public btSubsimplexConvexCast ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( CollisionJNI . btSubsimplexConvexCast_SWIGUpcast ( swigCPtr = cPtr ) , cMemoryOwn ) ; } public static long getCPtr ( btSubsimplexConvexCast obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; CollisionJNI . delete_btSubsimplexConvexCast ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } public btSubsimplexConvexCast ( btConvexShape shapeA , btConvexShape shapeB , btVoronoiSimplexSolver simplexSolver ) { this ( CollisionJNI . new_btSubsimplexConvexCast ( btConvexShape . getCPtr ( shapeA ) , shapeA , btConvexShape . getCPtr ( shapeB ) , shapeB , btVoronoiSimplexSolver . getCPtr ( simplexSolver ) , simplexSolver ) , true ) ; } } 
