package org . gradle . tooling . internal . consumer . converters ; import org . gradle . api . Action ; import org . gradle . tooling . internal . adapter . SourceObjectMapping ; import org . gradle . tooling . internal . consumer . versioning . VersionDetails ; import org . gradle . tooling . model . GradleTask ; import java . io . Serializable ; public class TaskPropertyHandlerFactory { public Action < SourceObjectMapping > forVersion ( VersionDetails versionDetails ) { return new ConsumerMapping ( versionDetails ) ; } private static class ConsumerMapping implements Action < SourceObjectMapping > , Serializable { private final VersionDetails versionDetails ; public ConsumerMapping ( VersionDetails versionDetails ) { this . versionDetails = versionDetails ; } public void execute ( SourceObjectMapping mapping ) { if ( GradleTask . class . isAssignableFrom ( mapping . getTargetType ( ) ) & & ! versionDetails . supportsTaskDisplayName ( ) ) { mapping . mixIn ( GradleTaskDisplayNameMixInHandler . class ) ; } } } } 
