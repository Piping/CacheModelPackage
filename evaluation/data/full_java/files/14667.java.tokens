package org . gradle . language . base . internal . model ; import com . google . common . collect . Sets ; import org . gradle . model . internal . type . ModelType ; import java . util . Set ; public class VariantsMetaDataHelper { public static Set < String > determineAxesWithIncompatibleTypes ( VariantsMetaData reference , VariantsMetaData candidate , Set < String > testedDimensions ) { Set < String > result = Sets . newHashSet ( ) ; for ( String commonDimension : testedDimensions ) { ModelType < ? > resolveType = reference . getVariantAxisType ( commonDimension ) ; ModelType < ? > binaryVariantType = candidate . getVariantAxisType ( commonDimension ) ; if ( binaryVariantType ! = null & & ! resolveType . isAssignableFrom ( binaryVariantType ) ) { result . add ( commonDimension ) ; } } return result ; } } 
