package org . eclipse . debug . internal . ui . views . breakpoints ; import org . eclipse . core . runtime . Assert ; import org . eclipse . jface . util . LocalSelectionTransfer ; import org . eclipse . jface . util . TransferDragSourceListener ; import org . eclipse . jface . viewers . AbstractTreeViewer ; import org . eclipse . jface . viewers . ISelection ; import org . eclipse . jface . viewers . ITreeSelection ; import org . eclipse . jface . viewers . TreePath ; import org . eclipse . swt . dnd . DND ; import org . eclipse . swt . dnd . DragSourceAdapter ; import org . eclipse . swt . dnd . DragSourceEvent ; import org . eclipse . swt . dnd . Transfer ; import org . eclipse . swt . widgets . Item ; public class BreakpointsDragAdapter extends DragSourceAdapter implements TransferDragSourceListener { private AbstractTreeViewer fViewer ; private Item [ ] fItems = null ; private BreakpointsView fView ; private TreePath [ ] fTreePaths = null ; public BreakpointsDragAdapter ( BreakpointsViewer viewer ) { Assert . isNotNull ( viewer ) ; fViewer = viewer ; } public BreakpointsDragAdapter ( AbstractTreeViewer viewer , BreakpointsView view ) { Assert . isNotNull ( view ) ; fViewer = viewer ; fView = view ; } @Override public Transfer getTransfer ( ) { return LocalSelectionTransfer . getTransfer ( ) ; } @Override public void dragStart ( DragSourceEvent event ) { ISelection selection = fViewer . getSelection ( ) ; LocalSelectionTransfer . getTransfer ( ) . setSelection ( selection ) ; LocalSelectionTransfer . getTransfer ( ) . setSelectionSetTime ( event . time & <hex> ) ; if ( fViewer instanceof BreakpointsViewer ) { BreakpointsViewer viewer = ( BreakpointsViewer ) fViewer ; fItems = viewer . getSelectedItems ( ) ; event . doit = viewer . canDrag ( fItems ) ; } else { if ( selection instanceof ITreeSelection ) { fTreePaths = ( ( ITreeSelection ) selection ) . getPaths ( ) ; } else { fTreePaths = new TreePath [ <int> ] ; } event . doit = fView . canDrag ( fTreePaths ) ; } } @Override public void dragSetData ( DragSourceEvent event ) { event . data = LocalSelectionTransfer . getTransfer ( ) . getSelection ( ) ; } @Override public void dragFinished ( DragSourceEvent event ) { if ( event . detail = = DND . DROP_MOVE ) { if ( fViewer instanceof BreakpointsViewer ) { BreakpointsViewer viewer = ( BreakpointsViewer ) fViewer ; viewer . performDrag ( fItems ) ; } else { fView . performDrag ( fTreePaths ) ; } } fItems = null ; LocalSelectionTransfer . getTransfer ( ) . setSelection ( null ) ; LocalSelectionTransfer . getTransfer ( ) . setSelectionSetTime ( <int> ) ; } } 
