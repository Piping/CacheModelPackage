package com . badlogic . gdx . physics . box2d . joints ; import com . badlogic . gdx . physics . box2d . Joint ; import com . badlogic . gdx . physics . box2d . JointDef ; public class GearJointDef extends JointDef { public GearJointDef ( ) { type = JointType . GearJoint ; } public Joint joint1 = null ; public Joint joint2 = null ; public float ratio = <int> ; @Override public org . jbox2d . dynamics . joints . JointDef toJBox2d ( ) { org . jbox2d . dynamics . joints . GearJointDef jd = new org . jbox2d . dynamics . joints . GearJointDef ( ) ; jd . bodyA = bodyA . body ; jd . bodyB = bodyB . body ; jd . collideConnected = collideConnected ; jd . joint1 = joint1 . getJBox2DJoint ( ) ; jd . joint2 = joint2 . getJBox2DJoint ( ) ; jd . ratio = ratio ; jd . type = org . jbox2d . dynamics . joints . JointType . GEAR ; return jd ; } } 
