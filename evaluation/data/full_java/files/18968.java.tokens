package io . netty . handler . codec . compression ; import io . netty . util . internal . ThreadLocalRandom ; public abstract class AbstractCompressionTest { protected static final ThreadLocalRandom rand ; protected static final byte [ ] BYTES_SMALL = new byte [ <int> ] ; protected static final byte [ ] BYTES_LARGE = new byte [ <int> * <int> ] ; static { rand = ThreadLocalRandom . current ( ) ; fillArrayWithCompressibleData ( BYTES_SMALL ) ; fillArrayWithCompressibleData ( BYTES_LARGE ) ; } private static void fillArrayWithCompressibleData ( byte [ ] array ) { for ( int i = <int> ; i < array . length ; i + + ) { array [ i ] = i % <int> ! = <int> ? <int> : ( byte ) rand . nextInt ( ) ; } } } 
