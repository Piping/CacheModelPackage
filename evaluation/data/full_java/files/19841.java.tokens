package io . netty . example . http2 . tiles ; import static io . netty . util . CharsetUtil . UTF_8 ; import java . util . Random ; public final class Html { public static final String IP = System . getProperty ( <str> , <str> ) ; public static final byte [ ] FOOTER = <str> . getBytes ( UTF_8 ) ; public static final byte [ ] HEADER = ( <str> + <str> + <str> + <str> + <str> + url ( Http2Server . PORT ) + <str> + url ( HttpServer . PORT ) + <str> + <str> + url ( Http2Server . PORT ) + <str> + url ( HttpServer . PORT ) + <str> + <str> + url ( Http2Server . PORT ) + <str> + url ( HttpServer . PORT ) + <str> + <str> + url ( Http2Server . PORT ) + <str> + url ( HttpServer . PORT ) + <str> + <str> ) . getBytes ( UTF_8 ) ; private static final int IMAGES_X_AXIS = <int> ; private static final int IMAGES_Y_AXIS = <int> ; private Html ( ) { } private static String url ( int port ) { return IP + <str> + port + <str> ; } public static byte [ ] body ( int latency ) { int r = Math . abs ( new Random ( ) . nextInt ( ) ) ; int numberOfCharacters = <int> + stringLength ( latency ) + stringLength ( r ) ; StringBuilder sb = new StringBuilder ( numberOfCharacters ) . append ( <str> ) ; for ( int y = <int> ; y < IMAGES_Y_AXIS ; y + + ) { for ( int x = <int> ; x < IMAGES_X_AXIS ; x + + ) { sb . append ( <str> ) . append ( x ) . append ( <str> ) . append ( y ) . append ( <str> ) . append ( r ) . append ( <str> ) . append ( latency ) . append ( <str> ) ; } sb . append ( <str> ) ; } sb . append ( <str> ) ; return sb . toString ( ) . getBytes ( UTF_8 ) ; } private static int stringLength ( int value ) { return Integer . toString ( value ) . length ( ) * IMAGES_X_AXIS * IMAGES_Y_AXIS ; } } 
