package org . gradle . api . internal . resources ; import com . google . common . io . CharSource ; import org . gradle . api . Task ; import org . gradle . api . file . FileCollection ; import org . gradle . api . resources . TextResource ; import org . gradle . api . tasks . TaskDependency ; import org . gradle . internal . UncheckedException ; import java . io . File ; import java . io . IOException ; import java . io . Reader ; import java . util . Collections ; import java . util . Set ; public class CharSourceBackedTextResource implements TextResource { private final CharSource charSource ; public CharSourceBackedTextResource ( CharSource charSource ) { this . charSource = charSource ; } @Override public String asString ( ) { try { return charSource . read ( ) ; } catch ( IOException e ) { throw UncheckedException . throwAsUncheckedException ( e ) ; } } @Override public Reader asReader ( ) { try { return charSource . openStream ( ) ; } catch ( IOException e ) { throw UncheckedException . throwAsUncheckedException ( e ) ; } } @Override public File asFile ( String charset ) { throw new UnsupportedOperationException ( <str> + charSource ) ; } @Override public File asFile ( ) { throw new UnsupportedOperationException ( <str> + charSource ) ; } @Override public Object getInputProperties ( ) { return null ; } @Override public FileCollection getInputFiles ( ) { return null ; } @Override public TaskDependency getBuildDependencies ( ) { return new TaskDependency ( ) { @Override public Set < ? extends Task > getDependencies ( Task task ) { return Collections . emptySet ( ) ; } } ; } } 
