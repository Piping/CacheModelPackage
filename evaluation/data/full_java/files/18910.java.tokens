package io . netty . handler . codec . compression ; import io . netty . util . internal . PlatformDependent ; import io . netty . util . internal . SystemPropertyUtil ; import io . netty . util . internal . logging . InternalLogger ; import io . netty . util . internal . logging . InternalLoggerFactory ; public final class ZlibCodecFactory { private static final InternalLogger logger = InternalLoggerFactory . getInstance ( ZlibCodecFactory . class ) ; private static final int DEFAULT_JDK_WINDOW_SIZE = <int> ; private static final int DEFAULT_JDK_MEM_LEVEL = <int> ; private static final boolean noJdkZlibDecoder ; private static final boolean noJdkZlibEncoder ; static { noJdkZlibDecoder = SystemPropertyUtil . getBoolean ( <str> , true ) ; logger . debug ( <str> , noJdkZlibDecoder ) ; noJdkZlibEncoder = SystemPropertyUtil . getBoolean ( <str> , false ) ; logger . debug ( <str> , noJdkZlibEncoder ) ; } public static ZlibEncoder newZlibEncoder ( int compressionLevel ) { if ( PlatformDependent . javaVersion ( ) < <int> | | noJdkZlibEncoder ) { return new JZlibEncoder ( compressionLevel ) ; } else { return new JdkZlibEncoder ( compressionLevel ) ; } } public static ZlibEncoder newZlibEncoder ( ZlibWrapper wrapper ) { if ( PlatformDependent . javaVersion ( ) < <int> | | noJdkZlibEncoder ) { return new JZlibEncoder ( wrapper ) ; } else { return new JdkZlibEncoder ( wrapper ) ; } } public static ZlibEncoder newZlibEncoder ( ZlibWrapper wrapper , int compressionLevel ) { if ( PlatformDependent . javaVersion ( ) < <int> | | noJdkZlibEncoder ) { return new JZlibEncoder ( wrapper , compressionLevel ) ; } else { return new JdkZlibEncoder ( wrapper , compressionLevel ) ; } } public static ZlibEncoder newZlibEncoder ( ZlibWrapper wrapper , int compressionLevel , int windowBits , int memLevel ) { if ( PlatformDependent . javaVersion ( ) < <int> | | noJdkZlibEncoder | | windowBits ! = DEFAULT_JDK_WINDOW_SIZE | | memLevel ! = DEFAULT_JDK_MEM_LEVEL ) { return new JZlibEncoder ( wrapper , compressionLevel , windowBits , memLevel ) ; } else { return new JdkZlibEncoder ( wrapper , compressionLevel ) ; } } public static ZlibEncoder newZlibEncoder ( byte [ ] dictionary ) { if ( PlatformDependent . javaVersion ( ) < <int> | | noJdkZlibEncoder ) { return new JZlibEncoder ( dictionary ) ; } else { return new JdkZlibEncoder ( dictionary ) ; } } public static ZlibEncoder newZlibEncoder ( int compressionLevel , byte [ ] dictionary ) { if ( PlatformDependent . javaVersion ( ) < <int> | | noJdkZlibEncoder ) { return new JZlibEncoder ( compressionLevel , dictionary ) ; } else { return new JdkZlibEncoder ( compressionLevel , dictionary ) ; } } public static ZlibEncoder newZlibEncoder ( int compressionLevel , int windowBits , int memLevel , byte [ ] dictionary ) { if ( PlatformDependent . javaVersion ( ) < <int> | | noJdkZlibEncoder | | windowBits ! = DEFAULT_JDK_WINDOW_SIZE | | memLevel ! = DEFAULT_JDK_MEM_LEVEL ) { return new JZlibEncoder ( compressionLevel , windowBits , memLevel , dictionary ) ; } else { return new JdkZlibEncoder ( compressionLevel , dictionary ) ; } } public static ZlibDecoder newZlibDecoder ( ) { if ( PlatformDependent . javaVersion ( ) < <int> | | noJdkZlibDecoder ) { return new JZlibDecoder ( ) ; } else { return new JdkZlibDecoder ( ) ; } } public static ZlibDecoder newZlibDecoder ( ZlibWrapper wrapper ) { if ( PlatformDependent . javaVersion ( ) < <int> | | noJdkZlibDecoder ) { return new JZlibDecoder ( wrapper ) ; } else { return new JdkZlibDecoder ( wrapper ) ; } } public static ZlibDecoder newZlibDecoder ( byte [ ] dictionary ) { if ( PlatformDependent . javaVersion ( ) < <int> | | noJdkZlibDecoder ) { return new JZlibDecoder ( dictionary ) ; } else { return new JdkZlibDecoder ( dictionary ) ; } } private ZlibCodecFactory ( ) { } } 
