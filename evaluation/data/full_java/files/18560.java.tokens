package com . badlogic . gdx . tests ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . graphics . GL20 ; import com . badlogic . gdx . graphics . Texture ; import com . badlogic . gdx . graphics . g2d . Batch ; import com . badlogic . gdx . graphics . g2d . NinePatch ; import com . badlogic . gdx . graphics . g2d . TextureRegion ; import com . badlogic . gdx . scenes . scene2d . InputEvent ; import com . badlogic . gdx . scenes . scene2d . Stage ; import com . badlogic . gdx . scenes . scene2d . ui . CheckBox ; import com . badlogic . gdx . scenes . scene2d . ui . Label ; import com . badlogic . gdx . scenes . scene2d . ui . Skin ; import com . badlogic . gdx . scenes . scene2d . ui . Table ; import com . badlogic . gdx . scenes . scene2d . ui . TextButton ; import com . badlogic . gdx . scenes . scene2d . ui . TextButton . TextButtonStyle ; import com . badlogic . gdx . scenes . scene2d . utils . ClickListener ; import com . badlogic . gdx . tests . utils . GdxTest ; public class TableTest extends GdxTest { Skin skin ; Stage stage ; Texture texture ; Table root ; @Override public void create ( ) { stage = new Stage ( ) ; Gdx . input . setInputProcessor ( stage ) ; skin = new Skin ( Gdx . files . internal ( <str> ) ) ; texture = new Texture ( Gdx . files . internal ( <str> ) ) ; TextureRegion region = new TextureRegion ( texture ) ; NinePatch patch = skin . getPatch ( <str> ) ; Label label = new Label ( <str> , skin ) ; root = new Table ( ) { public void draw ( Batch batch , float parentAlpha ) { super . draw ( batch , parentAlpha ) ; } } ; stage . addActor ( root ) ; Table table = new Table ( ) ; table . setTransform ( true ) ; table . setPosition ( <int> , <int> ) ; table . setOrigin ( <int> , <int> ) ; table . setRotation ( <int> ) ; table . setScaleY ( <int> ) ; table . add ( label ) ; table . add ( new TextButton ( <str> , skin ) ) ; table . pack ( ) ; table . addListener ( new ClickListener ( ) { public void clicked ( InputEvent event , float x , float y ) { System . out . println ( <str> ) ; } } ) ; TextButton button = new TextButton ( <str> , skin ) ; Table table2 = new Table ( ) ; table2 . add ( button ) ; table2 . setTransform ( true ) ; table2 . setScaleX ( <float> ) ; table2 . setOrigin ( table2 . getPrefWidth ( ) / <int> , table2 . getPrefHeight ( ) / <int> ) ; root . debug ( ) ; root . setFillParent ( true ) ; root . add ( new Label ( <str> , skin ) ) . colspan ( <int> ) . expandX ( ) ; root . add ( new TextButton ( <str> , skin ) ) ; root . row ( ) ; root . add ( new TextButton ( <str> , skin ) ) ; root . add ( new TextButton ( <str> , skin . get ( <str> , TextButtonStyle . class ) ) ) ; root . add ( new CheckBox ( <str> , skin ) ) ; } @Override public void render ( ) { Gdx . gl . glClearColor ( <float> , <float> , <float> , <int> ) ; Gdx . gl . glClear ( GL20 . GL_COLOR_BUFFER_BIT ) ; stage . act ( Math . min ( Gdx . graphics . getDeltaTime ( ) , <int> / <int> f ) ) ; stage . draw ( ) ; } @Override public void resize ( int width , int height ) { stage . getViewport ( ) . update ( width , height , true ) ; } @Override public void dispose ( ) { stage . dispose ( ) ; texture . dispose ( ) ; skin . dispose ( ) ; } } 
