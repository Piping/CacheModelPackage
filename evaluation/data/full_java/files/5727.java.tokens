package org . elasticsearch . common . geo ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . common . io . stream . Writeable ; import java . io . IOException ; public enum SpatialStrategy implements Writeable < SpatialStrategy > { TERM ( <str> ) , RECURSIVE ( <str> ) ; private final String strategyName ; private SpatialStrategy ( String strategyName ) { this . strategyName = strategyName ; } public String getStrategyName ( ) { return strategyName ; } @Override public SpatialStrategy readFrom ( StreamInput in ) throws IOException { int ordinal = in . readVInt ( ) ; if ( ordinal < <int> | | ordinal > = values ( ) . length ) { throw new IOException ( <str> + ordinal + <str> ) ; } return values ( ) [ ordinal ] ; } @Override public void writeTo ( StreamOutput out ) throws IOException { out . writeVInt ( ordinal ( ) ) ; } public static SpatialStrategy fromString ( String strategyName ) { for ( SpatialStrategy strategy : values ( ) ) { if ( strategy . strategyName . equals ( strategyName ) ) { return strategy ; } } return null ; } } 
