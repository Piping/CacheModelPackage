package org . eclipse . debug . internal . ui . sourcelookup . browsers ; import java . util . ArrayList ; import org . eclipse . debug . core . sourcelookup . ISourceContainer ; import org . eclipse . debug . core . sourcelookup . ISourceLookupDirector ; import org . eclipse . debug . ui . sourcelookup . AbstractSourceContainerBrowser ; import org . eclipse . debug . ui . sourcelookup . WorkingSetSourceContainer ; import org . eclipse . jface . window . Window ; import org . eclipse . swt . widgets . Shell ; import org . eclipse . ui . IWorkingSet ; import org . eclipse . ui . PlatformUI ; import org . eclipse . ui . dialogs . IWorkingSetSelectionDialog ; public class WorkingSetSourceContainerBrowser extends AbstractSourceContainerBrowser { @Override public ISourceContainer [ ] addSourceContainers ( Shell shell , ISourceLookupDirector director ) { ArrayList < ISourceContainer > containers = new ArrayList < ISourceContainer > ( ) ; IWorkingSetSelectionDialog dialog = PlatformUI . getWorkbench ( ) . getWorkingSetManager ( ) . createWorkingSetSelectionDialog ( shell , true ) ; if ( dialog . open ( ) = = Window . OK ) { IWorkingSet [ ] selections = dialog . getSelection ( ) ; if ( selections ! = null ) { for ( int i = <int> ; i < selections . length ; i + + ) { containers . add ( new WorkingSetSourceContainer ( selections [ i ] ) ) ; } } } return containers . toArray ( new ISourceContainer [ containers . size ( ) ] ) ; } } 
