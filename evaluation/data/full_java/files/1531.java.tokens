package org . apache . cassandra . gms ; import java . util . Arrays ; import org . junit . Test ; import static org . junit . Assert . assertEquals ; import static org . junit . Assert . assertTrue ; public class ArrayBackedBoundedStatsTest { @Test public void test ( ) { int size = <int> ; ArrayBackedBoundedStats bsd = new ArrayBackedBoundedStats ( size ) ; assertEquals ( <int> , bsd . mean ( ) , <float> ) ; bsd . add ( <int> ) ; bsd . add ( <int> ) ; bsd . add ( <int> ) ; bsd . add ( <int> ) ; bsd . add ( <int> ) ; long [ ] expected = new long [ ] { <int> , <int> , <int> , <int> } ; assertArrivalIntervals ( bsd , expected ) ; assertEquals ( <float> , bsd . mean ( ) , <float> ) ; } private void assertArrivalIntervals ( ArrayBackedBoundedStats bsd , long [ ] expected ) { Arrays . sort ( expected ) ; Arrays . sort ( bsd . getArrivalIntervals ( ) ) ; assertTrue ( Arrays . equals ( bsd . getArrivalIntervals ( ) , expected ) ) ; } @Test public void testMultipleRounds ( ) throws Exception { int size = <int> ; ArrayBackedBoundedStats bsd = new ArrayBackedBoundedStats ( size ) ; for ( long i = <int> ; i < = <int> ; i + + ) { bsd . add ( i ) ; } long [ ] expected = new long [ ] { <int> , <int> , <int> , <int> , <int> } ; assertArrivalIntervals ( bsd , expected ) ; } } 
