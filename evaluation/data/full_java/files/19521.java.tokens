package io . netty . handler . codec . socksx . v4 ; import io . netty . handler . codec . DecoderResult ; import io . netty . util . NetUtil ; import io . netty . util . internal . StringUtil ; public class DefaultSocks4CommandResponse extends AbstractSocks4Message implements Socks4CommandResponse { private final Socks4CommandStatus status ; private final String dstAddr ; private final int dstPort ; public DefaultSocks4CommandResponse ( Socks4CommandStatus status ) { this ( status , null , <int> ) ; } public DefaultSocks4CommandResponse ( Socks4CommandStatus status , String dstAddr , int dstPort ) { if ( status = = null ) { throw new NullPointerException ( <str> ) ; } if ( dstAddr ! = null ) { if ( ! NetUtil . isValidIpV4Address ( dstAddr ) ) { throw new IllegalArgumentException ( <str> + dstAddr + <str> ) ; } } if ( dstPort < <int> | | dstPort > <int> ) { throw new IllegalArgumentException ( <str> + dstPort + <str> ) ; } this . status = status ; this . dstAddr = dstAddr ; this . dstPort = dstPort ; } @Override public Socks4CommandStatus status ( ) { return status ; } @Override public String dstAddr ( ) { return dstAddr ; } @Override public int dstPort ( ) { return dstPort ; } @Override public String toString ( ) { StringBuilder buf = new StringBuilder ( <int> ) ; buf . append ( StringUtil . simpleClassName ( this ) ) ; DecoderResult decoderResult = decoderResult ( ) ; if ( ! decoderResult . isSuccess ( ) ) { buf . append ( <str> ) ; buf . append ( decoderResult ) ; buf . append ( <str> ) ; } else { buf . append ( <str> ) ; } buf . append ( dstAddr ( ) ) ; buf . append ( <str> ) ; buf . append ( dstPort ( ) ) ; buf . append ( <str> ) ; return buf . toString ( ) ; } } 
