package io . netty . handler . codec . stomp ; import io . netty . buffer . ByteBuf ; import io . netty . handler . codec . DecoderResult ; public class DefaultStompContentSubframe implements StompContentSubframe { private DecoderResult decoderResult = DecoderResult . SUCCESS ; private final ByteBuf content ; public DefaultStompContentSubframe ( ByteBuf content ) { if ( content = = null ) { throw new NullPointerException ( <str> ) ; } this . content = content ; } @Override public ByteBuf content ( ) { return content ; } @Override public StompContentSubframe copy ( ) { return new DefaultStompContentSubframe ( content ( ) . copy ( ) ) ; } @Override public StompContentSubframe duplicate ( ) { return new DefaultStompContentSubframe ( content ( ) . duplicate ( ) ) ; } @Override public int refCnt ( ) { return content ( ) . refCnt ( ) ; } @Override public StompContentSubframe retain ( ) { content ( ) . retain ( ) ; return this ; } @Override public StompContentSubframe retain ( int increment ) { content ( ) . retain ( increment ) ; return this ; } @Override public StompContentSubframe touch ( ) { content . touch ( ) ; return this ; } @Override public StompContentSubframe touch ( Object hint ) { content . touch ( hint ) ; return this ; } @Override public boolean release ( ) { return content ( ) . release ( ) ; } @Override public boolean release ( int decrement ) { return content ( ) . release ( decrement ) ; } @Override public DecoderResult decoderResult ( ) { return decoderResult ; } @Override public void setDecoderResult ( DecoderResult decoderResult ) { this . decoderResult = decoderResult ; } @Override public String toString ( ) { return <str> + <str> + decoderResult + <str> ; } } 
