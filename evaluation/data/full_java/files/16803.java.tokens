package com . badlogic . gdx . backends . iosrobovm ; public enum IOSDevice { IPHONE_2G ( <str> , <int> ) , IPHONE_3G ( <str> , <int> ) , IPHONE_3GS ( <str> , <int> ) , IPHONE_4 ( <str> , <int> ) , IPHONE_4V ( <str> , <int> ) , IPHONE_4_CDMA ( <str> , <int> ) , IPHONE_4S ( <str> , <int> ) , IPHONE_5 ( <str> , <int> ) , IPHONE_5_CDMA_GSM ( <str> , <int> ) , IPHONE_5C ( <str> , <int> ) , IPHONE_5C_CDMA_GSM ( <str> , <int> ) , IPHONE_5S ( <str> , <int> ) , IPHONE_5S_CDMA_GSM ( <str> , <int> ) , IPHONE_6_PLUS ( <str> , <int> ) , IPHONE_6 ( <str> , <int> ) , IPHONE_6S ( <str> , <int> ) , IPHONE_6S_PLUS ( <str> , <int> ) , IPOD_TOUCH_1G ( <str> , <int> ) , IPOD_TOUCH_2G ( <str> , <int> ) , IPOD_TOUCH_3G ( <str> , <int> ) , IPOD_TOUCH_4G ( <str> , <int> ) , IPOD_TOUCH_5G ( <str> , <int> ) , IPOD_TOUCH_6G ( <str> , <int> ) , IPAD ( <str> , <int> ) , IPAD_3G ( <str> , <int> ) , IPAD_2_WIFI ( <str> , <int> ) , IPAD_2 ( <str> , <int> ) , IPAD_2_CDMA ( <str> , <int> ) , IPAD_2V ( <str> , <int> ) , IPAD_MINI_WIFI ( <str> , <int> ) , IPAD_MINI ( <str> , <int> ) , IPAD_MINI_WIFI_CDMA ( <str> , <int> ) , IPAD_3_WIFI ( <str> , <int> ) , IPAD_3_WIFI_CDMA ( <str> , <int> ) , IPAD_3 ( <str> , <int> ) , IPAD_4_WIFI ( <str> , <int> ) , IPAD_4 ( <str> , <int> ) , IPAD_4_GSM_CDMA ( <str> , <int> ) , IPAD_AIR_WIFI ( <str> , <int> ) , IPAD_AIR_WIFI_GSM ( <str> , <int> ) , IPAD_AIR_WIFI_CDMA ( <str> , <int> ) , IPAD_MINI_RETINA_WIFI ( <str> , <int> ) , IPAD_MINI_RETINA_WIFI_CDMA ( <str> , <int> ) , IPAD_MINI_RETINA_WIFI_CELLULAR_CN ( <str> , <int> ) , IPAD_MINI_3_WIFI ( <str> , <int> ) , IPAD_MINI_3_WIFI_CELLULAR ( <str> , <int> ) , IPAD_MINI_3_WIFI_CELLULAR_CN ( <str> , <int> ) , IPAD_MINI_4_WIFI ( <str> , <int> ) , IPAD_MINI_4_WIFI_CELLULAR ( <str> , <int> ) , IPAD_MINI_AIR_2_WIFI ( <str> , <int> ) , IPAD_MINI_AIR_2_WIFI_CELLULAR ( <str> , <int> ) , IPAD_PRO_WIFI ( <str> , <int> ) , IPAD_PRO ( <str> , <int> ) , SIMULATOR_32 ( <str> , <int> ) , SIMULATOR_64 ( <str> , <int> ) ; final String machineString ; final int ppi ; IOSDevice ( String machineString , int ppi ) { this . machineString = machineString ; this . ppi = ppi ; } public static IOSDevice getDevice ( String machineString ) { for ( IOSDevice device : values ( ) ) { if ( device . machineString . equalsIgnoreCase ( machineString ) ) return device ; } return null ; } } 
