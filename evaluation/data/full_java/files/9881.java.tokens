package com . google . common . collect . testing ; import java . util . List ; public class ConcurrentNavigableMapTestSuiteBuilder < K , V > extends NavigableMapTestSuiteBuilder < K , V > { public static < K , V > ConcurrentNavigableMapTestSuiteBuilder < K , V > using ( TestSortedMapGenerator < K , V > generator ) { ConcurrentNavigableMapTestSuiteBuilder < K , V > result = new ConcurrentNavigableMapTestSuiteBuilder < K , V > ( ) ; result . usingGenerator ( generator ) ; return result ; } @Override protected List < Class < ? extends AbstractTester > > getTesters ( ) { List < Class < ? extends AbstractTester > > testers = Helpers . copyToList ( super . getTesters ( ) ) ; testers . addAll ( ConcurrentMapTestSuiteBuilder . TESTERS ) ; return testers ; } @Override NavigableMapTestSuiteBuilder < K , V > subSuiteUsing ( TestSortedMapGenerator < K , V > generator ) { return using ( generator ) ; } } 
