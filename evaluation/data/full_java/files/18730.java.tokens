package com . badlogic . gdx . tests . android ; import javax . microedition . khronos . opengles . GL10 ; import android . content . Intent ; import android . os . Bundle ; import android . util . Log ; import android . view . View ; import android . view . View . OnClickListener ; import android . view . ViewGroup . LayoutParams ; import android . widget . Button ; import android . widget . LinearLayout ; import com . badlogic . gdx . ApplicationListener ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . backends . android . AndroidApplication ; import com . badlogic . gdx . graphics . Color ; public class WindowedTest extends AndroidApplication implements ApplicationListener { Color color = new Color ( <int> , <int> , <int> , <int> ) ; public void onCreate ( Bundle bundle ) { super . onCreate ( bundle ) ; Button b1 = new Button ( this ) ; b1 . setText ( <str> ) ; b1 . setLayoutParams ( new LinearLayout . LayoutParams ( LayoutParams . FILL_PARENT , LayoutParams . WRAP_CONTENT ) ) ; Button b2 = new Button ( this ) ; b2 . setText ( <str> ) ; b2 . setLayoutParams ( new LinearLayout . LayoutParams ( LayoutParams . FILL_PARENT , LayoutParams . WRAP_CONTENT ) ) ; View view = initializeForView ( this ) ; LinearLayout layout = new LinearLayout ( this ) ; layout . setOrientation ( LinearLayout . VERTICAL ) ; layout . addView ( b1 ) ; layout . addView ( b2 ) ; layout . addView ( view , new LinearLayout . LayoutParams ( LayoutParams . FILL_PARENT , LayoutParams . FILL_PARENT ) ) ; setContentView ( layout ) ; b1 . setOnClickListener ( new OnClickListener ( ) { @Override public void onClick ( View arg0 ) { color . set ( ( float ) Math . random ( ) , ( float ) Math . random ( ) , ( float ) Math . random ( ) , <int> ) ; } } ) ; b2 . setOnClickListener ( new OnClickListener ( ) { @Override public void onClick ( View v ) { Intent intent = new Intent ( WindowedTest . this , WindowedTest . class ) ; WindowedTest . this . startActivity ( intent ) ; } } ) ; } public void onPause ( ) { super . onPause ( ) ; } @Override public void onDestroy ( ) { super . onDestroy ( ) ; Log . w ( <str> , <str> ) ; } @Override public void create ( ) { } @Override public void render ( ) { Gdx . gl . glClearColor ( color . r , color . g , color . g , color . a ) ; Gdx . gl . glClear ( GL10 . GL_COLOR_BUFFER_BIT ) ; } @Override public void dispose ( ) { } @Override public void pause ( ) { } @Override public void resume ( ) { } @Override public void resize ( int width , int height ) { } } 
