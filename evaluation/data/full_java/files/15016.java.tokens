package org . gradle . nativeplatform . toolchain . internal ; import org . gradle . api . Action ; import org . gradle . api . internal . file . FileResolver ; import org . gradle . internal . operations . BuildOperationProcessor ; import org . gradle . internal . os . OperatingSystem ; import org . gradle . listener . ActionBroadcast ; import org . gradle . nativeplatform . toolchain . NativePlatformToolChain ; import java . io . File ; public abstract class ExtendableToolChain < T extends NativePlatformToolChain > implements NativeToolChainInternal { private final String name ; protected final OperatingSystem operatingSystem ; private final FileResolver fileResolver ; protected final ActionBroadcast < T > configureActions = new ActionBroadcast < T > ( ) ; protected final BuildOperationProcessor buildOperationProcessor ; protected ExtendableToolChain ( String name , BuildOperationProcessor buildOperationProcessor , OperatingSystem operatingSystem , FileResolver fileResolver ) { this . name = name ; this . operatingSystem = operatingSystem ; this . fileResolver = fileResolver ; this . buildOperationProcessor = buildOperationProcessor ; } public String getName ( ) { return name ; } protected abstract String getTypeName ( ) ; public String getDisplayName ( ) { return String . format ( <str> , getName ( ) , getTypeName ( ) ) ; } @Override public String toString ( ) { return getDisplayName ( ) ; } public String getOutputType ( ) { return String . format ( <str> , getName ( ) , operatingSystem . getName ( ) ) ; } public void eachPlatform ( Action < ? super T > action ) { configureActions . add ( action ) ; } protected File resolve ( Object path ) { return fileResolver . resolve ( path ) ; } } 
