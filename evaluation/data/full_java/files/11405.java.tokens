package org . gradle . api . internal . changedetection . state ; import org . gradle . cache . PersistentIndexedCache ; import org . gradle . internal . id . IdGenerator ; import org . gradle . internal . id . RandomLongIdGenerator ; import org . gradle . internal . serialize . Serializer ; public class CacheBackedFileSnapshotRepository implements FileSnapshotRepository { private final PersistentIndexedCache < Long , FileCollectionSnapshot > cache ; private IdGenerator < Long > idGenerator = new RandomLongIdGenerator ( ) ; public CacheBackedFileSnapshotRepository ( TaskArtifactStateCacheAccess cacheAccess , Serializer < FileCollectionSnapshot > serializer , IdGenerator < Long > idGenerator ) { this . idGenerator = idGenerator ; cache = cacheAccess . createCache ( <str> , Long . class , serializer ) ; } public Long add ( FileCollectionSnapshot snapshot ) { Long id = idGenerator . generateId ( ) ; cache . put ( id , snapshot ) ; return id ; } public FileCollectionSnapshot get ( Long id ) { return cache . get ( id ) ; } public void remove ( Long id ) { cache . remove ( id ) ; } } 
