package org . gradle . model . internal . manage . schema . extract ; import org . gradle . model . internal . type . ModelType ; import java . util . List ; public abstract class CollectionStrategy implements ModelSchemaExtractionStrategy { protected < T > void validateType ( ModelType < ? > modelType , ModelSchemaExtractionContext < T > extractionContext , ModelType < T > type ) { if ( ! type . getRawClass ( ) . equals ( modelType . getConcreteClass ( ) ) ) { throw new InvalidManagedModelElementTypeException ( extractionContext , String . format ( <str> , modelType . getConcreteClass ( ) . getName ( ) ) ) ; } if ( type . isHasWildcardTypeVariables ( ) ) { throw new InvalidManagedModelElementTypeException ( extractionContext , String . format ( <str> , modelType . getConcreteClass ( ) . getName ( ) ) ) ; } List < ModelType < ? > > typeVariables = type . getTypeVariables ( ) ; if ( typeVariables . isEmpty ( ) ) { throw new InvalidManagedModelElementTypeException ( extractionContext , String . format ( <str> , modelType . getConcreteClass ( ) . getName ( ) ) ) ; } } } 
