package org . gradle . api . internal . artifacts . ivyservice . ivyresolve ; import org . gradle . api . artifacts . component . ComponentIdentifier ; import org . gradle . api . internal . component . ArtifactType ; import org . gradle . internal . component . model . * ; import org . gradle . internal . resolve . ModuleVersionNotFoundException ; import org . gradle . internal . resolve . resolver . ArtifactResolver ; import org . gradle . internal . resolve . resolver . ComponentMetaDataResolver ; import org . gradle . internal . resolve . resolver . DependencyToComponentIdResolver ; import org . gradle . internal . resolve . result . BuildableArtifactResolveResult ; import org . gradle . internal . resolve . result . BuildableArtifactSetResolveResult ; import org . gradle . internal . resolve . result . BuildableComponentIdResolveResult ; import org . gradle . internal . resolve . result . BuildableComponentResolveResult ; public class NoRepositoriesResolver implements ComponentResolvers , DependencyToComponentIdResolver , ComponentMetaDataResolver , ArtifactResolver { public DependencyToComponentIdResolver getComponentIdResolver ( ) { return this ; } public ComponentMetaDataResolver getComponentResolver ( ) { return this ; } public ArtifactResolver getArtifactResolver ( ) { return this ; } public void resolve ( DependencyMetaData dependency , BuildableComponentIdResolveResult result ) { result . failed ( new ModuleVersionNotFoundException ( dependency . getRequested ( ) , String . format ( <str> , dependency . getRequested ( ) ) ) ) ; } public void resolve ( ComponentIdentifier identifier , ComponentOverrideMetadata componentOverrideMetadata , BuildableComponentResolveResult result ) { throw new UnsupportedOperationException ( ) ; } public void resolveModuleArtifacts ( ComponentResolveMetaData component , ComponentUsage usage , BuildableArtifactSetResolveResult result ) { throw new UnsupportedOperationException ( ) ; } public void resolveModuleArtifacts ( ComponentResolveMetaData component , ArtifactType artifactType , BuildableArtifactSetResolveResult result ) { throw new UnsupportedOperationException ( ) ; } public void resolveArtifact ( ComponentArtifactMetaData artifact , ModuleSource moduleSource , BuildableArtifactResolveResult result ) { throw new UnsupportedOperationException ( ) ; } } 
