package org . gradle . reporting ; import java . math . BigDecimal ; public class DurationFormatter { public static final int MILLIS_PER_SECOND = <int> ; public static final int MILLIS_PER_MINUTE = <int> * MILLIS_PER_SECOND ; public static final int MILLIS_PER_HOUR = <int> * MILLIS_PER_MINUTE ; public static final int MILLIS_PER_DAY = <int> * MILLIS_PER_HOUR ; public String format ( long duration ) { if ( duration = = <int> ) { return <str> ; } StringBuilder result = new StringBuilder ( ) ; long days = duration / MILLIS_PER_DAY ; duration = duration % MILLIS_PER_DAY ; if ( days > <int> ) { result . append ( days ) ; result . append ( <str> ) ; } long hours = duration / MILLIS_PER_HOUR ; duration = duration % MILLIS_PER_HOUR ; if ( hours > <int> | | result . length ( ) > <int> ) { result . append ( hours ) ; result . append ( <str> ) ; } long minutes = duration / MILLIS_PER_MINUTE ; duration = duration % MILLIS_PER_MINUTE ; if ( minutes > <int> | | result . length ( ) > <int> ) { result . append ( minutes ) ; result . append ( <str> ) ; } int secondsScale = result . length ( ) > <int> ? <int> : <int> ; result . append ( BigDecimal . valueOf ( duration ) . divide ( BigDecimal . valueOf ( MILLIS_PER_SECOND ) ) . setScale ( secondsScale , BigDecimal . ROUND_HALF_UP ) ) ; result . append ( <str> ) ; return result . toString ( ) ; } } 
