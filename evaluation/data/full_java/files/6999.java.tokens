package org . elasticsearch . rest . action . admin . indices . mapping . put ; import org . elasticsearch . action . admin . indices . mapping . put . PutMappingRequest ; import org . elasticsearch . action . admin . indices . mapping . put . PutMappingResponse ; import org . elasticsearch . action . support . IndicesOptions ; import org . elasticsearch . client . Client ; import org . elasticsearch . common . Strings ; import org . elasticsearch . common . inject . Inject ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . rest . * ; import org . elasticsearch . rest . action . support . AcknowledgedRestListener ; import static org . elasticsearch . client . Requests . putMappingRequest ; import static org . elasticsearch . rest . RestRequest . Method . POST ; import static org . elasticsearch . rest . RestRequest . Method . PUT ; public class RestPutMappingAction extends BaseRestHandler { @Inject public RestPutMappingAction ( Settings settings , RestController controller , Client client ) { super ( settings , controller , client ) ; controller . registerHandler ( PUT , <str> , this ) ; controller . registerHandler ( PUT , <str> , this ) ; controller . registerHandler ( PUT , <str> , this ) ; controller . registerHandler ( PUT , <str> , this ) ; controller . registerHandler ( POST , <str> , this ) ; controller . registerHandler ( POST , <str> , this ) ; controller . registerHandler ( POST , <str> , this ) ; controller . registerHandler ( POST , <str> , this ) ; controller . registerHandler ( PUT , <str> , this ) ; controller . registerHandler ( PUT , <str> , this ) ; controller . registerHandler ( PUT , <str> , this ) ; controller . registerHandler ( PUT , <str> , this ) ; controller . registerHandler ( POST , <str> , this ) ; controller . registerHandler ( POST , <str> , this ) ; controller . registerHandler ( POST , <str> , this ) ; controller . registerHandler ( POST , <str> , this ) ; } @Override public void handleRequest ( final RestRequest request , final RestChannel channel , final Client client ) { PutMappingRequest putMappingRequest = putMappingRequest ( Strings . splitStringByCommaToArray ( request . param ( <str> ) ) ) ; putMappingRequest . type ( request . param ( <str> ) ) ; putMappingRequest . source ( request . content ( ) . toUtf8 ( ) ) ; putMappingRequest . updateAllTypes ( request . paramAsBoolean ( <str> , false ) ) ; putMappingRequest . timeout ( request . paramAsTime ( <str> , putMappingRequest . timeout ( ) ) ) ; putMappingRequest . masterNodeTimeout ( request . paramAsTime ( <str> , putMappingRequest . masterNodeTimeout ( ) ) ) ; putMappingRequest . indicesOptions ( IndicesOptions . fromRequest ( request , putMappingRequest . indicesOptions ( ) ) ) ; client . admin ( ) . indices ( ) . putMapping ( putMappingRequest , new AcknowledgedRestListener < PutMappingResponse > ( channel ) ) ; } } 
