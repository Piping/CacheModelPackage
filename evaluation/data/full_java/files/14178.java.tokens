package org . gradle . messaging . remote . internal . hub ; import org . gradle . api . Action ; import org . gradle . internal . concurrent . ExecutorFactory ; import org . gradle . messaging . remote . ConnectionAcceptor ; import org . gradle . messaging . remote . MessagingServer ; import org . gradle . messaging . remote . ObjectConnection ; import org . gradle . messaging . remote . internal . ConnectCompletion ; import org . gradle . messaging . remote . internal . IncomingConnector ; public class MessageHubBackedServer implements MessagingServer { private final IncomingConnector connector ; private final ExecutorFactory executorFactory ; public MessageHubBackedServer ( IncomingConnector connector , ExecutorFactory executorFactory ) { this . connector = connector ; this . executorFactory = executorFactory ; } public ConnectionAcceptor accept ( Action < ObjectConnection > action ) { return connector . accept ( new ConnectEventAction ( action ) , false ) ; } private class ConnectEventAction implements Action < ConnectCompletion > { private final Action < ObjectConnection > action ; public ConnectEventAction ( Action < ObjectConnection > action ) { this . action = action ; } public void execute ( ConnectCompletion completion ) { action . execute ( new MessageHubBackedObjectConnection ( executorFactory , completion ) ) ; } } } 
