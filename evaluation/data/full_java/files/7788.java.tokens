package org . elasticsearch . bwcompat ; import org . elasticsearch . action . admin . cluster . health . ClusterHealthResponse ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . test . ESBackcompatTestCase ; import static org . hamcrest . Matchers . equalTo ; public class UnicastBackwardsCompatibilityIT extends ESBackcompatTestCase { @Override protected Settings nodeSettings ( int nodeOrdinal ) { return Settings . builder ( ) . put ( super . nodeSettings ( nodeOrdinal ) ) . put ( <str> , <int> + nodeOrdinal ) . put ( <str> , <str> ) . build ( ) ; } @Override protected Settings externalNodeSettings ( int nodeOrdinal ) { return Settings . settingsBuilder ( ) . put ( super . externalNodeSettings ( nodeOrdinal ) ) . put ( <str> , <int> + nodeOrdinal ) . put ( <str> , <str> ) . build ( ) ; } public void testUnicastDiscovery ( ) { ClusterHealthResponse healthResponse = client ( ) . admin ( ) . cluster ( ) . prepareHealth ( ) . get ( ) ; assertThat ( healthResponse . getNumberOfDataNodes ( ) , equalTo ( cluster ( ) . numDataNodes ( ) ) ) ; } } 
