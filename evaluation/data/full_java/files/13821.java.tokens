package org . gradle . launcher . daemon . diagnostics ; import org . gradle . util . GFileUtils ; import java . io . File ; import java . io . Serializable ; public class DaemonDiagnostics implements Serializable { private final Long pid ; private final File daemonLog ; private final static int TAIL_SIZE = <int> ; public DaemonDiagnostics ( File daemonLog , Long pid ) { this . daemonLog = daemonLog ; this . pid = pid ; } public Long getPid ( ) { return pid ; } public File getDaemonLog ( ) { return daemonLog ; } @Override public String toString ( ) { return <str> + <str> + pid + <str> + daemonLog + <str> ; } private String tailDaemonLog ( ) { try { String tail = GFileUtils . tail ( getDaemonLog ( ) , TAIL_SIZE ) ; return formatTail ( tail ) ; } catch ( GFileUtils . TailReadingException e ) { return <str> + getDaemonLog ( ) . getAbsolutePath ( ) + <str> + e . getCause ( ) ; } } private String formatTail ( String tail ) { return <str> + TAIL_SIZE + <str> + getDaemonLog ( ) . getName ( ) + <str> + tail + <str> ; } public String describe ( ) { return <str> + pid + <str> + <str> + daemonLog + <str> + tailDaemonLog ( ) ; } } 
