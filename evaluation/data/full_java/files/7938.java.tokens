package org . elasticsearch . common . lucene . search ; import org . apache . lucene . document . Document ; import org . apache . lucene . document . Field ; import org . apache . lucene . document . TextField ; import org . apache . lucene . index . DirectoryReader ; import org . apache . lucene . index . IndexReader ; import org . apache . lucene . index . IndexWriter ; import org . apache . lucene . index . IndexWriterConfig ; import org . apache . lucene . index . Term ; import org . apache . lucene . search . BoostQuery ; import org . apache . lucene . search . IndexSearcher ; import org . apache . lucene . search . Query ; import org . apache . lucene . store . RAMDirectory ; import org . elasticsearch . common . lucene . Lucene ; import org . elasticsearch . test . ESTestCase ; import static org . hamcrest . Matchers . equalTo ; import static org . hamcrest . Matchers . instanceOf ; public class MultiPhrasePrefixQueryTests extends ESTestCase { public void testSimple ( ) throws Exception { IndexWriter writer = new IndexWriter ( new RAMDirectory ( ) , new IndexWriterConfig ( Lucene . STANDARD_ANALYZER ) ) ; Document doc = new Document ( ) ; doc . add ( new Field ( <str> , <str> , TextField . TYPE_NOT_STORED ) ) ; writer . addDocument ( doc ) ; IndexReader reader = DirectoryReader . open ( writer , true ) ; IndexSearcher searcher = new IndexSearcher ( reader ) ; MultiPhrasePrefixQuery query = new MultiPhrasePrefixQuery ( ) ; query . add ( new Term ( <str> , <str> ) ) ; assertThat ( searcher . count ( query ) , equalTo ( <int> ) ) ; query = new MultiPhrasePrefixQuery ( ) ; query . add ( new Term ( <str> , <str> ) ) ; query . add ( new Term ( <str> , <str> ) ) ; assertThat ( searcher . count ( query ) , equalTo ( <int> ) ) ; query = new MultiPhrasePrefixQuery ( ) ; query . setSlop ( <int> ) ; query . add ( new Term ( <str> , <str> ) ) ; query . add ( new Term ( <str> , <str> ) ) ; assertThat ( searcher . count ( query ) , equalTo ( <int> ) ) ; query = new MultiPhrasePrefixQuery ( ) ; query . setSlop ( <int> ) ; query . add ( new Term ( <str> , <str> ) ) ; assertThat ( searcher . count ( query ) , equalTo ( <int> ) ) ; } public void testBoost ( ) throws Exception { IndexWriter writer = new IndexWriter ( new RAMDirectory ( ) , new IndexWriterConfig ( Lucene . STANDARD_ANALYZER ) ) ; Document doc = new Document ( ) ; doc . add ( new Field ( <str> , <str> , TextField . TYPE_NOT_STORED ) ) ; writer . addDocument ( doc ) ; doc = new Document ( ) ; doc . add ( new Field ( <str> , <str> , TextField . TYPE_NOT_STORED ) ) ; writer . addDocument ( doc ) ; IndexReader reader = DirectoryReader . open ( writer , true ) ; MultiPhrasePrefixQuery multiPhrasePrefixQuery = new MultiPhrasePrefixQuery ( ) ; multiPhrasePrefixQuery . add ( new Term [ ] { new Term ( <str> , <str> ) , new Term ( <str> , <str> ) } ) ; multiPhrasePrefixQuery . setBoost ( randomFloat ( ) ) ; Query query = multiPhrasePrefixQuery . rewrite ( reader ) ; assertThat ( query , instanceOf ( BoostQuery . class ) ) ; BoostQuery boostQuery = ( BoostQuery ) query ; assertThat ( boostQuery . getBoost ( ) , equalTo ( multiPhrasePrefixQuery . getBoost ( ) ) ) ; } } 
