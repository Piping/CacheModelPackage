package com . google . common . collect ; import static com . google . common . base . Preconditions . checkNotNull ; import com . google . common . annotations . GwtCompatible ; import java . io . Serializable ; @GwtCompatible ( serializable = true ) @SuppressWarnings ( <str> ) final class NaturalOrdering extends Ordering < Comparable > implements Serializable { static final NaturalOrdering INSTANCE = new NaturalOrdering ( ) ; private transient Ordering < Comparable > nullsFirst ; private transient Ordering < Comparable > nullsLast ; @Override public int compare ( Comparable left , Comparable right ) { checkNotNull ( left ) ; checkNotNull ( right ) ; return left . compareTo ( right ) ; } @Override public < S extends Comparable > Ordering < S > nullsFirst ( ) { Ordering < Comparable > result = nullsFirst ; if ( result = = null ) { result = nullsFirst = super . nullsFirst ( ) ; } return ( Ordering < S > ) result ; } @Override public < S extends Comparable > Ordering < S > nullsLast ( ) { Ordering < Comparable > result = nullsLast ; if ( result = = null ) { result = nullsLast = super . nullsLast ( ) ; } return ( Ordering < S > ) result ; } @Override public < S extends Comparable > Ordering < S > reverse ( ) { return ( Ordering < S > ) ReverseNaturalOrdering . INSTANCE ; } private Object readResolve ( ) { return INSTANCE ; } @Override public String toString ( ) { return <str> ; } private NaturalOrdering ( ) { } private static final long serialVersionUID = <int> ; } 
