package org . elasticsearch . action . admin . indices . open ; import org . elasticsearch . action . ActionRequestValidationException ; import org . elasticsearch . action . IndicesRequest ; import org . elasticsearch . action . support . IndicesOptions ; import org . elasticsearch . action . support . master . AcknowledgedRequest ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import org . elasticsearch . common . util . CollectionUtils ; import java . io . IOException ; import static org . elasticsearch . action . ValidateActions . addValidationError ; public class OpenIndexRequest extends AcknowledgedRequest < OpenIndexRequest > implements IndicesRequest . Replaceable { private String [ ] indices ; private IndicesOptions indicesOptions = IndicesOptions . fromOptions ( false , false , false , true ) ; public OpenIndexRequest ( ) { } public OpenIndexRequest ( String . . . indices ) { this . indices = indices ; } @Override public ActionRequestValidationException validate ( ) { ActionRequestValidationException validationException = null ; if ( CollectionUtils . isEmpty ( indices ) ) { validationException = addValidationError ( <str> , validationException ) ; } return validationException ; } @Override public String [ ] indices ( ) { return indices ; } @Override public OpenIndexRequest indices ( String . . . indices ) { this . indices = indices ; return this ; } @Override public IndicesOptions indicesOptions ( ) { return indicesOptions ; } public OpenIndexRequest indicesOptions ( IndicesOptions indicesOptions ) { this . indicesOptions = indicesOptions ; return this ; } @Override public void readFrom ( StreamInput in ) throws IOException { super . readFrom ( in ) ; indices = in . readStringArray ( ) ; readTimeout ( in ) ; indicesOptions = IndicesOptions . readIndicesOptions ( in ) ; } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeStringArray ( indices ) ; writeTimeout ( out ) ; indicesOptions . writeIndicesOptions ( out ) ; } } 
