package org . gradle . ide . visualstudio . internal ; import org . gradle . api . internal . DefaultNamedDomainObjectSet ; import org . gradle . api . internal . file . FileResolver ; import org . gradle . internal . reflect . Instantiator ; public class VisualStudioSolutionRegistry extends DefaultNamedDomainObjectSet < DefaultVisualStudioSolution > { private final FileResolver fileResolver ; private final VisualStudioProjectResolver projectResolver ; public VisualStudioSolutionRegistry ( FileResolver fileResolver , VisualStudioProjectResolver projectResolver , Instantiator instantiator ) { super ( DefaultVisualStudioSolution . class , instantiator ) ; this . fileResolver = fileResolver ; this . projectResolver = projectResolver ; } public void addSolution ( DefaultVisualStudioProject visualStudioProject ) { for ( DefaultVisualStudioSolution solution : this ) { if ( solution . getRootProject ( ) = = visualStudioProject ) { return ; } } DefaultVisualStudioSolution solution = getInstantiator ( ) . newInstance ( DefaultVisualStudioSolution . class , visualStudioProject , fileResolver , projectResolver , getInstantiator ( ) ) ; add ( solution ) ; } } 
