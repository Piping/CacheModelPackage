package org . nd4j . bytebuddy . arrays . assign . relative . novalue . noindex ; import net . bytebuddy . description . method . MethodDescription ; import net . bytebuddy . implementation . Implementation ; import net . bytebuddy . implementation . bytecode . ByteCodeAppender ; import net . bytebuddy . implementation . bytecode . StackManipulation ; import net . bytebuddy . implementation . bytecode . collection . ArrayAccess ; import net . bytebuddy . implementation . bytecode . constant . IntegerConstant ; import net . bytebuddy . jar . asm . MethodVisitor ; import net . bytebuddy . pool . TypePool ; public class ArrayStore implements ByteCodeAppender { private static TypePool typePool = TypePool . Default . ofClassPath ( ) ; @Override public Size apply ( MethodVisitor methodVisitor , Implementation . Context implementationContext , MethodDescription instrumentedMethod ) { StackManipulation store = ArrayAccess . of ( typePool . describe ( <str> ) . resolve ( ) ) . store ( ) ; StackManipulation . Size size = store . apply ( methodVisitor , implementationContext ) ; return new Size ( size . getMaximalSize ( ) , instrumentedMethod . getStackSize ( ) ) ; } } 
