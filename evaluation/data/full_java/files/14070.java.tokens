package org . gradle . api . publication . maven . internal . pom ; import org . apache . maven . model . Exclusion ; import org . gradle . api . internal . artifacts . DefaultExcludeRule ; import org . junit . Before ; import org . junit . Test ; import static junit . framework . Assert . assertEquals ; import static org . junit . Assert . assertNull ; public class DefaultExcludeRuleConverterTest { private static final String TEST_ORG = <str> ; private static final String TEST_MODULE = <str> ; private DefaultExcludeRuleConverter excludeRuleConverter ; @Before public void setUp ( ) { excludeRuleConverter = new DefaultExcludeRuleConverter ( ) ; } @Test public void convertableRule ( ) { DefaultExcludeRule excludeRule = new DefaultExcludeRule ( TEST_ORG , TEST_MODULE ) ; Exclusion mavenExclude = excludeRuleConverter . convert ( excludeRule ) ; assertEquals ( TEST_ORG , mavenExclude . getGroupId ( ) ) ; assertEquals ( TEST_MODULE , mavenExclude . getArtifactId ( ) ) ; } @Test public void unconvertableRules ( ) { checkForNull ( new DefaultExcludeRule ( TEST_ORG , null ) ) ; checkForNull ( new DefaultExcludeRule ( null , TEST_MODULE ) ) ; } private void checkForNull ( DefaultExcludeRule excludeRule ) { assertNull ( excludeRuleConverter . convert ( excludeRule ) ) ; } } 
