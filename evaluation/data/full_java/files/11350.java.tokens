package org . gradle . api . internal . artifacts . dependencies ; import org . gradle . api . artifacts . Dependency ; import org . gradle . api . artifacts . ExternalModuleDependency ; public class DefaultExternalModuleDependency extends AbstractExternalModuleDependency implements ExternalModuleDependency { public DefaultExternalModuleDependency ( String group , String name , String version ) { this ( group , name , version , null ) ; } public DefaultExternalModuleDependency ( String group , String name , String version , String configuration ) { super ( group , name , version , configuration ) ; } public DefaultExternalModuleDependency copy ( ) { DefaultExternalModuleDependency copiedModuleDependency = new DefaultExternalModuleDependency ( getGroup ( ) , getName ( ) , getVersion ( ) , getConfiguration ( ) ) ; copyTo ( copiedModuleDependency ) ; return copiedModuleDependency ; } public boolean contentEquals ( Dependency dependency ) { if ( this = = dependency ) { return true ; } if ( dependency = = null | | getClass ( ) ! = dependency . getClass ( ) ) { return false ; } ExternalModuleDependency that = ( ExternalModuleDependency ) dependency ; return isContentEqualsFor ( that ) ; } @Override public boolean equals ( Object o ) { if ( this = = o ) { return true ; } if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) { return false ; } DefaultExternalModuleDependency that = ( DefaultExternalModuleDependency ) o ; return isContentEqualsFor ( that ) ; } @Override public int hashCode ( ) { return super . hashCode ( ) ; } @Override public String toString ( ) { return String . format ( <str> , getGroup ( ) , getName ( ) , getVersion ( ) , getConfiguration ( ) ) ; } } 
