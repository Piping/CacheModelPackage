package io . netty . channel . socket ; import io . netty . buffer . ByteBuf ; import io . netty . buffer . ByteBufHolder ; import io . netty . channel . DefaultAddressedEnvelope ; import java . net . InetSocketAddress ; public final class DatagramPacket extends DefaultAddressedEnvelope < ByteBuf , InetSocketAddress > implements ByteBufHolder { public DatagramPacket ( ByteBuf data , InetSocketAddress recipient ) { super ( data , recipient ) ; } public DatagramPacket ( ByteBuf data , InetSocketAddress recipient , InetSocketAddress sender ) { super ( data , recipient , sender ) ; } @Override public DatagramPacket copy ( ) { return new DatagramPacket ( content ( ) . copy ( ) , recipient ( ) , sender ( ) ) ; } @Override public DatagramPacket duplicate ( ) { return new DatagramPacket ( content ( ) . duplicate ( ) , recipient ( ) , sender ( ) ) ; } @Override public DatagramPacket retain ( ) { super . retain ( ) ; return this ; } @Override public DatagramPacket retain ( int increment ) { super . retain ( increment ) ; return this ; } @Override public DatagramPacket touch ( ) { super . touch ( ) ; return this ; } @Override public DatagramPacket touch ( Object hint ) { super . touch ( hint ) ; return this ; } } 
