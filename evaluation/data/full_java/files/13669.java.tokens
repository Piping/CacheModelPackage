package org . gradle . language . nativeplatform . internal . incremental ; import org . gradle . language . nativeplatform . internal . SourceIncludes ; import org . gradle . language . nativeplatform . internal . incremental . sourceparser . CSourceParser ; import org . gradle . language . nativeplatform . internal . incremental . sourceparser . DefaultSourceIncludes ; import java . io . File ; public class DefaultSourceIncludesParser implements SourceIncludesParser { private final CSourceParser sourceParser ; private final boolean importAware ; public DefaultSourceIncludesParser ( CSourceParser sourceParser , boolean importAware ) { this . sourceParser = sourceParser ; this . importAware = importAware ; } public SourceIncludes parseIncludes ( File sourceFile ) { SourceIncludes parsedIncludes = sourceParser . parseSource ( sourceFile ) ; if ( importAware ) { return parsedIncludes ; } else { DefaultSourceIncludes includesOnly = new DefaultSourceIncludes ( ) ; includesOnly . addAll ( parsedIncludes . getIncludesOnly ( ) ) ; return includesOnly ; } } } 
