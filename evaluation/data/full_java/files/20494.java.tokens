package io . netty . test . udt . bench . xfer ; import io . netty . test . udt . bench . BenchXfer ; import io . netty . test . udt . util . CaliperRunner ; import io . netty . test . udt . util . TrafficControl ; import java . util . List ; import com . google . caliper . Param ; public class TcpNative extends BenchXfer { @Param private volatile int latency ; protected static List < String > latencyValues ( ) { return BenchXfer . latencyList ( ) ; } @Param private volatile int message ; protected static List < String > messageValues ( ) { return BenchXfer . messageList ( ) ; } @Param private volatile int duration ; protected static List < String > durationValues ( ) { return BenchXfer . durationList ( ) ; } public void timeRun ( final int reps ) throws Exception { log . info ( <str> ) ; TrafficControl . delay ( latency ) ; TrafficControl . delay ( <int> ) ; log . info ( <str> ) ; } public static void main ( final String [ ] args ) throws Exception { CaliperRunner . execute ( TcpNative . class ) ; } } 
