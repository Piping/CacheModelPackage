package org . gradle . api . internal . cache ; import org . gradle . internal . Factory ; import org . gradle . internal . concurrent . Synchronizer ; public class CacheAccessSerializer < K , V > implements Cache < K , V > { final private Synchronizer synchronizer = new Synchronizer ( ) ; final private Cache < K , V > cache ; public CacheAccessSerializer ( Cache < K , V > cache ) { this . cache = cache ; } public V get ( final K key , final Factory < V > factory ) { return synchronizer . synchronize ( new Factory < V > ( ) { public V create ( ) { return cache . get ( key , factory ) ; } } ) ; } } 
