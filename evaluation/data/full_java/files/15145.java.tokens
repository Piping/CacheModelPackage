package org . gradle . play . internal . javascript ; import org . gradle . api . Transformer ; import org . gradle . api . internal . file . RelativeFile ; import java . io . File ; public class JavaScriptCompileDestinationCalculator implements Transformer < File , RelativeFile > { private final File destinationDir ; public JavaScriptCompileDestinationCalculator ( File destinationDir ) { this . destinationDir = destinationDir ; } @Override public File transform ( RelativeFile file ) { final File outputFileDir = new File ( destinationDir , file . getRelativePath ( ) . getParent ( ) . getPathString ( ) ) ; return new File ( outputFileDir , getMinifiedFileName ( file . getFile ( ) . getName ( ) ) ) ; } private static String getMinifiedFileName ( String fileName ) { int extIndex = fileName . lastIndexOf ( <str> ) ; if ( extIndex = = - <int> ) { return fileName + <str> ; } String prefix = fileName . substring ( <int> , extIndex ) ; String extension = fileName . substring ( extIndex ) ; return String . format ( <str> , prefix , extension ) ; } } 
