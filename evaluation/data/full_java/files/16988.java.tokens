package com . badlogic . gdx . backends . gwt . preloader ; public class DefaultAssetFilter implements AssetFilter { private String extension ( String file ) { String name = file ; int dotIndex = name . lastIndexOf ( <str> ) ; if ( dotIndex = = - <int> ) return <str> ; return name . substring ( dotIndex + <int> ) ; } @Override public boolean accept ( String file , boolean isDirectory ) { if ( isDirectory & & file . endsWith ( <str> ) ) return false ; return true ; } @Override public AssetType getType ( String file ) { String extension = extension ( file ) . toLowerCase ( ) ; if ( isImage ( extension ) ) return AssetType . Image ; if ( isAudio ( extension ) ) return AssetType . Audio ; if ( isText ( extension ) ) return AssetType . Text ; return AssetType . Binary ; } private boolean isImage ( String extension ) { return extension . equals ( <str> ) | | extension . equals ( <str> ) | | extension . equals ( <str> ) | | extension . equals ( <str> ) | | extension . equals ( <str> ) ; } private boolean isText ( String extension ) { return extension . equals ( <str> ) | | extension . equals ( <str> ) | | extension . equals ( <str> ) | | extension . equals ( <str> ) | | extension . equals ( <str> ) | | extension . equals ( <str> ) | | extension . equals ( <str> ) | | extension . equals ( <str> ) | | extension . equals ( <str> ) ; } private boolean isAudio ( String extension ) { return extension . equals ( <str> ) | | extension . equals ( <str> ) | | extension . equals ( <str> ) ; } @Override public String getBundleName ( String file ) { return <str> ; } } 
