package org . gradle . logging . internal ; import org . gradle . api . logging . LogLevel ; public class LoggingSystemAdapter implements LoggingSystem { private final LoggingConfigurer configurer ; private LogLevel logLevel = LogLevel . LIFECYCLE ; public LoggingSystemAdapter ( LoggingConfigurer configurer ) { this . configurer = configurer ; } public Snapshot snapshot ( ) { return new SnapshotImpl ( logLevel ) ; } @Override public Snapshot on ( LogLevel minimumLevel , LogLevel defaultLevel ) { SnapshotImpl snapshot = new SnapshotImpl ( this . logLevel ) ; setLevel ( defaultLevel ) ; return snapshot ; } public void restore ( Snapshot state ) { LogLevel oldLevel = ( ( SnapshotImpl ) state ) . level ; this . logLevel = oldLevel ; if ( oldLevel ! = null ) { configurer . configure ( oldLevel ) ; } } private void setLevel ( LogLevel level ) { configurer . configure ( level ) ; this . logLevel = level ; } private class SnapshotImpl implements Snapshot { private final LogLevel level ; public SnapshotImpl ( LogLevel level ) { this . level = level ; } } } 
