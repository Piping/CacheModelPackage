package org . gradle . configuration ; import groovy . lang . Script ; import org . gradle . api . internal . plugins . PluginManagerInternal ; import org . gradle . api . internal . project . ProjectInternal ; import org . gradle . api . internal . project . ProjectScript ; import org . gradle . groovy . scripts . BasicScript ; public class ProjectScriptTarget implements ScriptTarget { private final ProjectInternal target ; public ProjectScriptTarget ( ProjectInternal target ) { this . target = target ; } @Override public PluginManagerInternal getPluginManager ( ) { return target . getPluginManager ( ) ; } @Override public String getId ( ) { return <str> ; } @Override public String getClasspathBlockName ( ) { return <str> ; } @Override public boolean getSupportsPluginsBlock ( ) { return true ; } @Override public boolean getSupportsMethodInheritance ( ) { return true ; } @Override public Class < ? extends BasicScript > getScriptClass ( ) { return ProjectScript . class ; } @Override public void attachScript ( Script script ) { target . setScript ( script ) ; } @Override public void addConfiguration ( Runnable runnable , boolean deferrable ) { if ( deferrable ) { target . addDeferredConfiguration ( runnable ) ; } else { runnable . run ( ) ; } } } 
