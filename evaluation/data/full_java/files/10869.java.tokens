package org . gradle . internal . operations ; import org . gradle . api . Nullable ; import org . gradle . internal . concurrent . ExecutorFactory ; import org . gradle . internal . concurrent . Stoppable ; import org . gradle . internal . concurrent . StoppableExecutor ; public class DefaultBuildOperationProcessor implements BuildOperationProcessor , Stoppable { private final StoppableExecutor fixedSizePool ; public DefaultBuildOperationProcessor ( ExecutorFactory executorFactory , int maxWorkerCount ) { this . fixedSizePool = executorFactory . create ( <str> , maxWorkerCount ) ; } public < T extends BuildOperation > BuildOperationQueue < T > newQueue ( BuildOperationWorker < T > worker , @Nullable String logLocation ) { return new DefaultBuildOperationQueue < T > ( fixedSizePool , worker , logLocation ) ; } public void stop ( ) { fixedSizePool . stop ( ) ; } } 
