package io . netty . handler . codec . http . websocketx ; import io . netty . buffer . ByteBuf ; import io . netty . channel . embedded . EmbeddedChannel ; import org . junit . Assert ; import org . junit . Test ; public class WebSocket00FrameEncoderTest { @Test public void testMultipleWebSocketCloseFrames ( ) { EmbeddedChannel channel = new EmbeddedChannel ( new WebSocket00FrameEncoder ( ) ) ; Assert . assertTrue ( channel . writeOutbound ( new CloseWebSocketFrame ( ) ) ) ; Assert . assertTrue ( channel . writeOutbound ( new CloseWebSocketFrame ( ) ) ) ; Assert . assertTrue ( channel . finish ( ) ) ; assertCloseWebSocketFrame ( channel ) ; assertCloseWebSocketFrame ( channel ) ; Assert . assertNull ( channel . readOutbound ( ) ) ; } private static void assertCloseWebSocketFrame ( EmbeddedChannel channel ) { ByteBuf buf = channel . readOutbound ( ) ; Assert . assertEquals ( <int> , buf . readableBytes ( ) ) ; Assert . assertEquals ( ( byte ) <hex> , buf . readByte ( ) ) ; Assert . assertEquals ( ( byte ) <hex> , buf . readByte ( ) ) ; buf . release ( ) ; } } 
