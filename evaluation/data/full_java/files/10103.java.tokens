package com . google . common . collect . testing . testers ; import static com . google . common . collect . testing . features . CollectionFeature . KNOWN_ORDER ; import static com . google . common . collect . testing . features . CollectionFeature . SUPPORTS_REMOVE ; import static com . google . common . collect . testing . features . CollectionSize . ONE ; import static com . google . common . collect . testing . features . CollectionSize . SEVERAL ; import static com . google . common . collect . testing . features . CollectionSize . ZERO ; import com . google . common . annotations . GwtCompatible ; import com . google . common . collect . testing . features . CollectionFeature ; import com . google . common . collect . testing . features . CollectionSize ; @SuppressWarnings ( <str> ) @GwtCompatible public class QueuePollTester < E > extends AbstractQueueTester < E > { @CollectionFeature.Require ( SUPPORTS_REMOVE ) @CollectionSize.Require ( ZERO ) public void testPoll_empty ( ) { assertNull ( <str> , getQueue ( ) . poll ( ) ) ; expectUnchanged ( ) ; } @CollectionFeature.Require ( SUPPORTS_REMOVE ) @CollectionSize.Require ( ONE ) public void testPoll_size1 ( ) { assertEquals ( <str> , e0 ( ) , getQueue ( ) . poll ( ) ) ; expectMissing ( e0 ( ) ) ; } @CollectionFeature.Require ( { KNOWN_ORDER , SUPPORTS_REMOVE } ) @CollectionSize.Require ( SEVERAL ) public void testPoll_sizeMany ( ) { assertEquals ( <str> , e0 ( ) , getQueue ( ) . poll ( ) ) ; expectMissing ( e0 ( ) ) ; } } 
