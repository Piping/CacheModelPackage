package org . nd4j . linalg . api . ndarray ; import org . nd4j . linalg . api . buffer . DataBuffer ; import org . nd4j . linalg . api . complex . IComplexNDArray ; import org . nd4j . linalg . api . complex . IComplexNumber ; import org . nd4j . linalg . indexing . INDArrayIndex ; import org . nd4j . linalg . indexing . NDArrayIndex ; import org . nd4j . linalg . indexing . ShapeOffsetResolution ; import org . nd4j . linalg . indexing . conditions . Condition ; import java . io . Serializable ; import java . util . List ; public interface INDArray extends Serializable { boolean isView ( ) ; void setWrapAround ( boolean wrapAround ) ; boolean isWrapAround ( ) ; int rank ( ) ; int stride ( int dimension ) ; int elementStride ( ) ; int elementWiseStride ( ) ; boolean isCleanedUp ( ) ; void cleanup ( ) ; void resetLinearView ( ) ; int secondaryStride ( ) ; double getDoubleUnsafe ( int offset ) ; INDArray putScalarUnsafe ( int offset , double value ) ; int majorStride ( ) ; int innerMostStride ( ) ; INDArray linearView ( ) ; INDArray linearViewColumnOrder ( ) ; int vectorsAlongDimension ( int dimension ) ; INDArray vectorAlongDimension ( int index , int dimension ) ; int tensorssAlongDimension ( int . . . dimension ) ; INDArray tensorAlongDimension ( int index , int . . . dimension ) ; INDArray cumsumi ( int dimension ) ; INDArray cumsum ( int dimension ) ; INDArray assign ( INDArray arr ) ; INDArray putScalar ( int i , double value ) ; INDArray putScalar ( int i , float value ) ; INDArray putScalar ( int i , int value ) ; INDArray putScalar ( int [ ] i , double value ) ; INDArray lt ( Number other ) ; INDArray lti ( Number other ) ; INDArray putScalar ( int [ ] indexes , float value ) ; INDArray putScalar ( int [ ] indexes , int value ) ; INDArray eps ( Number other ) ; INDArray epsi ( Number other ) ; INDArray eq ( Number other ) ; INDArray eqi ( Number other ) ; INDArray gt ( Number other ) ; INDArray gti ( Number other ) ; INDArray lt ( INDArray other ) ; INDArray lti ( INDArray other ) ; INDArray eps ( INDArray other ) ; INDArray epsi ( INDArray other ) ; INDArray neq ( Number other ) ; INDArray neqi ( Number other ) ; INDArray neq ( INDArray other ) ; INDArray neqi ( INDArray other ) ; INDArray eq ( INDArray other ) ; INDArray eqi ( INDArray other ) ; INDArray gt ( INDArray other ) ; INDArray gti ( INDArray other ) ; INDArray neg ( ) ; INDArray negi ( ) ; INDArray rdiv ( Number n ) ; INDArray rdivi ( Number n ) ; INDArray rsub ( Number n ) ; INDArray rsubi ( Number n ) ; INDArray div ( Number n ) ; INDArray divi ( Number n ) ; INDArray mul ( Number n ) ; INDArray muli ( Number n ) ; INDArray sub ( Number n ) ; INDArray subi ( Number n ) ; INDArray add ( Number n ) ; INDArray addi ( Number n ) ; INDArray rdiv ( Number n , INDArray result ) ; INDArray rdivi ( Number n , INDArray result ) ; INDArray rsub ( Number n , INDArray result ) ; INDArray rsubi ( Number n , INDArray result ) ; INDArray div ( Number n , INDArray result ) ; INDArray divi ( Number n , INDArray result ) ; INDArray mul ( Number n , INDArray result ) ; INDArray muli ( Number n , INDArray result ) ; INDArray sub ( Number n , INDArray result ) ; INDArray subi ( Number n , INDArray result ) ; INDArray add ( Number n , INDArray result ) ; INDArray addi ( Number n , INDArray result ) ; INDArray get ( INDArrayIndex . . . indexes ) ; INDArray getColumns ( int . . . columns ) ; INDArray getRows ( int . . . rows ) ; INDArray rdiv ( INDArray other ) ; INDArray rdivi ( INDArray other ) ; INDArray rdiv ( INDArray other , INDArray result ) ; INDArray rdivi ( INDArray other , INDArray result ) ; INDArray rsub ( INDArray other , INDArray result ) ; INDArray rsub ( INDArray other ) ; INDArray rsubi ( INDArray other ) ; INDArray rsubi ( INDArray other , INDArray result ) ; INDArray assign ( Number value ) ; int linearIndex ( int i ) ; void checkDimensions ( INDArray other ) ; void sliceVectors ( List < INDArray > list ) ; INDArray putSlice ( int slice , INDArray put ) ; INDArray cond ( Condition condition ) ; INDArray condi ( Condition condition ) ; INDArray repmat ( int . . . shape ) ; INDArray repeat ( int dimension , int . . . repeats ) ; INDArray repeat ( int . . . repeats ) ; INDArray putRow ( int row , INDArray toPut ) ; INDArray putColumn ( int column , INDArray toPut ) ; INDArray getScalar ( int row , int column ) ; INDArray getScalar ( int i ) ; int index ( int row , int column ) ; double squaredDistance ( INDArray other ) ; double distance2 ( INDArray other ) ; double distance1 ( INDArray other ) ; INDArray put ( INDArrayIndex [ ] indices , INDArray element ) ; INDArray put ( INDArrayIndex [ ] indices , Number element ) ; INDArray put ( int [ ] indices , INDArray element ) ; INDArray put ( int i , int j , INDArray element ) ; INDArray put ( int i , int j , Number element ) ; INDArray put ( int i , INDArray element ) ; INDArray diviColumnVector ( INDArray columnVector ) ; INDArray divColumnVector ( INDArray columnVector ) ; INDArray diviRowVector ( INDArray rowVector ) ; INDArray divRowVector ( INDArray rowVector ) ; INDArray rdiviColumnVector ( INDArray columnVector ) ; INDArray rdivColumnVector ( INDArray columnVector ) ; INDArray rdiviRowVector ( INDArray rowVector ) ; INDArray rdivRowVector ( INDArray rowVector ) ; INDArray muliColumnVector ( INDArray columnVector ) ; INDArray mulColumnVector ( INDArray columnVector ) ; INDArray muliRowVector ( INDArray rowVector ) ; INDArray mulRowVector ( INDArray rowVector ) ; INDArray rsubiColumnVector ( INDArray columnVector ) ; INDArray rsubColumnVector ( INDArray columnVector ) ; INDArray rsubiRowVector ( INDArray rowVector ) ; INDArray rsubRowVector ( INDArray rowVector ) ; INDArray subiColumnVector ( INDArray columnVector ) ; INDArray subColumnVector ( INDArray columnVector ) ; INDArray subiRowVector ( INDArray rowVector ) ; INDArray subRowVector ( INDArray rowVector ) ; INDArray addiColumnVector ( INDArray columnVector ) ; INDArray addColumnVector ( INDArray columnVector ) ; INDArray addiRowVector ( INDArray rowVector ) ; INDArray addRowVector ( INDArray rowVector ) ; INDArray mmul ( INDArray other ) ; INDArray mmul ( INDArray other , INDArray result ) ; INDArray div ( INDArray other ) ; INDArray div ( INDArray other , INDArray result ) ; INDArray mul ( INDArray other ) ; INDArray mul ( INDArray other , INDArray result ) ; INDArray sub ( INDArray other ) ; INDArray sub ( INDArray other , INDArray result ) ; INDArray add ( INDArray other ) ; INDArray add ( INDArray other , INDArray result ) ; INDArray mmuli ( INDArray other ) ; INDArray mmuli ( INDArray other , INDArray result ) ; INDArray divi ( INDArray other ) ; INDArray divi ( INDArray other , INDArray result ) ; INDArray muli ( INDArray other ) ; INDArray muli ( INDArray other , INDArray result ) ; INDArray subi ( INDArray other ) ; INDArray subi ( INDArray other , INDArray result ) ; INDArray addi ( INDArray other ) ; INDArray addi ( INDArray other , INDArray result ) ; INDArray normmax ( int . . . dimension ) ; Number normmaxNumber ( ) ; IComplexNumber normmaxComplex ( ) ; INDArray norm2 ( int . . . dimension ) ; Number norm2Number ( ) ; IComplexNumber norm2Complex ( ) ; INDArray norm1 ( int . . . dimension ) ; Number norm1Number ( ) ; IComplexNumber norm1Complex ( ) ; INDArray std ( int . . . dimension ) ; Number stdNumber ( ) ; IComplexNumber stdComplex ( ) ; INDArray prod ( int . . . dimension ) ; Number prodNumber ( ) ; IComplexNumber prodComplex ( ) ; INDArray mean ( int . . . dimension ) ; Number meanNumber ( ) ; IComplexNumber meanComplex ( ) ; INDArray var ( int . . . dimension ) ; Number varNumber ( ) ; IComplexNumber varComplex ( ) ; INDArray max ( int . . . dimension ) ; Number maxNumber ( ) ; IComplexNumber maxComplex ( ) ; INDArray min ( int . . . dimension ) ; Number minNumber ( ) ; IComplexNumber minComplex ( ) ; INDArray sum ( int . . . dimension ) ; Number sumNumber ( ) ; IComplexNumber sumComplex ( ) ; void setStride ( int . . . stride ) ; void setShape ( int . . . shape ) ; void setOrder ( char order ) ; INDArray subArray ( ShapeOffsetResolution resolution ) ; INDArray subArray ( int [ ] offsets , int [ ] shape , int [ ] stride ) ; INDArray getScalar ( int [ ] indices ) ; int getInt ( int . . . indices ) ; double getDouble ( int . . . indices ) ; float getFloat ( int [ ] indices ) ; double getDouble ( int i ) ; double getDouble ( int i , int j ) ; float getFloat ( int i ) ; float getFloat ( int i , int j ) ; INDArray dup ( ) ; INDArray dup ( char order ) ; INDArray ravel ( ) ; INDArray ravel ( char order ) ; void setData ( DataBuffer data ) ; int slices ( ) ; int getTrailingOnes ( ) ; int getLeadingOnes ( ) ; INDArray slice ( int i , int dimension ) ; INDArray slice ( int i ) ; int offset ( ) ; INDArray reshape ( char order , int . . . newShape ) ; INDArray reshape ( char order , int rows , int columns ) ; INDArray reshape ( int . . . newShape ) ; INDArray reshape ( int rows , int columns ) ; INDArray transpose ( ) ; INDArray transposei ( ) ; INDArray swapAxes ( int dimension , int with ) ; INDArray permute ( int . . . rearrange ) ; INDArray dimShuffle ( Object [ ] rearrange , int [ ] newOrder , boolean [ ] broadCastable ) ; INDArray getColumn ( int i ) ; INDArray getRow ( int i ) ; int columns ( ) ; int rows ( ) ; boolean isColumnVector ( ) ; boolean isRowVector ( ) ; boolean isVector ( ) ; boolean isSquare ( ) ; boolean isMatrix ( ) ; boolean isScalar ( ) ; int [ ] shape ( ) ; int [ ] stride ( ) ; char ordering ( ) ; int size ( int dimension ) ; int length ( ) ; INDArray broadcast ( int . . . shape ) ; Object element ( ) ; DataBuffer data ( ) ; IComplexNDArray rdiv ( IComplexNumber n ) ; IComplexNDArray rdivi ( IComplexNumber n ) ; IComplexNDArray rsub ( IComplexNumber n ) ; IComplexNDArray rsubi ( IComplexNumber n ) ; IComplexNDArray div ( IComplexNumber n ) ; IComplexNDArray divi ( IComplexNumber n ) ; IComplexNDArray mul ( IComplexNumber n ) ; IComplexNDArray muli ( IComplexNumber n ) ; IComplexNDArray sub ( IComplexNumber n ) ; IComplexNDArray subi ( IComplexNumber n ) ; IComplexNDArray add ( IComplexNumber n ) ; IComplexNDArray addi ( IComplexNumber n ) ; IComplexNDArray rdiv ( IComplexNumber n , IComplexNDArray result ) ; IComplexNDArray rdivi ( IComplexNumber n , IComplexNDArray result ) ; IComplexNDArray rsub ( IComplexNumber n , IComplexNDArray result ) ; IComplexNDArray rsubi ( IComplexNumber n , IComplexNDArray result ) ; IComplexNDArray div ( IComplexNumber n , IComplexNDArray result ) ; IComplexNDArray divi ( IComplexNumber n , IComplexNDArray result ) ; IComplexNDArray mul ( IComplexNumber n , IComplexNDArray result ) ; IComplexNDArray muli ( IComplexNumber n , IComplexNDArray result ) ; IComplexNDArray sub ( IComplexNumber n , IComplexNDArray result ) ; IComplexNDArray subi ( IComplexNumber n , IComplexNDArray result ) ; IComplexNDArray add ( IComplexNumber n , IComplexNDArray result ) ; IComplexNDArray addi ( IComplexNumber n , IComplexNDArray result ) ; } 
