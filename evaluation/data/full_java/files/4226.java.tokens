package org . eclipse . debug . internal . ui . launchConfigurations ; import org . eclipse . debug . core . ILaunchConfiguration ; import org . eclipse . debug . core . ILaunchConfigurationType ; import org . eclipse . debug . internal . ui . DebugUIPlugin ; import org . eclipse . debug . internal . ui . IInternalDebugUIConstants ; import org . eclipse . jface . preference . IPreferenceStore ; import org . eclipse . jface . viewers . Viewer ; import org . eclipse . jface . viewers . ViewerFilter ; public class LaunchConfigurationTypeFilter extends ViewerFilter { public LaunchConfigurationTypeFilter ( ) { super ( ) ; } @Override public boolean select ( Viewer viewer , Object parentElement , Object element ) { if ( element instanceof ILaunchConfiguration ) { return true ; } if ( element instanceof ILaunchConfigurationType ) { IPreferenceStore store = DebugUIPlugin . getDefault ( ) . getPreferenceStore ( ) ; String [ ] types = store . getString ( IInternalDebugUIConstants . PREF_FILTER_TYPE_LIST ) . split ( <str> ) ; for ( int i = <int> ; i < types . length ; i + + ) { if ( types [ i ] . equals ( ( ( ILaunchConfigurationType ) element ) . getIdentifier ( ) ) ) { return false ; } } return true ; } return false ; } } 
