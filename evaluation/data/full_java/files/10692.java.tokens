package org . gradle . build . docs . dsl . docbook ; import org . gradle . build . docs . dsl . docbook . model . ClassDoc ; import org . w3c . dom . Document ; import org . w3c . dom . Element ; import org . w3c . dom . Node ; import org . w3c . dom . NodeList ; public class ClassDescriptionRenderer { private final ElementWarningsRenderer warningsRenderer = new ElementWarningsRenderer ( ) ; public void renderTo ( ClassDoc classDoc , Element parent ) { Document document = parent . getOwnerDocument ( ) ; Element title = document . createElement ( <str> ) ; parent . appendChild ( title ) ; title . appendChild ( document . createTextNode ( classDoc . getSimpleName ( ) ) ) ; addApiDocumentationLink ( classDoc , parent , document ) ; addSubtypeLinks ( classDoc , parent , document ) ; warningsRenderer . renderTo ( classDoc , <str> , parent ) ; for ( Element element : classDoc . getComment ( ) ) { parent . appendChild ( document . importNode ( element , true ) ) ; } NodeList otherContent = classDoc . getClassSection ( ) . getChildNodes ( ) ; for ( int i = <int> ; i < otherContent . getLength ( ) ; i + + ) { Node child = otherContent . item ( i ) ; if ( child instanceof Element & & ! ( ( Element ) child ) . getTagName ( ) . equals ( <str> ) ) { parent . appendChild ( document . importNode ( child , true ) ) ; } } } private void addApiDocumentationLink ( ClassDoc classDoc , Element parent , Document document ) { Element list = document . createElement ( <str> ) ; parent . appendChild ( list ) ; Element segtitle = document . createElement ( <str> ) ; list . appendChild ( segtitle ) ; segtitle . appendChild ( document . createTextNode ( <str> ) ) ; Element listItem = document . createElement ( <str> ) ; list . appendChild ( listItem ) ; Element seg = document . createElement ( <str> ) ; listItem . appendChild ( seg ) ; Element apilink = document . createElement ( <str> ) ; seg . appendChild ( apilink ) ; apilink . setAttribute ( <str> , classDoc . getName ( ) ) ; apilink . setAttribute ( <str> , classDoc . getStyle ( ) ) ; } private void addSubtypeLinks ( ClassDoc classDoc , Element parent , Document document ) { if ( ! classDoc . getSubClasses ( ) . isEmpty ( ) ) { Element list = document . createElement ( <str> ) ; parent . appendChild ( list ) ; Element segtitle = document . createElement ( <str> ) ; list . appendChild ( segtitle ) ; segtitle . appendChild ( document . createTextNode ( <str> ) ) ; Element listItem = document . createElement ( <str> ) ; list . appendChild ( listItem ) ; Element seg = document . createElement ( <str> ) ; listItem . appendChild ( seg ) ; Element simplelist = document . createElement ( <str> ) ; int columns = <int> ; if ( classDoc . getSubClasses ( ) . size ( ) < = <int> ) { columns = <int> ; } simplelist . setAttribute ( <str> , String . valueOf ( columns ) ) ; simplelist . setAttribute ( <str> , <str> ) ; for ( ClassDoc subClass : classDoc . getSubClasses ( ) ) { Element member = document . createElement ( <str> ) ; Element apilink = document . createElement ( <str> ) ; apilink . setAttribute ( <str> , subClass . getName ( ) ) ; member . appendChild ( apilink ) ; simplelist . appendChild ( member ) ; } seg . appendChild ( simplelist ) ; } } } 
