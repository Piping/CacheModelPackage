package org . elasticsearch . common . cli ; import java . nio . file . NoSuchFileException ; import java . util . List ; import static org . hamcrest . Matchers . hasItem ; import static org . hamcrest . Matchers . hasSize ; import static org . hamcrest . Matchers . is ; public class TerminalTests extends CliToolTestCase { public void testVerbosity ( ) throws Exception { CaptureOutputTerminal terminal = new CaptureOutputTerminal ( Terminal . Verbosity . SILENT ) ; assertPrinted ( terminal , Terminal . Verbosity . SILENT , <str> ) ; assertNotPrinted ( terminal , Terminal . Verbosity . NORMAL , <str> ) ; assertNotPrinted ( terminal , Terminal . Verbosity . VERBOSE , <str> ) ; terminal = new CaptureOutputTerminal ( Terminal . Verbosity . NORMAL ) ; assertPrinted ( terminal , Terminal . Verbosity . SILENT , <str> ) ; assertPrinted ( terminal , Terminal . Verbosity . NORMAL , <str> ) ; assertNotPrinted ( terminal , Terminal . Verbosity . VERBOSE , <str> ) ; terminal = new CaptureOutputTerminal ( Terminal . Verbosity . VERBOSE ) ; assertPrinted ( terminal , Terminal . Verbosity . SILENT , <str> ) ; assertPrinted ( terminal , Terminal . Verbosity . NORMAL , <str> ) ; assertPrinted ( terminal , Terminal . Verbosity . VERBOSE , <str> ) ; } public void testError ( ) throws Exception { try { throw new NoSuchFileException ( <str> ) ; } catch ( NoSuchFileException e ) { CaptureOutputTerminal terminal = new CaptureOutputTerminal ( Terminal . Verbosity . NORMAL ) ; terminal . printError ( e ) ; List < String > output = terminal . getTerminalOutput ( ) ; assertFalse ( output . isEmpty ( ) ) ; assertTrue ( output . get ( <int> ) , output . get ( <int> ) . contains ( <str> ) ) ; assertTrue ( output . get ( <int> ) , output . get ( <int> ) . contains ( <str> ) ) ; assertEquals ( <int> , output . size ( ) ) ; } } private void assertPrinted ( CaptureOutputTerminal logTerminal , Terminal . Verbosity verbosity , String text ) { logTerminal . print ( verbosity , text ) ; assertThat ( logTerminal . getTerminalOutput ( ) , hasSize ( <int> ) ) ; assertThat ( logTerminal . getTerminalOutput ( ) , hasItem ( text ) ) ; logTerminal . terminalOutput . clear ( ) ; } private void assertNotPrinted ( CaptureOutputTerminal logTerminal , Terminal . Verbosity verbosity , String text ) { logTerminal . print ( verbosity , text ) ; assertThat ( logTerminal . getTerminalOutput ( ) , hasSize ( <int> ) ) ; } } 
