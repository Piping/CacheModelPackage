package org . elasticsearch . common ; import java . io . IOException ; import java . util . Random ; class RandomBasedUUIDGenerator implements UUIDGenerator { @Override public String getBase64UUID ( ) { return getBase64UUID ( SecureRandomHolder . INSTANCE ) ; } public String getBase64UUID ( Random random ) { final byte [ ] randomBytes = new byte [ <int> ] ; random . nextBytes ( randomBytes ) ; randomBytes [ <int> ] & = <hex> ; randomBytes [ <int> ] | = <hex> ; randomBytes [ <int> ] & = <hex> ; randomBytes [ <int> ] | = <hex> ; try { byte [ ] encoded = Base64 . encodeBytesToBytes ( randomBytes , <int> , randomBytes . length , Base64 . URL_SAFE ) ; assert encoded [ encoded . length - <int> ] = = <str> ; assert encoded [ encoded . length - <int> ] = = <str> ; return new String ( encoded , <int> , encoded . length - <int> , Base64 . PREFERRED_ENCODING ) ; } catch ( IOException e ) { throw new IllegalStateException ( <str> ) ; } } } 
