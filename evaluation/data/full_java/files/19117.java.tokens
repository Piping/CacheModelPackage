package io . netty . handler . codec . http ; import io . netty . buffer . ByteBuf ; import io . netty . buffer . Unpooled ; import io . netty . handler . codec . DecoderResult ; public interface LastHttpContent extends HttpContent { LastHttpContent EMPTY_LAST_CONTENT = new LastHttpContent ( ) { @Override public ByteBuf content ( ) { return Unpooled . EMPTY_BUFFER ; } @Override public LastHttpContent copy ( ) { return EMPTY_LAST_CONTENT ; } @Override public LastHttpContent duplicate ( ) { return this ; } @Override public HttpHeaders trailingHeaders ( ) { return EmptyHttpHeaders . INSTANCE ; } @Override public DecoderResult decoderResult ( ) { return DecoderResult . SUCCESS ; } @Override @Deprecated public DecoderResult getDecoderResult ( ) { return decoderResult ( ) ; } @Override public void setDecoderResult ( DecoderResult result ) { throw new UnsupportedOperationException ( <str> ) ; } @Override public int refCnt ( ) { return <int> ; } @Override public LastHttpContent retain ( ) { return this ; } @Override public LastHttpContent retain ( int increment ) { return this ; } @Override public LastHttpContent touch ( ) { return this ; } @Override public LastHttpContent touch ( Object hint ) { return this ; } @Override public boolean release ( ) { return false ; } @Override public boolean release ( int decrement ) { return false ; } @Override public String toString ( ) { return <str> ; } } ; HttpHeaders trailingHeaders ( ) ; @Override LastHttpContent copy ( ) ; @Override LastHttpContent retain ( int increment ) ; @Override LastHttpContent retain ( ) ; @Override LastHttpContent touch ( ) ; @Override LastHttpContent touch ( Object hint ) ; @Override LastHttpContent duplicate ( ) ; } 
