package org . gradle . api . internal . artifacts . result ; import org . gradle . api . artifacts . component . ComponentSelector ; import org . gradle . api . artifacts . result . ComponentSelectionReason ; import org . gradle . api . artifacts . result . ResolvedComponentResult ; import org . gradle . api . artifacts . result . UnresolvedDependencyResult ; import org . gradle . internal . resolve . ModuleVersionResolveException ; public class DefaultUnresolvedDependencyResult extends AbstractDependencyResult implements UnresolvedDependencyResult { private final ComponentSelectionReason reason ; private final ModuleVersionResolveException failure ; public DefaultUnresolvedDependencyResult ( ComponentSelector requested , ComponentSelectionReason reason , ResolvedComponentResult from , ModuleVersionResolveException failure ) { super ( requested , from ) ; this . reason = reason ; this . failure = failure ; } public ModuleVersionResolveException getFailure ( ) { return failure ; } public ComponentSelector getAttempted ( ) { return failure . getSelector ( ) ; } public ComponentSelectionReason getAttemptedReason ( ) { return reason ; } @Override public String toString ( ) { return String . format ( <str> , getRequested ( ) , getAttempted ( ) , failure . getMessage ( ) ) ; } } 
