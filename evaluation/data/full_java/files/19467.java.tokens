package io . netty . handler . codec . mqtt ; public enum MqttMessageType { CONNECT ( <int> ) , CONNACK ( <int> ) , PUBLISH ( <int> ) , PUBACK ( <int> ) , PUBREC ( <int> ) , PUBREL ( <int> ) , PUBCOMP ( <int> ) , SUBSCRIBE ( <int> ) , SUBACK ( <int> ) , UNSUBSCRIBE ( <int> ) , UNSUBACK ( <int> ) , PINGREQ ( <int> ) , PINGRESP ( <int> ) , DISCONNECT ( <int> ) ; private final int value ; MqttMessageType ( int value ) { this . value = value ; } public int value ( ) { return value ; } public static MqttMessageType valueOf ( int type ) { for ( MqttMessageType t : values ( ) ) { if ( t . value = = type ) { return t ; } } throw new IllegalArgumentException ( <str> + type ) ; } } 
