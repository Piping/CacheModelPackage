package org . gradle . api . internal . tasks . compile . incremental . deps ; import org . gradle . api . internal . cache . Loader ; import org . gradle . api . internal . cache . SingleOperationPersistentStore ; import org . gradle . api . internal . cache . Stash ; import org . gradle . cache . CacheRepository ; public class LocalClassSetAnalysisStore implements Loader < ClassSetAnalysisData > , Stash < ClassSetAnalysisData > { private SingleOperationPersistentStore < ClassSetAnalysisData > store ; public LocalClassSetAnalysisStore ( CacheRepository cacheRepository , Object scope ) { this . store = new SingleOperationPersistentStore < ClassSetAnalysisData > ( cacheRepository , scope , <str> , new ClassSetAnalysisData . Serializer ( ) ) ; } public void put ( ClassSetAnalysisData analysis ) { store . putAndClose ( analysis ) ; } public ClassSetAnalysisData get ( ) { return store . getAndClose ( ) ; } } 
