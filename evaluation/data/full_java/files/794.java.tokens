package org . apache . cassandra . metrics ; import com . codahale . metrics . Gauge ; import com . codahale . metrics . Timer ; import org . apache . cassandra . db . commitlog . AbstractCommitLogService ; import org . apache . cassandra . db . commitlog . CommitLogSegmentManager ; import static org . apache . cassandra . metrics . CassandraMetricsRegistry . Metrics ; public class CommitLogMetrics { public static final MetricNameFactory factory = new DefaultNameFactory ( <str> ) ; public Gauge < Long > completedTasks ; public Gauge < Long > pendingTasks ; public Gauge < Long > totalCommitLogSize ; public final Timer waitingOnSegmentAllocation ; public final Timer waitingOnCommit ; public CommitLogMetrics ( ) { waitingOnSegmentAllocation = Metrics . timer ( factory . createMetricName ( <str> ) ) ; waitingOnCommit = Metrics . timer ( factory . createMetricName ( <str> ) ) ; } public void attach ( final AbstractCommitLogService service , final CommitLogSegmentManager allocator ) { completedTasks = Metrics . register ( factory . createMetricName ( <str> ) , new Gauge < Long > ( ) { public Long getValue ( ) { return service . getCompletedTasks ( ) ; } } ) ; pendingTasks = Metrics . register ( factory . createMetricName ( <str> ) , new Gauge < Long > ( ) { public Long getValue ( ) { return service . getPendingTasks ( ) ; } } ) ; totalCommitLogSize = Metrics . register ( factory . createMetricName ( <str> ) , new Gauge < Long > ( ) { public Long getValue ( ) { return allocator . onDiskSize ( ) ; } } ) ; } } 
