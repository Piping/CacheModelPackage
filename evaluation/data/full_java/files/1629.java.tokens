package org . apache . cassandra . streaming ; import java . net . InetAddress ; import java . util . ArrayList ; import java . util . Collection ; import java . util . Collections ; import java . util . UUID ; import org . junit . Test ; import org . apache . cassandra . utils . FBUtilities ; public class SessionInfoTest { @Test public void testTotals ( ) { UUID cfId = UUID . randomUUID ( ) ; InetAddress local = FBUtilities . getLocalAddress ( ) ; Collection < StreamSummary > summaries = new ArrayList < > ( ) ; for ( int i = <int> ; i < <int> ; i + + ) { StreamSummary summary = new StreamSummary ( cfId , i , ( i + <int> ) * <int> ) ; summaries . add ( summary ) ; } StreamSummary sending = new StreamSummary ( cfId , <int> , <int> ) ; SessionInfo info = new SessionInfo ( local , <int> , local , summaries , Collections . singleton ( sending ) , StreamSession . State . PREPARING ) ; assert info . getTotalFilesToReceive ( ) = = <int> ; assert info . getTotalFilesToSend ( ) = = <int> ; assert info . getTotalSizeToReceive ( ) = = <int> ; assert info . getTotalSizeToSend ( ) = = <int> ; assert info . getTotalFilesReceived ( ) = = <int> ; assert info . getTotalFilesSent ( ) = = <int> ; info . updateProgress ( new ProgressInfo ( local , <int> , <str> , ProgressInfo . Direction . IN , <int> , <int> ) ) ; assert info . getTotalSizeReceived ( ) = = <int> ; assert info . getTotalSizeSent ( ) = = <int> ; assert info . getTotalFilesReceived ( ) = = <int> ; assert info . getTotalFilesSent ( ) = = <int> ; info . updateProgress ( new ProgressInfo ( local , <int> , <str> , ProgressInfo . Direction . IN , <int> , <int> ) ) ; assert info . getTotalSizeReceived ( ) = = <int> ; assert info . getTotalSizeSent ( ) = = <int> ; assert info . getTotalFilesReceived ( ) = = <int> ; assert info . getTotalFilesSent ( ) = = <int> ; } } 
