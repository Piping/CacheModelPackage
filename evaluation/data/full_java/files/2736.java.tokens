package jcuda . runtime ; public class cudaTextureDesc { public int addressMode [ ] = new int [ <int> ] ; public int filterMode ; public int readMode ; public int sRGB ; public int normalizedCoords ; public int maxAnisotropy ; public int mipmapFilterMode ; public float mipmapLevelBias ; public float minMipmapLevelClamp ; public float maxMipmapLevelClamp ; public cudaTextureDesc ( ) { } @Override public String toString ( ) { return <str> + createString ( <str> ) + <str> ; } public String toFormattedString ( ) { return <str> + createString ( <str> ) ; } private String createString ( String f ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( <str> + cudaTextureAddressMode . stringFor ( addressMode [ <int> ] ) + <str> + cudaTextureAddressMode . stringFor ( addressMode [ <int> ] ) + <str> + cudaTextureAddressMode . stringFor ( addressMode [ <int> ] ) + <str> + f ) ; sb . append ( <str> + cudaTextureFilterMode . stringFor ( filterMode ) + f ) ; sb . append ( <str> + cudaTextureReadMode . stringFor ( readMode ) + f ) ; sb . append ( <str> + sRGB + f ) ; sb . append ( <str> + normalizedCoords + f ) ; sb . append ( <str> + maxAnisotropy + f ) ; sb . append ( <str> + cudaTextureFilterMode . stringFor ( mipmapFilterMode ) + f ) ; sb . append ( <str> + mipmapLevelBias + f ) ; sb . append ( <str> + minMipmapLevelClamp + f ) ; sb . append ( <str> + maxMipmapLevelClamp + f ) ; return sb . toString ( ) ; } } 
