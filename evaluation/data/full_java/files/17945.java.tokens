package com . badlogic . gdx . graphics ; import java . nio . Buffer ; import java . nio . FloatBuffer ; import java . nio . IntBuffer ; public interface GL20 { public static final int GL_ES_VERSION_2_0 = <int> ; public static final int GL_DEPTH_BUFFER_BIT = <hex> ; public static final int GL_STENCIL_BUFFER_BIT = <hex> ; public static final int GL_COLOR_BUFFER_BIT = <hex> ; public static final int GL_FALSE = <int> ; public static final int GL_TRUE = <int> ; public static final int GL_POINTS = <hex> ; public static final int GL_LINES = <hex> ; public static final int GL_LINE_LOOP = <hex> ; public static final int GL_LINE_STRIP = <hex> ; public static final int GL_TRIANGLES = <hex> ; public static final int GL_TRIANGLE_STRIP = <hex> ; public static final int GL_TRIANGLE_FAN = <hex> ; public static final int GL_ZERO = <int> ; public static final int GL_ONE = <int> ; public static final int GL_SRC_COLOR = <hex> ; public static final int GL_ONE_MINUS_SRC_COLOR = <hex> ; public static final int GL_SRC_ALPHA = <hex> ; public static final int GL_ONE_MINUS_SRC_ALPHA = <hex> ; public static final int GL_DST_ALPHA = <hex> ; public static final int GL_ONE_MINUS_DST_ALPHA = <hex> ; public static final int GL_DST_COLOR = <hex> ; public static final int GL_ONE_MINUS_DST_COLOR = <hex> ; public static final int GL_SRC_ALPHA_SATURATE = <hex> ; public static final int GL_FUNC_ADD = <hex> ; public static final int GL_BLEND_EQUATION = <hex> ; public static final int GL_BLEND_EQUATION_RGB = <hex> ; public static final int GL_BLEND_EQUATION_ALPHA = <hex> ; public static final int GL_FUNC_SUBTRACT = <hex> ; public static final int GL_FUNC_REVERSE_SUBTRACT = <hex> ; public static final int GL_BLEND_DST_RGB = <hex> ; public static final int GL_BLEND_SRC_RGB = <hex> ; public static final int GL_BLEND_DST_ALPHA = <hex> ; public static final int GL_BLEND_SRC_ALPHA = <hex> ; public static final int GL_CONSTANT_COLOR = <hex> ; public static final int GL_ONE_MINUS_CONSTANT_COLOR = <hex> ; public static final int GL_CONSTANT_ALPHA = <hex> ; public static final int GL_ONE_MINUS_CONSTANT_ALPHA = <hex> ; public static final int GL_BLEND_COLOR = <hex> ; public static final int GL_ARRAY_BUFFER = <hex> ; public static final int GL_ELEMENT_ARRAY_BUFFER = <hex> ; public static final int GL_ARRAY_BUFFER_BINDING = <hex> ; public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING = <hex> ; public static final int GL_STREAM_DRAW = <hex> ; public static final int GL_STATIC_DRAW = <hex> ; public static final int GL_DYNAMIC_DRAW = <hex> ; public static final int GL_BUFFER_SIZE = <hex> ; public static final int GL_BUFFER_USAGE = <hex> ; public static final int GL_CURRENT_VERTEX_ATTRIB = <hex> ; public static final int GL_FRONT = <hex> ; public static final int GL_BACK = <hex> ; public static final int GL_FRONT_AND_BACK = <hex> ; public static final int GL_TEXTURE_2D = <hex> ; public static final int GL_CULL_FACE = <hex> ; public static final int GL_BLEND = <hex> ; public static final int GL_DITHER = <hex> ; public static final int GL_STENCIL_TEST = <hex> ; public static final int GL_DEPTH_TEST = <hex> ; public static final int GL_SCISSOR_TEST = <hex> ; public static final int GL_POLYGON_OFFSET_FILL = <hex> ; public static final int GL_SAMPLE_ALPHA_TO_COVERAGE = <hex> ; public static final int GL_SAMPLE_COVERAGE = <hex> ; public static final int GL_NO_ERROR = <int> ; public static final int GL_INVALID_ENUM = <hex> ; public static final int GL_INVALID_VALUE = <hex> ; public static final int GL_INVALID_OPERATION = <hex> ; public static final int GL_OUT_OF_MEMORY = <hex> ; public static final int GL_CW = <hex> ; public static final int GL_CCW = <hex> ; public static final int GL_LINE_WIDTH = <hex> ; public static final int GL_ALIASED_POINT_SIZE_RANGE = <hex> ; public static final int GL_ALIASED_LINE_WIDTH_RANGE = <hex> ; public static final int GL_CULL_FACE_MODE = <hex> ; public static final int GL_FRONT_FACE = <hex> ; public static final int GL_DEPTH_RANGE = <hex> ; public static final int GL_DEPTH_WRITEMASK = <hex> ; public static final int GL_DEPTH_CLEAR_VALUE = <hex> ; public static final int GL_DEPTH_FUNC = <hex> ; public static final int GL_STENCIL_CLEAR_VALUE = <hex> ; public static final int GL_STENCIL_FUNC = <hex> ; public static final int GL_STENCIL_FAIL = <hex> ; public static final int GL_STENCIL_PASS_DEPTH_FAIL = <hex> ; public static final int GL_STENCIL_PASS_DEPTH_PASS = <hex> ; public static final int GL_STENCIL_REF = <hex> ; public static final int GL_STENCIL_VALUE_MASK = <hex> ; public static final int GL_STENCIL_WRITEMASK = <hex> ; public static final int GL_STENCIL_BACK_FUNC = <hex> ; public static final int GL_STENCIL_BACK_FAIL = <hex> ; public static final int GL_STENCIL_BACK_PASS_DEPTH_FAIL = <hex> ; public static final int GL_STENCIL_BACK_PASS_DEPTH_PASS = <hex> ; public static final int GL_STENCIL_BACK_REF = <hex> ; public static final int GL_STENCIL_BACK_VALUE_MASK = <hex> ; public static final int GL_STENCIL_BACK_WRITEMASK = <hex> ; public static final int GL_VIEWPORT = <hex> ; public static final int GL_SCISSOR_BOX = <hex> ; public static final int GL_COLOR_CLEAR_VALUE = <hex> ; public static final int GL_COLOR_WRITEMASK = <hex> ; public static final int GL_UNPACK_ALIGNMENT = <hex> ; public static final int GL_PACK_ALIGNMENT = <hex> ; public static final int GL_MAX_TEXTURE_SIZE = <hex> ; public static final int GL_MAX_TEXTURE_UNITS = <hex> ; public static final int GL_MAX_VIEWPORT_DIMS = <hex> ; public static final int GL_SUBPIXEL_BITS = <hex> ; public static final int GL_RED_BITS = <hex> ; public static final int GL_GREEN_BITS = <hex> ; public static final int GL_BLUE_BITS = <hex> ; public static final int GL_ALPHA_BITS = <hex> ; public static final int GL_DEPTH_BITS = <hex> ; public static final int GL_STENCIL_BITS = <hex> ; public static final int GL_POLYGON_OFFSET_UNITS = <hex> ; public static final int GL_POLYGON_OFFSET_FACTOR = <hex> ; public static final int GL_TEXTURE_BINDING_2D = <hex> ; public static final int GL_SAMPLE_BUFFERS = <hex> ; public static final int GL_SAMPLES = <hex> ; public static final int GL_SAMPLE_COVERAGE_VALUE = <hex> ; public static final int GL_SAMPLE_COVERAGE_INVERT = <hex> ; public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS = <hex> ; public static final int GL_COMPRESSED_TEXTURE_FORMATS = <hex> ; public static final int GL_DONT_CARE = <hex> ; public static final int GL_FASTEST = <hex> ; public static final int GL_NICEST = <hex> ; public static final int GL_GENERATE_MIPMAP = <hex> ; public static final int GL_GENERATE_MIPMAP_HINT = <hex> ; public static final int GL_BYTE = <hex> ; public static final int GL_UNSIGNED_BYTE = <hex> ; public static final int GL_SHORT = <hex> ; public static final int GL_UNSIGNED_SHORT = <hex> ; public static final int GL_INT = <hex> ; public static final int GL_UNSIGNED_INT = <hex> ; public static final int GL_FLOAT = <hex> ; public static final int GL_FIXED = <hex> ; public static final int GL_DEPTH_COMPONENT = <hex> ; public static final int GL_ALPHA = <hex> ; public static final int GL_RGB = <hex> ; public static final int GL_RGBA = <hex> ; public static final int GL_LUMINANCE = <hex> ; public static final int GL_LUMINANCE_ALPHA = <hex> ; public static final int GL_UNSIGNED_SHORT_4_4_4_4 = <hex> ; public static final int GL_UNSIGNED_SHORT_5_5_5_1 = <hex> ; public static final int GL_UNSIGNED_SHORT_5_6_5 = <hex> ; public static final int GL_FRAGMENT_SHADER = <hex> ; public static final int GL_VERTEX_SHADER = <hex> ; public static final int GL_MAX_VERTEX_ATTRIBS = <hex> ; public static final int GL_MAX_VERTEX_UNIFORM_VECTORS = <hex> ; public static final int GL_MAX_VARYING_VECTORS = <hex> ; public static final int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = <hex> ; public static final int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = <hex> ; public static final int GL_MAX_TEXTURE_IMAGE_UNITS = <hex> ; public static final int GL_MAX_FRAGMENT_UNIFORM_VECTORS = <hex> ; public static final int GL_SHADER_TYPE = <hex> ; public static final int GL_DELETE_STATUS = <hex> ; public static final int GL_LINK_STATUS = <hex> ; public static final int GL_VALIDATE_STATUS = <hex> ; public static final int GL_ATTACHED_SHADERS = <hex> ; public static final int GL_ACTIVE_UNIFORMS = <hex> ; public static final int GL_ACTIVE_UNIFORM_MAX_LENGTH = <hex> ; public static final int GL_ACTIVE_ATTRIBUTES = <hex> ; public static final int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = <hex> ; public static final int GL_SHADING_LANGUAGE_VERSION = <hex> ; public static final int GL_CURRENT_PROGRAM = <hex> ; public static final int GL_NEVER = <hex> ; public static final int GL_LESS = <hex> ; public static final int GL_EQUAL = <hex> ; public static final int GL_LEQUAL = <hex> ; public static final int GL_GREATER = <hex> ; public static final int GL_NOTEQUAL = <hex> ; public static final int GL_GEQUAL = <hex> ; public static final int GL_ALWAYS = <hex> ; public static final int GL_KEEP = <hex> ; public static final int GL_REPLACE = <hex> ; public static final int GL_INCR = <hex> ; public static final int GL_DECR = <hex> ; public static final int GL_INVERT = <hex> ; public static final int GL_INCR_WRAP = <hex> ; public static final int GL_DECR_WRAP = <hex> ; public static final int GL_VENDOR = <hex> ; public static final int GL_RENDERER = <hex> ; public static final int GL_VERSION = <hex> ; public static final int GL_EXTENSIONS = <hex> ; public static final int GL_NEAREST = <hex> ; public static final int GL_LINEAR = <hex> ; public static final int GL_NEAREST_MIPMAP_NEAREST = <hex> ; public static final int GL_LINEAR_MIPMAP_NEAREST = <hex> ; public static final int GL_NEAREST_MIPMAP_LINEAR = <hex> ; public static final int GL_LINEAR_MIPMAP_LINEAR = <hex> ; public static final int GL_TEXTURE_MAG_FILTER = <hex> ; public static final int GL_TEXTURE_MIN_FILTER = <hex> ; public static final int GL_TEXTURE_WRAP_S = <hex> ; public static final int GL_TEXTURE_WRAP_T = <hex> ; public static final int GL_TEXTURE = <hex> ; public static final int GL_TEXTURE_CUBE_MAP = <hex> ; public static final int GL_TEXTURE_BINDING_CUBE_MAP = <hex> ; public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_X = <hex> ; public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_X = <hex> ; public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Y = <hex> ; public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = <hex> ; public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Z = <hex> ; public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = <hex> ; public static final int GL_MAX_CUBE_MAP_TEXTURE_SIZE = <hex> ; public static final int GL_TEXTURE0 = <hex> ; public static final int GL_TEXTURE1 = <hex> ; public static final int GL_TEXTURE2 = <hex> ; public static final int GL_TEXTURE3 = <hex> ; public static final int GL_TEXTURE4 = <hex> ; public static final int GL_TEXTURE5 = <hex> ; public static final int GL_TEXTURE6 = <hex> ; public static final int GL_TEXTURE7 = <hex> ; public static final int GL_TEXTURE8 = <hex> ; public static final int GL_TEXTURE9 = <hex> ; public static final int GL_TEXTURE10 = <hex> ; public static final int GL_TEXTURE11 = <hex> ; public static final int GL_TEXTURE12 = <hex> ; public static final int GL_TEXTURE13 = <hex> ; public static final int GL_TEXTURE14 = <hex> ; public static final int GL_TEXTURE15 = <hex> ; public static final int GL_TEXTURE16 = <hex> ; public static final int GL_TEXTURE17 = <hex> ; public static final int GL_TEXTURE18 = <hex> ; public static final int GL_TEXTURE19 = <hex> ; public static final int GL_TEXTURE20 = <hex> ; public static final int GL_TEXTURE21 = <hex> ; public static final int GL_TEXTURE22 = <hex> ; public static final int GL_TEXTURE23 = <hex> ; public static final int GL_TEXTURE24 = <hex> ; public static final int GL_TEXTURE25 = <hex> ; public static final int GL_TEXTURE26 = <hex> ; public static final int GL_TEXTURE27 = <hex> ; public static final int GL_TEXTURE28 = <hex> ; public static final int GL_TEXTURE29 = <hex> ; public static final int GL_TEXTURE30 = <hex> ; public static final int GL_TEXTURE31 = <hex> ; public static final int GL_ACTIVE_TEXTURE = <hex> ; public static final int GL_REPEAT = <hex> ; public static final int GL_CLAMP_TO_EDGE = <hex> ; public static final int GL_MIRRORED_REPEAT = <hex> ; public static final int GL_FLOAT_VEC2 = <hex> ; public static final int GL_FLOAT_VEC3 = <hex> ; public static final int GL_FLOAT_VEC4 = <hex> ; public static final int GL_INT_VEC2 = <hex> ; public static final int GL_INT_VEC3 = <hex> ; public static final int GL_INT_VEC4 = <hex> ; public static final int GL_BOOL = <hex> ; public static final int GL_BOOL_VEC2 = <hex> ; public static final int GL_BOOL_VEC3 = <hex> ; public static final int GL_BOOL_VEC4 = <hex> ; public static final int GL_FLOAT_MAT2 = <hex> ; public static final int GL_FLOAT_MAT3 = <hex> ; public static final int GL_FLOAT_MAT4 = <hex> ; public static final int GL_SAMPLER_2D = <hex> ; public static final int GL_SAMPLER_CUBE = <hex> ; public static final int GL_VERTEX_ATTRIB_ARRAY_ENABLED = <hex> ; public static final int GL_VERTEX_ATTRIB_ARRAY_SIZE = <hex> ; public static final int GL_VERTEX_ATTRIB_ARRAY_STRIDE = <hex> ; public static final int GL_VERTEX_ATTRIB_ARRAY_TYPE = <hex> ; public static final int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = <hex> ; public static final int GL_VERTEX_ATTRIB_ARRAY_POINTER = <hex> ; public static final int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = <hex> ; public static final int GL_IMPLEMENTATION_COLOR_READ_TYPE = <hex> ; public static final int GL_IMPLEMENTATION_COLOR_READ_FORMAT = <hex> ; public static final int GL_COMPILE_STATUS = <hex> ; public static final int GL_INFO_LOG_LENGTH = <hex> ; public static final int GL_SHADER_SOURCE_LENGTH = <hex> ; public static final int GL_SHADER_COMPILER = <hex> ; public static final int GL_SHADER_BINARY_FORMATS = <hex> ; public static final int GL_NUM_SHADER_BINARY_FORMATS = <hex> ; public static final int GL_LOW_FLOAT = <hex> ; public static final int GL_MEDIUM_FLOAT = <hex> ; public static final int GL_HIGH_FLOAT = <hex> ; public static final int GL_LOW_INT = <hex> ; public static final int GL_MEDIUM_INT = <hex> ; public static final int GL_HIGH_INT = <hex> ; public static final int GL_FRAMEBUFFER = <hex> ; public static final int GL_RENDERBUFFER = <hex> ; public static final int GL_RGBA4 = <hex> ; public static final int GL_RGB5_A1 = <hex> ; public static final int GL_RGB565 = <hex> ; public static final int GL_DEPTH_COMPONENT16 = <hex> ; public static final int GL_STENCIL_INDEX = <hex> ; public static final int GL_STENCIL_INDEX8 = <hex> ; public static final int GL_RENDERBUFFER_WIDTH = <hex> ; public static final int GL_RENDERBUFFER_HEIGHT = <hex> ; public static final int GL_RENDERBUFFER_INTERNAL_FORMAT = <hex> ; public static final int GL_RENDERBUFFER_RED_SIZE = <hex> ; public static final int GL_RENDERBUFFER_GREEN_SIZE = <hex> ; public static final int GL_RENDERBUFFER_BLUE_SIZE = <hex> ; public static final int GL_RENDERBUFFER_ALPHA_SIZE = <hex> ; public static final int GL_RENDERBUFFER_DEPTH_SIZE = <hex> ; public static final int GL_RENDERBUFFER_STENCIL_SIZE = <hex> ; public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = <hex> ; public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = <hex> ; public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = <hex> ; public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = <hex> ; public static final int GL_COLOR_ATTACHMENT0 = <hex> ; public static final int GL_DEPTH_ATTACHMENT = <hex> ; public static final int GL_STENCIL_ATTACHMENT = <hex> ; public static final int GL_NONE = <int> ; public static final int GL_FRAMEBUFFER_COMPLETE = <hex> ; public static final int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = <hex> ; public static final int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = <hex> ; public static final int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = <hex> ; public static final int GL_FRAMEBUFFER_UNSUPPORTED = <hex> ; public static final int GL_FRAMEBUFFER_BINDING = <hex> ; public static final int GL_RENDERBUFFER_BINDING = <hex> ; public static final int GL_MAX_RENDERBUFFER_SIZE = <hex> ; public static final int GL_INVALID_FRAMEBUFFER_OPERATION = <hex> ; public static final int GL_VERTEX_PROGRAM_POINT_SIZE = <hex> ; public static final int GL_COVERAGE_BUFFER_BIT_NV = <hex> ; public static final int GL_TEXTURE_MAX_ANISOTROPY_EXT = <hex> ; public static final int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = <hex> ; public void glActiveTexture ( int texture ) ; public void glBindTexture ( int target , int texture ) ; public void glBlendFunc ( int sfactor , int dfactor ) ; public void glClear ( int mask ) ; public void glClearColor ( float red , float green , float blue , float alpha ) ; public void glClearDepthf ( float depth ) ; public void glClearStencil ( int s ) ; public void glColorMask ( boolean red , boolean green , boolean blue , boolean alpha ) ; public void glCompressedTexImage2D ( int target , int level , int internalformat , int width , int height , int border , int imageSize , Buffer data ) ; public void glCompressedTexSubImage2D ( int target , int level , int xoffset , int yoffset , int width , int height , int format , int imageSize , Buffer data ) ; public void glCopyTexImage2D ( int target , int level , int internalformat , int x , int y , int width , int height , int border ) ; public void glCopyTexSubImage2D ( int target , int level , int xoffset , int yoffset , int x , int y , int width , int height ) ; public void glCullFace ( int mode ) ; public void glDeleteTextures ( int n , IntBuffer textures ) ; public void glDeleteTexture ( int texture ) ; public void glDepthFunc ( int func ) ; public void glDepthMask ( boolean flag ) ; public void glDepthRangef ( float zNear , float zFar ) ; public void glDisable ( int cap ) ; public void glDrawArrays ( int mode , int first , int count ) ; public void glDrawElements ( int mode , int count , int type , Buffer indices ) ; public void glEnable ( int cap ) ; public void glFinish ( ) ; public void glFlush ( ) ; public void glFrontFace ( int mode ) ; public void glGenTextures ( int n , IntBuffer textures ) ; public int glGenTexture ( ) ; public int glGetError ( ) ; public void glGetIntegerv ( int pname , IntBuffer params ) ; public String glGetString ( int name ) ; public void glHint ( int target , int mode ) ; public void glLineWidth ( float width ) ; public void glPixelStorei ( int pname , int param ) ; public void glPolygonOffset ( float factor , float units ) ; public void glReadPixels ( int x , int y , int width , int height , int format , int type , Buffer pixels ) ; public void glScissor ( int x , int y , int width , int height ) ; public void glStencilFunc ( int func , int ref , int mask ) ; public void glStencilMask ( int mask ) ; public void glStencilOp ( int fail , int zfail , int zpass ) ; public void glTexImage2D ( int target , int level , int internalformat , int width , int height , int border , int format , int type , Buffer pixels ) ; public void glTexParameterf ( int target , int pname , float param ) ; public void glTexSubImage2D ( int target , int level , int xoffset , int yoffset , int width , int height , int format , int type , Buffer pixels ) ; public void glViewport ( int x , int y , int width , int height ) ; public void glAttachShader ( int program , int shader ) ; public void glBindAttribLocation ( int program , int index , String name ) ; public void glBindBuffer ( int target , int buffer ) ; public void glBindFramebuffer ( int target , int framebuffer ) ; public void glBindRenderbuffer ( int target , int renderbuffer ) ; public void glBlendColor ( float red , float green , float blue , float alpha ) ; public void glBlendEquation ( int mode ) ; public void glBlendEquationSeparate ( int modeRGB , int modeAlpha ) ; public void glBlendFuncSeparate ( int srcRGB , int dstRGB , int srcAlpha , int dstAlpha ) ; public void glBufferData ( int target , int size , Buffer data , int usage ) ; public void glBufferSubData ( int target , int offset , int size , Buffer data ) ; public int glCheckFramebufferStatus ( int target ) ; public void glCompileShader ( int shader ) ; public int glCreateProgram ( ) ; public int glCreateShader ( int type ) ; public void glDeleteBuffer ( int buffer ) ; public void glDeleteBuffers ( int n , IntBuffer buffers ) ; public void glDeleteFramebuffer ( int framebuffer ) ; public void glDeleteFramebuffers ( int n , IntBuffer framebuffers ) ; public void glDeleteProgram ( int program ) ; public void glDeleteRenderbuffer ( int renderbuffer ) ; public void glDeleteRenderbuffers ( int n , IntBuffer renderbuffers ) ; public void glDeleteShader ( int shader ) ; public void glDetachShader ( int program , int shader ) ; public void glDisableVertexAttribArray ( int index ) ; public void glDrawElements ( int mode , int count , int type , int indices ) ; public void glEnableVertexAttribArray ( int index ) ; public void glFramebufferRenderbuffer ( int target , int attachment , int renderbuffertarget , int renderbuffer ) ; public void glFramebufferTexture2D ( int target , int attachment , int textarget , int texture , int level ) ; public int glGenBuffer ( ) ; public void glGenBuffers ( int n , IntBuffer buffers ) ; public void glGenerateMipmap ( int target ) ; public int glGenFramebuffer ( ) ; public void glGenFramebuffers ( int n , IntBuffer framebuffers ) ; public int glGenRenderbuffer ( ) ; public void glGenRenderbuffers ( int n , IntBuffer renderbuffers ) ; public String glGetActiveAttrib ( int program , int index , IntBuffer size , Buffer type ) ; public String glGetActiveUniform ( int program , int index , IntBuffer size , Buffer type ) ; public void glGetAttachedShaders ( int program , int maxcount , Buffer count , IntBuffer shaders ) ; public int glGetAttribLocation ( int program , String name ) ; public void glGetBooleanv ( int pname , Buffer params ) ; public void glGetBufferParameteriv ( int target , int pname , IntBuffer params ) ; public void glGetFloatv ( int pname , FloatBuffer params ) ; public void glGetFramebufferAttachmentParameteriv ( int target , int attachment , int pname , IntBuffer params ) ; public void glGetProgramiv ( int program , int pname , IntBuffer params ) ; public String glGetProgramInfoLog ( int program ) ; public void glGetRenderbufferParameteriv ( int target , int pname , IntBuffer params ) ; public void glGetShaderiv ( int shader , int pname , IntBuffer params ) ; public String glGetShaderInfoLog ( int shader ) ; public void glGetShaderPrecisionFormat ( int shadertype , int precisiontype , IntBuffer range , IntBuffer precision ) ; public void glGetTexParameterfv ( int target , int pname , FloatBuffer params ) ; public void glGetTexParameteriv ( int target , int pname , IntBuffer params ) ; public void glGetUniformfv ( int program , int location , FloatBuffer params ) ; public void glGetUniformiv ( int program , int location , IntBuffer params ) ; public int glGetUniformLocation ( int program , String name ) ; public void glGetVertexAttribfv ( int index , int pname , FloatBuffer params ) ; public void glGetVertexAttribiv ( int index , int pname , IntBuffer params ) ; public void glGetVertexAttribPointerv ( int index , int pname , Buffer pointer ) ; public boolean glIsBuffer ( int buffer ) ; public boolean glIsEnabled ( int cap ) ; public boolean glIsFramebuffer ( int framebuffer ) ; public boolean glIsProgram ( int program ) ; public boolean glIsRenderbuffer ( int renderbuffer ) ; public boolean glIsShader ( int shader ) ; public boolean glIsTexture ( int texture ) ; public void glLinkProgram ( int program ) ; public void glReleaseShaderCompiler ( ) ; public void glRenderbufferStorage ( int target , int internalformat , int width , int height ) ; public void glSampleCoverage ( float value , boolean invert ) ; public void glShaderBinary ( int n , IntBuffer shaders , int binaryformat , Buffer binary , int length ) ; public void glShaderSource ( int shader , String string ) ; public void glStencilFuncSeparate ( int face , int func , int ref , int mask ) ; public void glStencilMaskSeparate ( int face , int mask ) ; public void glStencilOpSeparate ( int face , int fail , int zfail , int zpass ) ; public void glTexParameterfv ( int target , int pname , FloatBuffer params ) ; public void glTexParameteri ( int target , int pname , int param ) ; public void glTexParameteriv ( int target , int pname , IntBuffer params ) ; public void glUniform1f ( int location , float x ) ; public void glUniform1fv ( int location , int count , FloatBuffer v ) ; public void glUniform1fv ( int location , int count , float v [ ] , int offset ) ; public void glUniform1i ( int location , int x ) ; public void glUniform1iv ( int location , int count , IntBuffer v ) ; public void glUniform1iv ( int location , int count , int v [ ] , int offset ) ; public void glUniform2f ( int location , float x , float y ) ; public void glUniform2fv ( int location , int count , FloatBuffer v ) ; public void glUniform2fv ( int location , int count , float v [ ] , int offset ) ; public void glUniform2i ( int location , int x , int y ) ; public void glUniform2iv ( int location , int count , IntBuffer v ) ; public void glUniform2iv ( int location , int count , int [ ] v , int offset ) ; public void glUniform3f ( int location , float x , float y , float z ) ; public void glUniform3fv ( int location , int count , FloatBuffer v ) ; public void glUniform3fv ( int location , int count , float [ ] v , int offset ) ; public void glUniform3i ( int location , int x , int y , int z ) ; public void glUniform3iv ( int location , int count , IntBuffer v ) ; public void glUniform3iv ( int location , int count , int v [ ] , int offset ) ; public void glUniform4f ( int location , float x , float y , float z , float w ) ; public void glUniform4fv ( int location , int count , FloatBuffer v ) ; public void glUniform4fv ( int location , int count , float v [ ] , int offset ) ; public void glUniform4i ( int location , int x , int y , int z , int w ) ; public void glUniform4iv ( int location , int count , IntBuffer v ) ; public void glUniform4iv ( int location , int count , int v [ ] , int offset ) ; public void glUniformMatrix2fv ( int location , int count , boolean transpose , FloatBuffer value ) ; public void glUniformMatrix2fv ( int location , int count , boolean transpose , float value [ ] , int offset ) ; public void glUniformMatrix3fv ( int location , int count , boolean transpose , FloatBuffer value ) ; public void glUniformMatrix3fv ( int location , int count , boolean transpose , float value [ ] , int offset ) ; public void glUniformMatrix4fv ( int location , int count , boolean transpose , FloatBuffer value ) ; public void glUniformMatrix4fv ( int location , int count , boolean transpose , float value [ ] , int offset ) ; public void glUseProgram ( int program ) ; public void glValidateProgram ( int program ) ; public void glVertexAttrib1f ( int indx , float x ) ; public void glVertexAttrib1fv ( int indx , FloatBuffer values ) ; public void glVertexAttrib2f ( int indx , float x , float y ) ; public void glVertexAttrib2fv ( int indx , FloatBuffer values ) ; public void glVertexAttrib3f ( int indx , float x , float y , float z ) ; public void glVertexAttrib3fv ( int indx , FloatBuffer values ) ; public void glVertexAttrib4f ( int indx , float x , float y , float z , float w ) ; public void glVertexAttrib4fv ( int indx , FloatBuffer values ) ; public void glVertexAttribPointer ( int indx , int size , int type , boolean normalized , int stride , Buffer ptr ) ; public void glVertexAttribPointer ( int indx , int size , int type , boolean normalized , int stride , int ptr ) ; } 
