package org . gradle ; import java . net . URISyntaxException ; import java . net . URL ; import java . net . URLClassLoader ; import static junit . framework . Assert . assertEquals ; public class MySystemClassLoader extends URLClassLoader { public MySystemClassLoader ( ClassLoader parent ) throws URISyntaxException , ClassNotFoundException { super ( new URL [ <int> ] , parent ) ; assertEquals ( getClass ( ) . getClassLoader ( ) , parent ) ; addClasspathFor ( <str> ) ; addClasspathFor ( <str> ) ; } private void addClasspathFor ( String name ) throws ClassNotFoundException { URL codebase = getParent ( ) . loadClass ( name ) . getProtectionDomain ( ) . getCodeSource ( ) . getLocation ( ) ; addURL ( codebase ) ; } @Override public Class < ? > loadClass ( String className ) throws ClassNotFoundException { if ( className . equals ( getClass ( ) . getName ( ) ) ) { return getClass ( ) ; } try { return findClass ( className ) ; } catch ( ClassNotFoundException e ) { return super . loadClass ( className ) ; } } } 
