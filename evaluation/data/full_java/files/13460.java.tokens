package org . gradle . api . internal . tasks . compile ; import org . gradle . internal . Factory ; import org . gradle . internal . SystemProperties ; import org . gradle . internal . jvm . JdkTools ; import org . gradle . internal . jvm . Jvm ; import javax . tools . JavaCompiler ; import java . io . File ; import java . io . Serializable ; public class JavaHomeBasedJavaCompilerFactory implements Factory < JavaCompiler > , Serializable { private final Factory < ? extends File > currentJvmJavaHomeFactory ; private final Factory < ? extends File > systemPropertiesJavaHomeFactory ; private final Factory < ? extends JavaCompiler > systemJavaCompilerFactory ; public JavaHomeBasedJavaCompilerFactory ( ) { this ( new CurrentJvmJavaHomeFactory ( ) , new SystemPropertiesJavaHomeFactory ( ) , new SystemJavaCompilerFactory ( ) ) ; } JavaHomeBasedJavaCompilerFactory ( Factory < ? extends File > currentJvmJavaHomeFactory , Factory < ? extends File > systemPropertiesJavaHomeFactory , Factory < ? extends JavaCompiler > systemJavaCompilerFactory ) { this . currentJvmJavaHomeFactory = currentJvmJavaHomeFactory ; this . systemPropertiesJavaHomeFactory = systemPropertiesJavaHomeFactory ; this . systemJavaCompilerFactory = systemJavaCompilerFactory ; } public JavaCompiler create ( ) { JavaCompiler compiler = findCompiler ( ) ; if ( compiler = = null ) { throw new RuntimeException ( <str> ) ; } return compiler ; } private JavaCompiler findCompiler ( ) { File realJavaHome = currentJvmJavaHomeFactory . create ( ) ; File javaHomeFromToolProvidersPointOfView = systemPropertiesJavaHomeFactory . create ( ) ; if ( realJavaHome . equals ( javaHomeFromToolProvidersPointOfView ) ) { return systemJavaCompilerFactory . create ( ) ; } return SystemProperties . getInstance ( ) . withJavaHome ( realJavaHome , systemJavaCompilerFactory ) ; } public static class CurrentJvmJavaHomeFactory implements Factory < File > , Serializable { public File create ( ) { return Jvm . current ( ) . getJavaHome ( ) ; } } public static class SystemPropertiesJavaHomeFactory implements Factory < File > , Serializable { public File create ( ) { return SystemProperties . getInstance ( ) . getJavaHomeDir ( ) ; } } public static class SystemJavaCompilerFactory implements Factory < JavaCompiler > , Serializable { public JavaCompiler create ( ) { return JdkTools . current ( ) . getSystemJavaCompiler ( ) ; } } } 
