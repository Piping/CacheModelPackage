package com . badlogic . gdx . physics . bullet . collision ; import com . badlogic . gdx . physics . bullet . BulletBase ; import com . badlogic . gdx . physics . bullet . linearmath . * ; import com . badlogic . gdx . math . Vector3 ; import com . badlogic . gdx . math . Quaternion ; import com . badlogic . gdx . math . Matrix3 ; import com . badlogic . gdx . math . Matrix4 ; public class btCollisionConfiguration extends BulletBase { private long swigCPtr ; protected btCollisionConfiguration ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , cPtr , cMemoryOwn ) ; swigCPtr = cPtr ; } public btCollisionConfiguration ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( swigCPtr = cPtr , cMemoryOwn ) ; } public static long getCPtr ( btCollisionConfiguration obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; CollisionJNI . delete_btCollisionConfiguration ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } public btPoolAllocator getPersistentManifoldPool ( ) { long cPtr = CollisionJNI . btCollisionConfiguration_getPersistentManifoldPool ( swigCPtr , this ) ; return ( cPtr = = <int> ) ? null : new btPoolAllocator ( cPtr , false ) ; } public btPoolAllocator getCollisionAlgorithmPool ( ) { long cPtr = CollisionJNI . btCollisionConfiguration_getCollisionAlgorithmPool ( swigCPtr , this ) ; return ( cPtr = = <int> ) ? null : new btPoolAllocator ( cPtr , false ) ; } public btCollisionAlgorithmCreateFunc getCollisionAlgorithmCreateFunc ( int proxyType0 , int proxyType1 ) { long cPtr = CollisionJNI . btCollisionConfiguration_getCollisionAlgorithmCreateFunc ( swigCPtr , this , proxyType0 , proxyType1 ) ; return ( cPtr = = <int> ) ? null : new btCollisionAlgorithmCreateFunc ( cPtr , false ) ; } } 
