package com . badlogic . gdx . tests . extensions ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . graphics . GL20 ; import com . badlogic . gdx . graphics . OrthographicCamera ; import com . badlogic . gdx . graphics . g2d . BitmapFont ; import com . badlogic . gdx . graphics . g2d . SpriteBatch ; import com . badlogic . gdx . graphics . g2d . freetype . FreeTypeFontGenerator ; import com . badlogic . gdx . graphics . g2d . freetype . FreeTypeFontGenerator . FreeTypeFontParameter ; import com . badlogic . gdx . tests . utils . GdxTest ; public class InternationalFontsTest extends GdxTest { OrthographicCamera cam ; SpriteBatch batch ; BitmapFont koreanFont ; BitmapFont cyrillicFont ; BitmapFont thaiFont ; @Override public void create ( ) { FreeTypeFontGenerator generator = new FreeTypeFontGenerator ( Gdx . files . internal ( <str> ) ) ; FreeTypeFontParameter parameter = new FreeTypeFontParameter ( ) ; parameter . size = <int> ; parameter . characters = <str> ; koreanFont = generator . generateFont ( parameter ) ; generator . dispose ( ) ; parameter . characters = FreeTypeFontGenerator . DEFAULT_CHARS ; generator = new FreeTypeFontGenerator ( Gdx . files . internal ( <str> ) ) ; cyrillicFont = generator . generateFont ( parameter ) ; generator . dispose ( ) ; parameter . characters = <str> ; generator = new FreeTypeFontGenerator ( Gdx . files . internal ( <str> ) ) ; thaiFont = generator . generateFont ( parameter ) ; generator . dispose ( ) ; batch = new SpriteBatch ( ) ; cam = new OrthographicCamera ( ) ; cam . setToOrtho ( false , Gdx . graphics . getWidth ( ) , Gdx . graphics . getHeight ( ) ) ; cam . update ( ) ; } @Override public void render ( ) { Gdx . gl . glClear ( GL20 . GL_COLOR_BUFFER_BIT ) ; batch . setProjectionMatrix ( cam . combined ) ; batch . begin ( ) ; koreanFont . draw ( batch , <str> , <int> , <int> ) ; cyrillicFont . draw ( batch , <str> , <int> , <int> ) ; thaiFont . draw ( batch , <str> , <int> , <int> ) ; batch . end ( ) ; } @Override public void resize ( int width , int height ) { cam . setToOrtho ( false , width , height ) ; } } 
