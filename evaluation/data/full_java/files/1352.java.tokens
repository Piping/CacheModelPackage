package org . apache . cassandra . cql3 ; import org . junit . Test ; import org . antlr . runtime . ANTLRStringStream ; import org . antlr . runtime . BaseRecognizer ; import org . antlr . runtime . CharStream ; import org . antlr . runtime . CommonTokenStream ; import org . antlr . runtime . RecognitionException ; import org . antlr . runtime . TokenStream ; import static org . junit . Assert . * ; public class CqlParserTest { @Test public void testAddErrorListener ( ) throws Exception { SyntaxErrorCounter firstCounter = new SyntaxErrorCounter ( ) ; SyntaxErrorCounter secondCounter = new SyntaxErrorCounter ( ) ; CharStream stream = new ANTLRStringStream ( <str> ) ; CqlLexer lexer = new CqlLexer ( stream ) ; TokenStream tokenStream = new CommonTokenStream ( lexer ) ; CqlParser parser = new CqlParser ( tokenStream ) ; parser . addErrorListener ( firstCounter ) ; parser . addErrorListener ( secondCounter ) ; parser . query ( ) ; assertTrue ( firstCounter . count > <int> ) ; assertTrue ( secondCounter . count > <int> ) ; } @Test public void testRemoveErrorListener ( ) throws Exception { SyntaxErrorCounter firstCounter = new SyntaxErrorCounter ( ) ; SyntaxErrorCounter secondCounter = new SyntaxErrorCounter ( ) ; CharStream stream = new ANTLRStringStream ( <str> ) ; CqlLexer lexer = new CqlLexer ( stream ) ; TokenStream tokenStream = new CommonTokenStream ( lexer ) ; CqlParser parser = new CqlParser ( tokenStream ) ; parser . addErrorListener ( firstCounter ) ; parser . addErrorListener ( secondCounter ) ; parser . removeErrorListener ( secondCounter ) ; parser . query ( ) ; assertTrue ( firstCounter . count > <int> ) ; assertEquals ( <int> , secondCounter . count ) ; } private static final class SyntaxErrorCounter implements ErrorListener { private int count ; @Override public void syntaxError ( BaseRecognizer recognizer , String [ ] tokenNames , RecognitionException e ) { count + + ; } @Override public void syntaxError ( BaseRecognizer recognizer , String errorMsg ) { count + + ; } } } 
