package com . nostra13 . universalimageloader . core . imageaware ; import android . graphics . Bitmap ; import android . graphics . drawable . Drawable ; import android . os . Looper ; import android . view . View ; import android . view . ViewGroup ; import com . nostra13 . universalimageloader . core . assist . ViewScaleType ; import com . nostra13 . universalimageloader . utils . L ; import java . lang . ref . Reference ; import java . lang . ref . WeakReference ; public abstract class ViewAware implements ImageAware { public static final String WARN_CANT_SET_DRAWABLE = <str> ; public static final String WARN_CANT_SET_BITMAP = <str> ; protected Reference < View > viewRef ; protected boolean checkActualViewSize ; public ViewAware ( View view ) { this ( view , true ) ; } public ViewAware ( View view , boolean checkActualViewSize ) { if ( view = = null ) throw new IllegalArgumentException ( <str> ) ; this . viewRef = new WeakReference < View > ( view ) ; this . checkActualViewSize = checkActualViewSize ; } @Override public int getWidth ( ) { View view = viewRef . get ( ) ; if ( view ! = null ) { final ViewGroup . LayoutParams params = view . getLayoutParams ( ) ; int width = <int> ; if ( checkActualViewSize & & params ! = null & & params . width ! = ViewGroup . LayoutParams . WRAP_CONTENT ) { width = view . getWidth ( ) ; } if ( width < = <int> & & params ! = null ) width = params . width ; return width ; } return <int> ; } @Override public int getHeight ( ) { View view = viewRef . get ( ) ; if ( view ! = null ) { final ViewGroup . LayoutParams params = view . getLayoutParams ( ) ; int height = <int> ; if ( checkActualViewSize & & params ! = null & & params . height ! = ViewGroup . LayoutParams . WRAP_CONTENT ) { height = view . getHeight ( ) ; } if ( height < = <int> & & params ! = null ) height = params . height ; return height ; } return <int> ; } @Override public ViewScaleType getScaleType ( ) { return ViewScaleType . CROP ; } @Override public View getWrappedView ( ) { return viewRef . get ( ) ; } @Override public boolean isCollected ( ) { return viewRef . get ( ) = = null ; } @Override public int getId ( ) { View view = viewRef . get ( ) ; return view = = null ? super . hashCode ( ) : view . hashCode ( ) ; } @Override public boolean setImageDrawable ( Drawable drawable ) { if ( Looper . myLooper ( ) = = Looper . getMainLooper ( ) ) { View view = viewRef . get ( ) ; if ( view ! = null ) { setImageDrawableInto ( drawable , view ) ; return true ; } } else { L . w ( WARN_CANT_SET_DRAWABLE ) ; } return false ; } @Override public boolean setImageBitmap ( Bitmap bitmap ) { if ( Looper . myLooper ( ) = = Looper . getMainLooper ( ) ) { View view = viewRef . get ( ) ; if ( view ! = null ) { setImageBitmapInto ( bitmap , view ) ; return true ; } } else { L . w ( WARN_CANT_SET_BITMAP ) ; } return false ; } protected abstract void setImageDrawableInto ( Drawable drawable , View view ) ; protected abstract void setImageBitmapInto ( Bitmap bitmap , View view ) ; } 
