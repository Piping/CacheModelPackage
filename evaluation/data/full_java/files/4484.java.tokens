package org . eclipse . debug . internal . ui . viewers . update ; import org . eclipse . debug . core . DebugEvent ; import org . eclipse . debug . core . model . IStackFrame ; import org . eclipse . debug . core . model . ISuspendResume ; import org . eclipse . debug . internal . ui . viewers . model . provisional . IModelDelta ; import org . eclipse . debug . internal . ui . viewers . model . provisional . ModelDelta ; import org . eclipse . debug . internal . ui . viewers . provisional . AbstractModelProxy ; public class VariablesViewEventHandler extends DebugEventHandler { private IStackFrame fFrame ; public VariablesViewEventHandler ( AbstractModelProxy proxy , IStackFrame frame ) { super ( proxy ) ; fFrame = frame ; } @Override protected boolean handlesEvent ( DebugEvent event ) { return true ; } @Override protected void refreshRoot ( DebugEvent event ) { if ( event . getDetail ( ) ! = DebugEvent . EVALUATION_IMPLICIT ) { if ( event . getSource ( ) instanceof ISuspendResume ) { if ( ! ( ( ISuspendResume ) event . getSource ( ) ) . isSuspended ( ) ) { return ; } } ModelDelta delta = new ModelDelta ( fFrame , IModelDelta . CONTENT ) ; fireDelta ( delta ) ; } } } 
