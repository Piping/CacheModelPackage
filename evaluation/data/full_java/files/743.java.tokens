package org . apache . cassandra . io . util ; import java . nio . ByteBuffer ; public class FileSegmentInputStream extends DataInputBuffer implements FileDataInput { private final String filePath ; private final long offset ; public FileSegmentInputStream ( ByteBuffer buffer , String filePath , long offset ) { super ( buffer , false ) ; this . filePath = filePath ; this . offset = offset ; } public String getPath ( ) { return filePath ; } private long size ( ) { return offset + buffer . capacity ( ) ; } public boolean isEOF ( ) { return ! buffer . hasRemaining ( ) ; } public long bytesRemaining ( ) { return buffer . remaining ( ) ; } public void seek ( long pos ) { if ( pos < <int> | | pos > size ( ) ) throw new IllegalArgumentException ( String . format ( <str> , pos , getPath ( ) , size ( ) ) ) ; buffer . position ( ( int ) ( pos - offset ) ) ; } @Override public boolean markSupported ( ) { return false ; } public FileMark mark ( ) { throw new UnsupportedOperationException ( ) ; } public void reset ( FileMark mark ) { throw new UnsupportedOperationException ( ) ; } public long bytesPastMark ( FileMark mark ) { return <int> ; } public long getFilePointer ( ) { return offset + buffer . position ( ) ; } } 
