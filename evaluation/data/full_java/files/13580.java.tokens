package org . gradle . external . javadoc . internal ; import org . gradle . external . javadoc . JavadocMemberLevel ; import org . jmock . Expectations ; import org . jmock . integration . junit4 . JUnit4Mockery ; import org . jmock . lib . legacy . ClassImposteriser ; import org . junit . Before ; import org . junit . Test ; import java . io . IOException ; public class EnumJavadocOptionFileOptionTest { private final JUnit4Mockery context = new JUnit4Mockery ( ) ; private JavadocOptionFileWriterContext writerContextMock ; private final String optionName = <str> ; private EnumJavadocOptionFileOption < JavadocMemberLevel > enumOption ; @Before public void setUp ( ) { context . setImposteriser ( ClassImposteriser . INSTANCE ) ; writerContextMock = context . mock ( JavadocOptionFileWriterContext . class ) ; enumOption = new EnumJavadocOptionFileOption < JavadocMemberLevel > ( optionName ) ; } @Test public void testWriteNullValue ( ) throws IOException { enumOption . write ( writerContextMock ) ; } @Test public void testWriteNoneNullValue ( ) throws IOException { enumOption . setValue ( JavadocMemberLevel . PUBLIC ) ; context . checking ( new Expectations ( ) { { one ( writerContextMock ) . writeOption ( <str> ) ; } } ) ; enumOption . write ( writerContextMock ) ; } } 
