package org . gradle . api ; import groovy . lang . Closure ; import org . gradle . api . specs . Spec ; import java . util . Collection ; public interface DomainObjectCollection < T > extends Collection < T > { < S extends T > DomainObjectCollection < S > withType ( Class < S > type ) ; < S extends T > DomainObjectCollection < S > withType ( Class < S > type , Action < ? super S > configureAction ) ; < S extends T > DomainObjectCollection < S > withType ( Class < S > type , Closure configureClosure ) ; DomainObjectCollection < T > matching ( Spec < ? super T > spec ) ; DomainObjectCollection < T > matching ( Closure spec ) ; Action < ? super T > whenObjectAdded ( Action < ? super T > action ) ; void whenObjectAdded ( Closure action ) ; Action < ? super T > whenObjectRemoved ( Action < ? super T > action ) ; void whenObjectRemoved ( Closure action ) ; void all ( Action < ? super T > action ) ; void all ( Closure action ) ; public Collection < T > findAll ( Closure spec ) ; } 
