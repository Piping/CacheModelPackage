package org . elasticsearch . gateway ; import org . elasticsearch . common . inject . AbstractModule ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . common . util . ExtensionPoint ; public class GatewayModule extends AbstractModule { public static final String GATEWAY_TYPE_KEY = <str> ; private final ExtensionPoint . SelectedType < Gateway > gatewayTypes = new ExtensionPoint . SelectedType < > ( <str> , Gateway . class ) ; private final Settings settings ; public GatewayModule ( Settings settings ) { this . settings = settings ; registerGatewayType ( <str> , Gateway . class ) ; } public void registerGatewayType ( String type , Class < ? extends Gateway > clazz ) { gatewayTypes . registerExtension ( type , clazz ) ; } @Override protected void configure ( ) { bind ( MetaStateService . class ) . asEagerSingleton ( ) ; bind ( DanglingIndicesState . class ) . asEagerSingleton ( ) ; bind ( GatewayService . class ) . asEagerSingleton ( ) ; gatewayTypes . bindType ( binder ( ) , settings , GATEWAY_TYPE_KEY , <str> ) ; bind ( TransportNodesListGatewayMetaState . class ) . asEagerSingleton ( ) ; bind ( GatewayMetaState . class ) . asEagerSingleton ( ) ; bind ( TransportNodesListGatewayStartedShards . class ) . asEagerSingleton ( ) ; bind ( LocalAllocateDangledIndices . class ) . asEagerSingleton ( ) ; } } 
