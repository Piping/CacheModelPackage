package org . elasticsearch . test . rest ; import org . elasticsearch . test . ESTestCase ; public class BlacklistedPathPatternMatcherTests extends ESTestCase { public void testMatchesExact ( ) { assertMatch ( <str> , <str> ) ; assertMatch ( <str> , <str> ) ; assertNoMatch ( <str> , <str> ) ; } public void testMatchesSimpleWildcardPatterns ( ) { assertMatch ( <str> , <str> ) ; assertMatch ( <str> , <str> ) ; assertNoMatch ( <str> , <str> ) ; } public void testMatchesMultiWildcardPatterns ( ) { assertMatch ( <str> , <str> ) ; assertMatch ( <str> , <str> ) ; assertNoMatch ( <str> , <str> ) ; assertMatch ( <str> , <str> ) ; assertMatch ( <str> , <str> ) ; assertMatch ( <str> , <str> ) ; } public void testMatchesPatternsWithEscapedCommas ( ) { assertMatch ( <str> , <str> ) ; } public void testMatchesMixedPatterns ( ) { assertMatch ( <str> , <str> ) ; assertMatch ( <str> , <str> ) ; assertMatch ( <str> , <str> ) ; } private void assertMatch ( String pattern , String path ) { BlacklistedPathPatternMatcher matcher = new BlacklistedPathPatternMatcher ( pattern ) ; assertTrue ( <str> + pattern + <str> + path + <str> , matcher . isSuffixMatch ( path ) ) ; } private void assertNoMatch ( String pattern , String path ) { BlacklistedPathPatternMatcher matcher = new BlacklistedPathPatternMatcher ( pattern ) ; assertFalse ( <str> + pattern + <str> + path + <str> , matcher . isSuffixMatch ( path ) ) ; } } 
