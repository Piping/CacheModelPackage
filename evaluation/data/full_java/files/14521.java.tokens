package org . gradle . internal . nativeintegration . filesystem . jdk7 ; import java . nio . file . attribute . PosixFilePermission ; import java . util . EnumSet ; import java . util . Set ; import static java . nio . file . attribute . PosixFilePermission . * ; public class PosixFilePermissionConverter { static Set < PosixFilePermission > convertToPermissionsSet ( int mode ) { Set < PosixFilePermission > result = EnumSet . noneOf ( PosixFilePermission . class ) ; if ( isSet ( mode , <oct> ) ) { result . add ( OWNER_READ ) ; } if ( isSet ( mode , <oct> ) ) { result . add ( OWNER_WRITE ) ; } if ( isSet ( mode , <oct> ) ) { result . add ( OWNER_EXECUTE ) ; } if ( isSet ( mode , <oct> ) ) { result . add ( GROUP_READ ) ; } if ( isSet ( mode , <oct> ) ) { result . add ( GROUP_WRITE ) ; } if ( isSet ( mode , <oct> ) ) { result . add ( GROUP_EXECUTE ) ; } if ( isSet ( mode , <oct> ) ) { result . add ( OTHERS_READ ) ; } if ( isSet ( mode , <oct> ) ) { result . add ( OTHERS_WRITE ) ; } if ( isSet ( mode , <oct> ) ) { result . add ( OTHERS_EXECUTE ) ; } return result ; } private static boolean isSet ( int mode , int testbit ) { return ( mode & testbit ) = = testbit ; } public static int convertToInt ( Set < PosixFilePermission > permissions ) { int result = <int> ; if ( permissions . contains ( OWNER_READ ) ) { result = result | <oct> ; } if ( permissions . contains ( OWNER_WRITE ) ) { result = result | <oct> ; } if ( permissions . contains ( OWNER_EXECUTE ) ) { result = result | <oct> ; } if ( permissions . contains ( GROUP_READ ) ) { result = result | <oct> ; } if ( permissions . contains ( GROUP_WRITE ) ) { result = result | <oct> ; } if ( permissions . contains ( GROUP_EXECUTE ) ) { result = result | <oct> ; } if ( permissions . contains ( OTHERS_READ ) ) { result = result | <oct> ; } if ( permissions . contains ( OTHERS_WRITE ) ) { result = result | <oct> ; } if ( permissions . contains ( OTHERS_EXECUTE ) ) { result = result | <oct> ; } return result ; } } 
