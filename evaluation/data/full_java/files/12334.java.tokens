package org . gradle . util ; import org . gradle . internal . TimeProvider ; import org . gradle . internal . TrueTimeProvider ; public class Clock { private long start ; private TimeProvider timeProvider ; private static final long MS_PER_MINUTE = <int> ; private static final long MS_PER_HOUR = MS_PER_MINUTE * <int> ; public Clock ( ) { this ( new TrueTimeProvider ( ) ) ; } public Clock ( long start ) { this ( new TrueTimeProvider ( ) , start ) ; } protected Clock ( TimeProvider timeProvider ) { this . timeProvider = timeProvider ; reset ( ) ; } protected Clock ( TimeProvider timeProvider , long start ) { this . timeProvider = timeProvider ; this . start = start ; } public String getTime ( ) { long timeInMs = getTimeInMs ( ) ; return prettyTime ( timeInMs ) ; } public long getTimeInMs ( ) { return Math . max ( timeProvider . getCurrentTime ( ) - start , <int> ) ; } public void reset ( ) { start = timeProvider . getCurrentTime ( ) ; } public long getStartTime ( ) { return start ; } public static String prettyTime ( long timeInMs ) { StringBuilder result = new StringBuilder ( ) ; if ( timeInMs > MS_PER_HOUR ) { result . append ( timeInMs / MS_PER_HOUR ) . append ( <str> ) ; } if ( timeInMs > MS_PER_MINUTE ) { result . append ( ( timeInMs % MS_PER_HOUR ) / MS_PER_MINUTE ) . append ( <str> ) ; } result . append ( ( timeInMs % MS_PER_MINUTE ) / <float> ) . append ( <str> ) ; return result . toString ( ) ; } } 
