package org . elasticsearch . rest . action . admin . cluster . shards ; import org . elasticsearch . action . admin . cluster . shards . ClusterSearchShardsRequest ; import org . elasticsearch . action . admin . cluster . shards . ClusterSearchShardsResponse ; import org . elasticsearch . action . support . IndicesOptions ; import org . elasticsearch . client . Client ; import org . elasticsearch . client . Requests ; import org . elasticsearch . common . Strings ; import org . elasticsearch . common . inject . Inject ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . rest . * ; import org . elasticsearch . rest . action . support . RestToXContentListener ; import static org . elasticsearch . rest . RestRequest . Method . GET ; import static org . elasticsearch . rest . RestRequest . Method . POST ; public class RestClusterSearchShardsAction extends BaseRestHandler { @Inject public RestClusterSearchShardsAction ( Settings settings , RestController controller , Client client ) { super ( settings , controller , client ) ; controller . registerHandler ( GET , <str> , this ) ; controller . registerHandler ( POST , <str> , this ) ; controller . registerHandler ( GET , <str> , this ) ; controller . registerHandler ( POST , <str> , this ) ; controller . registerHandler ( GET , <str> , this ) ; controller . registerHandler ( POST , <str> , this ) ; } @Override public void handleRequest ( final RestRequest request , final RestChannel channel , final Client client ) { String [ ] indices = Strings . splitStringByCommaToArray ( request . param ( <str> ) ) ; final ClusterSearchShardsRequest clusterSearchShardsRequest = Requests . clusterSearchShardsRequest ( indices ) ; clusterSearchShardsRequest . local ( request . paramAsBoolean ( <str> , clusterSearchShardsRequest . local ( ) ) ) ; clusterSearchShardsRequest . types ( Strings . splitStringByCommaToArray ( request . param ( <str> ) ) ) ; clusterSearchShardsRequest . routing ( request . param ( <str> ) ) ; clusterSearchShardsRequest . preference ( request . param ( <str> ) ) ; clusterSearchShardsRequest . indicesOptions ( IndicesOptions . fromRequest ( request , clusterSearchShardsRequest . indicesOptions ( ) ) ) ; client . admin ( ) . cluster ( ) . searchShards ( clusterSearchShardsRequest , new RestToXContentListener < ClusterSearchShardsResponse > ( channel ) ) ; } } 
