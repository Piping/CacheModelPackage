package org . elasticsearch . index . analysis ; import org . apache . lucene . analysis . TokenStream ; import org . apache . lucene . analysis . miscellaneous . Lucene43TrimFilter ; import org . apache . lucene . analysis . miscellaneous . TrimFilter ; import org . apache . lucene . util . Version ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . env . Environment ; import org . elasticsearch . index . IndexSettings ; public class TrimTokenFilterFactory extends AbstractTokenFilterFactory { private final boolean updateOffsets ; private static final String UPDATE_OFFSETS_KEY = <str> ; public TrimTokenFilterFactory ( IndexSettings indexSettings , Environment env , String name , Settings settings ) { super ( indexSettings , name , settings ) ; if ( version . onOrAfter ( Version . LUCENE_4_4_0 ) & & settings . get ( UPDATE_OFFSETS_KEY ) ! = null ) { throw new IllegalArgumentException ( UPDATE_OFFSETS_KEY + <str> + <str> ) ; } this . updateOffsets = settings . getAsBoolean ( <str> , false ) ; } @Override public TokenStream create ( TokenStream tokenStream ) { if ( version . onOrAfter ( Version . LUCENE_4_4_0 ) ) { return new TrimFilter ( tokenStream ) ; } else { @SuppressWarnings ( <str> ) final TokenStream filter = new Lucene43TrimFilter ( tokenStream , updateOffsets ) ; return filter ; } } } 
