package org . gradle . tooling . internal . consumer . connection ; import org . gradle . tooling . internal . consumer . parameters . ConsumerOperationParameters ; import org . gradle . tooling . model . internal . Exceptions ; import org . gradle . util . GradleVersion ; public class PluginClasspathInjectionSupportedCheckModelProducer implements ModelProducer { private final String providerVersion ; private final ModelProducer delegate ; private static final GradleVersion SUPPORTED_VERSION = GradleVersion . version ( <str> ) ; public PluginClasspathInjectionSupportedCheckModelProducer ( String providerVersion , ModelProducer delegate ) { this . providerVersion = providerVersion ; this . delegate = delegate ; } @Override public < T > T produceModel ( Class < T > type , ConsumerOperationParameters operationParameters ) { if ( ! operationParameters . getInjectedPluginClasspath ( ) . isEmpty ( ) & & ! isSupported ( ) ) { throw Exceptions . unsupportedFeature ( <str> , providerVersion , <str> ) ; } return delegate . produceModel ( type , operationParameters ) ; } private boolean isSupported ( ) { return GradleVersion . version ( providerVersion ) . compareTo ( SUPPORTED_VERSION ) > = <int> ; } } 
