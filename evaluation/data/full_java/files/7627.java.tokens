package org . elasticsearch . snapshots ; import org . elasticsearch . ElasticsearchException ; import org . elasticsearch . cluster . metadata . SnapshotId ; import org . elasticsearch . common . io . stream . StreamInput ; import org . elasticsearch . common . io . stream . StreamOutput ; import java . io . IOException ; public class SnapshotException extends ElasticsearchException { private final SnapshotId snapshot ; public SnapshotException ( SnapshotId snapshot , String msg ) { this ( snapshot , msg , null ) ; } public SnapshotException ( SnapshotId snapshot , String msg , Throwable cause ) { super ( <str> + ( snapshot = = null ? <str> : snapshot ) + <str> + msg , cause ) ; this . snapshot = snapshot ; } public SnapshotException ( StreamInput in ) throws IOException { super ( in ) ; if ( in . readBoolean ( ) ) { snapshot = SnapshotId . readSnapshotId ( in ) ; } else { snapshot = null ; } } @Override public void writeTo ( StreamOutput out ) throws IOException { super . writeTo ( out ) ; out . writeOptionalStreamable ( snapshot ) ; } public SnapshotId snapshot ( ) { return snapshot ; } } 
