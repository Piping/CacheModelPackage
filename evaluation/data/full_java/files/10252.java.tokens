package com . google . common . base ; import static com . google . common . base . Objects . firstNonNull ; import com . google . common . annotations . GwtCompatible ; import com . google . common . annotations . GwtIncompatible ; import com . google . common . testing . NullPointerTester ; import junit . framework . TestCase ; @GwtCompatible ( emulated = true ) public class ObjectsTest extends TestCase { public void testEqual ( ) throws Exception { assertTrue ( Objects . equal ( <int> , <int> ) ) ; assertTrue ( Objects . equal ( null , null ) ) ; String s1 = <str> ; String s2 = new String ( s1 ) ; assertTrue ( Objects . equal ( s1 , s2 ) ) ; assertFalse ( Objects . equal ( s1 , null ) ) ; assertFalse ( Objects . equal ( null , s1 ) ) ; assertFalse ( Objects . equal ( <str> , <str> ) ) ; assertFalse ( Objects . equal ( <str> , <int> ) ) ; } public void testHashCode ( ) throws Exception { int h1 = Objects . hashCode ( <int> , <str> , <float> ) ; int h2 = Objects . hashCode ( new Integer ( <int> ) , new String ( <str> ) , new Double ( <float> ) ) ; assertEquals ( h1 , h2 ) ; assertTrue ( Objects . hashCode ( <int> , <int> , null ) ! = Objects . hashCode ( <int> , <int> ) ) ; assertTrue ( Objects . hashCode ( <int> , <int> , null ) ! = Objects . hashCode ( <int> , null , <int> ) ) ; assertTrue ( Objects . hashCode ( <int> , null , <int> ) ! = Objects . hashCode ( <int> , <int> ) ) ; assertTrue ( Objects . hashCode ( <int> , <int> , <int> ) ! = Objects . hashCode ( <int> , <int> , <int> ) ) ; assertTrue ( Objects . hashCode ( <int> , <int> , <int> ) ! = Objects . hashCode ( <int> , <int> , <int> ) ) ; } public void testFirstNonNull_withNonNull ( ) throws Exception { String s1 = <str> ; String s2 = firstNonNull ( s1 , <str> ) ; assertSame ( s1 , s2 ) ; Long n1 = new Long ( <int> ) ; Long n2 = firstNonNull ( null , n1 ) ; assertSame ( n1 , n2 ) ; } @SuppressWarnings ( <str> ) public void testFirstNonNull_throwsNullPointerException ( ) throws Exception { try { firstNonNull ( null , null ) ; fail ( <str> ) ; } catch ( NullPointerException expected ) { } } @GwtIncompatible ( <str> ) public void testNullPointers ( ) { NullPointerTester tester = new NullPointerTester ( ) ; tester . testAllPublicStaticMethods ( Objects . class ) ; } } 
