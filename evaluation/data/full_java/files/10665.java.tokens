package com . google . common . util . concurrent ; import com . google . common . testing . AbstractPackageSanityTests ; import com . google . common . util . concurrent . RateLimiter . SleepingStopwatch ; import java . io . IOException ; public class PackageSanityTests extends AbstractPackageSanityTests { private static final SleepingStopwatch NO_OP_STOPWATCH = new SleepingStopwatch ( ) { @Override protected long readMicros ( ) { return <int> ; } @Override protected void sleepMicrosUninterruptibly ( long micros ) { } } ; public PackageSanityTests ( ) { setDefault ( AbstractFuture . class , SettableFuture . create ( ) ) ; setDefault ( Class . class , IOException . class ) ; setDefault ( RateLimiter . class , RateLimiter . create ( <float> ) ) ; setDefault ( SleepingStopwatch . class , NO_OP_STOPWATCH ) ; setDefault ( long . class , <int> L ) ; } } 
