package org . apache . cassandra . cql3 . selection ; import java . nio . ByteBuffer ; import java . util . List ; import org . apache . cassandra . cql3 . functions . Function ; import org . apache . cassandra . cql3 . functions . ScalarFunction ; import org . apache . cassandra . cql3 . selection . Selection . ResultSetBuilder ; import org . apache . cassandra . exceptions . InvalidRequestException ; final class ScalarFunctionSelector extends AbstractFunctionSelector < ScalarFunction > { public boolean isAggregate ( ) { if ( argSelectors . isEmpty ( ) ) return false ; return argSelectors . get ( <int> ) . isAggregate ( ) ; } public void addInput ( int protocolVersion , ResultSetBuilder rs ) throws InvalidRequestException { for ( int i = <int> , m = argSelectors . size ( ) ; i < m ; i + + ) { Selector s = argSelectors . get ( i ) ; s . addInput ( protocolVersion , rs ) ; } } public void reset ( ) { } public ByteBuffer getOutput ( int protocolVersion ) throws InvalidRequestException { for ( int i = <int> , m = argSelectors . size ( ) ; i < m ; i + + ) { Selector s = argSelectors . get ( i ) ; args . set ( i , s . getOutput ( protocolVersion ) ) ; s . reset ( ) ; } return fun . execute ( protocolVersion , args ) ; } ScalarFunctionSelector ( Function fun , List < Selector > argSelectors ) { super ( ( ScalarFunction ) fun , argSelectors ) ; } } 
