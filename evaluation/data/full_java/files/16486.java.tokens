package org . junit . runners . model ; import java . util . ArrayList ; import java . util . Collections ; import java . util . List ; import org . junit . internal . Throwables ; public class MultipleFailureException extends Exception { private static final long serialVersionUID = <int> ; private final List < Throwable > fErrors ; public MultipleFailureException ( List < Throwable > errors ) { this . fErrors = new ArrayList < Throwable > ( errors ) ; } public List < Throwable > getFailures ( ) { return Collections . unmodifiableList ( fErrors ) ; } @Override public String getMessage ( ) { StringBuilder sb = new StringBuilder ( String . format ( <str> , fErrors . size ( ) ) ) ; for ( Throwable e : fErrors ) { sb . append ( String . format ( <str> , e . getClass ( ) . getName ( ) , e . getMessage ( ) ) ) ; } return sb . toString ( ) ; } @SuppressWarnings ( <str> ) public static void assertEmpty ( List < Throwable > errors ) throws Exception { if ( errors . isEmpty ( ) ) { return ; } if ( errors . size ( ) = = <int> ) { throw Throwables . rethrowAsException ( errors . get ( <int> ) ) ; } throw new org . junit . internal . runners . model . MultipleFailureException ( errors ) ; } } 
