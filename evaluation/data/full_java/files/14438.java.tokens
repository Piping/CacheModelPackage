package org . gradle . model . internal . registry ; import org . gradle . model . internal . core . ModelNode ; import org . gradle . model . internal . core . ModelPath ; class NodeAtState implements Comparable < NodeAtState > { public final ModelPath path ; public final ModelNode . State state ; public NodeAtState ( ModelPath path , ModelNode . State state ) { this . path = path ; this . state = state ; } @Override public String toString ( ) { return <str> + path + <str> + state ; } @Override public int compareTo ( NodeAtState other ) { int diff = path . compareTo ( other . path ) ; if ( diff ! = <int> ) { return diff ; } return state . compareTo ( other . state ) ; } @Override public boolean equals ( Object obj ) { if ( obj = = this ) { return true ; } if ( obj = = null | | obj . getClass ( ) ! = getClass ( ) ) { return false ; } NodeAtState other = ( NodeAtState ) obj ; return path . equals ( other . path ) & & state . equals ( other . state ) ; } @Override public int hashCode ( ) { return path . hashCode ( ) ^ state . hashCode ( ) ; } } 
