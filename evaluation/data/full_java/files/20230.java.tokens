package io . netty . channel ; import io . netty . buffer . ByteBuf ; import io . netty . buffer . ByteBufHolder ; public final class DefaultMessageSizeEstimator implements MessageSizeEstimator { private static final class HandleImpl implements Handle { private final int unknownSize ; private HandleImpl ( int unknownSize ) { this . unknownSize = unknownSize ; } @Override public int size ( Object msg ) { if ( msg instanceof ByteBuf ) { return ( ( ByteBuf ) msg ) . readableBytes ( ) ; } if ( msg instanceof ByteBufHolder ) { return ( ( ByteBufHolder ) msg ) . content ( ) . readableBytes ( ) ; } if ( msg instanceof FileRegion ) { return <int> ; } return unknownSize ; } } public static final MessageSizeEstimator DEFAULT = new DefaultMessageSizeEstimator ( <int> ) ; private final Handle handle ; public DefaultMessageSizeEstimator ( int unknownSize ) { if ( unknownSize < <int> ) { throw new IllegalArgumentException ( <str> + unknownSize + <str> ) ; } handle = new HandleImpl ( unknownSize ) ; } @Override public Handle newHandle ( ) { return handle ; } } 
