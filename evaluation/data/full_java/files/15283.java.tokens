package org . gradle . api . internal . plugins ; import org . apache . commons . lang . StringUtils ; import org . gradle . api . Task ; import org . gradle . api . artifacts . Configuration ; import org . gradle . api . artifacts . ConfigurationContainer ; import org . gradle . api . tasks . TaskContainer ; public class BuildConfigurationRule extends AbstractRule { public static final String PREFIX = <str> ; private final ConfigurationContainer configurations ; private final TaskContainer tasks ; public BuildConfigurationRule ( ConfigurationContainer configurations , TaskContainer tasks ) { this . configurations = configurations ; this . tasks = tasks ; } public String getDescription ( ) { return String . format ( <str> , PREFIX ) ; } public void apply ( String taskName ) { if ( taskName . startsWith ( PREFIX ) ) { String configurationName = StringUtils . uncapitalize ( taskName . substring ( PREFIX . length ( ) ) ) ; Configuration configuration = configurations . findByName ( configurationName ) ; if ( configuration ! = null ) { Task task = tasks . create ( taskName ) ; task . dependsOn ( configuration . getAllArtifacts ( ) ) ; task . setDescription ( String . format ( <str> , configuration ) ) ; } } } } 
