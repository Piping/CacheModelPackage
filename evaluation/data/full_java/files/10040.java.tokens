package com . google . common . collect . testing . testers ; import com . google . common . annotations . GwtCompatible ; import com . google . common . collect . testing . AbstractCollectionTester ; import com . google . common . collect . testing . Helpers ; import java . util . Collection ; import java . util . List ; @GwtCompatible public class AbstractListTester < E > extends AbstractCollectionTester < E > { protected final List < E > getList ( ) { return ( List < E > ) collection ; } @Override protected void expectContents ( Collection < E > expectedCollection ) { List < E > expectedList = Helpers . copyToList ( expectedCollection ) ; if ( getList ( ) . size ( ) ! = expectedList . size ( ) ) { fail ( <str> + reportContext ( expectedList ) ) ; } for ( int i = <int> ; i < expectedList . size ( ) ; i + + ) { E expected = expectedList . get ( i ) ; E actual = getList ( ) . get ( i ) ; if ( expected ! = actual & & ( expected = = null | | ! expected . equals ( actual ) ) ) { fail ( <str> + i + <str> + reportContext ( expectedList ) ) ; } } } private String reportContext ( List < E > expected ) { return Platform . format ( <str> , expected , this . collection ) ; } } 
