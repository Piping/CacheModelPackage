module Msf::DBManager::WMAP def create_request ( host , port , ssl , meth , path , headers , query , body , respcode , resphead , response ) :: ActiveRecord :: Base . connection_pool . with_connection { req = :: Mdm :: WmapRequest . create ( <str> = > host , <str> = > host , <str> = > port , <str> = > ssl , <str> = > meth , <str> = > path , <str> = > headers , <str> = > query , <str> = > body , <str> = > respcode , <str> = > resphead , <str> = > response ) } end def create_target ( host , port , ssl , sel ) :: ActiveRecord :: Base . connection_pool . with_connection { tar = :: Mdm :: WmapTarget . create ( <str> = > host , <str> = > host , <str> = > port , <str> = > ssl , <str> = > sel ) } end def delete_all_targets :: ActiveRecord :: Base . connection_pool . with_connection { :: Mdm :: WmapTarget . delete_all } end def each_distinct_target ( & block ) request_distinct_targets . each do | target | block . call ( target ) end end def each_request ( & block ) requests . each do | request | block . call ( request ) end end def each_request_target ( & block ) target_requests ( <str> ) . each do | req | block . call ( req ) end end def each_request_target_with_body ( & block ) target_requests ( <str> ) . each do | req | block . call ( req ) end end def each_request_target_with_headers ( & block ) target_requests ( <str> ) . each do | req | block . call ( req ) end end def each_request_target_with_path ( & block ) target_requests ( <str> ) . each do | req | block . call ( req ) end end def each_request_target_with_query ( & block ) target_requests ( <str> ) . each do | req | block . call ( req ) end end def each_target ( & block ) targets . each do | target | block . call ( target ) end end def get_target ( id ) :: ActiveRecord :: Base . connection_pool . with_connection { target = :: Mdm :: WmapTarget . where ( <str> , id ) . first ( ) return target } end def request_distinct_targets :: ActiveRecord :: Base . connection_pool . with_connection { :: Mdm :: WmapRequest . select ( <str> ) } end def request_sql ( host , port , extra_condition ) :: ActiveRecord :: Base . connection_pool . with_connection { :: Mdm :: WmapRequest . where ( <str> extra_condition <str> , host , port ) } end def requests :: ActiveRecord :: Base . connection_pool . with_connection { :: Mdm :: WmapRequest . all } end def selected_host :: ActiveRecord :: Base . connection_pool . with_connection { selhost = :: Mdm :: WmapTarget . where ( <str> ) . first ( ) if selhost return selhost . host else return end } end def selected_id selected_wmap_target . object_id end def selected_port selected_wmap_target . port end def selected_ssl selected_wmap_target . ssl end def selected_wmap_target :: ActiveRecord :: Base . connection_pool . with_connection { :: Mdm :: WmapTarget . find . where ( <str> ) } end def sql_query ( sqlquery ) :: ActiveRecord :: Base . connection_pool . with_connection { ActiveRecord :: Base . connection . select_all ( sqlquery ) } end def target_requests ( extra_condition ) :: ActiveRecord :: Base . connection_pool . with_connection { :: Mdm :: WmapRequest . where ( <str> extra_condition <str> , selected_host , selected_port ) } end def targets :: ActiveRecord :: Base . connection_pool . with_connection { :: Mdm :: WmapTarget . all } end end 
