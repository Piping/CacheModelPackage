class CreateCategoryTranslationTables < ActiveRecord :: Migration class PublicBodyCategory < ActiveRecord :: Base translates <str> , <str> end class PublicBodyHeading < ActiveRecord :: Base translates <str> end def up default_locale = I18n . locale . to_s fields = { <str> = > <str> , <str> = > <str> } PublicBodyCategory . create_translation_table! ( fields ) PublicBodyCategory . where ( <str> = > default_locale ) . each do | category | category . translated_attributes . each do | a , default | value = category . read_attribute ( a ) unless value . nil? category . send ( <str> a <str> , value ) end end category . save! end PublicBodyCategory . where ( <str> , default_locale ) . each do | category | default_category = PublicBodyCategory . find_by_category_tag_and_locale ( category . category_tag , default_locale ) I18n . with_locale ( category . locale ) do category . translated_attributes . each do | a , default | value = category . read_attribute ( a ) unless value . nil? if default_category default_category . send ( <str> a <str> , value ) else category . send ( <str> a <str> , value ) end end category . delete if default_category end end if default_category default_category . save! category . delete else category . save! end end fields = { <str> = > <str> } PublicBodyHeading . create_translation_table! ( fields ) PublicBodyHeading . where ( <str> = > default_locale ) . each do | heading | heading . translated_attributes . each do | a , default | value = heading . read_attribute ( a ) unless value . nil? heading . send ( <str> a <str> , value ) end end heading . save! end PublicBodyHeading . where ( <str> , default_locale ) . each do | heading | default_heading = PublicBodyHeading . find_by_name_and_locale ( heading . name , default_locale ) I18n . with_locale ( heading . locale ) do heading . translated_attributes . each do | a , default | value = heading . read_attribute ( a ) unless value . nil? if default_heading default_heading . send ( <str> a <str> , value ) else heading . send ( <str> a <str> , value ) end end heading . delete if default_heading end end if default_heading default_heading . save! heading . delete else heading . save! end end remove_column <str> , <str> remove_column <str> , <str> remove_column <str> , <str> remove_column <str> , <str> remove_column <str> , <str> add_index <str> , <str> , <str> = > true end def down add_column <str> , <str> , <str> add_column <str> , <str> , <str> add_column <str> , <str> , <str> add_column <str> , <str> , <str> add_column <str> , <str> , <str> remove_index <str> , <str> new_categories = [ ] PublicBodyCategory . all . each do | category | category . locale = category . translation . locale . to_s I18n . available_locales . each do | locale | if locale . to_s != category . locale translation = category . translations . find_by_locale ( locale ) if translation new_cat = category . dup category . translated_attributes . each do | a , _ | value = translation . read_attribute ( a ) new_cat . send ( <str> a <str> , value ) end new_cat . locale = locale . to_s new_categories << new_cat end else category . save! end end end new_categories . each do | cat | cat . save! end new_headings = [ ] PublicBodyHeading . all . each do | heading | heading . locale = heading . translation . locale . to_s I18n . available_locales . each do | locale | if locale . to_s != heading . locale new_heading = heading . dup translation = heading . translations . find_by_locale ( locale ) if translation heading . translated_attributes . each do | a , _ | value = translation . read_attribute ( a ) new_heading . send ( <str> a <str> , value ) end new_heading . locale = locale . to_s new_headings << new_heading end else heading . save! end end end new_headings . each do | heading | heading . save! end PublicBodyCategory . drop_translation_table! PublicBodyHeading . drop_translation_table! end end 
