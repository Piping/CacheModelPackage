if defined? ( $icon_demo ) && $icon_demo $icon_demo . destroy $icon_demo = nil end $icon_demo = TkToplevel . new { | w | title ( <str> ) iconname ( <str> ) positionWindow ( w ) } base_frame = TkFrame . new ( $icon_demo ) . pack ( <str> = > <str> , <str> = > true ) msg = TkLabel . new ( base_frame ) { font $font wraplength <str> justify <str> text <str> } msg . pack ( <str> = > <str> ) TkFrame . new ( base_frame ) { | frame | TkButton . new ( frame ) { text <str> command proc { tmppath = $icon_demo $icon_demo = nil tmppath . destroy } } . pack ( <str> = > <str> , <str> = > <str> ) TkButton . new ( frame ) { text <str> command proc { showCode <str> } } . pack ( <str> = > <str> , <str> = > <str> ) } . pack ( <str> = > <str> , <str> = > <str> , <str> = > <str> ) flagup = \ TkBitmapImage . new ( <str> = > [ $demo_dir , <str> , <str> , <str> ] . join ( File :: Separator ) , <str> = > \ [ $demo_dir , <str> , <str> , <str> ] . join ( File :: Separator ) ) flagdown = \ TkBitmapImage . new ( <str> = > [ $demo_dir , <str> , <str> , <str> ] . join ( File :: Separator ) , <str> = > \ [ $demo_dir , <str> , <str> , <str> ] . join ( File :: Separator ) ) letters = TkVariable . new TkFrame . new ( base_frame , <str> = > <int> ) { | w | TkFrame . new ( w ) { | f | Tk :: RadioButton . new ( f ) { bitmap <str> + [ $demo_dir , <str> , <str> , <str> ] . join ( File :: Separator ) variable letters value <str> } . pack ( <str> = > <str> , <str> = > <str> ) Tk :: RadioButton . new ( f ) { bitmap <str> + [ $demo_dir , <str> , <str> , <str> ] . join ( File :: Separator ) variable letters value <str> } . pack ( <str> = > <str> , <str> = > <str> ) } . pack ( <str> = > <str> , <str> = > <str> , <str> = > <str> ) Tk :: CheckButton . new ( w ) { image flagdown selectimage flagup indicatoron <int> selectcolor self [ <str> ] } . pack ( <str> = > <str> , <str> = > <str> , <str> = > <str> ) Tk :: CheckButton . new ( w ) { bitmap <str> + [ $demo_dir , <str> , <str> , <str> ] . join ( File :: Separator ) indicatoron <int> selectcolor <str> } . pack ( <str> = > <str> , <str> = > <str> , <str> = > <str> ) } . pack ( <str> = > <str> ) 
