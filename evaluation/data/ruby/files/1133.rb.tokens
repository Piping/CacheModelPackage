module Msf::DBManager::Import::Report def import_report ( report , args , base_dir ) tmp = args [ <str> ] [ <str> ] report_info = { } report . elements . each do | e | node_name = e . name node_value = e . text array_attrs = <str> if array_attrs . member? node_name node_value = JSON . parse ( node_value ) end skip_nodes = <str> next if skip_nodes . member? node_name report_info [ node_name . parameterize . underscore . to_sym ] = node_value end report_info [ <str> ] = args [ <str> ] . id report_id = report_report ( report_info ) report . elements [ <str> ] . elements . each do | artifact | artifact_opts = { } artifact . elements . each do | attr | skip_nodes = <str> next if skip_nodes . member? attr . name symboled_attr = attr . name . parameterize . underscore . to_sym artifact_opts [ symboled_attr ] = attr . text end artifact_opts [ <str> ] = report_id artifact_opts [ <str> ] . gsub! ( <str> , tmp ) report_artifact ( artifact_opts ) end end end 
