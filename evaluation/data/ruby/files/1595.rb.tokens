describe <str> do it <str> do lambda { Complex ( <int> , <int> ) . rationalize } . should raise_error ( RangeError ) end it <str> do lambda { Complex ( <int> , <int> . <int> ) . rationalize } . should raise_error ( RangeError ) end it <str> do Complex ( <int> , <int> ) . rationalize . should == Rational ( <int> , <int> ) Complex ( <int> << <int> + <int> ) . rationalize . should == Rational ( <int> << <int> + <int> , <int> ) end ruby_bug <str> , <str> do it <str> do real = mock_numeric ( <str> ) real . should_receive ( <str> ) . with ( <int> . <int> ) . and_return ( <str> ) Complex ( real , <int> ) . rationalize ( <int> . <int> ) . should == <str> end end it <str> do Complex ( <int> , <int> ) . rationalize ( <int> . <int> ) . should == Rational ( <int> , <int> ) end it <str> do lambda { Complex ( <int> , <int> ) . rationalize ( <int> . <int> , <int> . <int> ) } . should raise_error ( ArgumentError ) lambda { Complex ( <int> , <int> ) . rationalize ( <int> . <int> , <int> . <int> , <int> ) } . should raise_error ( ArgumentError ) end end 
