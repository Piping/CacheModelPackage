require <str> require <str> require <str> require <str> class Metasploit :: Framework :: Command :: Base attr_reader <str> attr_reader <str> def self . require_environment! parsed_options = self . parsed_options parsed_options . environment! ARGV . replace ( parsed_options . positional ) if ! defined? ( Rails ) || Rails . application . nil? require Pathname . new ( __FILE__ ) . parent . parent . parent . parent . parent . join ( <str> , <str> ) end parsed_options . configure ( Rails . application ) Rails . application . require_environment! parsed_options end def self . parsed_options parsed_options_class . new end def self . parsed_options_class @parsed_options_class || = parsed_options_class_name . constantize end def self . parsed_options_class_name @parsed_options_class_name || = <str> parent . parent <str> name . demodulize <str> end def self . start parsed_options = require_environment! new ( <str> : Rails . application , <str> : parsed_options ) . start end def initialize ( attributes = { } ) @application = attributes . fetch ( <str> ) @parsed_options = attributes . fetch ( <str> ) end def start raise NotImplementedError end end 
