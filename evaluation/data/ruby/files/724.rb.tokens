require <str> require <str> module Banzai module Filter class GollumTagsFilter < HTML :: Pipeline :: Filter include ActionView :: Helpers :: TagHelper TAGS_PATTERN = <str> ALLOWED_IMAGE_EXTENSIONS = <str> def call search_text_nodes ( doc ) . each do | node | content = node . content next unless content . match ( TAGS_PATTERN ) html = process_tag ( $1 ) if html && html != node . content node . replace ( html ) end end doc end private def process_tag ( tag ) parts = tag . split ( <str> ) return if parts . size . zero? process_image_tag ( parts ) || process_page_link_tag ( parts ) end def process_image_tag ( parts ) content = parts [ <int> ] . strip return unless image? ( content ) if url? ( content ) path = content elsif file = project_wiki . find_file ( content ) path = :: File . join project_wiki_base_path , file . path end if path content_tag ( <str> , nil , <str> : path ) end end def image? ( path ) path =~ ALLOWED_IMAGE_EXTENSIONS end def url? ( path ) path . start_with? ( * <str> ) end def process_page_link_tag ( parts ) if parts . size == <int> url = parts [ <int> ] . strip else name , url = * parts . compact . map ( & <str> ) end content_tag ( <str> , name || url , <str> : url ) end def project_wiki context [ <str> ] end def project_wiki_base_path project_wiki && project_wiki . wiki_base_path end def validate needs <str> end end end end 
