module Msf::Module::Options attr_reader <str> def validate self . options . validate ( self . datastore ) end protected def deregister_options ( * names ) names . each { | name | self . options . remove_option ( name ) self . datastore . delete ( name ) } end attr_writer <str> def register_advanced_options ( options , owner = self . class ) self . options . add_advanced_options ( options , owner ) self . datastore . import_options ( self . options , <str> , true ) import_defaults ( false ) end def register_evasion_options ( options , owner = self . class ) self . options . add_evasion_options ( options , owner ) self . datastore . import_options ( self . options , <str> , true ) import_defaults ( false ) end def register_options ( options , owner = self . class ) self . options . add_options ( options , owner ) self . datastore . import_options ( self . options , <str> , true ) import_defaults ( false ) end end 
