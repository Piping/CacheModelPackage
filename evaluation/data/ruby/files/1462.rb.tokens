module Rex module Java module Serialization module Model class Utf < Element attr_accessor <str> attr_accessor <str> def initialize ( stream = nil , contents = <str> ) super ( stream ) self . contents = contents self . length = contents . length end def decode ( io ) raw_length = io . read ( <int> ) if raw_length . nil? || raw_length . length != <int> raise Rex :: Java :: Serialization :: DecodeError , <str> end self . length = raw_length . unpack ( <str> ) [ <int> ] if length == <int> self . contents = <str> else self . contents = io . read ( length ) if contents . nil? || contents . length != length raise Rex :: Java :: Serialization :: DecodeError , <str> end end self end def encode encoded = [ length ] . pack ( <str> ) encoded << contents encoded end def to_s contents end end end end end end 
