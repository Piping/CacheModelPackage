require <str> require <str> module Fog module Clodo extend Fog :: Provider service ( <str> , <str> ) def self . authenticate ( options ) clodo_auth_url = options [ <str> ] || <str> url = clodo_auth_url . match ( <str> ) ? \ clodo_auth_url : <str> + clodo_auth_url uri = URI . parse ( url ) connection = Fog :: XML :: Connection . new ( url ) @clodo_api_key = options [ <str> ] @clodo_username = options [ <str> ] response = connection . request ( { <str> = > [ <int> , <int> ] , <str> = > { <str> = > @clodo_api_key , <str> = > @clodo_username } , <str> = > uri . host , <str> = > <str> , <str> = > ( uri . path and not uri . path . empty? ) ? uri . path : <str> } ) response . headers . reject do | key , value | ! [ <str> , <str> , <str> , <str> ] . include? ( key ) end end end end 
