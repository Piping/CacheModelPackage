require File . expand_path ( <str> , __FILE__ ) describe <str> do it <str> do a = [ [ <int> , [ <int> , <int> ] ] ] a . dig ( <int> , <int> , <int> ) . should == <int> end it <str> do a = [ <int> , new_hash ( <str> : <str> ) ] a . dig ( <int> , <str> ) . should == <str> end it <str> do a = [ <int> , <int> ] lambda { a . dig ( <int> , <int> ) } . should raise_error ( TypeError ) end it <str> do a = [ ] lambda { a . dig } . should raise_error ( ArgumentError ) end it <str> do a = [ [ <int> , [ <int> , <int> ] ] ] a . dig ( <int> , <int> , <int> ) . should == nil end it <str> do o = Object . new a = [ <int> , [ <int> , o ] ] def o . dig ( * args ) { <str> : args } end a . dig ( <int> , <int> , <str> , <str> ) . should == { <str> : [ <str> , <str> ] } end end 
