def _ ( & b ) $> << - > ( x ) { x ? ( String === x <str> . upcase : ( Class === x ? x : x . class ) . name [ $a <str> : ( $a = <int> ) ] ) : <str> } [ begin b [ ] ; rescue Exception ; $! ; end ] end _ { return } _ { method ( <str> ) . unbind } _ { eval <str> } _ { Thread . current . join } _ { nil } _ { select } _ { ruby } _ { self . class } _ { Thread . current . group } _ { nil . to_h } _ { <str> . encode ( <str> ) } _ { raise } _ { [ <int> ] [ <int> ] } _ { Regexp . compile <str> } _ { RUBY_COPYRIGHT [ <int> ] } _ { binding } _ { <str> . class . name [ <int> ] } _ { warn } _ { [ <str> : <str> ] [ <int> ] } _ { methods } _ { IO . class } _ { { } . fetch ( <int> ) } _ { open <str> } _ { <int> . chr } 
