module Fog module Compute class Cloudstack class Job < Fog :: Model identity <str> , <str> = > <str> attribute <str> , <str> = > <str> attribute <str> , <str> = > <str> attribute <str> attribute <str> , <str> = > <str> , <str> = > <str> attribute <str> , <str> = > <str> attribute <str> , <str> = > <str> , <str> = > <str> attribute <str> , <str> = > <str> , <str> = > <str> attribute <str> , <str> = > <str> , <str> = > <str> attribute <str> , <str> = > <str> def reload requires <str> merge_attributes ( service . query_async_job_result ( <str> = > self . id ) [ <str> ] ) end def ready? self . job_status != <int> end def successful? self . job_result_code == <int> end def result if successful? && model = Fog :: Compute :: Cloudstack . constants . find { | c | c . to_s . downcase == self . job_result . keys . first . to_s } . to_s collection = model . gsub ( <str> ) { | w | <str> w [ <int> , <int> ] <str> w [ <int> , <int> ] . downcase <str> } . downcase + <str> service . send ( collection ) . new ( self . job_result . values . first ) else self . job_result end end def save raise Fog :: Errors :: Error . new ( <str> ) end def destroy raise Fog :: Errors :: Error . new ( <str> ) end end end end end 
