require_relative <str> class TestMkmf class TestFindExecutable < TestMkmf def setup super @path , ENV [ <str> ] = ENV [ <str> ] , @tmpdir end def teardown ENV [ <str> ] = @path super end def test_find_executable bug2669 = <str> name = <str> $$ <str> rand ( <int> ) <str> exts = mkmf { self . class :: CONFIG [ <str> ] } . split stdout . filter { | s | s . sub ( name , <str> ) } exts [ <int> ] || = <str> exts . each do | ext | full = name + ext begin open ( full , <str> ) { | ff | ff . chmod ( <oct> ) } result = mkmf { find_executable ( name ) } ensure File . unlink ( full ) end assert_equal ( <str> @tmpdir <str> name <str> ext <str> , result , bug2669 ) end end def test_find_executable_dir name = <str> $$ <str> rand ( <int> ) <str> exts = mkmf { self . class :: CONFIG [ <str> ] } . split stdout . filter { | s | s . sub ( name , <str> ) } exts [ <int> ] || = <str> exts . each do | ext | full = name + ext begin Dir . mkdir ( full ) result = mkmf { find_executable ( name ) } ensure Dir . rmdir ( full ) end assert_nil ( result ) end end end end 
