require <str> require <str> class TestProc < Test :: Unit :: TestCase class TestBMethod < Test :: Unit :: TestCase end end class TestProc :: TestBMethod class Base def foo ( * a ) a end end class Bound < Base define_method ( <str> , Bug :: Proc . make_call_super ( <int> ) ) define_method ( <str> , Bug :: Proc . make_call_receiver ( nil ) ) end def test_super_in_bmethod obj = Bound . new assert_equal ( [ <int> , <int> ] , obj . foo ( <int> ) ) end def test_block_super obj = Bound . new result = nil obj . foo ( <int> ) { | * a | result = a } assert_equal ( [ <int> , <int> ] , result ) end def test_receiver_in_bmethod obj = Bound . new assert_same ( obj , obj . receiver ) end end 
