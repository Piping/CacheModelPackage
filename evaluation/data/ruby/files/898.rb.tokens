require <str> require <str> module ActionView module RecordIdentifier extend self extend ModelNaming include ModelNaming JOIN = <str> . freeze NEW = <str> . freeze def dom_class ( record_or_class , prefix = nil ) singular = model_name_from_record_or_class ( record_or_class ) . param_key prefix ? <str> prefix <str> JOIN <str> singular <str> : singular end def dom_id ( record , prefix = nil ) if record_id = record_key_for_dom_id ( record ) <str> dom_class ( record , prefix ) <str> JOIN <str> record_id <str> else dom_class ( record , prefix || NEW ) end end protected def record_key_for_dom_id ( record ) key = convert_to_model ( record ) . to_key key ? key . join ( JOIN ) : key end end end 
