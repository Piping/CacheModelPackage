require <str> require <str> module Tk module Iwidgets class Calendar < Tk :: Itk :: Widget end end end class Tk :: Iwidgets :: Calendar TkCommandNames = [ <str> . freeze ] . freeze WidgetClassName = <str> . freeze WidgetClassNames [ WidgetClassName ] || = self def __strval_optkeys super ( ) + [ <str> , <str> , <str> , <str> , <str> ] end private <str> def __listval_optkeys super ( ) << <str> end private <str> def __font_optkeys super ( ) + [ <str> , <str> , <str> , <str> ] end private <str> include Tk :: ValidateConfigure class CalendarCommand < TkValidateCommand class ValidateArgs < TkUtil :: CallbackSubst KEY_TBL = [ [ <str> , <str> , <str> ] , nil ] PROC_TBL = [ [ <str> , TkComm . method ( <str> ) ] , nil ] _setup_subst_table ( KEY_TBL , PROC_TBL ) ; def self . ret_val ( val ) val end end def self . _config_keys [ <str> ] end end def __validation_class_list super ( ) << CalendarCommand end Tk :: ValidateConfigure . __def_validcmd ( binding , CalendarCommand ) def get_string tk_call ( @path , <str> , <str> ) end alias get get_string def get_clicks number ( tk_call ( @path , <str> , <str> ) ) end def select ( date ) tk_call ( @path , <str> , date ) self end def show ( date ) tk_call ( @path , <str> , date ) self end def show_now tk_call ( @path , <str> , <str> ) self end end 
