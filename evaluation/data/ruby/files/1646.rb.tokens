Shindo . tests ( <str> , <str> ) do compute = Fog :: Compute [ <str> ] name = <str> Time . now . to_i <str> response = compute . container_create ( <str> = > name , <str> = > <str> , <str> = > [ <str> ] ) id = response [ <str> ] tests ( <str> ) do response = compute . container_action ( <str> = > id , <str> = > <str> ) test ( <str> ) { response . kind_of? Hash } test ( <str> ) { response [ <str> ] == true } end tests ( <str> ) do response = compute . container_action ( <str> = > id , <str> = > <str> ) test ( <str> ) { response . kind_of? Hash } end tests ( <str> ) do response = compute . container_action ( <str> = > id , <str> = > <str> ) test ( <str> ) { response . kind_of? Hash } test ( <str> ) { response [ <str> ] == false } end tests ( <str> ) do response = compute . container_action ( <str> = > id , <str> = > <str> ) test ( <str> ) { response . kind_of? Array } test ( <str> ) { ! ! ( response . first [ <str> ] =~ <str> ) } end tests ( <str> ) do response = compute . container_action ( <str> = > id , <str> = > <str> ) test ( <str> ) { response . kind_of? String } end end 
