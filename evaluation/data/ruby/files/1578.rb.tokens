BadgeGrouping . seed do | g | g . id = BadgeGrouping :: GettingStarted g . name = <str> g . default_position = <int> end BadgeGrouping . seed do | g | g . id = BadgeGrouping :: Community g . name = <str> g . default_position = <int> end BadgeGrouping . seed do | g | g . id = BadgeGrouping :: Posting g . name = <str> g . default_position = <int> end BadgeGrouping . seed do | g | g . id = BadgeGrouping :: TrustLevel g . name = <str> g . default_position = <int> end BadgeGrouping . seed do | g | g . id = BadgeGrouping :: Other g . name = <str> g . default_position = <int> end Badge . exec_sql <str> BadgeGrouping :: Other <str> trust_level_badges = [ { id : <int> , name : <str> , <str> : BadgeType :: Bronze } , { id : <int> , name : <str> , <str> : BadgeType :: Bronze } , { id : <int> , name : <str> , <str> : BadgeType :: Silver } , { id : <int> , name : <str> , <str> : BadgeType :: Gold } ] trust_level_badges . each do | spec | Badge . seed do | b | b . id = spec [ <str> ] b . default_name = spec [ <str> ] b . badge_type_id = spec [ <str> ] b . query = Badge :: Queries . trust_level ( spec [ <str> ] ) b . default_badge_grouping_id = BadgeGrouping :: TrustLevel b . trigger = Badge :: Trigger :: TrustLevelChange b . default_allow_title = spec [ <str> ] > <int> b . default_icon = <str> b . system = true end end Badge . seed do | b | b . id = Badge :: Reader b . default_name = <str> b . badge_type_id = BadgeType :: Bronze b . multiple_grant = false b . target_posts = false b . show_posts = false b . query = Badge :: Queries :: Reader b . default_badge_grouping_id = BadgeGrouping :: GettingStarted b . auto_revoke = false b . system = true end Badge . seed do | b | b . id = Badge :: ReadGuidelines b . default_name = <str> b . badge_type_id = BadgeType :: Bronze b . multiple_grant = false b . target_posts = false b . show_posts = false b . query = Badge :: Queries :: ReadGuidelines b . default_badge_grouping_id = BadgeGrouping :: GettingStarted b . trigger = Badge :: Trigger :: UserChange b . system = true end Badge . seed do | b | b . id = Badge :: FirstLink b . default_name = <str> b . badge_type_id = BadgeType :: Bronze b . multiple_grant = false b . target_posts = true b . show_posts = true b . query = Badge :: Queries :: FirstLink b . default_badge_grouping_id = BadgeGrouping :: GettingStarted b . trigger = Badge :: Trigger :: PostRevision b . system = true end Badge . seed do | b | b . id = Badge :: FirstQuote b . default_name = <str> b . badge_type_id = BadgeType :: Bronze b . multiple_grant = false b . target_posts = true b . show_posts = true b . query = Badge :: Queries :: FirstQuote b . default_badge_grouping_id = BadgeGrouping :: GettingStarted b . trigger = Badge :: Trigger :: PostRevision b . system = true end Badge . seed do | b | b . id = Badge :: FirstLike b . default_name = <str> b . badge_type_id = BadgeType :: Bronze b . multiple_grant = false b . target_posts = true b . show_posts = true b . query = Badge :: Queries :: FirstLike b . default_badge_grouping_id = BadgeGrouping :: GettingStarted b . trigger = Badge :: Trigger :: PostAction b . system = true end Badge . seed do | b | b . id = Badge :: FirstFlag b . default_name = <str> b . badge_type_id = BadgeType :: Bronze b . multiple_grant = false b . target_posts = true b . show_posts = false b . query = Badge :: Queries :: FirstFlag b . default_badge_grouping_id = BadgeGrouping :: Community b . trigger = Badge :: Trigger :: PostAction b . auto_revoke = false b . system = true end [ [ Badge :: Promoter , <str> , BadgeType :: Bronze , <int> , <int> ] , [ Badge :: Campaigner , <str> , BadgeType :: Silver , <int> , <int> ] , [ Badge :: Champion , <str> , BadgeType :: Gold , <int> , <int> ] , ] . each do | id , name , type , count , trust_level | Badge . seed do | b | b . id = id b . default_name = name b . default_icon = <str> b . badge_type_id = type b . multiple_grant = false b . target_posts = false b . show_posts = false b . query = Badge :: Queries . invite_badge ( count , trust_level ) b . default_badge_grouping_id = BadgeGrouping :: Community b . trigger = Badge :: Trigger :: None b . auto_revoke = true b . system = true end end Badge . seed do | b | b . id = Badge :: FirstShare b . default_name = <str> b . badge_type_id = BadgeType :: Bronze b . multiple_grant = false b . target_posts = true b . show_posts = true b . query = Badge :: Queries :: FirstShare b . default_badge_grouping_id = BadgeGrouping :: GettingStarted b . trigger = Badge :: Trigger :: None b . system = true end [ [ Badge :: NiceShare , <str> , BadgeType :: Bronze , <int> ] , [ Badge :: GoodShare , <str> , BadgeType :: Silver , <int> ] , [ Badge :: GreatShare , <str> , BadgeType :: Gold , <int> ] , ] . each do | spec | id , name , level , count = spec Badge . seed do | b | b . id = id b . default_name = name b . badge_type_id = level b . multiple_grant = true b . target_posts = true b . show_posts = true b . query = Badge :: Queries . sharing_badge ( count ) b . default_badge_grouping_id = BadgeGrouping :: Community b . trigger = Badge :: Trigger :: None b . system = true end end Badge . seed do | b | b . id = Badge :: Welcome b . default_name = <str> b . badge_type_id = BadgeType :: Bronze b . multiple_grant = false b . target_posts = true b . show_posts = true b . query = Badge :: Queries :: Welcome b . default_badge_grouping_id = BadgeGrouping :: Community b . trigger = Badge :: Trigger :: PostAction b . system = true end Badge . seed do | b | b . id = Badge :: Autobiographer b . default_name = <str> b . badge_type_id = BadgeType :: Bronze b . multiple_grant = false b . query = Badge :: Queries :: Autobiographer b . default_badge_grouping_id = BadgeGrouping :: GettingStarted b . trigger = Badge :: Trigger :: UserChange b . system = true end Badge . seed do | b | b . id = Badge :: Editor b . default_name = <str> b . badge_type_id = BadgeType :: Bronze b . multiple_grant = false b . query = Badge :: Queries :: Editor b . default_badge_grouping_id = BadgeGrouping :: Community b . trigger = Badge :: Trigger :: PostRevision b . system = true end like_badges = [ { id : Badge :: NicePost , name : <str> , <str> : BadgeType :: Bronze } , { id : Badge :: GoodPost , name : <str> , <str> : BadgeType :: Silver } , { id : Badge :: GreatPost , name : <str> , <str> : BadgeType :: Gold } , { id : Badge :: NiceTopic , name : <str> , <str> : BadgeType :: Bronze , <str> : true } , { id : Badge :: GoodTopic , name : <str> , <str> : BadgeType :: Silver , <str> : true } , { id : Badge :: GreatTopic , name : <str> , <str> : BadgeType :: Gold , <str> : true } ] like_badges . each do | spec | Badge . seed do | b | b . id = spec [ <str> ] b . default_name = spec [ <str> ] b . badge_type_id = spec [ <str> ] b . multiple_grant = true b . target_posts = true b . show_posts = true b . query = Badge :: Queries . like_badge ( Badge . like_badge_counts [ spec [ <str> ] ] , spec [ <str> ] ) b . default_badge_grouping_id = BadgeGrouping :: Posting b . trigger = Badge :: Trigger :: PostAction b . system = true end end Badge . seed do | b | b . id = Badge :: OneYearAnniversary b . default_name = <str> b . default_icon = <str> b . badge_type_id = BadgeType :: Silver b . query = Badge :: Queries :: OneYearAnniversary b . default_badge_grouping_id = BadgeGrouping :: Community b . trigger = Badge :: Trigger :: None b . auto_revoke = false b . system = true end [ [ Badge :: PopularLink , <str> , BadgeType :: Bronze , <int> ] , [ Badge :: HotLink , <str> , BadgeType :: Silver , <int> ] , [ Badge :: FamousLink , <str> , BadgeType :: Gold , <int> ] , ] . each do | spec | id , name , level , count = spec Badge . seed do | b | b . id = id b . default_name = name b . badge_type_id = level b . multiple_grant = true b . target_posts = true b . show_posts = true b . query = Badge :: Queries . linking_badge ( count ) b . default_badge_grouping_id = BadgeGrouping :: Community b . trigger = Badge :: Trigger :: None b . system = true end end Badge . where ( <str> ) . each do | badge | new_id = [ Badge . maximum ( <str> ) + <int> , <int> ] . max old_id = badge . id badge . update_columns ( id : new_id ) UserBadge . where ( <str> : old_id ) . update_all ( <str> : new_id ) end 
