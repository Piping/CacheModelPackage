require <str> require <str> require <str> require <str> module Metasploit module Framework module LoginScanner class MSSQL include Metasploit :: Framework :: LoginScanner :: Base include Metasploit :: Framework :: LoginScanner :: RexSocket include Metasploit :: Framework :: LoginScanner :: NTLM include Metasploit :: Framework :: MSSQL :: Client DEFAULT_PORT = <int> DEFAULT_REALM = <str> LIKELY_PORTS = [ <int> , <int> , <int> , <int> , <int> , <int> , <int> ] LIKELY_SERVICE_NAMES = [ <str> , <str> , <str> , <str> ] PRIVATE_TYPES = [ <str> , <str> ] REALM_KEY = Metasploit :: Model :: Realm :: Key :: ACTIVE_DIRECTORY_DOMAIN attr_accessor <str> validates <str> , <str> : { in : [ true , false ] } attr_accessor <str> validates <str> , <str> : { in : [ true , false ] } def attempt_login ( credential ) result_options = { <str> : credential , <str> : host , <str> : port , <str> : <str> , <str> : <str> } begin if mssql_login ( credential . public , credential . private , <str> , credential . realm ) result_options [ <str> ] = Metasploit :: Model :: Login :: Status :: SUCCESSFUL else result_options [ <str> ] = Metasploit :: Model :: Login :: Status :: INCORRECT end rescue :: Rex :: ConnectionError result_options [ <str> ] = Metasploit :: Model :: Login :: Status :: UNABLE_TO_CONNECT end :: Metasploit :: Framework :: LoginScanner :: Result . new ( result_options ) end private def set_sane_defaults self . connection_timeout || = <int> self . port || = DEFAULT_PORT self . max_send_size || = <int> self . send_delay || = <int> self . send_lm = true if self . send_lm . nil? self . send_ntlm = true if self . send_ntlm . nil? self . send_spn = true if self . send_spn . nil? self . use_lmkey = false if self . use_lmkey . nil? self . use_ntlm2_session = true if self . use_ntlm2_session . nil? self . use_ntlmv2 = true if self . use_ntlmv2 . nil? self . windows_authentication = false if self . windows_authentication . nil? self . tdsencryption = false if self . tdsencryption . nil? end end end end end 
