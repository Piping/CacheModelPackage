class Redland < Formula desc <str> homepage <str> url <str> sha256 <str> bottle do sha256 <str> = > <str> sha256 <str> = > <str> sha256 <str> = > <str> end revision <int> option <str> , <str> option <str> , <str> depends_on <str> = > <str> depends_on <str> depends_on <str> depends_on <str> depends_on <str> = > <str> depends_on <str> = > <str> depends_on <str> = > <str> resource <str> do url <str> sha256 <str> end fails_with <str> do build <int> end def install args = <str> prefix <str> if build . with? <str> args << <str> else args << <str> end if build . with? <str> args << <str> Formula [ <str> ] . opt_prefix <str> else args << <str> end system <str> , * args system <str> , <str> if <str> . any? { | lang | build . with? lang } resource ( <str> ) . stage do args = <str> prefix <str> if build . with? <str> args << <str> args << <str> end if build . with? <str> <str> =~ <str> ruby_install_dir = lib + <str> + $1 ruby_arch_install_dir = ruby_install_dir + $2 ruby_install_dir . mkpath ruby_arch_install_dir . mkpath args << <str> args << <str> ruby_install_dir <str> args << <str> ruby_arch_install_dir <str> end if build . with? <str> ENV [ <str> ] = lib / <str> args << <str> end ENV . append_path <str> , <str> lib <str> system <str> , * args if build . with? <str> php_extension_dir = lib + <str> php_extension_dir . mkpath inreplace <str> do | s | s . change_make_var! <str> , php_extension_dir s . change_make_var! <str> , php_extension_dir end end system <str> , <str> end end end def caveats s = <str> if build . with? <str> s += <<- <str> EOS <str> . undent <str> EOS end if build . with? <str> s += <<- <str> EOS <str> . undent <str> EOS end s . empty? ? nil : s end end 
