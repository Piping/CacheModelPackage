require <str> module Bosh module Director describe DeploymentPlan :: ManifestValidator do let ( <str> ) { DeploymentPlan :: ManifestValidator . new } let ( <str> ) { Bosh :: Spec :: Deployments . simple_manifest } describe <str> do it <str> do manifest_hash [ <str> ] = [ <str> ] expect { manifest_validator . validate ( manifest_hash , nil ) } . to raise_error ( Bosh :: Director :: DeploymentInvalidProperty , <str> ) end it <str> do manifest_hash [ <str> ] = [ <str> ] expect { manifest_validator . validate ( manifest_hash , nil ) } . to raise_error ( Bosh :: Director :: DeploymentInvalidProperty , <str> ) end it <str> do manifest_hash [ <str> ] = [ <str> ] expect { manifest_validator . validate ( manifest_hash , nil ) } . to raise_error ( Bosh :: Director :: DeploymentInvalidProperty , <str> ) end context <str> do it <str> do manifest_hash . delete ( <str> ) expect { manifest_validator . validate ( manifest_hash , nil ) } . not_to raise_error end it <str> do manifest_hash [ <str> ] . first [ <str> ] = [ { <str> = > <str> } ] expect { manifest_validator . validate ( manifest_hash , nil ) } . to raise_error ( Bosh :: Director :: DeploymentInvalidProperty , <str> ) end end context <str> do let ( <str> ) do { <str> = > [ <str> ] , <str> = > [ <str> ] , } end let ( <str> ) { Bosh :: Spec :: Deployments . simple_cloud_config } it <str> do expect { manifest_validator . validate ( manifest_hash , cloud_config_hash ) } . to raise_error ( DeploymentInvalidProperty , <str> ) end end end end end end 
