require <str> describe Bosh :: Cli :: HashChangeset do def changeset ( m1 , m2 ) cs = Bosh :: Cli :: HashChangeset . new cs . add_hash ( m1 , <str> ) cs . add_hash ( m2 , <str> ) cs end it <str> do m1 = { <str> = > { <str> = > <int> , <str> = > <str> , <str> = > <str> , <str> = > { <str> = > <str> , <str> = > <str> , <str> = > <str> } , <str> = > <str> } , <str> = > [ <int> , <int> , <int> ] , <str> = > { <str> = > <int> , <str> = > <int> } } m2 = { <str> = > { <str> = > <int> , <str> = > <str> , <str> = > <str> , <str> = > { <str> = > <str> , <str> = > <str> , <str> = > <int> } , <str> = > <str> } , <str> = > [ <int> , <int> , <int> ] , <str> = > <str> } mc = changeset ( m1 , m2 ) expect ( mc [ <str> ] [ <str> ] . changed? ) . to be ( true ) expect ( mc [ <str> ] [ <str> ] . old ) . to eq ( <int> ) expect ( mc [ <str> ] [ <str> ] . new ) . to eq ( <int> ) expect ( mc [ <str> ] [ <str> ] . changed? ) . to be ( true ) expect ( mc [ <str> ] [ <str> ] . old ) . to eq ( <str> ) expect ( mc [ <str> ] [ <str> ] . new ) . to eq ( <str> ) expect ( mc [ <str> ] [ <str> ] . changed? ) . to be ( false ) expect ( mc [ <str> ] [ <str> ] . same? ) . to be ( true ) expect ( mc [ <str> ] [ <str> ] . old ) . to eq ( <str> ) expect ( mc [ <str> ] [ <str> ] . new ) . to eq ( <str> ) expect ( mc [ <str> ] [ <str> ] [ <str> ] . changed? ) . to be ( true ) expect ( mc [ <str> ] [ <str> ] [ <str> ] . removed? ) . to be ( true ) expect ( mc [ <str> ] [ <str> ] [ <str> ] . mismatch? ) . to be ( true ) expect ( mc [ <str> ] [ <str> ] [ <str> ] . added? ) . to be ( true ) expect ( mc [ <str> ] [ <str> ] . changed? ) . to be ( true ) expect ( mc [ <str> ] . same? ) . to be ( true ) expect ( mc [ <str> ] . mismatch? ) . to be ( true ) end end 
