require <str> require <str> module RSS TAXO_PREFIX = <str> TAXO_URI = <str> RDF . install_ns ( TAXO_PREFIX , TAXO_URI ) TAXO_ELEMENTS = [ ] <str> . each do | name | full_name = <str> TAXO_PREFIX <str> name <str> BaseListener . install_get_text_element ( TAXO_URI , name , full_name ) TAXO_ELEMENTS << <str> TAXO_PREFIX <str> name <str> end <str> . each do | name | class_name = Utils . to_class_name ( name ) BaseListener . install_class_name ( TAXO_URI , name , <str> class_name <str> ) TAXO_ELEMENTS << <str> TAXO_PREFIX <str> name <str> end module TaxonomyTopicsModel extend BaseModel def self . append_features ( klass ) super klass . install_must_call_validator ( TAXO_PREFIX , TAXO_URI ) <str> . each do | name | klass . install_have_child_element ( name , TAXO_URI , <str> , <str> TAXO_PREFIX <str> name <str> ) end end class TaxonomyTopics < Element include RSS10 Bag = :: RSS :: RDF :: Bag class << self def required_prefix TAXO_PREFIX end def required_uri TAXO_URI end end @tag_name = <str> install_have_child_element ( <str> , RDF :: URI , nil ) install_must_call_validator ( <str> , RDF :: URI ) def initialize ( * args ) if Utils . element_initialize_arguments? ( args ) super else super ( ) self . Bag = args [ <int> ] end self . Bag || = Bag . new end def full_name tag_name_with_prefix ( TAXO_PREFIX ) end def maker_target ( target ) target . taxo_topics end def resources if @Bag @Bag . lis . collect do | li | li . resource end else [ ] end end end end module TaxonomyTopicModel extend BaseModel def self . append_features ( klass ) super var_name = <str> TAXO_PREFIX <str> klass . install_have_children_element ( <str> , TAXO_URI , <str> , var_name ) end class TaxonomyTopic < Element include RSS10 include DublinCoreModel include TaxonomyTopicsModel class << self def required_prefix TAXO_PREFIX end def required_uri TAXO_URI end end @tag_name = <str> install_get_attribute ( <str> , :: RSS :: RDF :: URI , true , nil , nil , <str> RDF :: PREFIX <str> ) install_text_element ( <str> , TAXO_URI , <str> , <str> TAXO_PREFIX <str> ) def initialize ( * args ) if Utils . element_initialize_arguments? ( args ) super else super ( ) self . about = args [ <int> ] end end def full_name tag_name_with_prefix ( TAXO_PREFIX ) end def maker_target ( target ) target . new_taxo_topic end end end class RDF include TaxonomyTopicModel class Channel include TaxonomyTopicsModel end class Item ; include TaxonomyTopicsModel ; end end end 
