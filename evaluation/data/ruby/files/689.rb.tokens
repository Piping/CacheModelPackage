require <str> File . dirname __FILE__ <str> class RbMysql class Charset def initialize ( number , name , csname ) @number , @name , @csname = number , name , csname end attr_reader <str> , <str> , <str> CHARSETS = [ [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , true ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , [ <int> , <str> , <str> , false ] , ] NUMBER_TO_CHARSET = { } COLLATION_TO_CHARSET = { } CHARSET_DEFAULT = { } CHARSETS . each do | number , csname , clname , default | cs = Charset . new number , csname , clname NUMBER_TO_CHARSET [ number ] = cs COLLATION_TO_CHARSET [ clname ] = cs CHARSET_DEFAULT [ csname ] = cs if default end def self . by_number ( n ) raise ClientError , <str> n <str> unless NUMBER_TO_CHARSET . key? n NUMBER_TO_CHARSET [ n ] end def self . by_name ( str ) ret = COLLATION_TO_CHARSET [ str ] || CHARSET_DEFAULT [ str ] raise ClientError , <str> str <str> unless ret ret end if defined? Encoding CHARSET_ENCODING = { <str> = > nil , <str> = > Encoding :: US_ASCII , <str> = > Encoding :: Big5 , <str> = > Encoding :: ASCII_8BIT , <str> = > Encoding :: Windows_1250 , <str> = > Encoding :: Windows_1251 , <str> = > Encoding :: Windows_1256 , <str> = > Encoding :: Windows_1257 , <str> = > Encoding :: CP850 , <str> = > Encoding :: CP852 , <str> = > Encoding :: IBM866 , <str> = > Encoding :: Windows_31J , <str> = > nil , <str> = > Encoding :: EucJP_ms , <str> = > Encoding :: EUC_KR , <str> = > Encoding :: EUC_CN , <str> = > Encoding :: GBK , <str> = > nil , <str> = > Encoding :: ISO_8859_7 , <str> = > Encoding :: ISO_8859_8 , <str> = > nil , <str> = > nil , <str> = > Encoding :: KOI8_R , <str> = > Encoding :: KOI8_U , <str> = > Encoding :: ISO_8859_1 , <str> = > Encoding :: ISO_8859_2 , <str> = > Encoding :: ISO_8859_9 , <str> = > Encoding :: ISO_8859_13 , <str> = > Encoding :: MacCentEuro , <str> = > Encoding :: MacRoman , <str> = > Encoding :: SHIFT_JIS , <str> = > nil , <str> = > nil , <str> = > Encoding :: UTF_16BE , <str> = > Encoding :: EucJP_ms , <str> = > Encoding :: UTF_8 , } def self . to_binary ( value ) value . dup . force_encoding Encoding :: ASCII_8BIT end def encoding enc = CHARSET_ENCODING [ @name . downcase ] raise RbMysql :: ClientError , <str> @name <str> unless enc enc end def convert ( value ) if value . is_a? String and value . encoding != Encoding :: ASCII_8BIT value = value . encode encoding end value end def force_encoding ( value ) if value . is_a? String value = value . dup . force_encoding encoding end value end else def self . to_binary ( value ) value end def encoding nil end def convert ( value ) value end def force_encoding ( value ) value end end end end 
