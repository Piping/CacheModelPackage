class CreateVpc < Bosh :: AwsCliPlugin :: Migration def execute receipt = { } receipt [ <str> ] = config [ <str> ] vpc = Bosh :: AwsCliPlugin :: VPC . create ( ec2 , config [ <str> ] [ <str> ] , config [ <str> ] [ <str> ] ) receipt [ <str> ] = { <str> = > vpc . vpc_id , <str> = > config [ <str> ] [ <str> ] } receipt [ <str> ] = config unless was_vpc_eventually_available? ( vpc ) err <str> vpc . vpc_id <str> end say <str> igw = ec2 . create_internet_gateway vpc . attach_internet_gateway ( igw . id ) security_groups = config [ <str> ] [ <str> ] say <str> security_groups . map <str> | group | group [ <str> ] <str> . join ( <str> ) <str> vpc . create_security_groups ( security_groups ) subnets = config [ <str> ] [ <str> ] say <str> subnets . keys . join ( <str> ) <str> vpc . create_subnets ( subnets ) { | msg | say <str> msg <str> } vpc . create_nat_instances ( subnets ) vpc . setup_subnet_routes ( subnets ) { | msg | say <str> msg <str> } receipt [ <str> ] [ <str> ] = vpc . subnets elbs = config [ <str> ] [ <str> ] ssl_certs = config [ <str> ] say <str> elbs . keys . join ( <str> ) <str> if elbs elbs . each do | name , settings | settings [ <str> ] = config [ <str> ] [ <str> ] e = elb . create ( name , vpc , settings , ssl_certs ) if settings [ <str> ] say <str> settings [ <str> ] <str> config [ <str> ] [ <str> ] <str> route53 . add_record ( settings [ <str> ] , config [ <str> ] [ <str> ] , [ e . dns_name ] , { <str> : settings [ <str> ] , <str> : <str> } ) end end dhcp_options = config [ <str> ] [ <str> ] say <str> vpc . create_dhcp_options ( dhcp_options ) rescue Bosh :: AwsCliPlugin :: ELB :: BadCertificateError = > e err e . message ensure save_receipt ( <str> , receipt ) end private def was_vpc_eventually_available? ( vpc ) ( <int> .. <int> ) . any? do | attempt | begin sleep <int> unless attempt == <int> vpc . state . to_s == <str> rescue Exception = > e say ( <str> e . class <str> e . message <str> ) end end end end 
