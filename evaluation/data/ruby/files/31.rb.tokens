require <str> module ActiveRecord module Integration extend ActiveSupport :: Concern included do class_attribute <str> , <str> = > false self . cache_timestamp_format = <str> end def to_param id && id . to_s end def cache_key ( * timestamp_names ) case when new_record? <str> model_name . cache_key <str> when timestamp_names . any? timestamp = max_updated_column_timestamp ( timestamp_names ) timestamp = timestamp . utc . to_s ( cache_timestamp_format ) <str> model_name . cache_key <str> id <str> timestamp <str> when timestamp = max_updated_column_timestamp timestamp = timestamp . utc . to_s ( cache_timestamp_format ) <str> model_name . cache_key <str> id <str> timestamp <str> else <str> model_name . cache_key <str> id <str> end end module ClassMethods def to_param ( method_name = nil ) if method_name . nil? super ( ) else define_method <str> do if ( default = super ( ) ) && ( result = send ( method_name ) . to_s ) . present? && ( param = result . squish . truncate ( <int> , <str> : <str> , <str> : nil ) . parameterize ) . present? <str> default <str> param <str> else default end end end end end end end 
