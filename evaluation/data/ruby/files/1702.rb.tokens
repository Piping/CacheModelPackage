require <str> require <str> class Bug :: StNumHash class Test_NumHash < Test :: Unit :: TestCase def setup @tbl = Bug :: StNumHash . new <int> . times { | i | @tbl [ i ] = i } end def test_check keys = [ ] @tbl . each do | k , v , t | keys << k t [ <int> ] = <int> if k == <int> true end assert_equal ( [ * <int> .. <int> ] , keys ) end def test_update assert_equal ( true , @tbl . update ( <int> ) { @tbl [ <int> ] = <str> } ) assert_equal ( <str> , @tbl [ <int> ] ) assert_equal ( <str> , @tbl [ <int> ] ) end def test_size_after_delete_safe <int> . downto ( <int> ) do | up | tbl = Bug :: StNumHash . new <int> . upto ( up ) { | i | tbl [ i ] = i } assert_equal ( <int> , tbl . delete_safe ( <int> ) ) assert_equal ( up - <int> , tbl . size , <str> up <str> up - <int> <str> ) end end def test_delete_safe_on_iteration <int> . downto ( <int> ) do | up | tbl = Bug :: StNumHash . new <int> . upto ( up ) { | i | tbl [ i ] = i } assert_nothing_raised ( <str> up <str> ) do tbl . each do | k , v , t | assert_equal k , t . delete_safe ( k ) true end end end end end end 
