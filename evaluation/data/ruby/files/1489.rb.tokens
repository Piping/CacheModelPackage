Shindo . tests ( <str> , [ <str> ] ) do @signer = Fog :: InternetArchive :: SignatureV4 . new ( <str> , <str> , <str> , <str> ) Fog :: Time . now = :: Time . utc ( <int> , <int> , <int> , <int> , <int> , <int> ) tests ( <str> ) do returns ( @signer . sign ( { <str> = > { <str> = > <str> , <str> = > <str> } , <str> = > <str> , <str> = > <str> } , Fog :: Time . now ) ) do <str> end end tests ( <str> ) do returns ( @signer . sign ( { <str> = > { <str> = > <str> , <str> = > <str> } , <str> = > { <str> = > <str> , <str> = > <str> } , <str> = > <str> , <str> = > <str> } , Fog :: Time . now ) ) do <str> end end tests ( <str> ) do returns ( @signer . sign ( { <str> = > { <str> = > <str> , <str> = > <str> } , <str> = > { <str> = > <str> , <str> = > <str> } , <str> = > <str> , <str> = > <str> } , Fog :: Time . now ) ) do <str> end end tests ( <str> ) do returns ( @signer . sign ( { <str> = > { <str> = > <str> , <str> = > <str> } , <str> = > <str> , <str> = > <str> } , Fog :: Time . now ) ) do <str> end end tests ( <str> ) do returns ( @signer . sign ( { <str> = > { <str> = > <str> , <str> = > <str> , <str> = > <str> } , <str> = > <str> , <str> = > <str> , <str> = > <str> } , Fog :: Time . now ) ) do <str> end end Fog :: Time . now = :: Time . now end 
