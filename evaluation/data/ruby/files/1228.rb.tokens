if defined? ( $form_demo ) && $form_demo $form_demo . destroy $form_demo = nil end $form_demo = TkToplevel . new { | w | title ( <str> ) iconname ( <str> ) positionWindow ( w ) } base_frame = TkFrame . new ( $form_demo ) . pack ( <str> = > <str> , <str> = > true ) msg = TkLabel . new ( base_frame ) { font $font wraplength <str> justify <str> text <str> } msg . pack ( <str> = > <str> , <str> = > <str> ) TkFrame . new ( base_frame ) { | frame | TkButton . new ( frame ) { text <str> command proc { tmppath = $form_demo $form_demo = nil tmppath . destroy } } . pack ( <str> = > <str> , <str> = > <str> ) TkButton . new ( frame ) { text <str> command proc { showCode <str> } } . pack ( <str> = > <str> , <str> = > <str> ) } . pack ( <str> = > <str> , <str> = > <str> , <str> = > <str> ) form_data = [ ] ( <int> .. <int> ) . each { | i | f = TkFrame . new ( base_frame , <str> = > <int> ) e = TkEntry . new ( f , <str> = > <str> , <str> = > <int> ) l = TkLabel . new ( f ) e . pack ( <str> = > <str> ) l . pack ( <str> = > <str> ) form_data [ i ] = { <str> = > f , <str> = > e , <str> = > l } } form_data [ <int> ] [ <str> ] . text ( <str> ) form_data [ <int> ] [ <str> ] . text ( <str> ) form_data [ <int> ] [ <str> ] . text ( <str> ) ( <int> .. <int> ) . each { | i | form_data [ i ] [ <str> ] . pack ( <str> = > <str> , <str> = > <str> ) } 
