module ActionDispatch module Http class UploadedFile attr_accessor <str> attr_accessor <str> attr_accessor <str> alias <str> <str> attr_accessor <str> def initialize ( hash ) @tempfile = hash [ <str> ] raise ( ArgumentError , <str> ) unless @tempfile @original_filename = hash [ <str> ] if @original_filename begin @original_filename . encode! ( Encoding :: UTF_8 ) rescue EncodingError @original_filename . force_encoding ( Encoding :: UTF_8 ) end end @content_type = hash [ <str> ] @headers = hash [ <str> ] end def read ( length = nil , buffer = nil ) @tempfile . read ( length , buffer ) end def open @tempfile . open end def close ( unlink_now = false ) @tempfile . close ( unlink_now ) end def path @tempfile . path end def rewind @tempfile . rewind end def size @tempfile . size end def eof? @tempfile . eof? end end end end 
