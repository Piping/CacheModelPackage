require <str> describe ReportsController , <str> do it <str> do post <str> , <str> = > info_requests ( <str> ) . url_title , <str> = > <str> expect ( flash [ <str> ] ) . to match ( <str> ) expect ( response ) . to redirect_to show_request_path ( <str> = > info_requests ( <str> ) . url_title ) end end describe ReportsController , <str> do render_views before do @user = users ( <str> ) session [ <str> ] = @user . id end it <str> do expect { post <str> , <str> = > <str> } . to raise_error ( ActiveRecord :: RecordNotFound ) end it <str> do ir = info_requests ( <str> ) title = ir . url_title expect ( ir . attention_requested ) . to eq ( false ) post <str> , <str> = > title , <str> = > <str> expect ( response ) . to redirect_to show_request_path ( <str> = > title ) ir . reload expect ( ir . attention_requested ) . to eq ( true ) expect ( ir . described_state ) . to eq ( <str> ) end it <str> do info_request = mock_model ( InfoRequest , <str> = > <str> , <str> = = > nil , <str> = > nil ) expect ( InfoRequest ) . to receive ( <str> ) . with ( <str> ) . and_return ( info_request ) expect ( info_request ) . to receive ( <str> ) . with ( <str> , <str> , @user ) post <str> , <str> = > <str> , <str> = > <str> , <str> = > <str> end it <str> do title = info_requests ( <str> ) . url_title post <str> , <str> = > title , <str> = > <str> expect ( response ) . to redirect_to show_request_url ( <str> = > title ) post <str> , <str> = > title , <str> = > <str> expect ( response ) . to redirect_to show_request_url ( <str> = > title ) expect ( flash [ <str> ] ) . to match ( <str> ) end it <str> do ir = info_requests ( <str> ) title = ir . url_title post <str> , <str> = > title , <str> = > <str> deliveries = ActionMailer :: Base . deliveries expect ( deliveries . size ) . to eq ( <int> ) mail = deliveries [ <int> ] expect ( mail . subject ) . to match ( <str> ) expect ( mail . from ) . to include ( @user . email ) expect ( mail . body ) . to include ( @user . name ) end it <str> do info_request = mock_model ( InfoRequest , <str> = > nil , <str> = > <str> , <str> = > [ <str> ] ) expect ( InfoRequest ) . to receive ( <str> ) . with ( <str> ) . and_return ( info_request ) post <str> , <str> = > <str> , <str> = > <str> expect ( response ) . to render_template ( <str> ) expect ( flash [ <str> ] ) . to eq ( <str> ) end end describe ReportsController , <str> do let ( <str> ) { mock_model ( InfoRequest , <str> = > <str> ) } before <str> do expect ( InfoRequest ) . to receive ( <str> ) . with ( <str> ) . and_return ( info_request ) end context <str> do it <str> do get <str> , <str> = > <str> expect ( response ) . not_to render_template ( <str> ) end end context <str> do before <str> do session [ <str> ] = users ( <str> ) . id end it <str> do get <str> , <str> = > <str> expect ( response ) . to render_template ( <str> ) end end end 
