require <str> describe Puppet :: Type . type ( <str> ) do it <str> do expect ( Puppet :: Type . type ( <str> ) . new ( <str> = > <str> ) [ <str> ] ) . to eq ( <str> ) end it <str> do expect ( Puppet :: Type . type ( <str> ) . new ( <str> = > <str> , <str> = > <str> ) [ <str> ] ) . to eq ( <str> ) end it <str> do expect ( Puppet :: Type . type ( <str> ) . new ( <str> = > <str> ) ) . to be_appliable_to_device end it <str> do expect ( Puppet :: Type . type ( <str> ) . attrtype ( <str> ) ) . to eq ( <str> ) end it <str> do expect ( Puppet :: Type . type ( <str> ) . attrtype ( <str> ) ) . to eq ( <str> ) end describe <str> do before do @provider = stub <str> , <str> = > Puppet :: Type . type ( <str> ) . defaultprovider , <str> = > nil Puppet :: Type . type ( <str> ) . defaultprovider . stubs ( <str> ) . returns ( @provider ) end it <str> do Puppet :: Type . type ( <str> ) . new ( <str> = > <str> , <str> = > <str> ) end it <str> do Puppet :: Type . type ( <str> ) . new ( <str> = > <str> , <str> = > <str> ) end it <str> do expect { Puppet :: Type . type ( <str> ) . new ( <str> = > <str> , <str> = > <str> ) } . to raise_error ( Puppet :: ResourceError , <str> ) end end end 
