require <str> require <str> require <str> require <str> class Gem :: Commands :: OpenCommand < Gem :: Command include Gem :: VersionOption def initialize super <str> , <str> add_option ( <str> , <str> , String , <str> ) do | editor , options | options [ <str> ] = editor || get_env_editor end end def arguments <str> end def defaults_str <str> get_env_editor <str> end def description <<- <str> EOF <str> <str> EOF end def usage <str> program_name <str> end def get_env_editor ENV [ <str> ] || ENV [ <str> ] || ENV [ <str> ] || <str> end def execute @version = options [ <str> ] || Gem :: Requirement . default @editor = options [ <str> ] || get_env_editor found = open_gem ( get_one_gem_name ) terminate_interaction <int> unless found end def open_gem name spec = spec_for name return false unless spec open_editor ( spec . full_gem_path ) end def open_editor path Dir . chdir ( path ) do system ( * @editor . split ( <str> ) + [ path ] ) end end def spec_for name spec = Gem :: Specification . find_all_by_name ( name , @version ) . last return spec if spec say <str> name <str> end end 
