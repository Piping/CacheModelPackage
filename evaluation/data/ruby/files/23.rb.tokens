module HasErrors def errors @errors || = ActiveModel :: Errors . new ( self ) end def validate_child ( obj ) return true if obj . valid? add_errors_from ( obj ) false end def rollback_with! ( obj , error ) obj . errors [ <str> ] << error rollback_from_errors! ( obj ) end def rollback_from_errors! ( obj ) add_errors_from ( obj ) raise ActiveRecord :: Rollback . new end def add_errors_from ( obj ) obj . errors . full_messages . each do | msg | errors [ <str> ] << msg unless errors [ <str> ] . include? ( msg ) end end end 
