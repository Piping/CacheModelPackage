Shindo . tests ( <str> , [ <str> ] ) do @service = Fog :: Compute :: VcloudDirector . new tests ( <str> ) do tests ( <str> ) do @query_list = @service . get_execute_query . body tests ( <str> ) . returns ( <str> ) do @query_list [ <str> ] end end end @query_list [ <str> ] . select do | link | link [ <str> ] == <str> end . sort_by do | link | [ link [ <str> ] , link [ <str> ] ] end . each do | link | href = Nokogiri :: XML . fragment ( link [ <str> ] ) query = CGI . parse ( URI . parse ( href . text ) . query ) type = query [ <str> ] . first format = query [ <str> ] . first next if <str> . include? ( type ) tests ( <str> type <str> format <str> ) do pending if Fog . mocking? && ( format != <str> || type != <str> ) tests ( <str> ) . data_matches_schema ( VcloudDirector :: Compute :: Schema :: CONTAINER_TYPE ) do @body = @service . get_execute_query ( type , <str> = > format ) . body end tests ( <str> ) . returns ( link [ <str> ] ) { @body [ <str> ] } unless ( type == <str> || type == <str> ) records_key = @body . keys . find { | key | key . to_s =~ <str> } if records = @body [ records_key ] records . first do | record | case format when <str> tests ( <str> ) . data_matches_schema ( VcloudDirector :: Compute :: Schema :: REFERENCE_TYPE ) do record end end end end end end end if Fog . mocking? tests ( <str> ) do tests ( <str> ) do tests ( <str> ) do output = @service . get_execute_query ( <str> ) . body tests ( <str> ) . returns ( @service . data [ <str> ] . size ) do output [ <str> ] . size end output = @service . get_execute_query ( <str> , <str> = > <str> ) . body tests ( <str> ) . returns ( <int> ) do output [ <str> ] . size end tests ( <str> ) . returns ( @service . data [ <str> ] . size ) do output = @service . get_execute_query ( <str> , <str> = > <str> ) . body output [ <str> ] . size end tests ( <str> ) . raises ( Fog :: Errors :: MockNotImplemented ) do @service . get_execute_query ( <str> , <str> = > <str> ) end tests ( <str> ) . raises ( Fog :: Errors :: MockNotImplemented ) do @service . get_execute_query ( <str> , <str> = > <str> ) end tests ( <str> ) . raises ( Fog :: Errors :: MockNotImplemented ) do @service . get_execute_query ( <str> , <str> = > <str> ) end tests ( <str> ) . raises ( Fog :: Errors :: MockNotImplemented ) do @service . get_execute_query ( <str> , <str> = > <str> ) end tests ( <str> ) . raises ( Fog :: Errors :: MockNotImplemented ) do @service . get_execute_query ( <str> , <str> = > <str> ) end tests ( <str> ) . raises ( Fog :: Errors :: MockNotImplemented ) do @service . get_execute_query ( <str> , <str> = > <str> ) end tests ( <str> ) . raises ( Fog :: Errors :: MockNotImplemented ) do @service . get_execute_query ( <str> , <str> = > <str> ) end tests ( <str> ) . raises ( Fog :: Errors :: MockNotImplemented ) do @service . get_execute_query ( <str> , <str> = > <str> ) end end end end end end 
