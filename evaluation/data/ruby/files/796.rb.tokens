require_relative <str> require <str> begin require <str> rescue LoadError end module REXMLTests class OrderTester < Test :: Unit :: TestCase include REXMLTestUtils TESTDOC = << <str> END <str> <str> END def setup @doc = REXML :: Document . new ( TESTDOC ) @items = REXML :: XPath . match ( @doc , <str> ) end def test_first_element assert_equal <str> , @items [ <int> ] . attributes [ <str> ] end def test_second_element assert_equal <str> , @items [ <int> ] . attributes [ <str> ] end def test_third_element assert_equal <str> , @items [ <int> ] . attributes [ <str> ] end def test_order d = REXML :: Document . new ( <str> ) items = REXML :: XPath . match ( d , <str> ) assert_equal ( <str> , items . collect { | e | e . attributes [ <str> ] } ) d = REXML :: Document . new ( <str> ) items = REXML :: XPath . match ( d , <str> ) assert_equal ( <str> , items . collect { | e | e . attributes [ <str> ] } ) end def test_more_ordering doc = Zlib :: GzipReader . open ( fixture_path ( <str> ) , <str> : <str> ) do | f | REXML :: Document . new ( f ) end actual = [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> ] count = <int> REXML :: XPath . each ( doc , <str> ) { | element | n = element . elements [ <str> ] . text . squeeze ( <str> ) assert_equal ( actual [ count ] , n ) unless n =~ <str> count += <int> } end if defined? ( Zlib :: GzipReader ) end end 
