module Fog module Storage class InternetArchive class Real require <str> def put_object_acl ( bucket_name , object_name , acl , options = { } ) query = { <str> = > nil } data = <str> headers = { } if acl . is_a? ( Hash ) data = Fog :: Storage :: InternetArchive . hash_to_acl ( acl ) else if ! [ <str> , <str> , <str> , <str> ] . include? ( acl ) raise Excon :: Errors :: BadRequest . new ( <str> ) end headers [ <str> ] = acl end headers [ <str> ] = Base64 . encode64 ( Digest :: MD5 . digest ( data ) ) . strip headers [ <str> ] = <str> headers [ <str> ] = Fog :: Time . now . to_date_header request ( { <str> = > data , <str> = > <int> , <str> = > headers , <str> = > <str> bucket_name <str> @host <str> , <str> = > <str> , <str> = > CGI . escape ( object_name ) , <str> = > query } ) end end class Mock def put_object_acl ( bucket_name , object_name , acl , options = { } ) if acl . is_a? ( Hash ) self . data [ <str> ] [ <str> ] [ bucket_name ] [ object_name ] = Fog :: Storage :: InternetArchive . hash_to_acl ( acl ) else if ! [ <str> , <str> , <str> , <str> ] . include? ( acl ) raise Excon :: Errors :: BadRequest . new ( <str> ) end self . data [ <str> ] [ <str> ] [ bucket_name ] [ object_name ] = acl end end end end end end 
