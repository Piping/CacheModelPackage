require File . expand_path ( <str> , __FILE__ ) require File . expand_path ( <str> , __FILE__ ) describe <str> do before ( <str> ) do @method = UnboundMethodSpecs :: SourceLocation . method ( <str> ) . unbind end it <str> do file = @method . source_location . first file . should be_an_instance_of ( String ) file . should == File . dirname ( __FILE__ ) + <str> end it <str> do line = @method . source_location . last line . should be_an_instance_of ( Fixnum ) line . should == <int> end it <str> do UnboundMethodSpecs :: SourceLocation . method ( <str> ) . unbind . source_location . last . should == <int> end it <str> do UnboundMethodSpecs :: SourceLocation . instance_method ( <str> ) . source_location . last . should == <int> end it <str> do line = nil cls = Class . new do line = __LINE__ + <int> define_method ( <str> ) { } end method = cls . instance_method ( <str> ) method . source_location [ <int> ] . should =~ <str> __FILE__ <str> method . source_location [ <int> ] . should == line end it <str> do line = nil cls = Class . new do line = __LINE__ + <int> define_singleton_method ( <str> ) { } end method = cls . method ( <str> ) method . source_location [ <int> ] . should =~ <str> __FILE__ <str> method . source_location [ <int> ] . should == line end end 
