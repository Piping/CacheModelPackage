require <str> require <str> class Metasploit3 < Msf :: Auxiliary include Msf :: Exploit :: Remote :: HttpClient include Msf :: Auxiliary :: WmapScanServer include Msf :: Auxiliary :: Scanner def initialize super ( <str> = > <str> , <str> = > <str> , <str> = > <str> , <str> = > MSF_LICENSE ) register_wmap_options ( { <str> = > <int> , <str> = > { } , } ) end def run_host ( ip ) begin connect res = send_request_raw ( { <str> = > <str> , <str> = > <str> } ) fp = http_fingerprint ( <str> = > res ) print_status ( <str> ip <str> rport <str> fp <str> ) if fp rescue :: Timeout :: Error , :: Errno :: EPIPE ensure disconnect end end end 
