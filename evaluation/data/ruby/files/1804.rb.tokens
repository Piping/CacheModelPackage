require <str> class Puppet :: Pops :: Binder :: SchemeHandler :: ConfdirScheme < Puppet :: Pops :: Binder :: SchemeHandler :: SymbolicScheme def expand_included ( uri , composer ) fqn = fqn_from_path ( uri ) [ <int> ] if is_optional? ( uri ) if Puppet :: Pops :: Binder :: BindingsLoader . loadable? ( composer . confdir , fqn ) [ URI . parse ( <str> + fqn ) ] else [ ] end else [ URI . parse ( <str> + fqn ) ] end end def expand_excluded ( uri , composer ) [ URI . parse ( <str> fqn_from_path ( uri ) [ <int> ] <str> ) ] end end 
