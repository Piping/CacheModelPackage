def floorDisplay ( w , active ) return if $activeFloor == active w . delete ( <str> ) $activeFloor = active floor_bg1 ( w , $floor_colors [ <str> ] , $floor_colors [ <str> ] ) floor_bg2 ( w , $floor_colors [ <str> ] , $floor_colors [ <str> ] ) floor_bg3 ( w , $floor_colors [ <str> ] , $floor_colors [ <str> ] ) w . raise ( <str> active <str> ) TkcRectangle . new ( w , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > <str> , <str> = > <str> ) $floorLabels . clear $floorItems . clear send ( <str> active <str> , w , $floor_colors [ <str> ] ) w . raise ( <str> ) w . move ( <str> , <str> , <str> ) w . move ( <str> , <str> , <str> ) TkcWindow . new ( w , <int> , <int> , <str> = > <str> , <str> = > $floor_entry ) TkcText . new ( w , <int> , <int> , <str> = > <str> , <str> = > <str> ) w [ <str> ] = w . bbox ( <str> ) end def newRoom ( w ) id = w . find_withtag ( <str> ) [ <int> ] $currentRoom . value = $floorLabels [ id . id ] if id != <str> Tk . update ( true ) end def roomChanged ( w , * args ) w . delete ( <str> ) item = $floorItems [ $currentRoom . value ] return if item == nil new = TkcPolygon . new ( w , * ( w . coords ( item ) ) ) new . configure ( <str> = > $floor_colors [ <str> ] , <str> = > <str> ) w . raise ( new , <str> ) end def floor_bg1 ( w , fill , outline ) TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > [ <str> , <str> ] , <str> = > fill ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) end def floor_bg2 ( w , fill , outline ) TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > [ <str> , <str> ] , <str> = > fill ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) end def floor_bg3 ( w , fill , outline ) TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > [ <str> , <str> ] , <str> = > fill ) TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > [ <str> , <str> ] , <str> = > fill ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) TkcLine . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > outline , <str> = > [ <str> , <str> ] ) end def floor_fg1 ( w , color ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <str> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <str> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> . <int> , <int> . <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> $floorItems [ <str> ] = i TkcText . new ( w , <int> , <int> , <str> = > <str> , <str> = > color , <str> = > <str> , <str> = > [ <str> , <str> ] ) i = TkcPolygon . new ( w , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <int> , <str> = > <str> , <str> = > [ <str> , <str> ] ) $floorLabels [ i . id ] = <str> 
