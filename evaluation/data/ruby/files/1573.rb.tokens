require File . expand_path ( <str> , __FILE__ ) describe <str> do it <str> do h = new_hash ( <str> : new_hash ( <str> : new_hash ( <str> : <int> ) ) ) h . dig ( <str> , <str> , <str> ) . should == <int> end it <str> do h = new_hash ( <str> : [ <int> , <int> , <int> ] ) h . dig ( <str> , <int> ) . should == <int> end it <str> do h = new_hash ( <str> : new_hash ( <str> : new_hash ( <str> : <int> ) ) ) h . dig ( <str> , <str> , <str> ) . should == nil end it <str> do h = new_hash ( <str> : <int> ) lambda { h . dig ( <str> , <int> ) } . should raise_error ( TypeError ) end it <str> do h = { } lambda { h . dig } . should raise_error ( ArgumentError ) end it <str> do o = Object . new h = new_hash ( <str> : o ) def o . dig ( * args ) { <str> : args } end h . dig ( <str> , <str> , <str> ) . should == { <str> : [ <str> , <str> ] } end end 
