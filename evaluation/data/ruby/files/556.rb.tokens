module ContactFakeColumns def self . extended ( base ) base . class_eval do establish_connection ( <str> = > <str> ) connection . data_sources = [ table_name ] connection . primary_keys = { table_name = > <str> } column <str> , <str> column <str> , <str> column <str> , <str> column <str> , <str> column <str> , <str> column <str> , <str> column <str> , <str> column <str> , <str> serialize <str> belongs_to <str> , <str> = > <str> end end def column ( name , sql_type = nil , options = { } ) connection . merge_column ( table_name , name , sql_type , options ) end end class Contact < ActiveRecord :: Base extend ContactFakeColumns end class ContactSti < ActiveRecord :: Base extend ContactFakeColumns column <str> , <str> def type ; <str> end end 
