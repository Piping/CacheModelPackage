n = <int> size = <int> def mkmatrix ( rows , cols ) count = <int> mx = Array . new ( rows ) ( <int> .. ( rows - <int> ) ) . each do | bi | row = Array . new ( cols , <int> ) ( <int> .. ( cols - <int> ) ) . each do | j | row [ j ] = count count += <int> end mx [ bi ] = row end mx end def mmult ( rows , cols , m1 , m2 ) m3 = Array . new ( rows ) ( <int> .. ( rows - <int> ) ) . each do | bi | row = Array . new ( cols , <int> ) ( <int> .. ( cols - <int> ) ) . each do | j | val = <int> ( <int> .. ( cols - <int> ) ) . each do | k | val += m1 . at ( bi ) . at ( k ) * m2 . at ( k ) . at ( j ) end row [ j ] = val end m3 [ bi ] = row end m3 end m1 = mkmatrix ( size , size ) m2 = mkmatrix ( size , size ) mm = Array . new n . times do mm = mmult ( size , size , m1 , m2 ) end 
