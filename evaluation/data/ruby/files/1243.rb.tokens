module Fog module Compute class VcloudDirector class Real def get_network_complete ( id ) response = request ( <str> = > <int> , <str> = > true , <str> = > <str> , <str> = > Fog :: ToHashDocument . new , <str> = > <str> id <str> ) ensure_list! response . body [ <str> ] [ <str> ] [ <str> ] , <str> , <str> response end end class Mock def get_network_complete ( id ) unless network = data [ <str> ] [ id ] raise Fog :: Compute :: VcloudDirector :: Forbidden . new ( <str> ) end body = { <str> = > network [ <str> ] , <str> = > make_href ( <str> id <str> ) , <str> = > <str> , <str> = > id , <str> = > network [ <str> ] , <str> = > { <str> = > { <str> = > { <str> = > network [ <str> ] . to_s , <str> = > network [ <str> ] , <str> = > network [ <str> ] , <str> = > network [ <str> ] , <str> = > network [ <str> ] , <str> = > network [ <str> ] , <str> = > true . to_s , <str> = > { <str> = > [ ] , } , } } , <str> = > network [ <str> ] , <str> = > false . to_s , } , <str> = > network [ <str> ] . to_s , } body [ <str> ] [ <str> ] [ <str> ] [ <str> ] [ <str> ] = network [ <str> ] . map do | ip_range | { <str> = > ip_range [ <str> ] , <str> = > ip_range [ <str> ] } end Excon :: Response . new ( <str> = > <int> , <str> = > { <str> = > <str> body [ <str> ] <str> api_version <str> } , <str> = > body ) end end end end end 
