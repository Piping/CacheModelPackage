module Gem::Deprecate def self . skip @skip || = false end def self . skip = v @skip = v end def skip_during Gem :: Deprecate . skip , original = true , Gem :: Deprecate . skip yield ensure Gem :: Deprecate . skip = original end def deprecate name , repl , year , month class_eval { old = <str> name <str> alias_method old , name define_method name do | * args , & block | klass = self . kind_of? Module target = klass ? <str> self <str> : <str> self . class <str> msg = [ <str> target <str> name <str> , repl == <str> ? <str> : <str> repl <str> , <str> % [ year , month ] , <str> target <str> name <str> Gem . location_of_caller . join ( <str> ) <str> , ] warn <str> msg . join <str> unless Gem :: Deprecate . skip send old , * args , & block end } end module_function <str> , <str> end 
