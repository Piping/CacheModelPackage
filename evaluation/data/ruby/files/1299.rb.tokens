if defined? ( $button_demo ) && $button_demo $button_demo . destroy $button_demo = nil end $button_demo = TkToplevel . new { | w | title ( <str> ) iconname ( <str> ) positionWindow ( w ) } msg = TkLabel . new ( $button_demo ) { font $kanji_font wraplength <str> justify <str> text <str> } msg . pack ( <str> = > <str> ) $button_buttons = Tk :: Frame . new ( $button_demo ) { | frame | TkButton . new ( frame ) { text <str> command proc { tmppath = $button_demo $button_demo = nil tmppath . destroy } } . pack ( <str> = > <str> , <str> = > <str> ) TkButton . new ( frame ) { text <str> command proc { showCode <str> } } . pack ( <str> = > <str> , <str> = > <str> ) } . pack ( <str> = > <str> , <str> = > <str> , <str> = > <str> ) TkButton . new ( $button_demo ) { text <str> width <int> command proc { $button_demo . configure ( <str> , <str> ) $button_buttons . configure ( <str> , <str> ) } } . pack ( <str> = > <str> , <str> = > <str> , <str> = > <int> ) TkButton . new ( $button_demo ) { text <str> width <int> command proc { $button_demo . configure ( <str> , <str> ) $button_buttons . configure ( <str> , <str> ) } } . pack ( <str> = > <str> , <str> = > <str> , <str> = > <int> ) TkButton . new ( $button_demo ) { text <str> width <int> command proc { $button_demo . configure ( <str> , <str> ) $button_buttons . configure ( <str> , <str> ) } } . pack ( <str> = > <str> , <str> = > <str> , <str> = > <int> ) TkButton . new ( $button_demo ) { text <str> width <int> command proc { $button_demo . configure ( <str> , <str> ) $button_buttons . configure ( <str> , <str> ) } } . pack ( <str> = > <str> , <str> = > <str> , <str> = > <int> ) 
