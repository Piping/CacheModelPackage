class Auth :: InstagramAuthenticator < Auth :: Authenticator def name <str> end def after_authenticate ( auth_token ) result = Auth :: Result . new data = auth_token [ <str> ] result . username = screen_name = data [ <str> ] result . name = name = data [ <str> ] . slice! ( <int> ) instagram_user_id = auth_token [ <str> ] result . extra_data = { <str> : instagram_user_id , <str> : screen_name } user_info = InstagramUserInfo . find_by ( <str> : instagram_user_id ) result . user = user_info . try ( <str> ) result end def after_create_account ( user , auth ) data = auth [ <str> ] InstagramUserInfo . create ( <str> : user . id , <str> : data [ <str> ] , <str> : data [ <str> ] ) end def register_middleware ( omniauth ) omniauth . provider <str> , <str> = > lambda { | env | strategy = env [ <str> ] strategy . options [ <str> ] = SiteSetting . instagram_consumer_key strategy . options [ <str> ] = SiteSetting . instagram_consumer_secret } end end 
