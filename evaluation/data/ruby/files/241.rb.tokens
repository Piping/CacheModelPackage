module ActiveRecord module Tasks class SQLiteDatabaseTasks delegate <str> , <str> , <str> : ActiveRecord :: Base def initialize ( configuration , root = ActiveRecord :: Tasks :: DatabaseTasks . root ) @configuration , @root = configuration , root end def create raise DatabaseAlreadyExists if File . exist? ( configuration [ <str> ] ) establish_connection configuration connection end def drop require <str> path = Pathname . new configuration [ <str> ] file = path . absolute? ? path . to_s : File . join ( root , path ) FileUtils . rm ( file ) rescue Errno :: ENOENT = > error raise NoDatabaseError . new ( error . message , error ) end def purge drop rescue NoDatabaseError ensure create end def charset connection . encoding end def structure_dump ( filename ) dbfile = configuration [ <str> ] <str> dbfile <str> filename <str> end def structure_load ( filename ) dbfile = configuration [ <str> ] <str> dbfile <str> filename <str> end private def configuration @configuration end def root @root end end end end 
