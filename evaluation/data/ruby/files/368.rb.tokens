BEGIN { $dryrun = false $tty = STDOUT . tty? until ARGV . empty? case ARGV [ <int> ] when <str> $destdir = $1 when <str> $dryrun = true when <str> $tty = ! $1 else break end ARGV . shift end $dirs = [ ] $files = [ ] } list = ( $_ . chomp! ( <str> ) ? $dirs : $files ) $_ = File . join ( $destdir , $_ ) if $destdir list << $_ END { status = true $\ = ors = ( ! $dryrun and $tty ) ? <str> : <str> $files . each do | file | print <str> file <str> unless $dryrun begin File . unlink ( file ) rescue Errno :: ENOENT rescue status = false puts $! end end end unlink = { } $dirs . each do | dir | unlink [ dir ] = true end while dir = $dirs . pop print <str> dir <str> unless $dryrun begin begin unlink . delete ( dir ) Dir . rmdir ( dir ) rescue Errno :: ENOTDIR raise unless File . symlink? ( dir ) File . unlink ( dir ) end rescue Errno :: ENOENT , Errno :: ENOTEMPTY rescue status = false puts $! else parent = File . dirname ( dir ) $dirs . push ( parent ) unless parent == dir or unlink [ parent ] end end end $\ = nil print ors . chomp exit ( status ) } 
