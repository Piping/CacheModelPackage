module Fog module Vcloud class Compute class Real def generate_outbound_rule ( ) outbound_rule = << <str> EOF <str> <str> EOF outbound_rule end def generate_tcp_rules ( tcp_ports ) firewall_rules = <str> tcp_ports . each do | port | firewall_rules << << <str> EOF <str> <str> EOF end firewall_rules end def generate_udp_rules ( udp_ports ) firewall_rules = <str> udp_ports . each do | port | firewall_rules << << <str> EOF <str> <str> EOF end firewall_rules end def generate_configure_org_network_request ( vapp_id , vapp_network , vapp_network_uri , org_network , org_network_uri , enable_firewall = false , portmap = nil ) firewall_body = <str> if not enable_firewall firewall_body = <str> else firewall_rules = generate_outbound_rule + generate_tcp_rules ( portmap [ <str> ] ) + generate_udp_rules ( portmap [ <str> ] ) firewall_body = << <str> EOF <str> <str> EOF end body = << <str> EOF <str> <str> EOF end def configure_org_network ( vapp_id , vapp_network , vapp_network_uri , org_network , org_network_uri , enable_firewall = false , port_map = nil ) body = generate_configure_org_network_request ( vapp_id , vapp_network , vapp_network_uri , org_network , org_network_uri , enable_firewall , port_map ) request ( <str> = > body , <str> = > <int> , <str> = > { <str> = > <str> } , <str> = > <str> , <str> = > <str> vapp_id <str> , <str> = > true ) end end end end end 
