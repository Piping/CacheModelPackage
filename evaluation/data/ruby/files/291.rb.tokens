require <str> class Puppet :: Network :: HTTP :: API :: Master :: V3 :: Environments def initialize ( env_loader ) @env_loader = env_loader end def call ( request , response ) response . respond_with ( <int> , <str> , JSON . dump ( { <str> = > @env_loader . search_paths , <str> = > Hash [ @env_loader . list . collect do | env | [ env . name , { <str> = > { <str> = > env . full_modulepath , <str> = > env . manifest , <str> = > timeout ( env ) , <str> = > env . config_version || <str> , } } ] end ] } ) ) end private def timeout ( env ) ttl = @env_loader . get_conf ( env . name ) . environment_timeout if ttl == Float :: INFINITY <str> else ttl end end end 
