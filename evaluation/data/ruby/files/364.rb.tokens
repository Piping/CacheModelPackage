module Bosh::Director module ProblemHandlers class UnresponsiveAgent < Base register_as <str> auto_resolution <str> def initialize ( instance_id , data ) super @instance = Models :: Instance . find ( id : instance_id ) unless @instance . vm_cid handler_error ( <str> @instance . vm_cid <str> ) end unless @instance . agent_id handler_error ( <str> @instance . agent_id <str> ) end end def description <str> @instance <str> @instance . vm_cid <str> end resolution <str> do plan { <str> } action { } end resolution <str> do plan { <str> } action { validate ; reboot_vm ( @instance ) } end resolution <str> do plan { <str> @instance <str> } action { validate ; recreate_vm ( @instance ) } end resolution <str> do plan { <str> } action { validate ; delete_vm_reference ( @instance ) } end private def agent_alive? agent_client ( @instance . credentials , @instance . agent_id ) . ping true rescue Bosh :: Director :: RpcTimeout false end def validate if agent_alive? handler_error ( <str> ) end end end end end 
