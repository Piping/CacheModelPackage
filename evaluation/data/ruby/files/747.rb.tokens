require File . expand_path ( <str> , __FILE__ ) require File . expand_path ( <str> , __FILE__ ) describe <str> do it <str> do Math . atan ( <int> ) . should be_kind_of ( Float ) end it <str> do Math . atan ( <int> ) . should be_close ( Math :: PI / <int> , TOLERANCE ) Math . atan ( <int> ) . should be_close ( <int> . <int> , TOLERANCE ) Math . atan ( - <int> ) . should be_close ( - Math :: PI / <int> , TOLERANCE ) Math . atan ( <int> . <int> ) . should be_close ( <int> . <int> , TOLERANCE ) Math . atan ( <int> . <int> ) . should be_close ( <int> . <int> , TOLERANCE ) Math . atan ( <int> . <int> ) . should be_close ( <int> . <int> , TOLERANCE ) end it <str> do lambda { Math . atan ( <str> ) } . should raise_error ( TypeError ) end it <str> do Math . atan ( nan_value ) . nan? . should be_true end it <str> do lambda { Math . atan ( nil ) } . should raise_error ( TypeError ) end it <str> do Math . atan ( MathSpecs :: Float . new ) . should be_close ( <int> . <int> , TOLERANCE ) end end describe <str> do it <str> do IncludesMath . new . send ( <str> , <int> . <int> ) . should be_close ( <int> . <int> , TOLERANCE ) end end 
