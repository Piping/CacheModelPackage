require <str> module ActiveJob module QueueAdapters class SidekiqAdapter def enqueue ( job ) job . provider_job_id = Sidekiq :: Client . push \ <str> = > JobWrapper , <str> = > job . class . to_s , <str> = > job . queue_name , <str> = > [ job . serialize ] end def enqueue_at ( job , timestamp ) job . provider_job_id = Sidekiq :: Client . push \ <str> = > JobWrapper , <str> = > job . class . to_s , <str> = > job . queue_name , <str> = > [ job . serialize ] , <str> = > timestamp end class JobWrapper include Sidekiq :: Worker def perform ( job_data ) Base . execute job_data end end end end end 
