require <str> require <str> RSpec . describe Rex :: Encoder :: Alpha2 :: Generic do it_behaves_like <str> describe <str> do subject ( <str> ) { described_class . default_accepted_chars } it { is_expected . to eq ( ( <str> .. <str> ) . to_a + ( <str> .. <str> ) . to_a + ( <str> .. <str> ) . to_a ) } end describe <str> do subject ( <str> ) { described_class . gen_decoder_prefix ( reg , offset ) } let ( <str> ) { <str> } let ( <str> ) { <int> } it { is_expected . to eq ( <str> ) } end describe <str> do subject ( <str> ) { described_class . gen_decoder ( reg , offset ) } let ( <str> ) { <str> } let ( <str> ) { <int> } it { is_expected . to eq ( <str> ) } end describe <str> do subject ( <str> ) { described_class . gen_second ( block , base ) } let ( <str> ) { <hex> } let ( <str> ) { <hex> } it <str> do expect ( second ^ base ) . to eq ( block ) end end end 
