require <str> require <str> RSpec . describe Msf :: Framework do context <str> do subject ( <str> ) { described_class . new } it <str> do expect { framework } . not_to change { Thread . list . count } end end describe <str> do subject ( <str> ) do described_class . new end it <str> do expect ( described_class . const_get ( <str> ) ) . to eq framework . version end it <str> do major , minor , point , release = framework . version . split ( <str> ) expect ( major . to_i ) . to eq described_class :: Major expect ( minor . to_i ) . to eq described_class :: Minor expect ( point . to_i ) . to eq described_class :: Point expect ( <str> release <str> ) . to eq described_class :: Release end skip <str> do it <str> do major , minor , patch , label = framework . version . split ( <str> ) expect ( major . to_i ) . to eq described_class :: VERSION :: MAJOR expect ( minor . to_i ) . to eq described_class :: VERSION :: MINOR expect ( point . to_i ) . to eq described_class :: VERSION :: POINT expect ( label . to_s ) . to eq described_class :: VERSION :: LABEL end end end end 
