module Msf class Plugin :: ThreadTest < Msf :: Plugin class ConsoleCommandDispatcher include Msf :: Ui :: Console :: CommandDispatcher def name <str> end def commands { <str> = > <str> , <str> = > <str> , <str> = > <str> } end def cmd_start_thread ( * args ) if ( @mythread ) print_line ( <str> ) return end @mythread = :: Thread . new { while ( true ) print_line ( <str> ) select ( nil , nil , nil , <int> ) end } print_line ( <str> ) end def cmd_stop_thread ( * args ) if ( ! @mythread ) print_line ( <str> ) return end @mythread . kill @mythread = nil print_line ( <str> ) end def cmd_list_thread ( * args ) Thread . list . each do | t | print_line ( sprintf ( <str> , t . object_id , t . status , t . priority , t . tsource ) ) print_line ( <str> ) end end end def initialize ( framework , opts ) super add_console_dispatcher ( ConsoleCommandDispatcher ) Thread . class_eval ( <str> ) print_status ( <str> ) end def cleanup remove_console_dispatcher ( <str> ) end def name <str> end def desc <str> end protected end end 
