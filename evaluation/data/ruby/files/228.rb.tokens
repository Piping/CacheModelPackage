require File . expand_path ( <str> , __FILE__ ) with_feature <str> do describe <str> do it <str> do Encoding :: Converter . should have_constant ( <str> ) end it <str> do Encoding :: Converter :: INVALID_MASK . should be_an_instance_of ( Fixnum ) end end describe <str> do it <str> do Encoding :: Converter . should have_constant ( <str> ) end it <str> do Encoding :: Converter :: INVALID_REPLACE . should be_an_instance_of ( Fixnum ) end end describe <str> do it <str> do Encoding :: Converter . should have_constant ( <str> ) end it <str> do Encoding :: Converter :: UNDEF_MASK . should be_an_instance_of ( Fixnum ) end end describe <str> do it <str> do Encoding :: Converter . should have_constant ( <str> ) end it <str> do Encoding :: Converter :: UNDEF_REPLACE . should be_an_instance_of ( Fixnum ) end end describe <str> do it <str> do Encoding :: Converter . should have_constant ( <str> ) end it <str> do Encoding :: Converter :: UNDEF_HEX_CHARREF . should be_an_instance_of ( Fixnum ) end end describe <str> do it <str> do Encoding :: Converter . should have_constant ( <str> ) end it <str> do Encoding :: Converter :: PARTIAL_INPUT . should be_an_instance_of ( Fixnum ) end end describe <str> do it <str> do Encoding :: Converter . should have_constant ( <str> ) end it <str> do Encoding :: Converter :: AFTER_OUTPUT . should be_an_instance_of ( Fixnum ) end end describe <str> do it <str> do Encoding :: Converter . should have_constant ( <str> ) end it <str> do Encoding :: Converter :: UNIVERSAL_NEWLINE_DECORATOR . should be_an_instance_of ( Fixnum ) end end describe <str> do it <str> do Encoding :: Converter . should have_constant ( <str> ) end it <str> do Encoding :: Converter :: CRLF_NEWLINE_DECORATOR . should be_an_instance_of ( Fixnum ) end end describe <str> do it <str> do Encoding :: Converter . should have_constant ( <str> ) end it <str> do Encoding :: Converter :: CR_NEWLINE_DECORATOR . should be_an_instance_of ( Fixnum ) end end describe <str> do it <str> do Encoding :: Converter . should have_constant ( <str> ) end it <str> do Encoding :: Converter :: XML_TEXT_DECORATOR . should be_an_instance_of ( Fixnum ) end end describe <str> do it <str> do Encoding :: Converter . should have_constant ( <str> ) end it <str> do Encoding :: Converter :: XML_ATTR_CONTENT_DECORATOR . should be_an_instance_of ( Fixnum ) end end describe <str> do it <str> do Encoding :: Converter . should have_constant ( <str> ) end it <str> do Encoding :: Converter :: XML_ATTR_QUOTE_DECORATOR . should be_an_instance_of ( Fixnum ) end end end 
