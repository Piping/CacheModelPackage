class AdminDetailedUserSerializer < AdminUserSerializer attributes <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> has_one <str> , <str> : BasicUserSerializer , <str> : <str> has_one <str> , <str> : ApiKeySerializer , <str> : <str> has_one <str> , <str> : BasicUserSerializer , <str> : <str> has_one <str> , <str> : TrustLevel3RequirementsSerializer , <str> : <str> has_many <str> , <str> : <str> , <str> : BasicGroupSerializer def can_revoke_admin scope . can_revoke_admin? ( object ) end def can_grant_admin scope . can_grant_admin? ( object ) end def can_revoke_moderation scope . can_revoke_moderation? ( object ) end def can_grant_moderation scope . can_grant_moderation? ( object ) end def can_delete_all_posts scope . can_delete_all_posts? ( object ) end def can_be_deleted scope . can_delete_user? ( object ) end def can_be_anonymized scope . can_anonymize_user? ( object ) end def topic_count object . topics . count end def include_api_key? scope . is_admin? && api_key . present? end def suspended_by object . suspend_record . try ( <str> ) end def include_tl3_requirements? object . has_trust_level? ( TrustLevel [ <int> ] ) end def include_user_fields? object . user_fields . present? end end 
