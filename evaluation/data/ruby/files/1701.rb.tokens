module Bosh::Director module DeploymentPlan class Network include ValidationHelper VALID_DEFAULTS = <str> . sort attr_accessor <str> attr_accessor <str> def initialize ( name , logger ) @name = name @canonical_name = Canonicalizer . canonicalize ( @name ) @logger = logger end def network_settings ( reservation , default_properties = VALID_DEFAULTS , availability_zone = nil ) raise NotImplementedError , <str> self . class <str> end def has_azs? ( az_names ) raise NotImplementedError end def find_az_names_for_ip ( ip ) raise NotImplementedError end def validate_reference_from_job! ( job_network_spec , job_name ) end def supports_azs? false end def manual? false end end class NetworkWithSubnets < Network def has_azs? ( az_names ) az_names = [ az_names ] . flatten if az_names . compact . empty? && availability_zones . empty? return true end unreferenced_zones = az_names - availability_zones if unreferenced_zones . empty? return true end false end def supports_azs? true end def availability_zones @subnets . map ( & <str> ) . flatten . uniq end end end end 
