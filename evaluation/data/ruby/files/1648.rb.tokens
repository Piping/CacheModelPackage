require <str> require <str> module Bosh::Director::Models describe IpAddress do subject do described_class . make ( <str> : instance , <str> : <str> , <str> : NetAddr :: CIDR . create ( <str> ) . to_i , <str> : true ) end let ( <str> ) { Instance . make ( <str> : <str> , <str> : <int> , <str> : deployment ) } let ( <str> ) { Deployment . make ( name : <str> ) } context <str> do it <str> do results = subject . info expect ( results ) . to eq ( <str> ) end end context <str> do it <str> do invalid_ip = IpAddress . make invalid_ip . address = nil expect { invalid_ip . save } . to raise_error <str> invalid_ip . address = NetAddr :: CIDR . create ( <str> ) . to_i expect { invalid_ip . save } . not_to raise_error end end end end 
