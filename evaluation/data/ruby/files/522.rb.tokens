class Glib < Formula desc <str> homepage <str> url <str> sha256 <str> bottle do sha256 <str> = > <str> sha256 <str> = > <str> sha256 <str> = > <str> end option <str> option <str> , <str> deprecated_option <str> = > <str> depends_on <str> = > <str> depends_on <str> depends_on <str> fails_with <str> do build <int> cause <str> end resource <str> do url <str> version <str> sha256 <str> end patch do url <str> sha256 <str> end patch do url <str> sha256 <str> end if build . universal? patch do url <str> sha256 <str> end end if MacOS . version < <str> patch do url <str> sha256 <str> end end def install ENV . universal_binary if build . universal? inreplace <str> , <str> , HOMEBREW_PREFIX mv <str> , <str> unless MacOS . version < <str> mv <str> , <str> args = <str> prefix <str> var <str> HOMEBREW_PREFIX <str> system <str> , * args if build . universal? buildpath . install resource ( <str> ) system <str> end inreplace <str> , <str> , <str> system <str> system <str> if build . with? <str> system <str> , <str> gettext = Formula [ <str> ] . opt_prefix inreplace lib + <str> do | s | s . gsub! <str> , <str> gettext <str> s . gsub! <str> , <str> gettext <str> end ( share + <str> ) . rmtree end def post_install ( HOMEBREW_PREFIX / <str> ) . mkpath end test do ( testpath / <str> ) . write <<- <str> EOS <str> . undent <str> EOS flags = [ <str> include <str> , <str> lib <str> , <str> ] system ENV . cc , <str> , <str> , <str> , * ( flags + ENV . cflags . to_s . split ) system <str> end end 
