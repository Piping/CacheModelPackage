require <str> module Msf module Exploit::RopDb def initialize ( info = { } ) @rop_db = Rex :: Exploitation :: RopDb . new super end def has_rop? ( rop ) @rop_db . has_rop? ( rop ) end def select_rop ( rop , opts = { } ) rop = @rop_db . select_rop ( rop , opts ) return rop end def generate_rop_payload ( rop , payload , opts = { } ) opts [ <str> ] || = payload_badchars rop_payload = @rop_db . generate_rop_payload ( rop , payload , opts ) return rop_payload end def rop_junk rand_text_alpha ( <int> ) . unpack ( <str> ) [ <int> ] . to_i end def rop_nop make_nops ( <int> ) . unpack ( <str> ) [ <int> ] . to_i end end end 
