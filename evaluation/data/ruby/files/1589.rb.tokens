require <str> require <str> TkPackage . require ( <str> ) module Tk::Tcllib module Widget class ScrolledWindow < TkWindow PACKAGE_NAME = <str> . freeze def self . package_name PACKAGE_NAME end def self . package_version begin TkPackage . require ( <str> ) rescue <str> end end end Scrolledwindow = ScrolledWindow end end class Tk :: Tcllib :: Widget :: ScrolledWindow TkCommandNames = [ <str> . freeze ] . freeze def __numlistval_optkeys [ <str> ] end private <str> def create_self ( keys ) if keys and keys != None tk_call_without_enc ( self . class :: TkCommandNames [ <int> ] , @path , * hash_kv ( keys , true ) ) else tk_call_without_enc ( self . class :: TkCommandNames [ <int> ] , @path ) end end private <str> def get_frame window ( tk_send ( <str> ) ) end def set_widget ( widget ) tk_send ( <str> , widget ) self end end 
