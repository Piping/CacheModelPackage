module Net ; module SSH module PromptMethods module Highline def prompt ( prompt , echo = true ) @highline || = :: HighLine . new @highline . ask ( prompt + <str> ) { | q | q . echo = echo } end end module Termios def prompt ( prompt , echo = true ) $stdout . print ( prompt ) $stdout . flush set_echo ( false ) unless echo $stdin . gets . chomp ensure if ! echo set_echo ( true ) $stdout . puts end end private def set_echo ( enable ) term = :: Termios . getattr ( $stdin ) if enable term . c_lflag |= ( :: Termios :: ECHO | :: Termios :: ICANON ) else term . c_lflag & = ~ :: Termios :: ECHO end :: Termios . setattr ( $stdin , :: Termios :: TCSANOW , term ) end end module Clear def prompt ( prompt , echo = true ) @seen_warning || = false if ! echo && ! @seen_warning $stderr . puts <str> @seen_warning = true end $stdout . print ( prompt ) $stdout . flush $stdin . gets . chomp end end end Prompt = begin require <str> HighLine . track_eof = false PromptMethods :: Highline rescue LoadError begin require <str> PromptMethods :: Termios rescue LoadError PromptMethods :: Clear end end end ; end 
