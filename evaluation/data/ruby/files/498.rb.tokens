require File . expand_path ( <str> , __FILE__ ) require <str> describe <str> do before <str> do @func = FFI . create_function ( FFI :: USE_THIS_PROCESS_AS_LIBRARY , <str> , [ <str> ] , <str> ) end it <str> do @func . call ( - <int> ) . should == <int> end it <str> do lambda { @func . call ( <str> ) } . should raise_error ( TypeError ) end it <str> do lambda { @func . call ( <int> , <int> ) } . should raise_error ( ArgumentError ) end it <str> do lambda { @func . call ( ) } . should raise_error ( ArgumentError ) end it <str> do func = FFI . create_function ( FFI :: USE_THIS_PROCESS_AS_LIBRARY , <str> , [ <str> ] , <str> ) lambda { func . call ( ) } . should_not raise_error ( ArgumentError ) end end 
