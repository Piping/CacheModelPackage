require <str> describe CaseSensitivity , <str> : true do describe <str> do let ( <str> ) { ActiveRecord :: Base . connection } let ( <str> ) { Class . new { include CaseSensitivity } } describe <str> do before do allow ( Gitlab :: Database ) . to receive ( <str> ) . and_return ( true ) allow ( Gitlab :: Database ) . to receive ( <str> ) . and_return ( false ) end describe <str> do it <str> do criteria = double ( <str> ) expect ( connection ) . to receive ( <str> ) . with ( <str> ) . and_return ( <str> ) expect ( model ) . to receive ( <str> ) . with ( <str> , <str> : <str> ) . and_return ( criteria ) expect ( model . iwhere ( <str> : <str> ) ) . to eq ( criteria ) end it <str> do criteria = double ( <str> ) expect ( connection ) . to receive ( <str> ) . with ( <str> ) . and_return ( <str> ) expect ( model ) . to receive ( <str> ) . with ( <str> , <str> : <str> ) . and_return ( criteria ) expect ( model . iwhere ( <str> . to_sym = > <str> ) ) . to eq ( criteria ) end end describe <str> do it <str> do initial = double ( <str> ) final = double ( <str> ) expect ( connection ) . to receive ( <str> ) . with ( <str> ) . and_return ( <str> ) expect ( connection ) . to receive ( <str> ) . with ( <str> ) . and_return ( <str> ) expect ( model ) . to receive ( <str> ) . with ( <str> , <str> : <str> ) . and_return ( initial ) expect ( initial ) . to receive ( <str> ) . with ( <str> , <str> : <str> ) . and_return ( final ) got = model . iwhere ( <str> : <str> , <str> : <str> ) expect ( got ) . to eq ( final ) end it <str> do initial = double ( <str> ) final = double ( <str> ) expect ( connection ) . to receive ( <str> ) . with ( <str> ) . and_return ( <str> ) expect ( connection ) . to receive ( <str> ) . with ( <str> ) . and_return ( <str> ) expect ( model ) . to receive ( <str> ) . with ( <str> , <str> : <str> ) . and_return ( initial ) expect ( initial ) . to receive ( <str> ) . with ( <str> , <str> : <str> ) . and_return ( final ) got = model . iwhere ( <str> . to_sym = > <str> , <str> . to_sym = > <str> ) expect ( got ) . to eq ( final ) end end end describe <str> do before do allow ( Gitlab :: Database ) . to receive ( <str> ) . and_return ( false ) allow ( Gitlab :: Database ) . to receive ( <str> ) . and_return ( true ) end describe <str> do it <str> do criteria = double ( <str> ) expect ( connection ) . to receive ( <str> ) . with ( <str> ) . and_return ( <str> ) expect ( model ) . to receive ( <str> ) . with ( <str> , <str> : <str> ) . and_return ( criteria ) expect ( model . iwhere ( <str> : <str> ) ) . to eq ( criteria ) end it <str> do criteria = double ( <str> ) expect ( connection ) . to receive ( <str> ) . with ( <str> ) . and_return ( <str> ) expect ( model ) . to receive ( <str> ) . with ( <str> , <str> : <str> ) . and_return ( criteria ) expect ( model . iwhere ( <str> . to_sym = > <str> ) ) . to eq ( criteria ) end end describe <str> do it <str> do initial = double ( <str> ) final = double ( <str> ) expect ( connection ) . to receive ( <str> ) . with ( <str> ) . and_return ( <str> ) expect ( connection ) . to receive ( <str> ) . with ( <str> ) . and_return ( <str> ) expect ( model ) . to receive ( <str> ) . with ( <str> , <str> : <str> ) . and_return ( initial ) expect ( initial ) . to receive ( <str> ) . with ( <str> , <str> : <str> ) . and_return ( final ) got = model . iwhere ( <str> : <str> , <str> : <str> ) expect ( got ) . to eq ( final ) end it <str> do initial = double ( <str> ) final = double ( <str> ) expect ( connection ) . to receive ( <str> ) . with ( <str> ) . and_return ( <str> ) expect ( connection ) . to receive ( <str> ) . with ( <str> ) . and_return ( <str> ) expect ( model ) . to receive ( <str> ) . with ( <str> , <str> : <str> ) . and_return ( initial ) expect ( initial ) . to receive ( <str> ) . with ( <str> , <str> : <str> ) . and_return ( final ) got = model . iwhere ( <str> . to_sym = > <str> , <str> . to_sym = > <str> ) expect ( got ) . to eq ( final ) end end end end end 
