module Bosh::Monitor class TcpConnection < EventMachine :: Connection BACKOFF_CEILING = <int> MAX_RETRIES = <int> attr_reader <str> , <str> def initialize ( logger_name , host , port ) @logger_name = logger_name @host = host @port = port @logger = Bhm . logger reset_retries end def reset_retries @retries = <int> end def increment_retries @retries += <int> end def connection_completed reset_retries @reconnecting = false @connected = true @logger . info ( <str> @logger_name <str> ) end def unbind if @connected @logger . warn ( <str> @logger_name <str> ) end @connected = false retry_in = <int> ** [ retries , BACKOFF_CEILING ] . min - <int> increment_retries if retries > MAX_RETRIES raise <str> logger_name <str> MAX_RETRIES <str> end if retries > <int> @logger . info ( <str> logger_name <str> retry_in <str> ) end EM . add_timer ( retry_in ) { retry_reconnect } end def retry_reconnect @logger . info ( <str> @logger_name <str> retries <str> ) reconnect ( @host , @port ) end def receive_data ( data ) @logger . info ( <str> logger_name <str> data . chomp <str> ) end end end 
