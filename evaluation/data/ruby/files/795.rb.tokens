require File . expand_path ( <str> , __FILE__ ) require File . expand_path ( <str> , __FILE__ ) describe <str> do it <str> do o1 = mock ( <str> ) o2 = mock ( <str> ) ( o1 . equal? o1 ) . should == true ( o2 . equal? o2 ) . should == true ( o1 . equal? o2 ) . should == false ( nil . equal? nil ) . should == true ( o1 . equal? nil ) . should == false ( nil . equal? o2 ) . should == false ( <str> . equal? <str> ) . should == false ( true . equal? true ) . should == true ( false . equal? false ) . should == true end it <str> do o1 = <int> o2 = <str> ( <str> . equal? o1 ) . should == false ( <int> . equal? o1 ) . should == true ( <str> . equal? o2 ) . should == true end it <str> do o1 = mock ( <str> ) o1 . stub! ( <str> ) . and_return ( <int> ) o2 = mock ( <str> ) o2 . stub! ( <str> ) . and_return ( <int> ) o1 . equal? ( o2 ) . should be_false end it <str> do o1 = mock ( <str> ) o1 . stub! ( <str> ) . and_return ( true ) o2 = mock ( <str> ) o1 . equal? ( o2 ) . should be_false o3 = mock ( <str> ) o3 . stub! ( <str> ) . and_return ( false ) o3 . equal? ( o3 ) . should be_true end it <str> do o1 = mock ( <str> ) o1 . stub! ( <str> ) . and_return ( true ) o2 = mock ( <str> ) o1 . equal? ( o2 ) . should be_false o3 = mock ( <str> ) o3 . stub! ( <str> ) . and_return ( false ) o3 . equal? ( o3 ) . should be_true end it <str> do o1 = mock ( <str> ) o1 . stub! ( <str> ) . and_return ( <int> ) o2 = mock ( <str> ) o2 . stub! ( <str> ) . and_return ( <int> ) o1 . equal? ( o2 ) . should be_false end end 
