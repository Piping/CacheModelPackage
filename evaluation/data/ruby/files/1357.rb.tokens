require <str> describe SessionsController , <str> : <str> do include Devise :: TestHelpers let ( <str> ) { Object . new } before do @request . env [ <str> ] = Devise . mappings [ <str> ] @user = alice @user . password = <str> @user . password_confirmation = <str> @user . save end describe <str> do it <str> do post <str> , { <str> = > { <str> = > <str> , <str> = > @user . username , <str> = > <str> } } expect ( response ) . to be_redirect expect ( response . location ) . to match <str> stream_url <str> end it <str> do request . headers [ <str> ] = true post <str> , { <str> = > { <str> = > <str> , <str> = > @user . username , <str> = > <str> } } expect ( response ) . to be_redirect expect ( response . location ) . to match <str> stream_url <str> end end describe <str> do before do sign_in <str> , @user end it <str> do delete <str> expect ( response ) . to redirect_to new_user_session_path end it <str> do request . headers [ <str> ] = true delete <str> expect ( response ) . to redirect_to root_path end end describe <str> do context <str> do before do sign_in <str> , @user end it <str> do expect { @controller . send ( <str> ) } . to_not raise_error end end context <str> do before do sign_out <str> end it <str> do expect { @controller . send ( <str> ) } . to_not raise_error end end end end 
