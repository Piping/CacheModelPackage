module Validators ; end class Validators :: StrippedLengthValidator < ActiveModel :: EachValidator def self . validate ( record , attribute , value , range ) unless value . nil? stripped_length = value . strip . length record . errors . add attribute , ( I18n . t ( <str> , <str> : range . begin ) ) unless stripped_length > = range . begin record . errors . add attribute , ( I18n . t ( <str> , <str> : range . end , <str> : stripped_length ) ) unless stripped_length < = range . end else record . errors . add attribute , ( I18n . t ( <str> ) ) end end def validate_each ( record , attribute , value ) range = options [ <str> ] . lambda? ? options [ <str> ] . call : options [ <str> ] self . class . validate ( record , attribute , value , range ) end end 
