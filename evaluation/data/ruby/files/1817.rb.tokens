require <str> describe Gitlab :: Sherlock :: Query , <str> : true do let ( <str> ) { Time . utc ( <int> , <int> , <int> ) } let ( <str> ) { started_at + <int> } let ( <str> ) do described_class . new ( <str> , started_at , finished_at ) end describe <str> do it <str> do sql = <str> bindings = [ [ double ( <str> ) , <int> ] ] query = described_class . new_with_bindings ( sql , bindings , started_at , finished_at ) expect ( query . query ) . to eq ( <str> ) end end describe <str> do it <str> do expect ( query . id ) . to be_an_instance_of ( String ) end end describe <str> do it <str> do expect ( query . query ) . to eq ( <str> ) end end describe <str> do it <str> do expect ( query . started_at ) . to eq ( started_at ) end end describe <str> do it <str> do expect ( query . finished_at ) . to eq ( finished_at ) end end describe <str> do it <str> do expect ( query . backtrace ) . to be_an_instance_of ( Array ) end end describe <str> do it <str> do expect ( query . duration ) . to be_within ( <int> . <int> ) . of ( <int> . <int> ) end end describe <str> do it <str> do expect ( query . to_param ) . to eq ( query . id ) end end describe <str> do it <str> do expect ( query . formatted_query ) . to eq ( <<- <str> EOF <str> . strip ) <str> EOF end end describe <str> do it <str> do frame = query . last_application_frame expect ( frame ) . to be_an_instance_of ( Gitlab :: Sherlock :: Location ) expect ( frame . path ) . to eq ( __FILE__ ) end end describe <str> do it <str> do frames = query . application_backtrace expect ( frames ) . to be_an_instance_of ( Array ) expect ( frames ) . to_not be_empty frames . each do | frame | expect ( frame . path ) . to start_with ( Rails . root . to_s ) end end end describe <str> do it <str> do lines = [ [ <str> ] , [ <str> ] ] result = double ( <str> , <str> : lines ) allow ( query ) . to receive ( <str> ) . and_return ( result ) expect ( query . explain ) . to eq ( <<- <str> EOF <str> . strip ) <str> EOF end end end 
