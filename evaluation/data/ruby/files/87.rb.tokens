require <str> module ContentType class BaseController < ActionController :: Base def index render <str> : <str> end def set_on_response_obj response . content_type = Mime [ <str> ] render <str> : <str> end def set_on_render render <str> : <str> , <str> : Mime [ <str> ] end end class ImpliedController < ActionController :: Base self . view_paths = [ ActionView :: FixtureResolver . new ( <str> = > <str> , <str> = > <str> , <str> = > <str> , <str> = > <str> ) ] end class CharsetController < ActionController :: Base def set_on_response_obj response . charset = <str> render <str> : <str> end def set_as_nil_on_response_obj response . charset = nil render <str> : <str> end end class ExplicitContentTypeTest < Rack :: TestCase test <str> do with_routing do | set | set . draw do get <str> , <str> = > <str> end get <str> assert_body <str> assert_header <str> , <str> end end test <str> do get <str> assert_body <str> assert_header <str> , <str> end test <str> do get <str> assert_body <str> assert_header <str> , <str> end end class ImpliedContentTypeTest < Rack :: TestCase test <str> do get <str> assert_header <str> , <str> end test <str> do get <str> , <str> : { <str> = > <str> } assert_header <str> , <str> end test <str> do get <str> assert_header <str> , <str> end test <str> do get <str> , <str> : { <str> = > <str> } assert_header <str> , <str> end end class ExplicitCharsetTest < Rack :: TestCase test <str> do get <str> assert_body <str> assert_header <str> , <str> end test <str> do get <str> assert_body <str> assert_header <str> , <str> end end end 
