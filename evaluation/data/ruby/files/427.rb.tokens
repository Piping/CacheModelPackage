class Spinach :: Features :: ProjectSourceMarkdownRender < Spinach :: FeatureSteps include SharedAuthentication include SharedPaths include SharedMarkdown step <str> do @project = Project . find_by ( name : <str> ) @project || = create ( <str> , name : <str> , <str> : @user . namespace ) @project . team << [ @user , <str> ] end step <str> do expect ( current_path ) . to eq namespace_project_tree_path ( @project . namespace , @project , <str> ) expect ( page ) . to have_content <str> expect ( page ) . to have_content <str> end step <str> do expect ( page ) . to have_content <str> expect ( page ) . to have_link <str> expect ( page ) . to have_link <str> expect ( page ) . to have_link <str> expect ( page ) . to have_link <str> expect ( page ) . to have_link <str> expect ( page ) . to have_link <str> end step <str> do click_link <str> end step <str> do expect ( current_path ) . to eq namespace_project_blob_path ( @project . namespace , @project , <str> ) expect ( page ) . to have_content <str> end step <str> do click_link <str> end step <str> do expect ( current_path ) . to eq namespace_project_tree_path ( @project . namespace , @project , <str> ) expect ( page ) . to have_content <str> expect ( page ) . to have_content <str> end step <str> do click_link <str> end step <str> do expect ( current_path ) . to eq namespace_project_tree_path ( @project . namespace , @project , <str> ) expect ( page ) . to have_content <str> expect ( page ) . to have_content <str> end step <str> do click_link <str> end step <str> do expect ( current_path ) . to eq namespace_project_blob_path ( @project . namespace , @project , <str> ) expect ( page ) . to have_content <str> end step <str> do page . within ( <str> ) do click_link <str> end end step <str> do page . within ( <str> ) do click_link <str> end end step <str> do page . within <str> do click_link <str> end page . within <str> do click_link <str> end page . within <str> do click_link <str> end end step <str> do expect ( current_path ) . to eq namespace_project_blob_path ( @project . namespace , @project , <str> ) expect ( page ) . to have_content <str> expect ( page ) . to have_link <str> expect ( page ) . to have_link <str> end step <str> do click_link <str> end step <str> do expect ( current_path ) . to eq namespace_project_blob_path ( @project . namespace , @project , <str> ) expect ( page ) . to have_content <str> end step <str> do click_link <str> end When <str> do visit namespace_project_tree_path ( @project . namespace , @project , <str> ) end When <str> do visit namespace_project_blob_path ( @project . namespace , @project , <str> ) end When <str> do visit namespace_project_tree_path ( @project . namespace , @project , <str> ) end When <str> do visit namespace_project_blob_path ( @project . namespace , @project , <str> ) end step <str> do expect ( current_path ) . to eq namespace_project_tree_path ( @project . namespace , @project , <str> ) expect ( page ) . to have_content <str> expect ( page ) . to have_content <str> end step <str> do expect ( current_path ) . to eq namespace_project_blob_path ( @project . namespace , @project , <str> ) expect ( page ) . to have_content <str> expect ( page ) . to have_link <str> expect ( page ) . to have_link <str> end step <str> do expect ( current_path ) . to eq namespace_project_blob_path ( @project . namespace , @project , <str> ) expect ( page ) . to have_content <str> end step <str> do expect ( current_path ) . to eq namespace_project_tree_path ( @project . namespace , @project , <str> ) expect ( page ) . to have_content <str> expect ( page ) . to have_content <str> end step <str> do expect ( current_path ) . to eq namespace_project_blob_path ( @project . namespace , @project , <str> ) expect ( page ) . to have_content <str> end step <str> do find ( <str> , <str> : <str> ) [ <str> ] == current_host + namespace_project_tree_path ( @project . namespace , @project , <str> ) end step <str> do find ( <str> , <str> : <str> ) [ <str> ] == current_host + namespace_project_blob_path ( @project . namespace , @project , <str> ) end step <str> do find ( <str> , <str> : <str> ) [ <str> ] == current_host + namespace_project_tree_path ( @project . namespace , @project , <str> ) end step <str> \ <str> do find ( <str> , <str> : <str> ) [ <str> ] == current_host + namespace_project_blob_path ( @project . namespace , @project , <str> ) end step <str> do find ( <str> , <str> : <str> ) [ <str> ] == current_host + namespace_project_tree_path ( @project . namespace , @project , <str> ) + <str> end step <str> do find ( <str> , <str> : <str> ) [ <str> ] == current_host + namespace_project_tree_path ( @project . namespace , @project , <str> ) + <str> end step <str> \ <str> do find ( <str> , <str> : <str> ) [ <str> ] == current_host + namespace_project_blob_path ( @project . namespace , @project , <str> ) + <str> end step <str> \ <str> do find ( <str> , <str> : <str> ) [ <str> ] == current_host + namespace_project_blob_path ( @project . namespace , @project , <str> ) + <str> end step <str> do find ( <str> , <str> : <str> ) [ <str> ] == current_host + namespace_project_blob_path ( @project . namespace , @project , <str> ) + <str> end step <str> do find ( <str> , <str> : <str> ) [ <str> ] == current_host + namespace_project_blob_path ( @project . namespace , @project , <str> ) + <str> end step <str> do click_link <str> expect ( current_path ) . to eq namespace_project_wiki_path ( @project . namespace , @project , <str> ) end step <str> do fill_in <str> , <str> : <str> fill_in <str> , <str> : <str> click_button <str> end step <str> do expect ( current_path ) . to eq namespace_project_wiki_path ( @project . namespace , @project , <str> ) expect ( page ) . to have_content <str> end step <str> do fill_in <str> , <str> : <str> fill_in <str> , <str> : <str> click_button <str> end step <str> do header_should_have_correct_id_and_link ( <int> , <str> , <str> ) end step <str> do click_link <str> end step <str> do expect ( current_path ) . to eq namespace_project_wiki_path ( @project . namespace , @project , <str> ) page . within ( <str> , <str> ) do expect ( page ) . to have_content <str> expect ( page ) . to have_content <str> end end When <str> do visit namespace_project_wiki_path ( @project . namespace , @project , <str> ) expect ( current_path ) . to eq namespace_project_wiki_path ( @project . namespace , @project , <str> ) end step <str> do click_link <str> end step <str> do expect ( current_path ) . to eq namespace_project_wiki_path ( @project . namespace , @project , <str> ) page . within ( <str> , <str> ) do expect ( page ) . to have_content <str> expect ( page ) . to have_content <str> end end step <str> do click_link <str> end step <str> do expect ( current_path ) . to eq namespace_project_wiki_path ( @project . namespace , @project , <str> ) page . within ( <str> , <str> ) do expect ( page ) . to have_content <str> expect ( page ) . to have_content <str> end end step <str> do visit namespace_project_tree_path ( @project . namespace , @project , <str> ) expect ( current_path ) . to eq namespace_project_tree_path ( @project . namespace , @project , <str> ) end step <str> do click_link <str> end step <str> do expect ( current_path ) . to eq namespace_project_blob_path ( @project . namespace , @project , <str> ) expect ( page ) . to have_content <str> end step <str> do header_should_have_correct_id_and_link ( <int> , <str> , <str> ) end step <str> do header_should_have_correct_id_and_link ( <int> , <str> , <str> ) end end 
