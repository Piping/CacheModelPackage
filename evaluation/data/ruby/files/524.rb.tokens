test_name <str> do require <str> extend Puppet :: Acceptance :: EnvironmentUtils skip_test if agents . any? { | agent | agent [ <str> ] =~ <str> } app_type = File . basename ( __FILE__ , <str> ) tmp_environment = mk_tmp_environment ( app_type ) exported_username = <str> teardown do step <str> do on ( master , <str> master [ <str> ] <str> ) end step <str> do on ( master , <str> File . join ( master . puppet [ <str> ] , <str> , <str> ) <str> , <str> = > true ) end on ( master , <str> File . join ( <str> , <str> , <str> ) <str> master . puppet [ <str> ] <str> , <str> = > true ) step <str> do on master , <str> File . join ( environmentpath , tmp_environment ) <str> end step <str> do on ( hosts , puppet_resource ( <str> exported_username <str> ) , <str> = > true ) end end storeconfigs_backend_name = <str> step <str> do moduledir = File . join ( environmentpath , tmp_environment , <str> ) terminus_class_name = <str> manifest = << <str> MANIFEST <str> <str> MANIFEST apply_manifest_on ( master , manifest , <str> = > true ) end step <str> do on ( master , <str> File . join ( master . puppet [ <str> ] , <str> ) <str> File . join ( <str> , <str> ) <str> ) on ( master , <str> File . join ( master . puppet [ <str> ] , <str> ) <str> ) on ( master , <str> tmp_environment <str> File . join ( master . puppet [ <str> ] , <str> ) <str> ) on ( master , puppet ( <str> ) ) on ( master , puppet ( <str> storeconfigs_backend_name <str> ) ) on ( master , <str> master [ <str> ] <str> ) step <str> do on ( master , puppet ( <str> master . hostname <str> tmp_environment <str> ) ) end agents . each do | agent | step <str> do on ( agent , puppet ( <str> master . hostname <str> tmp_environment <str> ) , <str> = > <int> ) on ( agent , puppet_resource ( <str> exported_username <str> ) , <str> = > true ) do | result | assert_match ( <str> , result . stdout , <str> ) end end end end end 
