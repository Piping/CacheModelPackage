class HelpController < ApplicationController skip_before_action <str> , <str> layout <str> def index @help_index = File . read ( Rails . root . join ( <str> , <str> ) ) @help_index . gsub! ( <str> , <str> ) end def show @category = clean_path_info ( path_params [ <str> ] ) @file = path_params [ <str> ] respond_to do | format | format . any ( <str> , <str> , <str> ) do path = File . join ( Rails . root , <str> , @category , <str> @file <str> ) if File . exist? ( path ) @markdown = File . read ( path ) render <str> else render <str> , <str> : <str> , <str> : <int> end end format . any ( <str> , <str> , <str> ) do path = File . join ( Rails . root , <str> , @category , <str> @file <str> params [ <str> ] <str> ) if File . exist? ( path ) send_file ( path , <str> : <str> ) else head <str> end end format . any { head <str> } end end def shortcuts end def ui end private def path_params params . require ( <str> ) params . require ( <str> ) params end PATH_SEPS = Regexp . union ( * [ :: File :: SEPARATOR , :: File :: ALT_SEPARATOR ] . compact ) def clean_path_info ( path_info ) parts = path_info . split ( PATH_SEPS ) clean = [ ] parts . each do | part | next if part . empty? || part == <str> if part == <str> clean . pop else clean << part end end clean . unshift <str> if parts . empty? || parts . first . empty? :: File . join ( * clean ) end end 
