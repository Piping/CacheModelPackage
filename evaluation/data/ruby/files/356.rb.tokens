class Spinach :: Features :: DashboardMergeRequests < Spinach :: FeatureSteps include SharedAuthentication include SharedPaths include Select2Helper step <str> do should_see ( assigned_merge_request ) should_see ( assigned_merge_request_from_fork ) should_not_see ( authored_merge_request ) should_not_see ( authored_merge_request_from_fork ) should_not_see ( other_merge_request ) end step <str> do should_see ( authored_merge_request ) should_see ( authored_merge_request_from_fork ) should_not_see ( assigned_merge_request ) should_not_see ( assigned_merge_request_from_fork ) should_not_see ( other_merge_request ) end step <str> do should_see ( authored_merge_request ) should_see ( assigned_merge_request ) should_see ( other_merge_request ) end step <str> do authored_merge_request authored_merge_request_from_fork end step <str> do assigned_merge_request assigned_merge_request_from_fork end step <str> do other_merge_request end step <str> do select2 ( current_user . id , <str> : <str> ) select2 ( nil , <str> : <str> ) end step <str> do select2 ( nil , <str> : <str> ) select2 ( nil , <str> : <str> ) end def should_see ( merge_request ) expect ( page ) . to have_content ( merge_request . title [ <int> .. <int> ] ) end def should_not_see ( merge_request ) expect ( page ) . not_to have_content ( merge_request . title [ <int> .. <int> ] ) end def assigned_merge_request @assigned_merge_request || = create <str> , <str> : current_user , <str> : project , <str> : project end def authored_merge_request @authored_merge_request || = create <str> , <str> : <str> , <str> : current_user , <str> : project , <str> : project end def other_merge_request @other_merge_request || = create <str> , <str> : <str> , <str> : project , <str> : project end def authored_merge_request_from_fork @authored_merge_request_from_fork || = create <str> , <str> : <str> , <str> : current_user , <str> : public_project , <str> : forked_project end def assigned_merge_request_from_fork @assigned_merge_request_from_fork || = create <str> , <str> : <str> , <str> : current_user , <str> : public_project , <str> : forked_project end def project @project || = begin project = create <str> project . team << [ current_user , <str> ] project end end def public_project @public_project || = create <str> , <str> end def forked_project @forked_project || = Projects :: ForkService . new ( public_project , current_user ) . execute end end 
