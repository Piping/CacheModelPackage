require <str> describe Workers :: GatherOpenGraphData do before do @ogsite_title = <str> @ogsite_type = <str> @ogsite_image = <str> @ogsite_url = <str> @ogsite_description = <str> @ogsite_body = <str> @ogsite_title <str> @ogsite_title <str> @ogsite_type <str> @ogsite_image <str> @ogsite_url <str> @ogsite_description <str> @oglong_title = <str> * <int> @oglong_url = <str> @oglong_body = <str> @oglong_title <str> @oglong_title <str> @ogsite_type <str> @ogsite_image <str> @oglong_url <str> @ogsite_description <str> @no_open_graph_url = <str> @status_message = FactoryGirl . create ( <str> ) stub_request ( <str> , @ogsite_url ) . to_return ( <str> : <int> , <str> : <str> , <str> : { <str> = > <str> } ) stub_request ( <str> , @ogsite_url ) . to_return ( <str> : <int> , <str> : @ogsite_body , <str> : { <str> = > <str> } ) stub_request ( <str> , @no_open_graph_url ) . to_return ( <str> : <int> , <str> : <str> , <str> : { <str> = > <str> } ) stub_request ( <str> , @no_open_graph_url ) . to_return ( <str> = > <int> , <str> = > <str> , <str> : { <str> = > <str> } ) stub_request ( <str> , @oglong_url ) . to_return ( <str> : <int> , <str> : <str> , <str> : { <str> = > <str> } ) stub_request ( <str> , @oglong_url ) . to_return ( <str> : <int> , <str> : @oglong_body , <str> : { <str> = > <str> } ) end describe <str> do it <str> do Workers :: GatherOpenGraphData . new . perform ( @status_message . id , @ogsite_url ) expect ( a_request ( <str> , @ogsite_url ) ) . to have_been_made end it <str> do <int> . times do | n | Workers :: GatherOpenGraphData . new . perform ( @status_message . id , @ogsite_url ) end expect ( a_request ( <str> , @ogsite_url ) ) . to have_been_made . times ( <int> ) end it <str> do Workers :: GatherOpenGraphData . new . perform ( @status_message . id , @ogsite_url ) ogc = OpenGraphCache . find_by_url ( @ogsite_url ) expect ( ogc . title ) . to eq ( @ogsite_title ) expect ( ogc . ob_type ) . to eq ( @ogsite_type ) expect ( ogc . image ) . to eq ( @ogsite_image ) expect ( ogc . url ) . to eq ( @ogsite_url ) expect ( ogc . description ) . to eq ( @ogsite_description ) Workers :: GatherOpenGraphData . new . perform ( @status_message . id , @ogsite_url ) expect ( OpenGraphCache . where ( <str> : @ogsite_url ) . count ) . to eq ( <int> ) end it <str> do Workers :: GatherOpenGraphData . new . perform ( @status_message . id , @no_open_graph_url ) expect ( OpenGraphCache . find_by_url ( @no_open_graph_url ) ) . to be_nil end it <str> do expect { Workers :: GatherOpenGraphData . new . perform ( <int> , @ogsite_url ) } . to_not raise_error end it <str> do Workers :: GatherOpenGraphData . new . perform ( @status_message . id , @oglong_url ) ogc = OpenGraphCache . find_by_url ( @oglong_url ) expect ( ogc ) . to be_truthy expect ( ogc . title . length ) . to be < = <int> end end end 
