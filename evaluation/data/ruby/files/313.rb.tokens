module Bosh::Director module DeploymentPlan class DeploymentRepo def initialize @permission_authorizer = Bosh :: Director :: PermissionAuthorizer . new end def find_or_create_by_name ( name , options = { } ) attributes = { name : name } deployment = Bosh :: Director :: Models :: Deployment . find ( attributes ) if options [ <str> ] attributes . merge! ( <str> : options [ <str> ] . join ( <str> ) ) end if options [ <str> ] && deployment @permission_authorizer . raise_error_if_unauthorized ( options [ <str> ] , deployment . scopes . split ( <str> ) ) end return deployment if deployment create_for_attributes ( attributes ) end private def create_for_attributes ( attributes ) canonical_name = Canonicalizer . canonicalize ( attributes [ <str> ] ) transactor = Transactor . new transactor . retryable_transaction ( Models :: Deployment . db ) do Bosh :: Director :: Models :: Deployment . each do | other | if Canonicalizer . canonicalize ( other . name ) == canonical_name raise DeploymentCanonicalNameTaken , <str> attributes [ <str> ] <str> canonical_name <str> end end Bosh :: Director :: Models :: Deployment . create ( attributes ) end end end end end 
