require <str> class TestRequestTest < ActiveSupport :: TestCase test <str> do env = ActionDispatch :: TestRequest . create . env assert_equal <str> , env . delete ( <str> ) assert_equal <str> , env . delete ( <str> ) assert_equal <str> , env . delete ( <str> ) assert_equal <str> , env . delete ( <str> ) assert_equal <str> , env . delete ( <str> ) assert_equal <str> , env . delete ( <str> ) assert_equal <str> , env . delete ( <str> ) assert_equal <str> , env . delete ( <str> ) assert_equal <str> , env . delete ( <str> ) assert_equal <str> , env . delete ( <str> ) assert_equal <str> , env . delete ( <str> ) assert_equal <str> , env . delete ( <str> ) assert_equal [ <int> , <int> ] , env . delete ( <str> ) assert_equal <str> , env . delete ( <str> ) . string assert_kind_of StringIO , env . delete ( <str> ) assert_equal true , env . delete ( <str> ) assert_equal true , env . delete ( <str> ) assert_equal false , env . delete ( <str> ) end test <str> do req = ActionDispatch :: TestRequest . create ( { } ) assert_equal ( { } , req . cookies ) assert_equal nil , req . env [ <str> ] req . cookie_jar [ <str> ] = <str> assert_cookies ( { <str> = > <str> } , req . cookie_jar ) req . cookie_jar [ <str> ] = <str> assert_cookies ( { <str> = > <str> , <str> = > <str> } , req . cookie_jar ) assert_nothing_raised do req . cookie_jar [ <str> ] = nil assert_cookies ( { <str> = > <str> , <str> = > nil } , req . cookie_jar ) end req . cookie_jar . delete ( <str> ) assert_cookies ( { <str> = > <str> } , req . cookie_jar ) req . cookie_jar . clear assert_cookies ( { } , req . cookie_jar ) req . cookie_jar . update ( <str> = > <str> ) assert_cookies ( { <str> = > <str> } , req . cookie_jar ) end test <str> do req = ActionDispatch :: TestRequest . create ( { } ) assert_equal false , req . env . empty? end test <str> do req = ActionDispatch :: TestRequest . create ( { } ) assert_equal <str> , req . remote_addr end test <str> do req = ActionDispatch :: TestRequest . create ( <str> = > <str> ) assert_equal <str> , req . remote_addr end test <str> do req = ActionDispatch :: TestRequest . create ( { } ) assert_equal <str> , req . host end test <str> do req = ActionDispatch :: TestRequest . create ( <str> = > <str> ) assert_equal <str> , req . host end test <str> do req = ActionDispatch :: TestRequest . create ( { } ) assert_equal <str> , req . user_agent end test <str> do req = ActionDispatch :: TestRequest . create ( <str> = > <str> ) assert_equal <str> , req . user_agent end private def assert_cookies ( expected , cookie_jar ) assert_equal ( expected , cookie_jar . instance_variable_get ( <str> ) ) end end 
