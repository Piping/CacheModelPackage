require <str> class EmojiSetSiteSetting < EnumSiteSetting NAME = <str> DiscourseEvent . on ( <str> ) do | site_setting | if site_setting . name == NAME && site_setting . value_changed? Emoji . clear_cache previous_value = site_setting . value_was || SiteSetting . defaults [ NAME ] before = <str> previous_value <str> after = <str> site_setting . value <str> Scheduler :: Defer . later ( <str> ) do Post . exec_sql ( <str> , <str> : before , <str> : after , <str> : <str> before <str> ) end end end def self . valid_value? ( val ) values . any? { | v | v [ <str> ] == val . to_s } end def self . values @values || = [ { name : <str> , <str> : <str> } , { name : <str> , <str> : <str> } , { name : <str> , <str> : <str> } , { name : <str> , <str> : <str> } , ] end def self . translate_names? true end end 
