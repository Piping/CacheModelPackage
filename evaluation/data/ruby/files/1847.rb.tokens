require <str> require <str> module Fog module Compute class Cloudstack class Servers < Fog :: Collection model Fog :: Compute :: Cloudstack :: Server def all ( attributes = { } ) response = service . list_virtual_machines ( attributes ) data = response [ <str> ] [ <str> ] || [ ] load ( data ) end def bootstrap ( new_attributes = { } ) server = create ( new_attributes ) server . wait_for { ready? } server end def get ( server_id ) attributes = { <str> = > server_id } servers = service . list_virtual_machines ( attributes ) [ <str> ] [ <str> ] if servers . nil? || servers . empty? servers = service . list_virtual_machines ( <str> = > server_id , <str> = > <str> ) [ <str> ] [ <str> ] end unless servers . nil? || servers . empty? new ( servers . first ) end rescue Fog :: Compute :: Cloudstack :: BadRequest nil end end end end end 
