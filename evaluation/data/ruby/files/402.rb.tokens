require <str> module ActionDispatch module Session class CacheStore < AbstractStore def initialize ( app , options = { } ) @cache = options [ <str> ] || Rails . cache options [ <str> ] || = @cache . options [ <str> ] super end def find_session ( env , sid ) unless sid and session = @cache . read ( cache_key ( sid ) ) sid , session = generate_sid , { } end [ sid , session ] end def write_session ( env , sid , session , options ) key = cache_key ( sid ) if session @cache . write ( key , session , <str> = > options [ <str> ] ) else @cache . delete ( key ) end sid end def delete_session ( env , sid , options ) @cache . delete ( cache_key ( sid ) ) generate_sid end private def cache_key ( sid ) <str> sid <str> end end end end 
