require <str> module Dispatching class SimpleController < ActionController :: Base before_action <str> def index render <str> : <str> end def modify_response_body self . response_body = <str> end def modify_response_body_twice ret = ( self . response_body = <str> ) self . response_body = <str> ret <str> end def modify_response_headers end def show_actions render <str> : <str> action_methods . to_a . sort . join ( <str> ) <str> end protected def authenticate end end class EmptyController < ActionController :: Base ; end class SubEmptyController < EmptyController ; end class NonDefaultPathController < ActionController :: Base def self . controller_path ; <str> ; end end module Submodule class ContainedEmptyController < ActionController :: Base ; end class ContainedSubEmptyController < ContainedEmptyController ; end class ContainedNonDefaultPathController < ActionController :: Base def self . controller_path ; <str> ; end end end class BaseTest < Rack :: TestCase test <str> do get <str> assert_body <str> assert_status <int> assert_content_type <str> end test <str> do get <str> assert_body <str> end test <str> do get <str> assert_body <str> end test <str> do assert_equal <str> , EmptyController . controller_path assert_equal EmptyController . controller_path , EmptyController . new . controller_path end test <str> do assert_equal <str> , NonDefaultPathController . controller_path assert_equal NonDefaultPathController . controller_path , NonDefaultPathController . new . controller_path end test <str> do assert_equal <str> , SubEmptyController . controller_path assert_equal SubEmptyController . controller_path , SubEmptyController . new . controller_path end test <str> do assert_equal <str> , Submodule :: ContainedEmptyController . controller_path assert_equal Submodule :: ContainedEmptyController . controller_path , Submodule :: ContainedEmptyController . new . controller_path end test <str> do assert_equal <str> , Submodule :: ContainedNonDefaultPathController . controller_path assert_equal Submodule :: ContainedNonDefaultPathController . controller_path , Submodule :: ContainedNonDefaultPathController . new . controller_path end test <str> do assert_equal <str> , Submodule :: ContainedSubEmptyController . controller_path assert_equal Submodule :: ContainedSubEmptyController . controller_path , Submodule :: ContainedSubEmptyController . new . controller_path end test <str> do assert_equal <str> , EmptyController . controller_name assert_equal <str> , Submodule :: ContainedEmptyController . controller_name end test <str> do assert_equal <str> , NonDefaultPathController . controller_name assert_equal <str> , Submodule :: ContainedNonDefaultPathController . controller_name end test <str> do assert_equal <str> , SubEmptyController . controller_name assert_equal <str> , Submodule :: ContainedSubEmptyController . controller_name end test <str> do assert_equal Set . new ( <str> ) , SimpleController . action_methods assert_equal Set . new , EmptyController . action_methods assert_equal Set . new , Submodule :: ContainedEmptyController . action_methods get <str> assert_body <str> end end end 
