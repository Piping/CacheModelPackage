require <str> require_relative <str> module Puppet::DataProviders class JsonDataProviderFactory < Puppet :: Plugins :: DataProviders :: FileBasedDataProviderFactory def create ( name , paths , parent_data_provider ) JsonDataProvider . new ( name , paths , parent_data_provider ) end def path_extension <str> end end class JsonDataProvider < Puppet :: Plugins :: DataProviders :: PathBasedDataProvider include HieraInterpolate def initialize_data ( path , lookup_invocation ) JSON . parse ( File . read ( path ) ) rescue JSON :: ParserError = > ex raise Puppet :: DataBinding :: LookupError , <str> path <str> ex . message <str> end def post_process ( value , lookup_invocation ) interpolate ( value , lookup_invocation , true ) end end end 
