def service Fog :: Compute [ <str> ] end def fog_test_server_attributes image = service . images . find { | i | i . name == <str> } image_id = image . nil? ? <int> : image . id region = service . regions . find { | r | r . name == <str> } region_id = region . nil? ? <int> : region . id flavor = service . flavors . find { | r | r . name == <str> } flavor_id = flavor . nil? ? <int> : flavor . id { <str> = > image_id , <str> = > region_id , <str> = > flavor_id } end def fog_server_name <str> end def fog_test_server server = service . servers . find { | s | s . name == fog_server_name } unless server server = service . servers . create ( { <str> = > fog_server_name } . merge ( fog_test_server_attributes ) ) server . wait_for { ready? } end server end def fog_test_server_destroy server = service . servers . find { | s | s . name == fog_server_name } server . destroy if server end at_exit do unless Fog . mocking? || Fog . credentials [ <str> ] . nil? server = service . servers . find { | s | s . name == fog_server_name } if server server . wait_for ( <int> ) do reload rescue nil ; ready? end end fog_test_server_destroy end end 
