require <str> module Bosh::Dev class UploadAdapter def upload ( options = { } ) @bucket_name = options . fetch ( <str> ) @key = options . fetch ( <str> ) @body = options . fetch ( <str> ) @public = options . fetch ( <str> , false ) bucket . files . create ( <str> : key , <str> : body , public : public ) end private attr_accessor <str> , <str> , <str> , <str> , <str> def bucket fog_storage . directories . get ( bucket_name ) || raise ( <str> bucket_name <str> ) end def fog_storage return cached_storage if cached_storage fog_options = { <str> : <str> , <str> : ENV . to_hash . fetch ( <str> ) , <str> : ENV . to_hash . fetch ( <str> ) } @cached_storage = Fog :: Storage . new ( fog_options ) end end end 
