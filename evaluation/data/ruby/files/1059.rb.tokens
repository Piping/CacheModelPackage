require <str> module Rex module Parser load_nokogiri && class WapitiDocument < Nokogiri :: XML :: SAX :: Document include NokogiriDocMixin def start_element ( name = nil , attrs = [ ] ) attrs = normalize_attrs ( attrs ) block = @block @state [ <str> ] [ name ] = true case name when <str> @state [ <str> ] = true when <str> @state [ <str> ] = true when <str> @state [ <str> ] = true when <str> @state [ <str> ] = true when <str> @state [ <str> ] = true when <str> @state [ <str> ] = true when <str> @state [ <str> ] = true when <str> @state [ <str> ] = true when <str> @state [ <str> ] = true end end def end_element ( name = nil ) block = @block case name when <str> @state [ <str> ] = @text . strip @text = nil when <str> @state [ <str> ] = @text . strip @text = nil when <str> @state [ <str> ] = @text . strip @text = nil when <str> @state [ <str> ] = @text . strip @text = nil when <str> @state [ <str> ] = @text . strip @text = nil when <str> @state [ <str> ] = @text . strip @text = nil when <str> report_vuln end end def report_vuln ( & block ) proto = @state [ <str> ] . split ( <str> ) [ <int> ] path = <str> + ( @state [ <str> ] . split ( <str> ) [ <int> .. ( @state [ <str> ] . split ( <str> ) . length - <int> ) ] . join ( <str> ) ) web_vuln_info = { } web_vuln_info [ <str> ] = proto + <str> + @state [ <str> ] + <str> + @state [ <str> ] web_vuln_info [ <str> ] = path web_vuln_info [ <str> ] = @state [ <str> ] . split ( <str> ) [ <int> ] if @state [ <str> ] . index ( @state [ <str> ] ) web_vuln_info [ <str> ] = <str> else web_vuln_info [ <str> ] = <str> end @state [ <str> ] . split ( <str> ) . each do | param | if param . index ( <str> ) web_vuln_info [ <str> ] = param . split ( <str> ) [ <int> ] break elsif param . index ( <str> ) web_vuln_info [ <str> ] = param . split ( <str> ) [ <int> ] end end web_vuln_info [ <str> ] = @state [ <str> ] web_vuln_info [ <str> ] = @state [ <str> ] web_vuln_info [ <str> ] = ( proto =~ <str> ) web_vuln_info [ <str> ] = <str> web_vuln_info [ <str> ] = <str> web_vuln_info [ <str> ] = @state [ <str> ] web_vuln_info [ <str> ] = <str> web_vuln_info [ <str> ] = <int> web_vuln_info [ <str> ] = @state [ <str> ] db . emit ( <str> , web_vuln_info [ <str> ] , & block ) if block vuln = db_report ( <str> , web_vuln_info ) end end end end 
