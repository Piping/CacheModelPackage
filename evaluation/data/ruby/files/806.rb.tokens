module Bosh::Director module Jobs class DeleteOrphanDisks < BaseJob @queue = <str> def self . job_type <str> end def self . enqueue ( username , orphan_disk_cids , job_queue ) persistent_disk_cids = orphan_disk_cids . select do | disk_cid | Bosh :: Director :: Models :: PersistentDisk . where ( <str> : disk_cid ) . any? end if persistent_disk_cids . any? raise DeletingPersistentDiskError , <str> persistent_disk_cids <str> end job_queue . enqueue ( username , Jobs :: DeleteOrphanDisks , <str> , [ orphan_disk_cids ] ) end def initialize ( orphan_disk_cids ) @orphan_disk_cids = orphan_disk_cids @disk_manager = Bosh :: Director :: DiskManager . new ( Config . cloud , Config . logger ) end def perform event_log . begin_stage ( <str> , @orphan_disk_cids . count ) ThreadPool . new ( <str> = > Config . max_threads ) . wrap do | pool | @orphan_disk_cids . each do | orphan_disk_cid | pool . process do event_log . track ( <str> orphan_disk_cid <str> ) do @disk_manager . delete_orphan_disk_by_disk_cid ( orphan_disk_cid ) end end end end <str> @orphan_disk_cids . join ( <str> ) <str> end end end end 
