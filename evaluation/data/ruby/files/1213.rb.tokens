require <str> require <str> require <str> require <str> require <str> require <str> require <str> require <str> require <str> require <str> require <str> require <str> require <str> require <str> require <str> require <str> require <str> require <str> require <str> module Rex module Post module Meterpreter module Extensions module Stdapi class Stdapi < Extension def initialize ( client ) super ( client , <str> ) client . register_extension_aliases ( [ { <str> = > <str> , <str> = > ObjectAliases . new ( { <str> = > self . dir , <str> = > self . file , <str> = > self . filestat , <str> = > Fs :: Mount . new ( client ) } ) } , { <str> = > <str> , <str> = > ObjectAliases . new ( { <str> = > Sys :: Config . new ( client ) , <str> = > self . process , <str> = > self . registry , <str> = > self . eventlog , <str> = > self . power } ) } , { <str> = > <str> , <str> = > ObjectAliases . new ( { <str> = > Rex :: Post :: Meterpreter :: Extensions :: Stdapi :: Net :: Config . new ( client ) , <str> = > Rex :: Post :: Meterpreter :: Extensions :: Stdapi :: Net :: Socket . new ( client ) , <str> = > Rex :: Post :: Meterpreter :: Extensions :: Stdapi :: Net :: Resolve . new ( client ) } ) } , { <str> = > <str> , <str> = > Rex :: Post :: Meterpreter :: Extensions :: Stdapi :: Railgun :: Railgun . new ( client ) } , { <str> = > <str> , <str> = > Rex :: Post :: Meterpreter :: Extensions :: Stdapi :: Webcam :: Webcam . new ( client ) } , { <str> = > <str> , <str> = > UI . new ( client ) } ] ) end def brand ( klass ) klass = klass . dup klass . client = self . client return klass end def dir brand ( Rex :: Post :: Meterpreter :: Extensions :: Stdapi :: Fs :: Dir ) end def file brand ( Rex :: Post :: Meterpreter :: Extensions :: Stdapi :: Fs :: File ) end def filestat brand ( Rex :: Post :: Meterpreter :: Extensions :: Stdapi :: Fs :: FileStat ) end def process brand ( Rex :: Post :: Meterpreter :: Extensions :: Stdapi :: Sys :: Process ) end def registry brand ( Rex :: Post :: Meterpreter :: Extensions :: Stdapi :: Sys :: Registry ) end def eventlog brand ( Rex :: Post :: Meterpreter :: Extensions :: Stdapi :: Sys :: EventLog ) end def power brand ( Rex :: Post :: Meterpreter :: Extensions :: Stdapi :: Sys :: Power ) end end end ; end ; end ; end ; end 
