require <str> describe <str> , <str> : <str> do include Bosh :: Spec :: BlockingDeployHelper with_reset_sandbox_before_each it <str> do cloud_config_hash = Bosh :: Spec :: Deployments . simple_cloud_config cloud_config_hash [ <str> ] [ <str> ] = <int> prepare_for_deploy ( <str> : cloud_config_hash ) task_id = with_blocking_deploy do | task_id | output , exit_code = bosh_runner . run ( <str> task_id <str> , <str> : true ) expect ( output ) . to include ( <str> task_id <str> ) expect ( exit_code ) . to eq ( <int> ) end task_event = events ( task_id ) . last expect ( task_event ) . to include ( <str> ) expect ( task_event [ <str> ] [ <str> ] ) . to eq ( <int> ) expect ( task_event [ <str> ] [ <str> ] ) . to eq ( <str> task_id <str> ) end def events ( task_id ) result = bosh_runner . run ( <str> task_id <str> ) event_list = [ ] result . each_line do | line | begin event = Yajl :: Parser . new . parse ( line ) event_list << event if event rescue Yajl :: ParseError end end event_list end end 
