specs_in_order = File . read ( <str> ) . split failing_spec = ARGV . first specs = specs_in_order [ <int> ... specs_in_order . index ( failing_spec ) ] suspects = specs while suspects . length > <int> do count = suspects . length specs_to_run = suspects [ <int> ... ( count / <int> ) ] puts <str> specs_to_run . join ( <str> ) <str> start = Time . now system ( <str> specs_to_run . join ( <str> ) <str> failing_spec <str> ) puts <str> Time . now - start <str> if $? == <int> puts <str> suspects = suspects [ ( count / <int> ) .. - <int> ] else puts <str> suspects = specs_to_run end end puts <str> suspects . first <str> 
