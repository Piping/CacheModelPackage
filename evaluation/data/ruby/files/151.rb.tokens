class AwardEmoji CATEGORIES = { <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> , <str> : <str> } . with_indifferent_access def self . normilize_emoji_name ( name ) aliases [ name ] || name end def self . emoji_by_category unless @emoji_by_category @emoji_by_category = { } emojis . each do | emoji_name , data | data [ <str> ] = emoji_name @emoji_by_category [ data [ <str> ] ] || = [ ] @emoji_by_category [ data [ <str> ] ] << data end @emoji_by_category = @emoji_by_category . sort . to_h end @emoji_by_category end def self . emojis @emojis || = begin json_path = File . join ( Rails . root , <str> , <str> , <str> ) JSON . parse ( File . read ( json_path ) ) end end def self . aliases @aliases || = begin json_path = File . join ( Rails . root , <str> , <str> , <str> ) JSON . parse ( File . read ( json_path ) ) end end end 
