module Rex module OLE class CLSID def initialize ( buf = nil ) @buf = buf @buf || = <str> * <int> end def pack @buf end def to_s ret = <str> ret << <str> % Util . get32 ( @buf , <int> ) ret << <str> ret << <str> % Util . get16 ( @buf , <int> ) ret << <str> ret << <str> % Util . get16 ( @buf , <int> ) ret << <str> idx = <int> last8 = @buf [ <int> , <int> ] last8 . unpack ( <str> ) . each { | byte | ret << [ byte ] . pack ( <str> ) . unpack ( <str> ) [ <int> ] ret << <str> if ( idx == <int> ) idx += <int> } ret end end end end 
