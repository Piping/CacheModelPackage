$expect_verbose = false class IO def expect ( pat , timeout = <int> ) buf = <str> case pat when String e_pat = Regexp . new ( Regexp . quote ( pat ) ) when Regexp e_pat = pat else raise TypeError , <str> pat . class <str> end @unusedBuf || = <str> while true if not @unusedBuf . empty? c = @unusedBuf . slice! ( <int> ) . chr elsif ! IO . select ( [ self ] , nil , nil , timeout ) or eof? then result = nil @unusedBuf = buf break else c = getc . chr end buf << c if $expect_verbose STDOUT . print c STDOUT . flush end if mat = e_pat . match ( buf ) then result = [ buf , * mat . to_a [ <int> .. - <int> ] ] break end end if block_given? then yield result else return result end nil end end 
