require <str> module Fog module Compute class Joyent < Fog :: Service class Errors module MessageParserMixin def message if response . body [ <str> ] && response . body [ <str> ] <str> response . body [ <str> ] <str> response . body [ <str> ] <str> else <str> end end def to_s message end end class BadRequest < Excon :: Errors :: BadRequest include MessageParserMixin end class Unauthorized < Excon :: Errors :: Unauthorized include MessageParserMixin end class Forbidden < Excon :: Errors :: Forbidden include MessageParserMixin end class NotFound < Excon :: Errors :: NotFound include MessageParserMixin end class MethodNotAllowed < Excon :: Errors :: MethodNotAllowed include MessageParserMixin end class NotAcceptable < Excon :: Errors :: NotAcceptable include MessageParserMixin end class Conflict < Excon :: Errors :: Conflict include MessageParserMixin end class RequestEntityTooLarge < Excon :: Errors :: RequestEntityTooLarge include MessageParserMixin end class UnsupportedMediaType < Excon :: Errors :: UnsupportedMediaType include MessageParserMixin end class PolicyNotForfilled < Excon :: Errors :: HTTPStatusError include MessageParserMixin end class RetryWith < Excon :: Errors :: HTTPStatusError include MessageParserMixin end class ServiceUnavailable < Excon :: Errors :: ServiceUnavailable include MessageParserMixin end end end end end 
