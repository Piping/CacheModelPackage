require <str> describe LabelsHelper do describe <str> do let ( <str> ) { create ( <str> ) } let ( <str> ) { create ( <str> , <str> : project ) } context <str> do before do @project = project end it <str> do expect ( link_to_label ( label ) ) . to match <str> @project . to_reference <str> label . name <str> end end context <str> do it <str> do expect ( link_to_label ( label ) ) . to match <str> label . project . to_reference <str> label . name <str> end end context <str> do let ( <str> ) { double ( <str> , <str> : <str> , <str> : <str> ) } it <str> do expect ( link_to_label ( label , <str> : another_project ) ) . to match <str> label . name <str> end end context <str> do [ <str> , <str> , <str> , <str> ] . each do | type | context <str> type <str> do it <str> do expect ( link_to_label ( label , <str> : type ) ) . to match <str> label . project . to_reference <str> type . to_s . pluralize <str> label . name <str> end end end end context <str> do it <str> do link = link_to_label ( label ) { <str> } expect ( link ) . to match ( <str> ) end end context <str> do it <str> do expect ( self ) . to receive ( <str> ) . with ( label ) . and_return ( <str> ) expect ( link_to_label ( label ) ) . to match ( <str> ) end end end describe <str> do it <str> do expect ( text_color_for_bg ( <str> ) ) . to eq ( <str> ) end it <str> do expect ( text_color_for_bg ( <str> ) ) . to eq ( <str> ) end it <str> do expect ( text_color_for_bg ( <str> ) ) . to eq <str> expect ( text_color_for_bg ( <str> ) ) . to eq <str> end end end 
