module Fog module Compute class VcloudDirector class Real def get_disks_rasd_items_list ( id ) request ( <str> = > <int> , <str> = > true , <str> = > <str> , <str> = > Fog :: ToHashDocument . new , <str> = > <str> id <str> ) end end class Mock def get_disks_rasd_items_list ( id ) type = <str> unless vm = data [ <str> ] [ id ] raise Fog :: Compute :: VcloudDirector :: Forbidden . new ( <str> ) end body = { <str> = > type , <str> = > make_href ( <str> id <str> ) , <str> = > { <str> = > <str> , <str> = > <str> , <str> = > make_href ( <str> id <str> ) , } , <str> = > [ get_disks_rasd_items_list_body ( id , vm ) , get_media_rasd_item_ide_controller_body ( id , vm ) , ] . flatten } Excon :: Response . new ( <str> = > <int> , <str> = > { <str> = > <str> type <str> api_version <str> } , <str> = > body ) end def get_disks_rasd_items_list_body ( id , vm ) [ { <str> = > <str> , <str> = > <str> , <str> = > <str> , <str> = > <str> , <str> = > <str> , <str> = > <str> } , { <str> = > <str> , <str> = > <str> , <str> = > <str> , <str> = > { <str> = > <str> , <str> = > <str> , <str> = > <str> } , <str> = > <str> , <str> = > <str> , <str> = > <str> } , ] end end end end end 
