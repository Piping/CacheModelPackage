class MysqlCluster < Formula desc <str> homepage <str> url <str> sha256 <str> bottle do sha256 <str> = > <str> sha256 <str> = > <str> sha256 <str> = > <str> end option <str> option <str> , <str> option <str> , <str> option <str> , <str> option <str> , <str> option <str> , <str> option <str> , <str> option <str> , <str> deprecated_option <str> = > <str> deprecated_option <str> = > <str> deprecated_option <str> = > <str> depends_on <str> = > <str> depends_on <str> = > <str> depends_on <str> unless MacOS . version > = <str> depends_on <str> conflicts_with <str> , <str> = > <str> conflicts_with <str> , <str> , <str> , <str> = > <str> fails_with <str> do build <int> cause <str> end def install ENV . minimal_optimization ( var / <str> ) . mkpath args = [ <str> , <str> prefix <str> , <str> var <str> , <str> man <str> , <str> doc <str> , <str> info <str> , <str> share . basename <str> , <str> , <str> , <str> , <str> etc <str> ] if build . with? <str> args << <str> else args << <str> end args << <str> if build . with? <str> args << <str> if build . without? <str> args << <str> if build . with? <str> args << <str> if build . with? <str> if build . universal? ENV . universal_binary args << <str> Hardware :: CPU . universal_archs . as_cmake_arch_flags <str> end args << <str> if build . with? <str> args << <str> if build . with? <str> system <str> , * args system <str> system <str> , <str> ( var / <str> ) . mkpath ( var / <str> ) . mkpath ( var / <str> ) . mkpath ( var / <str> ) . write my_cnf unless File . exist? var / <str> ( var / <str> ) . write config_ini unless File . exist? var / <str> plist_path ( <str> ) . write ndb_mgmd_startup_plist ( <str> ) plist_path ( <str> ) . chmod <oct> plist_path ( <str> ) . write ndbd_startup_plist ( <str> ) plist_path ( <str> ) . chmod <oct> plist_path ( <str> ) . write mysqld_startup_plist ( <str> ) plist_path ( <str> ) . chmod <oct> rm_rf prefix + <str> bin . install_symlink prefix / <str> inreplace <str> prefix <str> do | s | s . gsub! ( <str> , <str> HOMEBREW_PREFIX <str> ) s . gsub! ( <str> , <str> ) if MacOS . version > = <str> end bin . install_symlink prefix / <str> libexec . mkpath libexec . install <str> bin <str> , <str> bin <str> , <str> bin <str> end def caveats ; <<- <str> EOS <str> . undent <str> EOS end def my_cnf ; <<- <str> EOCNF <str> . undent <str> EOCNF end def config_ini ; <<- <str> EOCNF <str> . undent <str> EOCNF end def plist_name ( extra = nil ) extra ? super ( ) + <str> + extra : super ( ) + <str> end def plist_path ( extra = nil ) extra ? super ( ) . dirname + ( plist_name ( extra ) + <str> ) : super ( ) end def mysqld_startup_plist ( name ) ; <<- <str> EOS <str> . undent <str> EOS end def ndb_mgmd_startup_plist ( name ) ; <<- <str> EOS <str> . undent <str> EOS end def ndbd_startup_plist ( name ) ; <<- <str> EOS <str> . undent <str> EOS end test do system <str> , <str> , <str> bin <str> ( prefix / <str> ) . cd do system <str> , <str> , <str> testpath <str> end end end 
