require <str> module Msf module Simple module Buffer def self . transform ( buf , fmt = <str> , var_name = <str> ) default_wrap = <int> case fmt when <str> when <str> buf = Rex :: Text . to_num ( buf ) when <str> buf = Rex :: Text . to_hex ( buf , <str> ) when <str> , <str> buf = Rex :: Text . to_dword ( buf ) when <str> , <str> buf = Rex :: Text . to_python ( buf , default_wrap , var_name ) when <str> , <str> buf = Rex :: Text . to_ruby ( buf , default_wrap , var_name ) when <str> , <str> buf = Rex :: Text . to_perl ( buf , default_wrap , var_name ) when <str> , <str> buf = Rex :: Text . to_bash ( buf , default_wrap , var_name ) when <str> buf = Rex :: Text . to_c ( buf , default_wrap , var_name ) when <str> buf = Rex :: Text . to_csharp ( buf , default_wrap , var_name ) when <str> buf = Rex :: Text . to_unescape ( buf , ENDIAN_BIG ) when <str> buf = Rex :: Text . to_unescape ( buf , ENDIAN_LITTLE ) when <str> buf = Rex :: Text . to_java ( buf , var_name ) when <str> , <str> buf = Rex :: Text . to_powershell ( buf , var_name ) when <str> buf = Rex :: Text . to_vbscript ( buf , var_name ) when <str> buf = Rex :: Text . to_vbapplication ( buf , var_name ) else raise ArgumentError , <str> fmt <str> , caller end return buf end def self . comment ( buf , fmt = <str> ) case fmt when <str> when <str> , <str> , <str> , <str> buf = Rex :: Text . to_js_comment ( buf ) when <str> , <str> , <str> , <str> buf = Rex :: Text . to_ruby_comment ( buf ) when <str> , <str> buf = Rex :: Text . to_perl_comment ( buf ) when <str> , <str> buf = Rex :: Text . to_bash_comment ( buf ) when <str> buf = Rex :: Text . to_c_comment ( buf ) when <str> buf = Rex :: Text . to_c_comment ( buf ) when <str> , <str> buf = Rex :: Text . to_js_comment ( buf ) when <str> buf = Rex :: Text . to_c_comment ( buf ) else raise ArgumentError , <str> fmt <str> , caller end return buf end def self . transform_formats [ <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> , <str> ] end end end end 
