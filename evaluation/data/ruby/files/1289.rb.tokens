require <str> module REXML module Formatters class Transitive < Default def initialize ( indentation = <int> , ie_hack = false ) @indentation = indentation @level = <int> @ie_hack = ie_hack end protected def write_element ( node , output ) output << <str> node . expanded_name <str> node . attributes . each_attribute do | attr | output << <str> attr . write ( output ) end unless node . attributes . empty? output << <str> output << <str> * @level if node . children . empty? output << <str> if @ie_hack output << <str> else output << <str> @level += @indentation node . children . each { | child | write ( child , output ) } @level -= @indentation output << <str> node . expanded_name <str> output << <str> output << <str> * @level end output << <str> end def write_text ( node , output ) output << node . to_s ( ) end end end end 
