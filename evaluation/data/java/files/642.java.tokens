package org . nd4j . linalg . api . complex ; import org . nd4j . linalg . api . ndarray . INDArray ; import org . nd4j . linalg . indexing . INDArrayIndex ; import org . nd4j . linalg . indexing . conditions . Condition ; public interface IComplexNDArray extends INDArray { int blasOffset ( ) ; @Override IComplexNDArray linearViewColumnOrder ( ) ; @Override IComplexNDArray linearView ( ) ; @Override IComplexNDArray reshape ( int rows , int columns ) ; @Override IComplexNDArray cumsumi ( int dimension ) ; @Override IComplexNDArray cumsum ( int dimension ) ; @Override IComplexNDArray vectorAlongDimension ( int index , int dimension ) ; IComplexNDArray cond ( Condition condition ) ; IComplexNDArray condi ( Condition condition ) ; @Override IComplexNDArray neq ( INDArray other ) ; @Override IComplexNDArray neqi ( INDArray other ) ; @Override IComplexNDArray neqi ( Number other ) ; @Override IComplexNDArray neq ( Number other ) ; IComplexNDArray assign ( IComplexNDArray arr ) ; IComplexNDArray put ( INDArrayIndex [ ] indices , IComplexNumber element ) ; IComplexNDArray put ( INDArrayIndex [ ] indices , IComplexNDArray element ) ; IComplexNDArray put ( INDArrayIndex [ ] indices , Number element ) ; IComplexNDArray putScalar ( int i , IComplexNumber value ) ; IComplexNDArray putScalar ( int i , double value ) ; IComplexNDArray eps ( IComplexNumber other ) ; IComplexNDArray epsi ( IComplexNumber other ) ; @Override IComplexNDArray eps ( Number other ) ; @Override IComplexNDArray epsi ( Number other ) ; @Override IComplexNDArray eps ( INDArray other ) ; @Override IComplexNDArray epsi ( INDArray other ) ; @Override IComplexNDArray lt ( Number other ) ; @Override IComplexNDArray lti ( Number other ) ; @Override IComplexNDArray eq ( Number other ) ; @Override IComplexNDArray eqi ( Number other ) ; @Override IComplexNDArray gt ( Number other ) ; @Override IComplexNDArray gti ( Number other ) ; @Override IComplexNDArray lt ( INDArray other ) ; @Override IComplexNDArray lti ( INDArray other ) ; @Override IComplexNDArray eq ( INDArray other ) ; @Override IComplexNDArray eqi ( INDArray other ) ; @Override IComplexNDArray gt ( INDArray other ) ; @Override IComplexNDArray gti ( INDArray other ) ; INDArray putScalar ( int [ ] i , IComplexNumber complexNumber ) ; @Override IComplexNDArray neg ( ) ; @Override IComplexNDArray negi ( ) ; @Override IComplexNDArray addi ( IComplexNumber n , IComplexNDArray result ) ; @Override IComplexNDArray add ( IComplexNumber n , IComplexNDArray result ) ; @Override IComplexNDArray subi ( IComplexNumber n , IComplexNDArray result ) ; @Override IComplexNDArray sub ( IComplexNumber n , IComplexNDArray result ) ; @Override IComplexNDArray muli ( IComplexNumber n , IComplexNDArray result ) ; @Override IComplexNDArray mul ( IComplexNumber n , IComplexNDArray result ) ; @Override IComplexNDArray divi ( IComplexNumber n , IComplexNDArray result ) ; @Override IComplexNDArray div ( IComplexNumber n , IComplexNDArray result ) ; @Override IComplexNDArray rsubi ( IComplexNumber n , IComplexNDArray result ) ; @Override IComplexNDArray rsub ( IComplexNumber n , IComplexNDArray result ) ; @Override IComplexNDArray rdivi ( IComplexNumber n , IComplexNDArray result ) ; @Override IComplexNDArray rdiv ( IComplexNumber n , IComplexNDArray result ) ; IComplexNDArray rdiv ( IComplexNumber n , INDArray result ) ; IComplexNDArray rdivi ( IComplexNumber n , INDArray result ) ; IComplexNDArray rsub ( IComplexNumber n , INDArray result ) ; IComplexNDArray rsubi ( IComplexNumber n , INDArray result ) ; @Override IComplexNDArray rdiviColumnVector ( INDArray columnVector ) ; @Override IComplexNDArray rdivColumnVector ( INDArray columnVector ) ; @Override IComplexNDArray rdiviRowVector ( INDArray rowVector ) ; @Override IComplexNDArray rdivRowVector ( INDArray rowVector ) ; @Override IComplexNDArray rsubiColumnVector ( INDArray columnVector ) ; @Override IComplexNDArray rsubColumnVector ( INDArray columnVector ) ; @Override IComplexNDArray rsubiRowVector ( INDArray rowVector ) ; @Override IComplexNDArray rsubRowVector ( INDArray rowVector ) ; IComplexNDArray div ( IComplexNumber n , INDArray result ) ; IComplexNDArray divi ( IComplexNumber n , INDArray result ) ; IComplexNDArray mul ( IComplexNumber n , INDArray result ) ; IComplexNDArray muli ( IComplexNumber n , INDArray result ) ; IComplexNDArray sub ( IComplexNumber n , INDArray result ) ; IComplexNDArray subi ( IComplexNumber n , INDArray result ) ; IComplexNDArray add ( IComplexNumber n , INDArray result ) ; IComplexNDArray addi ( IComplexNumber n , INDArray result ) ; IComplexNDArray rdiv ( IComplexNumber n ) ; IComplexNDArray rdivi ( IComplexNumber n ) ; IComplexNDArray rsub ( IComplexNumber n ) ; IComplexNDArray rsubi ( IComplexNumber n ) ; IComplexNDArray div ( IComplexNumber n ) ; IComplexNDArray divi ( IComplexNumber n ) ; IComplexNDArray mul ( IComplexNumber n ) ; IComplexNDArray muli ( IComplexNumber n ) ; IComplexNDArray sub ( IComplexNumber n ) ; IComplexNDArray subi ( IComplexNumber n ) ; IComplexNDArray add ( IComplexNumber n ) ; IComplexNDArray addi ( IComplexNumber n ) ; @Override IComplexNDArray rdiv ( Number n , INDArray result ) ; @Override IComplexNDArray rdivi ( Number n , INDArray result ) ; @Override IComplexNDArray rsub ( Number n , INDArray result ) ; @Override IComplexNDArray rsubi ( Number n , INDArray result ) ; @Override IComplexNDArray div ( Number n , INDArray result ) ; @Override IComplexNDArray divi ( Number n , INDArray result ) ; @Override IComplexNDArray mul ( Number n , INDArray result ) ; @Override IComplexNDArray muli ( Number n , INDArray result ) ; @Override IComplexNDArray sub ( Number n , INDArray result ) ; @Override IComplexNDArray subi ( Number n , INDArray result ) ; @Override IComplexNDArray add ( Number n , INDArray result ) ; @Override IComplexNDArray addi ( Number n , INDArray result ) ; @Override IComplexNDArray rdiv ( Number n ) ; @Override IComplexNDArray rdivi ( Number n ) ; @Override IComplexNDArray rsub ( Number n ) ; @Override IComplexNDArray rsubi ( Number n ) ; @Override IComplexNDArray div ( Number n ) ; @Override IComplexNDArray divi ( Number n ) ; @Override IComplexNDArray mul ( Number n ) ; @Override IComplexNDArray muli ( Number n ) ; @Override IComplexNDArray sub ( Number n ) ; @Override IComplexNDArray subi ( Number n ) ; @Override IComplexNDArray add ( Number n ) ; @Override IComplexNDArray addi ( Number n ) ; @Override IComplexNDArray get ( INDArrayIndex . . . indexes ) ; @Override IComplexNDArray getColumns ( int [ ] columns ) ; @Override IComplexNDArray getRows ( int [ ] rows ) ; @Override IComplexNDArray min ( int . . . dimension ) ; @Override IComplexNDArray max ( int . . . dimension ) ; @Override IComplexNDArray put ( int i , int j , INDArray element ) ; @Override IComplexNDArray put ( int [ ] indices , INDArray element ) ; @Override IComplexNDArray putSlice ( int slice , INDArray put ) ; double getImag ( int i ) ; double getReal ( int i ) ; IComplexNDArray putReal ( int [ ] indices , float value ) ; IComplexNDArray putImag ( int [ ] indices , float value ) ; IComplexNDArray putReal ( int [ ] indices , double value ) ; IComplexNDArray putImag ( int [ ] indices , double value ) ; IComplexNDArray putReal ( int rowIndex , int columnIndex , float value ) ; IComplexNDArray putImag ( int rowIndex , int columnIndex , float value ) ; IComplexNDArray putReal ( int rowIndex , int columnIndex , double value ) ; IComplexNDArray putImag ( int rowIndex , int columnIndex , double value ) ; IComplexNDArray putReal ( int i , float v ) ; IComplexNDArray putImag ( int i , float v ) ; INDArray real ( ) ; INDArray imag ( ) ; IComplexNDArray put ( int i , IComplexNDArray element ) ; @Override IComplexNDArray getScalar ( int . . . indexes ) ; @Override void checkDimensions ( INDArray other ) ; @Override IComplexNDArray reshape ( char order , int . . . newShape ) ; @Override IComplexNDArray reshape ( char order , int rows , int columns ) ; @Override IComplexNDArray assign ( Number value ) ; @Override IComplexNDArray rdiv ( INDArray other ) ; @Override IComplexNDArray rdivi ( INDArray other ) ; @Override IComplexNDArray rdiv ( INDArray other , INDArray result ) ; @Override IComplexNDArray rdivi ( INDArray other , INDArray result ) ; @Override IComplexNDArray rsub ( INDArray other , INDArray result ) ; @Override IComplexNDArray rsub ( INDArray other ) ; @Override IComplexNDArray rsubi ( INDArray other ) ; @Override IComplexNDArray rsubi ( INDArray other , INDArray result ) ; IComplexNDArray hermitian ( ) ; IComplexNDArray conj ( ) ; IComplexNDArray conji ( ) ; INDArray getReal ( ) ; @Override IComplexNDArray repmat ( int . . . shape ) ; @Override IComplexNDArray putRow ( int row , INDArray toPut ) ; @Override IComplexNDArray putColumn ( int column , INDArray toPut ) ; @Override IComplexNDArray getScalar ( int row , int column ) ; @Override IComplexNDArray getScalar ( int i ) ; @Override IComplexNDArray put ( int i , INDArray element ) ; @Override IComplexNDArray diviColumnVector ( INDArray columnVector ) ; @Override IComplexNDArray divColumnVector ( INDArray columnVector ) ; @Override IComplexNDArray diviRowVector ( INDArray rowVector ) ; @Override IComplexNDArray divRowVector ( INDArray rowVector ) ; @Override IComplexNDArray muliColumnVector ( INDArray columnVector ) ; @Override IComplexNDArray mulColumnVector ( INDArray columnVector ) ; @Override IComplexNDArray muliRowVector ( INDArray rowVector ) ; @Override IComplexNDArray mulRowVector ( INDArray rowVector ) ; @Override IComplexNDArray subiColumnVector ( INDArray columnVector ) ; @Override IComplexNDArray subColumnVector ( INDArray columnVector ) ; @Override IComplexNDArray subiRowVector ( INDArray rowVector ) ; @Override IComplexNDArray subRowVector ( INDArray rowVector ) ; @Override IComplexNDArray addiColumnVector ( INDArray columnVector ) ; @Override IComplexNDArray addColumnVector ( INDArray columnVector ) ; @Override IComplexNDArray addiRowVector ( INDArray rowVector ) ; @Override IComplexNDArray addRowVector ( INDArray rowVector ) ; @Override IComplexNDArray mmul ( INDArray other ) ; @Override IComplexNDArray mmul ( INDArray other , INDArray result ) ; @Override IComplexNDArray div ( INDArray other ) ; @Override IComplexNDArray div ( INDArray other , INDArray result ) ; @Override IComplexNDArray mul ( INDArray other ) ; @Override IComplexNDArray mul ( INDArray other , INDArray result ) ; @Override IComplexNDArray sub ( INDArray other ) ; @Override IComplexNDArray sub ( INDArray other , INDArray result ) ; @Override IComplexNDArray add ( INDArray other ) ; @Override IComplexNDArray add ( INDArray other , INDArray result ) ; @Override IComplexNDArray dimShuffle ( Object [ ] rearrange , int [ ] newOrder , boolean [ ] broadCastable ) ; @Override IComplexNDArray mmuli ( INDArray other ) ; @Override IComplexNDArray mmuli ( INDArray other , INDArray result ) ; @Override IComplexNDArray divi ( INDArray other ) ; @Override IComplexNDArray divi ( INDArray other , INDArray result ) ; @Override IComplexNDArray muli ( INDArray other ) ; @Override IComplexNDArray muli ( INDArray other , INDArray result ) ; IComplexNDArray subi ( INDArray other ) ; @Override IComplexNDArray subi ( INDArray other , INDArray result ) ; @Override IComplexNDArray addi ( INDArray other ) ; @Override IComplexNDArray addi ( INDArray other , INDArray result ) ; @Override IComplexNDArray normmax ( int . . . dimension ) ; @Override IComplexNDArray norm2 ( int . . . dimension ) ; @Override IComplexNDArray norm1 ( int . . . dimension ) ; @Override IComplexNDArray prod ( int . . . dimension ) ; @Override IComplexNDArray mean ( int . . . dimension ) ; @Override IComplexNDArray sum ( int . . . dimension ) ; @Override IComplexNDArray var ( int . . . dimension ) ; @Override IComplexNDArray std ( int . . . dimension ) ; IComplexNumber getComplex ( int i ) ; IComplexNumber getComplex ( int i , int j ) ; IComplexNumber getComplex ( int i , IComplexNumber result ) ; IComplexNumber getComplex ( int i , int j , IComplexNumber result ) ; @Override IComplexNDArray dup ( ) ; @Override IComplexNDArray ravel ( ) ; IComplexNDArray slice ( int i , int dimension ) ; IComplexNDArray slice ( int i ) ; @Override IComplexNDArray reshape ( int . . . newShape ) ; @Override IComplexNDArray transpose ( ) ; @Override IComplexNDArray transposei ( ) ; IComplexNDArray put ( int [ ] indexes , float value ) ; IComplexNDArray put ( int [ ] indexes , double value ) ; IComplexNDArray putSlice ( int slice , IComplexNDArray put ) ; IComplexNumber getComplex ( int . . . indices ) ; @Override IComplexNDArray swapAxes ( int dimension , int with ) ; @Override IComplexNDArray permute ( int . . . rearrange ) ; @Override IComplexNDArray getColumn ( int i ) ; @Override IComplexNDArray getRow ( int i ) ; @Override IComplexNDArray broadcast ( int [ ] shape ) ; IComplexNDArray putScalar ( int j , int i , IComplexNumber conji ) ; IComplexNDArray neqi ( IComplexNumber other ) ; IComplexNDArray neq ( IComplexNumber other ) ; IComplexNDArray lt ( IComplexNumber other ) ; IComplexNDArray lti ( IComplexNumber other ) ; IComplexNDArray eq ( IComplexNumber other ) ; IComplexNDArray eqi ( IComplexNumber other ) ; IComplexNDArray gt ( IComplexNumber other ) ; IComplexNDArray gti ( IComplexNumber other ) ; void assign ( IComplexNumber aDouble ) ; IComplexNDArray put ( int i , int j , IComplexNumber complex ) ; } 
