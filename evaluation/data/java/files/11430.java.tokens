package com . nostra13 . universalimageloader . sample . fragment ; import android . content . Context ; import android . content . Intent ; import android . graphics . Bitmap ; import android . os . Bundle ; import android . view . LayoutInflater ; import android . view . View ; import android . view . ViewGroup ; import android . widget . AdapterView ; import android . widget . AdapterView . OnItemClickListener ; import android . widget . BaseAdapter ; import android . widget . Gallery ; import android . widget . ImageView ; import com . nostra13 . universalimageloader . core . DisplayImageOptions ; import com . nostra13 . universalimageloader . core . ImageLoader ; import com . nostra13 . universalimageloader . core . display . RoundedBitmapDisplayer ; import com . nostra13 . universalimageloader . sample . Constants ; import com . nostra13 . universalimageloader . sample . R ; import com . nostra13 . universalimageloader . sample . activity . SimpleImageActivity ; public class ImageGalleryFragment extends BaseFragment { public static final int INDEX = <int> ; @SuppressWarnings ( <str> ) @Override public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { View rootView = inflater . inflate ( R . layout . fr_image_gallery , container , false ) ; Gallery gallery = ( Gallery ) rootView . findViewById ( R . id . gallery ) ; gallery . setAdapter ( new ImageAdapter ( getActivity ( ) ) ) ; gallery . setOnItemClickListener ( new OnItemClickListener ( ) { @Override public void onItemClick ( AdapterView < ? > parent , View view , int position , long id ) { startImagePagerActivity ( position ) ; } } ) ; return rootView ; } private void startImagePagerActivity ( int position ) { Intent intent = new Intent ( getActivity ( ) , SimpleImageActivity . class ) ; intent . putExtra ( Constants . Extra . FRAGMENT_INDEX , ImagePagerFragment . INDEX ) ; intent . putExtra ( Constants . Extra . IMAGE_POSITION , position ) ; startActivity ( intent ) ; } private static class ImageAdapter extends BaseAdapter { private static final String [ ] IMAGE_URLS = Constants . IMAGES ; private LayoutInflater inflater ; private DisplayImageOptions options ; ImageAdapter ( Context context ) { inflater = LayoutInflater . from ( context ) ; options = new DisplayImageOptions . Builder ( ) . showImageOnLoading ( R . drawable . ic_stub ) . showImageForEmptyUri ( R . drawable . ic_empty ) . showImageOnFail ( R . drawable . ic_error ) . cacheInMemory ( true ) . cacheOnDisk ( true ) . considerExifParams ( true ) . bitmapConfig ( Bitmap . Config . RGB_565 ) . displayer ( new RoundedBitmapDisplayer ( <int> ) ) . build ( ) ; } @Override public int getCount ( ) { return IMAGE_URLS . length ; } @Override public Object getItem ( int position ) { return position ; } @Override public long getItemId ( int position ) { return position ; } @Override public View getView ( int position , View convertView , ViewGroup parent ) { ImageView imageView = ( ImageView ) convertView ; if ( imageView = = null ) { imageView = ( ImageView ) inflater . inflate ( R . layout . item_gallery_image , parent , false ) ; } ImageLoader . getInstance ( ) . displayImage ( IMAGE_URLS [ position ] , imageView , options ) ; return imageView ; } } }