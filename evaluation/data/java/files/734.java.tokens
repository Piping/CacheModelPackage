package com . badlogic . gdx . tools . flame ; import java . awt . Dimension ; import java . awt . GridBagConstraints ; import java . awt . Insets ; import java . awt . event . ActionEvent ; import java . awt . event . ActionListener ; import javax . swing . JCheckBox ; import javax . swing . JLabel ; import javax . swing . JPanel ; import com . badlogic . gdx . graphics . g3d . particles . influencers . DynamicsModifier ; public class AngularVelocityPanel extends EditorPanel < DynamicsModifier . Angular > { JCheckBox isGlobalCheckBox ; ScaledNumericPanel thetaPanel ; ScaledNumericPanel phiPanel ; ScaledNumericPanel magnitudePanel ; public AngularVelocityPanel ( FlameMain editor , DynamicsModifier . Angular aValue , String charTitle , String name , String description ) { super ( editor , name , description ) ; initializeComponents ( aValue , charTitle ) ; setValue ( value ) ; } @Override public void setValue ( DynamicsModifier . Angular value ) { super . setValue ( value ) ; if ( value = = null ) return ; setValue ( isGlobalCheckBox , this . value . isGlobal ) ; magnitudePanel . setValue ( this . value . strengthValue ) ; thetaPanel . setValue ( this . value . thetaValue ) ; phiPanel . setValue ( this . value . phiValue ) ; } private void initializeComponents ( DynamicsModifier . Angular aValue , String charTitle ) { JPanel contentPanel = getContentPanel ( ) ; { JPanel panel = new JPanel ( ) ; panel . add ( new JLabel ( <str> ) , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; panel . add ( isGlobalCheckBox = new JCheckBox ( ) , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; contentPanel . add ( panel , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { contentPanel . add ( magnitudePanel = new ScaledNumericPanel ( editor , aValue = = null ? null : aValue . strengthValue , charTitle , <str> , <str> , true ) , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { contentPanel . add ( phiPanel = new ScaledNumericPanel ( editor , aValue = = null ? null : aValue . phiValue , charTitle , <str> , <str> , true ) , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { contentPanel . add ( thetaPanel = new ScaledNumericPanel ( editor , aValue = = null ? null : aValue . thetaValue , charTitle , <str> , <str> , true ) , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } { JPanel spacer = new JPanel ( ) ; spacer . setPreferredSize ( new Dimension ( ) ) ; contentPanel . add ( spacer , new GridBagConstraints ( <int> , <int> , <int> , <int> , <int> , <int> , GridBagConstraints . WEST , GridBagConstraints . NONE , new Insets ( <int> , <int> , <int> , <int> ) , <int> , <int> ) ) ; } magnitudePanel . setIsAlwayShown ( true ) ; phiPanel . setIsAlwayShown ( true ) ; thetaPanel . setIsAlwayShown ( true ) ; isGlobalCheckBox . addActionListener ( new ActionListener ( ) { @Override public void actionPerformed ( ActionEvent e ) { AngularVelocityPanel . this . value . isGlobal = isGlobalCheckBox . isSelected ( ) ; } } ) ; } public ScaledNumericPanel getThetaPanel ( ) { return thetaPanel ; } public ScaledNumericPanel getPhiPanel ( ) { return phiPanel ; } public ScaledNumericPanel getMagnitudePanel ( ) { return magnitudePanel ; } } 
