package com . netflix . hystrix . strategy . concurrency ; import java . util . concurrent . Callable ; import com . netflix . hystrix . strategy . HystrixPlugins ; public class HystrixContextRunnable implements Runnable { private final Callable < Void > actual ; private final HystrixRequestContext parentThreadState ; public HystrixContextRunnable ( Runnable actual ) { this ( HystrixPlugins . getInstance ( ) . getConcurrencyStrategy ( ) , actual ) ; } public HystrixContextRunnable ( HystrixConcurrencyStrategy concurrencyStrategy , final Runnable actual ) { this . actual = concurrencyStrategy . wrapCallable ( new Callable < Void > ( ) { @Override public Void call ( ) throws Exception { actual . run ( ) ; return null ; } } ) ; this . parentThreadState = HystrixRequestContext . getContextForCurrentThread ( ) ; } @Override public void run ( ) { HystrixRequestContext existingState = HystrixRequestContext . getContextForCurrentThread ( ) ; try { HystrixRequestContext . setContextOnCurrentThread ( parentThreadState ) ; try { actual . call ( ) ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } } finally { HystrixRequestContext . setContextOnCurrentThread ( existingState ) ; } } } 
