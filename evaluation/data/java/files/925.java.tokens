package org . elasticsearch . search . highlight ; import org . elasticsearch . common . inject . Inject ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . common . util . ExtensionPoint ; import java . util . * ; public class Highlighters extends ExtensionPoint . ClassMap < Highlighter > { private static final String FVH = <str> ; private static final String PLAIN = <str> ; private static final String POSTINGS = <str> ; private final Map < String , Highlighter > parsers ; public Highlighters ( ) { this ( Collections . emptyMap ( ) ) ; } private Highlighters ( Map < String , Highlighter > parsers ) { super ( <str> , Highlighter . class , new HashSet < > ( Arrays . asList ( FVH , PLAIN , POSTINGS ) ) , Highlighters . class ) ; this . parsers = Collections . unmodifiableMap ( parsers ) ; } @Inject public Highlighters ( Settings settings , Map < String , Highlighter > parsers ) { this ( addBuiltIns ( settings , parsers ) ) ; } private static Map < String , Highlighter > addBuiltIns ( Settings settings , Map < String , Highlighter > parsers ) { Map < String , Highlighter > map = new HashMap < > ( ) ; map . put ( FVH , new FastVectorHighlighter ( settings ) ) ; map . put ( PLAIN , new PlainHighlighter ( ) ) ; map . put ( POSTINGS , new PostingsHighlighter ( ) ) ; map . putAll ( parsers ) ; return map ; } public Highlighter get ( String type ) { return parsers . get ( type ) ; } } 
