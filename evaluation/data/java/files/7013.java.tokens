package org . apache . cassandra . streaming ; import java . io . Serializable ; import java . net . InetAddress ; import com . google . common . base . Objects ; public class ProgressInfo implements Serializable { public static enum Direction { OUT ( <int> ) , IN ( <int> ) ; public final byte code ; private Direction ( int code ) { this . code = ( byte ) code ; } public static Direction fromByte ( byte direction ) { return direction = = <int> ? OUT : IN ; } } public final InetAddress peer ; public final int sessionIndex ; public final String fileName ; public final Direction direction ; public final long currentBytes ; public final long totalBytes ; public ProgressInfo ( InetAddress peer , int sessionIndex , String fileName , Direction direction , long currentBytes , long totalBytes ) { assert totalBytes > <int> ; this . peer = peer ; this . sessionIndex = sessionIndex ; this . fileName = fileName ; this . direction = direction ; this . currentBytes = currentBytes ; this . totalBytes = totalBytes ; } public boolean isCompleted ( ) { return currentBytes > = totalBytes ; } @Override public boolean equals ( Object o ) { if ( this = = o ) return true ; if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) return false ; ProgressInfo that = ( ProgressInfo ) o ; if ( totalBytes ! = that . totalBytes ) return false ; if ( direction ! = that . direction ) return false ; if ( ! fileName . equals ( that . fileName ) ) return false ; if ( sessionIndex ! = that . sessionIndex ) return false ; return peer . equals ( that . peer ) ; } @Override public int hashCode ( ) { return Objects . hashCode ( peer , sessionIndex , fileName , direction , totalBytes ) ; } @Override public String toString ( ) { StringBuilder sb = new StringBuilder ( fileName ) ; sb . append ( <str> ) . append ( currentBytes ) ; sb . append ( <str> ) . append ( totalBytes ) . append ( <str> ) ; sb . append ( <str> ) . append ( currentBytes * <int> / totalBytes ) . append ( <str> ) ; sb . append ( direction = = Direction . OUT ? <str> : <str> ) ; sb . append ( <str> ) . append ( sessionIndex ) ; sb . append ( peer ) ; return sb . toString ( ) ; } }