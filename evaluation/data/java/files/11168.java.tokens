package java . io ; public class ByteArrayOutputStream extends OutputStream { protected int count ; protected byte [ ] buf ; public ByteArrayOutputStream ( ) { this ( <int> ) ; } public ByteArrayOutputStream ( int initialSize ) { buf = new byte [ initialSize ] ; } @Override public void write ( int b ) { if ( buf . length = = count ) { byte [ ] newBuf = new byte [ buf . length * <int> / <int> ] ; System . arraycopy ( buf , <int> , newBuf , <int> , count ) ; buf = newBuf ; } buf [ count + + ] = ( byte ) b ; } public byte [ ] toByteArray ( ) { byte [ ] result = new byte [ count ] ; System . arraycopy ( buf , <int> , result , <int> , count ) ; return result ; } public int size ( ) { return count ; } public String toString ( ) { return new String ( buf , <int> , count ) ; } public String toString ( String enc ) throws UnsupportedEncodingException { return new String ( buf , <int> , count , enc ) ; } }