package org . apache . cassandra . cql3 . statements ; import java . nio . ByteBuffer ; import java . util . ArrayList ; import java . util . HashSet ; import java . util . List ; import org . apache . cassandra . exceptions . InvalidRequestException ; import org . apache . cassandra . utils . ByteBufferUtil ; import static org . apache . commons . lang3 . ArrayUtils . EMPTY_OBJECT_ARRAY ; public final class RequestValidations { public static void checkTrue ( boolean expression , String message ) throws InvalidRequestException { checkTrue ( expression , message , EMPTY_OBJECT_ARRAY ) ; } public static void checkTrue ( boolean expression , String messageTemplate , Object . . . messageArgs ) throws InvalidRequestException { if ( ! expression ) throw invalidRequest ( messageTemplate , messageArgs ) ; } public static void checkContainsNoDuplicates ( List < ? > list , String message ) throws InvalidRequestException { if ( new HashSet < > ( list ) . size ( ) ! = list . size ( ) ) throw invalidRequest ( message ) ; } public static < E > void checkContainsOnly ( List < E > list , List < E > expectedElements , String message ) throws InvalidRequestException { List < E > copy = new ArrayList < > ( list ) ; copy . removeAll ( expectedElements ) ; if ( ! copy . isEmpty ( ) ) throw invalidRequest ( message ) ; } public static void checkFalse ( boolean expression , String messageTemplate , Object . . . messageArgs ) throws InvalidRequestException { checkTrue ( ! expression , messageTemplate , messageArgs ) ; } public static void checkFalse ( boolean expression , String message ) throws InvalidRequestException { checkTrue ( ! expression , message ) ; } public static < T > T checkNotNull ( T object , String messageTemplate , Object . . . messageArgs ) throws InvalidRequestException { checkTrue ( object ! = null , messageTemplate , messageArgs ) ; return object ; } public static void checkBindValueSet ( ByteBuffer b , String messageTemplate , Object . . . messageArgs ) throws InvalidRequestException { checkTrue ( b ! = ByteBufferUtil . UNSET_BYTE_BUFFER , messageTemplate , messageArgs ) ; } public static < T > T checkNull ( T object , String messageTemplate , Object . . . messageArgs ) throws InvalidRequestException { checkTrue ( object = = null , messageTemplate , messageArgs ) ; return object ; } public static < T > T checkNull ( T object , String message ) throws InvalidRequestException { return checkNull ( object , message , EMPTY_OBJECT_ARRAY ) ; } public static InvalidRequestException invalidRequest ( String messageTemplate , Object . . . messageArgs ) { return new InvalidRequestException ( String . format ( messageTemplate , messageArgs ) ) ; } private RequestValidations ( ) { } }