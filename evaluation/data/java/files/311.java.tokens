package org . gradle . launcher . daemon . server . api ; import org . gradle . api . Nullable ; import org . gradle . internal . concurrent . Stoppable ; import org . gradle . launcher . daemon . protocol . BuildStarted ; import org . gradle . launcher . daemon . protocol . DaemonUnavailable ; import org . gradle . launcher . daemon . protocol . Result ; import org . gradle . logging . internal . OutputEvent ; import java . util . concurrent . TimeUnit ; public interface DaemonConnection extends Stoppable { void onStdin ( @Nullable StdinHandler handler ) ; void onDisconnect ( @Nullable Runnable handler ) ; void onCancel ( @Nullable Runnable handler ) ; void daemonUnavailable ( DaemonUnavailable unavailable ) ; void buildStarted ( BuildStarted buildStarted ) ; void logEvent ( OutputEvent logEvent ) ; void event ( Object event ) ; void completed ( Result result ) ; Object receive ( long timeoutValue , TimeUnit timeoutUnits ) ; void stop ( ) ; } 
