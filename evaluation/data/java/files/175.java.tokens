package io . netty . channel . epoll ; import io . netty . util . NetUtil ; import org . junit . Assert ; import org . junit . Test ; import java . net . Inet6Address ; import java . net . InetSocketAddress ; import java . nio . ByteBuffer ; import static io . netty . channel . unix . NativeInetAddress . address ; public class NativeTest { @Test public void testAddressIpv4 ( ) throws Exception { InetSocketAddress inetAddress = new InetSocketAddress ( NetUtil . LOCALHOST4 , <int> ) ; byte [ ] bytes = new byte [ <int> ] ; ByteBuffer buffer = ByteBuffer . wrap ( bytes ) ; buffer . put ( inetAddress . getAddress ( ) . getAddress ( ) ) ; buffer . putInt ( inetAddress . getPort ( ) ) ; Assert . assertEquals ( inetAddress , address ( buffer . array ( ) , <int> , bytes . length ) ) ; } @Test public void testAddressIpv6 ( ) throws Exception { Inet6Address address = NetUtil . LOCALHOST6 ; InetSocketAddress inetAddress = new InetSocketAddress ( address , <int> ) ; byte [ ] bytes = new byte [ <int> ] ; ByteBuffer buffer = ByteBuffer . wrap ( bytes ) ; buffer . put ( address . getAddress ( ) ) ; buffer . putInt ( address . getScopeId ( ) ) ; buffer . putInt ( inetAddress . getPort ( ) ) ; Assert . assertEquals ( inetAddress , address ( buffer . array ( ) , <int> , bytes . length ) ) ; } } 
