package io . netty . example . sctp ; import io . netty . buffer . ByteBuf ; import io . netty . buffer . Unpooled ; import io . netty . channel . ChannelHandlerContext ; import io . netty . channel . ChannelInboundHandlerAdapter ; import io . netty . channel . sctp . SctpMessage ; public class SctpEchoClientHandler extends ChannelInboundHandlerAdapter { private final ByteBuf firstMessage ; public SctpEchoClientHandler ( ) { firstMessage = Unpooled . buffer ( SctpEchoClient . SIZE ) ; for ( int i = <int> ; i < firstMessage . capacity ( ) ; i + + ) { firstMessage . writeByte ( ( byte ) i ) ; } } @Override public void channelActive ( ChannelHandlerContext ctx ) { ctx . writeAndFlush ( new SctpMessage ( <int> , <int> , firstMessage ) ) ; } @Override public void channelRead ( ChannelHandlerContext ctx , Object msg ) { ctx . write ( msg ) ; } @Override public void channelReadComplete ( ChannelHandlerContext ctx ) { ctx . flush ( ) ; } @Override public void exceptionCaught ( ChannelHandlerContext ctx , Throwable cause ) { cause . printStackTrace ( ) ; ctx . close ( ) ; } }