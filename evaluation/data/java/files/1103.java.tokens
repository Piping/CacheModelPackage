package org . elasticsearch . test . junit . rule ; import org . elasticsearch . common . logging . ESLogger ; import org . junit . rules . TestRule ; import org . junit . runner . Description ; import org . junit . runners . model . Statement ; public class RepeatOnExceptionRule implements TestRule { private ESLogger logger ; private int retryCount ; private Class expectedException ; public RepeatOnExceptionRule ( ESLogger logger , int retryCount , Class expectedException ) { this . logger = logger ; this . retryCount = retryCount ; this . expectedException = expectedException ; } @Override public Statement apply ( final Statement base , Description description ) { return new Statement ( ) { @Override public void evaluate ( ) throws Throwable { Throwable caughtThrowable = null ; for ( int i = <int> ; i < retryCount ; i + + ) { try { base . evaluate ( ) ; return ; } catch ( Throwable t ) { if ( t . getClass ( ) . equals ( expectedException ) ) { caughtThrowable = t ; logger . info ( <str> , t , t . getClass ( ) . getSimpleName ( ) , i + <int> ) ; } else { throw t ; } } } logger . error ( <str> , retryCount ) ; throw caughtThrowable ; } } ; } } 
