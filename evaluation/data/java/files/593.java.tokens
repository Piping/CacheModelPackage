package org . gradle . api . internal . artifacts . repositories . resolver ; import org . gradle . internal . component . external . model . DefaultModuleComponentArtifactMetaData ; import org . gradle . internal . component . external . model . ModuleComponentArtifactMetaData ; import org . gradle . internal . resolve . result . ResourceAwareResolveResult ; import org . gradle . internal . resource . local . LocallyAvailableExternalResource ; class MavenUniqueSnapshotExternalResourceArtifactResolver implements ExternalResourceArtifactResolver { private final ExternalResourceArtifactResolver delegate ; private final String timestamp ; public MavenUniqueSnapshotExternalResourceArtifactResolver ( ExternalResourceArtifactResolver delegate , String timestamp ) { this . delegate = delegate ; this . timestamp = timestamp ; } public boolean artifactExists ( ModuleComponentArtifactMetaData artifact , ResourceAwareResolveResult result ) { return delegate . artifactExists ( timestamp ( artifact ) , result ) ; } public LocallyAvailableExternalResource resolveArtifact ( ModuleComponentArtifactMetaData artifact , ResourceAwareResolveResult result ) { return delegate . resolveArtifact ( timestamp ( artifact ) , result ) ; } protected ModuleComponentArtifactMetaData timestamp ( ModuleComponentArtifactMetaData artifact ) { MavenUniqueSnapshotComponentIdentifier snapshotComponentIdentifier = new MavenUniqueSnapshotComponentIdentifier ( artifact . getId ( ) . getComponentIdentifier ( ) , timestamp ) ; return new DefaultModuleComponentArtifactMetaData ( snapshotComponentIdentifier , artifact . getName ( ) ) ; } } 
