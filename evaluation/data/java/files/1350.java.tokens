package jcuda . jcufft ; public class cufftResult { public static final int CUFFT_SUCCESS = <int> ; public static final int CUFFT_INVALID_PLAN = <int> ; public static final int CUFFT_ALLOC_FAILED = <int> ; public static final int CUFFT_INVALID_TYPE = <int> ; public static final int CUFFT_INVALID_VALUE = <int> ; public static final int CUFFT_INTERNAL_ERROR = <int> ; public static final int CUFFT_EXEC_FAILED = <int> ; public static final int CUFFT_SETUP_FAILED = <int> ; public static final int CUFFT_INVALID_SIZE = <int> ; public static final int CUFFT_UNALIGNED_DATA = <int> ; public static final int CUFFT_INCOMPLETE_PARAMETER_LIST = <hex> ; public static final int CUFFT_INVALID_DEVICE = <hex> ; public static final int CUFFT_PARSE_ERROR = <hex> ; public static final int CUFFT_NO_WORKSPACE = <hex> ; public static final int CUFFT_NOT_IMPLEMENTED = <hex> ; public static final int CUFFT_LICENSE_ERROR = <hex> ; public static final int JCUFFT_INTERNAL_ERROR = <hex> ; public static String stringFor ( int m ) { switch ( m ) { case CUFFT_SUCCESS : return <str> ; case CUFFT_INVALID_PLAN : return <str> ; case CUFFT_ALLOC_FAILED : return <str> ; case CUFFT_INVALID_TYPE : return <str> ; case CUFFT_INVALID_VALUE : return <str> ; case CUFFT_INTERNAL_ERROR : return <str> ; case CUFFT_EXEC_FAILED : return <str> ; case CUFFT_SETUP_FAILED : return <str> ; case CUFFT_INVALID_SIZE : return <str> ; case CUFFT_UNALIGNED_DATA : return <str> ; case CUFFT_INCOMPLETE_PARAMETER_LIST : return <str> ; case CUFFT_INVALID_DEVICE : return <str> ; case CUFFT_PARSE_ERROR : return <str> ; case CUFFT_NO_WORKSPACE : return <str> ; case CUFFT_NOT_IMPLEMENTED : return <str> ; case CUFFT_LICENSE_ERROR : return <str> ; case JCUFFT_INTERNAL_ERROR : return <str> ; } return <str> + m ; } private cufftResult ( ) { } } 
