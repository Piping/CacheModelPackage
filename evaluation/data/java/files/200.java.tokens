package org . elasticsearch . common . geo . builders ; import com . vividsolutions . jts . geom . Coordinate ; import org . elasticsearch . common . unit . DistanceUnit ; import java . io . IOException ; public class CirlceBuilderTests extends AbstractShapeBuilderTestCase < CircleBuilder > { @Override protected CircleBuilder createTestShapeBuilder ( ) { double centerX = randomDoubleBetween ( - <int> , <int> , false ) ; double centerY = randomDoubleBetween ( - <int> , <int> , false ) ; return new CircleBuilder ( ) . center ( new Coordinate ( centerX , centerY ) ) . radius ( randomDoubleBetween ( <float> , <float> , false ) , randomFrom ( DistanceUnit . values ( ) ) ) ; } @Override protected CircleBuilder mutate ( CircleBuilder original ) throws IOException { CircleBuilder mutation = copyShape ( original ) ; double radius = original . radius ( ) ; DistanceUnit unit = original . unit ( ) ; if ( randomBoolean ( ) ) { mutation . center ( new Coordinate ( original . center ( ) . x / <int> , original . center ( ) . y / <int> ) ) ; } else if ( randomBoolean ( ) ) { radius = radius / <int> ; } else { DistanceUnit newRandom = unit ; while ( newRandom = = unit ) { newRandom = randomFrom ( DistanceUnit . values ( ) ) ; } ; unit = newRandom ; } return mutation . radius ( radius , unit ) ; } } 
