package org . elasticsearch . rest . action . support ; import org . elasticsearch . action . ActionListener ; import org . elasticsearch . common . logging . ESLogger ; import org . elasticsearch . common . logging . Loggers ; import org . elasticsearch . rest . BytesRestResponse ; import org . elasticsearch . rest . RestChannel ; import java . io . IOException ; public abstract class RestActionListener < Response > implements ActionListener < Response > { private static ESLogger logger = Loggers . getLogger ( RestResponseListener . class ) ; protected final RestChannel channel ; protected RestActionListener ( RestChannel channel ) { this . channel = channel ; } @Override public final void onResponse ( Response response ) { try { processResponse ( response ) ; } catch ( Throwable t ) { onFailure ( t ) ; } } protected abstract void processResponse ( Response response ) throws Exception ; @Override public final void onFailure ( Throwable e ) { try { channel . sendResponse ( new BytesRestResponse ( channel , e ) ) ; } catch ( Throwable e1 ) { logger . error ( <str> , e1 ) ; } } } 
