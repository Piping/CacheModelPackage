package io . netty . handler . codec . http . cookie ; import static org . junit . Assert . * ; import org . junit . Test ; public class ClientCookieEncoderTest { @Test public void testEncodingMultipleClientCookies ( ) { String c1 = <str> ; String c2 = <str> ; String c3 = <str> ; Cookie cookie1 = new DefaultCookie ( <str> , <str> ) ; cookie1 . setDomain ( <str> ) ; cookie1 . setMaxAge ( <int> ) ; cookie1 . setPath ( <str> ) ; cookie1 . setSecure ( true ) ; Cookie cookie2 = new DefaultCookie ( <str> , <str> ) ; cookie2 . setDomain ( <str> ) ; cookie2 . setPath ( <str> ) ; cookie2 . setSecure ( false ) ; Cookie cookie3 = new DefaultCookie ( <str> , <str> ) ; String encodedCookie = ClientCookieEncoder . STRICT . encode ( cookie1 , cookie2 , cookie3 ) ; assertEquals ( c3 + <str> + c2 + <str> + c1 , encodedCookie ) ; } @Test public void testWrappedCookieValue ( ) { ClientCookieEncoder . STRICT . encode ( new DefaultCookie ( <str> , <str> ) ) ; } @Test ( expected = IllegalArgumentException . class ) public void testRejectCookieValueWithSemicolon ( ) { ClientCookieEncoder . STRICT . encode ( new DefaultCookie ( <str> , <str> ) ) ; } }