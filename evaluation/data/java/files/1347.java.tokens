package com . google . common . collect ; import static com . google . common . base . Preconditions . checkNotNull ; import com . google . common . annotations . GwtCompatible ; import com . google . common . base . Preconditions ; @GwtCompatible ( serializable = true , emulated = true ) @SuppressWarnings ( <str> ) final class SingletonImmutableList < E > extends ImmutableList < E > { final transient E element ; SingletonImmutableList ( E element ) { this . element = checkNotNull ( element ) ; } @Override public E get ( int index ) { Preconditions . checkElementIndex ( index , <int> ) ; return element ; } @Override public UnmodifiableIterator < E > iterator ( ) { return Iterators . singletonIterator ( element ) ; } @Override public int size ( ) { return <int> ; } @Override public ImmutableList < E > subList ( int fromIndex , int toIndex ) { Preconditions . checkPositionIndexes ( fromIndex , toIndex , <int> ) ; return ( fromIndex = = toIndex ) ? ImmutableList . < E > of ( ) : this ; } @Override public String toString ( ) { String elementToString = element . toString ( ) ; return new StringBuilder ( elementToString . length ( ) + <int> ) . append ( <str> ) . append ( elementToString ) . append ( <str> ) . toString ( ) ; } @Override boolean isPartialView ( ) { return false ; } } 
