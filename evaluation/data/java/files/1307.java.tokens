package org . gradle . api . internal . tasks . testing . logging ; import com . google . common . collect . Lists ; import org . gradle . api . specs . Spec ; import java . util . Arrays ; import java . util . List ; public class StackTraceFilter { private final Spec < StackTraceElement > filterSpec ; public StackTraceFilter ( Spec < StackTraceElement > filterSpec ) { this . filterSpec = filterSpec ; } public List < StackTraceElement > filter ( List < StackTraceElement > stackTrace ) { List < StackTraceElement > filtered = Lists . newArrayList ( ) ; for ( StackTraceElement element : Lists . reverse ( stackTrace ) ) { if ( filterSpec . isSatisfiedBy ( element ) ) { filtered . add ( element ) ; } } return Lists . reverse ( filtered ) ; } public List < StackTraceElement > filter ( Throwable throwable ) { return filter ( Arrays . asList ( throwable . getStackTrace ( ) ) ) ; } } 
