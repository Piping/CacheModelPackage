package org . elasticsearch . plan . a ; import java . lang . invoke . MethodHandle ; import java . lang . invoke . MethodHandles ; import java . lang . invoke . MethodType ; import java . util . ArrayList ; import java . util . Arrays ; import java . util . Collections ; import java . util . HashMap ; import java . util . List ; import java . util . Map ; class Definition { enum Sort { VOID ( void . class , <int> , true , false , false , false ) , BOOL ( boolean . class , <int> , true , true , false , true ) , BYTE ( byte . class , <int> , true , false , true , true ) , SHORT ( short . class , <int> , true , false , true , true ) , CHAR ( char . class , <int> , true , false , true , true ) , INT ( int . class , <int> , true , false , true , true ) , LONG ( long . class , <int> , true , false , true , true ) , FLOAT ( float . class , <int> , true , false , true , true ) , DOUBLE ( double . class , <int> , true , false , true , true ) , VOID_OBJ ( Void . class , <int> , true , false , false , false ) , BOOL_OBJ ( Boolean . class , <int> , false , true , false , false ) , BYTE_OBJ ( Byte . class , <int> , false , false , true , false ) , SHORT_OBJ ( Short . class , <int> , false , false , true , false ) , CHAR_OBJ ( Character . class , <int> , false , false , true , false ) , INT_OBJ ( Integer . class , <int> , false , false , true , false ) , LONG_OBJ ( Long . class , <int> , false , false , true , false ) , FLOAT_OBJ ( Float . class , <int> , false , false , true , false ) , DOUBLE_OBJ ( Double . class , <int> , false , false , true , false ) , NUMBER ( Number . class , <int> , false , false , true , false ) , STRING ( String . class , <int> , false , false , false , true ) , OBJECT ( null , <int> , false , false , false , false ) , DEF ( null , <int> , false , false , false , false ) , ARRAY ( null , <int> , false , false , false , false ) ; final Class < ? > clazz ; final int size ; final boolean primitive ; final boolean bool ; final boolean numeric ; final boolean constant ; Sort ( final Class < ? > clazz , final int size , final boolean primitive , final boolean bool , final boolean numeric , final boolean constant ) { this . clazz = clazz ; this . size = size ; this . bool = bool ; this . primitive = primitive ; this . numeric = numeric ; this . constant = constant ; } } static class Type { final String name ; final Struct struct ; final Class < ? > clazz ; final org . objectweb . asm . Type type ; final Sort sort ; private Type ( final String name , final Struct struct , final Class < ? > clazz , final org . objectweb . asm . Type type , final Sort sort ) { this . name = name ; this . struct = struct ; this . clazz = clazz ; this . type = type ; this . sort = sort ; } @Override public boolean equals ( final Object object ) { if ( this = = object ) { return true ; } if ( object = = null | | getClass ( ) ! = object . getClass ( ) ) { return false ; } final Type type = ( Type ) object ; return this . type . equals ( type . type ) & & struct . equals ( type . struct ) ; } @Override public int hashCode ( ) { int result = struct . hashCode ( ) ; result = <int> * result + type . hashCode ( ) ; return result ; } } static class Constructor { final String name ; final Struct owner ; final List < Type > arguments ; final org . objectweb . asm . commons . Method method ; final java . lang . reflect . Constructor < ? > reflect ; private Constructor ( final String name , final Struct owner , final List < Type > arguments , final org . objectweb . asm . commons . Method method , final java . lang . reflect . Constructor < ? > reflect ) { this . name = name ; this . owner = owner ; this . arguments = Collections . unmodifiableList ( arguments ) ; this . method = method ; this . reflect = reflect ; } } static class Method { final String name ; final Struct owner ; final Type rtn ; final List < Type > arguments ; final org . objectweb . asm . commons . Method method ; final java . lang . reflect . Method reflect ; final MethodHandle handle ; private Method ( final String name , final Struct owner , final Type rtn , final List < Type > arguments , final org . objectweb . asm . commons . Method method , final java . lang . reflect . Method reflect , final MethodHandle handle ) { this . name = name ; this . owner = owner ; this . rtn = rtn ; this . arguments = Collections . unmodifiableList ( arguments ) ; this . method = method ; this . reflect = reflect ; this . handle = handle ; } } static class Field { final String name ; final Struct owner ; final Type generic ; final Type type ; final java . lang . reflect . Field reflect ; final MethodHandle getter ; final MethodHandle setter ; private Field ( final String name , final Struct owner , final Type generic , final Type type , final java . lang . reflect . Field reflect , final MethodHandle getter , final MethodHandle setter ) { this . name = name ; this . owner = owner ; this . generic = generic ; this . type = type ; this . reflect = reflect ; this . getter = getter ; this . setter = setter ; } } static class Struct { final String name ; final Class < ? > clazz ; final org . objectweb . asm . Type type ; final Map < String , Constructor > constructors ; final Map < String , Method > functions ; final Map < String , Method > methods ; final Map < String , Field > statics ; final Map < String , Field > members ; private Struct ( final String name , final Class < ? > clazz , final org . objectweb . asm . Type type ) { this . name = name ; this . clazz = clazz ; this . type = type ; constructors = new HashMap < > ( ) ; functions = new HashMap < > ( ) ; methods = new HashMap < > ( ) ; statics = new HashMap < > ( ) ; members = new HashMap < > ( ) ; } private Struct ( final Struct struct ) { name = struct . name ; clazz = struct . clazz ; type = struct . type ; constructors = Collections . unmodifiableMap ( struct . constructors ) ; functions = Collections . unmodifiableMap ( struct . functions ) ; methods = Collections . unmodifiableMap ( struct . methods ) ; statics = Collections . unmodifiableMap ( struct . statics ) ; members = Collections . unmodifiableMap ( struct . members ) ; } @Override public boolean equals ( Object object ) { if ( this = = object ) { return true ; } if ( object = = null | | getClass ( ) ! = object . getClass ( ) ) { return false ; } Struct struct = ( Struct ) object ; return name . equals ( struct . name ) ; } @Override public int hashCode ( ) { return name . hashCode ( ) ; } } static class Pair { final Type type0 ; final Type type1 ; Pair ( final Type type0 , final Type type1 ) { this . type0 = type0 ; this . type1 = type1 ; } @Override public boolean equals ( final Object object ) { if ( this = = object ) { return true ; } if ( object = = null | | getClass ( ) ! = object . getClass ( ) ) { return false ; } final Pair pair = ( Pair ) object ; return type0 . equals ( pair . type0 ) & & type1 . equals ( pair . type1 ) ; } @Override public int hashCode ( ) { int result = type0 . hashCode ( ) ; result = <int> * result + type1 . hashCode ( ) ; return result ; } } static class Cast { final Type from ; final Type to ; Cast ( final Type from , final Type to ) { this . from = from ; this . to = to ; } @Override public boolean equals ( final Object object ) { if ( this = = object ) { return true ; } if ( object = = null | | getClass ( ) ! = object . getClass ( ) ) { return false ; } final Cast cast = ( Cast ) object ; return from . equals ( cast . from ) & & to . equals ( cast . to ) ; } @Override public int hashCode ( ) { int result = from . hashCode ( ) ; result = <int> * result + to . hashCode ( ) ; return result ; } } static class Transform extends Cast { final Cast cast ; final Method method ; final Type upcast ; final Type downcast ; private Transform ( final Cast cast , Method method , final Type upcast , final Type downcast ) { super ( cast . from , cast . to ) ; this . cast = cast ; this . method = method ; this . upcast = upcast ; this . downcast = downcast ; } } final Map < String , Struct > structs ; final Map < Class < ? > , Struct > classes ; final Map < Cast , Transform > transforms ; final Map < Pair , Type > bounds ; final Type voidType ; final Type booleanType ; final Type byteType ; final Type shortType ; final Type charType ; final Type intType ; final Type longType ; final Type floatType ; final Type doubleType ; final Type voidobjType ; final Type booleanobjType ; final Type byteobjType ; final Type shortobjType ; final Type charobjType ; final Type intobjType ; final Type longobjType ; final Type floatobjType ; final Type doubleobjType ; final Type objectType ; final Type defType ; final Type numberType ; final Type charseqType ; final Type stringType ; final Type mathType ; final Type utilityType ; final Type defobjType ; final Type listType ; final Type arraylistType ; final Type mapType ; final Type hashmapType ; final Type olistType ; final Type oarraylistType ; final Type omapType ; final Type ohashmapType ; final Type smapType ; final Type shashmapType ; final Type somapType ; final Type sohashmapType ; final Type execType ; public Definition ( ) { structs = new HashMap < > ( ) ; classes = new HashMap < > ( ) ; transforms = new HashMap < > ( ) ; bounds = new HashMap < > ( ) ; addDefaultStructs ( ) ; addDefaultClasses ( ) ; voidType = getType ( <str> ) ; booleanType = getType ( <str> ) ; byteType = getType ( <str> ) ; shortType = getType ( <str> ) ; charType = getType ( <str> ) ; intType = getType ( <str> ) ; longType = getType ( <str> ) ; floatType = getType ( <str> ) ; doubleType = getType ( <str> ) ; voidobjType = getType ( <str> ) ; booleanobjType = getType ( <str> ) ; byteobjType = getType ( <str> ) ; shortobjType = getType ( <str> ) ; charobjType = getType ( <str> ) ; intobjType = getType ( <str> ) ; longobjType = getType ( <str> ) ; floatobjType = getType ( <str> ) ; doubleobjType = getType ( <str> ) ; objectType = getType ( <str> ) ; defType = getType ( <str> ) ; numberType = getType ( <str> ) ; charseqType = getType ( <str> ) ; stringType = getType ( <str> ) ; mathType = getType ( <str> ) ; utilityType = getType ( <str> ) ; defobjType = getType ( <str> ) ; listType = getType ( <str> ) ; arraylistType = getType ( <str> ) ; mapType = getType ( <str> ) ; hashmapType = getType ( <str> ) ; olistType = getType ( <str> ) ; oarraylistType = getType ( <str> ) ; omapType = getType ( <str> ) ; ohashmapType = getType ( <str> ) ; smapType = getType ( <str> ) ; shashmapType = getType ( <str> ) ; somapType = getType ( <str> ) ; sohashmapType = getType ( <str> ) ; execType = getType ( <str> ) ; addDefaultElements ( ) ; copyDefaultStructs ( ) ; addDefaultTransforms ( ) ; addDefaultBounds ( ) ; } Definition ( final Definition definition ) { final Map < String , Struct > structs = new HashMap < > ( ) ; for ( final Struct struct : definition . structs . values ( ) ) { structs . put ( struct . name , new Struct ( struct ) ) ; } this . structs = Collections . unmodifiableMap ( structs ) ; final Map < Class < ? > , Struct > classes = new HashMap < > ( ) ; for ( final Struct struct : definition . classes . values ( ) ) { classes . put ( struct . clazz , this . structs . get ( struct . name ) ) ; } this . classes = Collections . unmodifiableMap ( classes ) ; transforms = Collections . unmodifiableMap ( definition . transforms ) ; bounds = Collections . unmodifiableMap ( definition . bounds ) ; voidType = definition . voidType ; booleanType = definition . booleanType ; byteType = definition . byteType ; shortType = definition . shortType ; charType = definition . charType ; intType = definition . intType ; longType = definition . longType ; floatType = definition . floatType ; doubleType = definition . doubleType ; voidobjType = definition . voidobjType ; booleanobjType = definition . booleanobjType ; byteobjType = definition . byteobjType ; shortobjType = definition . shortobjType ; charobjType = definition . charobjType ; intobjType = definition . intobjType ; longobjType = definition . longobjType ; floatobjType = definition . floatobjType ; doubleobjType = definition . doubleobjType ; objectType = definition . objectType ; defType = definition . defType ; numberType = definition . numberType ; charseqType = definition . charseqType ; stringType = definition . stringType ; mathType = definition . mathType ; utilityType = definition . utilityType ; defobjType = definition . defobjType ; listType = definition . listType ; arraylistType = definition . arraylistType ; mapType = definition . mapType ; hashmapType = definition . hashmapType ; olistType = definition . olistType ; oarraylistType = definition . oarraylistType ; omapType = definition . omapType ; ohashmapType = definition . ohashmapType ; smapType = definition . smapType ; shashmapType = definition . shashmapType ; somapType = definition . somapType ; sohashmapType = definition . sohashmapType ; execType = definition . execType ; } private void addDefaultStructs ( ) { addStruct ( <str> , void . class ) ; addStruct ( <str> , boolean . class ) ; addStruct ( <str> , byte . class ) ; addStruct ( <str> , short . class ) ; addStruct ( <str> , char . class ) ; addStruct ( <str> , int . class ) ; addStruct ( <str> , long . class ) ; addStruct ( <str> , float . class ) ; addStruct ( <str> , double . class ) ; addStruct ( <str> , Void . class ) ; addStruct ( <str> , Boolean . class ) ; addStruct ( <str> , Byte . class ) ; addStruct ( <str> , Short . class ) ; addStruct ( <str> , Character . class ) ; addStruct ( <str> , Integer . class ) ; addStruct ( <str> , Long . class ) ; addStruct ( <str> , Float . class ) ; addStruct ( <str> , Double . class ) ; addStruct ( <str> , Object . class ) ; addStruct ( <str> , Object . class ) ; addStruct ( <str> , Number . class ) ; addStruct ( <str> , CharSequence . class ) ; addStruct ( <str> , String . class ) ; addStruct ( <str> , Math . class ) ; addStruct ( <str> , Utility . class ) ; addStruct ( <str> , Def . class ) ; addStruct ( <str> , List . class ) ; addStruct ( <str> , ArrayList . class ) ; addStruct ( <str> , Map . class ) ; addStruct ( <str> , HashMap . class ) ; addStruct ( <str> , List . class ) ; addStruct ( <str> , ArrayList . class ) ; addStruct ( <str> , Map . class ) ; addStruct ( <str> , HashMap . class ) ; addStruct ( <str> , Map . class ) ; addStruct ( <str> , HashMap . class ) ; addStruct ( <str> , Map . class ) ; addStruct ( <str> , HashMap . class ) ; addStruct ( <str> , Executable . class ) ; } private void addDefaultClasses ( ) { addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; addClass ( <str> ) ; } private void addDefaultElements ( ) { addMethod ( <str> , <str> , null , false , stringType , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , false , booleanType , new Type [ ] { objectType } , null , null ) ; addMethod ( <str> , <str> , null , false , intType , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , false , stringType , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , false , booleanType , new Type [ ] { objectType } , null , null ) ; addMethod ( <str> , <str> , null , false , intType , new Type [ ] { } , null , null ) ; addConstructor ( <str> , <str> , new Type [ ] { booleanType } , null ) ; addMethod ( <str> , <str> , null , true , booleanobjType , new Type [ ] { booleanType } , null , null ) ; addMethod ( <str> , <str> , null , false , booleanType , new Type [ ] { } , null , null ) ; addConstructor ( <str> , <str> , new Type [ ] { byteType } , null ) ; addMethod ( <str> , <str> , null , true , byteobjType , new Type [ ] { byteType } , null , null ) ; addMethod ( <str> , <str> , null , false , byteType , new Type [ ] { } , null , null ) ; addField ( <str> , <str> , null , true , byteType , null ) ; addField ( <str> , <str> , null , true , byteType , null ) ; addConstructor ( <str> , <str> , new Type [ ] { shortType } , null ) ; addMethod ( <str> , <str> , null , true , shortobjType , new Type [ ] { shortType } , null , null ) ; addMethod ( <str> , <str> , null , false , shortType , new Type [ ] { } , null , null ) ; addField ( <str> , <str> , null , true , shortType , null ) ; addField ( <str> , <str> , null , true , shortType , null ) ; addConstructor ( <str> , <str> , new Type [ ] { charType } , null ) ; addMethod ( <str> , <str> , null , true , charobjType , new Type [ ] { charType } , null , null ) ; addMethod ( <str> , <str> , null , false , charType , new Type [ ] { } , null , null ) ; addField ( <str> , <str> , null , true , charType , null ) ; addField ( <str> , <str> , null , true , charType , null ) ; addConstructor ( <str> , <str> , new Type [ ] { intType } , null ) ; addMethod ( <str> , <str> , null , true , intobjType , new Type [ ] { intType } , null , null ) ; addMethod ( <str> , <str> , null , false , intType , new Type [ ] { } , null , null ) ; addField ( <str> , <str> , null , true , intType , null ) ; addField ( <str> , <str> , null , true , intType , null ) ; addConstructor ( <str> , <str> , new Type [ ] { longType } , null ) ; addMethod ( <str> , <str> , null , true , longobjType , new Type [ ] { longType } , null , null ) ; addMethod ( <str> , <str> , null , false , longType , new Type [ ] { } , null , null ) ; addField ( <str> , <str> , null , true , longType , null ) ; addField ( <str> , <str> , null , true , longType , null ) ; addConstructor ( <str> , <str> , new Type [ ] { floatType } , null ) ; addMethod ( <str> , <str> , null , true , floatobjType , new Type [ ] { floatType } , null , null ) ; addMethod ( <str> , <str> , null , false , floatType , new Type [ ] { } , null , null ) ; addField ( <str> , <str> , null , true , floatType , null ) ; addField ( <str> , <str> , null , true , floatType , null ) ; addConstructor ( <str> , <str> , new Type [ ] { doubleType } , null ) ; addMethod ( <str> , <str> , null , true , doubleobjType , new Type [ ] { doubleType } , null , null ) ; addMethod ( <str> , <str> , null , false , doubleType , new Type [ ] { } , null , null ) ; addField ( <str> , <str> , null , true , doubleType , null ) ; addField ( <str> , <str> , null , true , doubleType , null ) ; addMethod ( <str> , <str> , null , false , byteType , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , false , shortType , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , false , intType , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , false , longType , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , false , floatType , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , false , doubleType , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , false , charType , new Type [ ] { intType } , null , null ) ; addMethod ( <str> , <str> , null , false , intType , new Type [ ] { } , null , null ) ; addConstructor ( <str> , <str> , new Type [ ] { } , null ) ; addMethod ( <str> , <str> , null , false , intType , new Type [ ] { intType } , null , null ) ; addMethod ( <str> , <str> , null , false , intType , new Type [ ] { stringType } , null , null ) ; addMethod ( <str> , <str> , null , false , stringType , new Type [ ] { stringType } , null , null ) ; addMethod ( <str> , <str> , null , false , booleanType , new Type [ ] { stringType } , null , null ) ; addMethod ( <str> , <str> , null , false , intType , new Type [ ] { stringType , intType } , null , null ) ; addMethod ( <str> , <str> , null , false , booleanType , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , false , stringType , new Type [ ] { charseqType , charseqType } , null , null ) ; addMethod ( <str> , <str> , null , false , booleanType , new Type [ ] { stringType } , null , null ) ; addMethod ( <str> , <str> , null , false , stringType , new Type [ ] { intType , intType } , null , null ) ; addMethod ( <str> , <str> , null , false , getType ( charType . struct , <int> ) , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , false , stringType , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanType , new Type [ ] { numberType } , null , null ) ; addMethod ( <str> , <str> , null , true , charType , new Type [ ] { numberType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanobjType , new Type [ ] { numberType } , null , null ) ; addMethod ( <str> , <str> , null , true , byteobjType , new Type [ ] { numberType } , null , null ) ; addMethod ( <str> , <str> , null , true , shortobjType , new Type [ ] { numberType } , null , null ) ; addMethod ( <str> , <str> , null , true , charobjType , new Type [ ] { numberType } , null , null ) ; addMethod ( <str> , <str> , null , true , intobjType , new Type [ ] { numberType } , null , null ) ; addMethod ( <str> , <str> , null , true , longobjType , new Type [ ] { numberType } , null , null ) ; addMethod ( <str> , <str> , null , true , floatobjType , new Type [ ] { numberType } , null , null ) ; addMethod ( <str> , <str> , null , true , doubleobjType , new Type [ ] { numberType } , null , null ) ; addMethod ( <str> , <str> , null , true , byteType , new Type [ ] { booleanType } , null , null ) ; addMethod ( <str> , <str> , null , true , shortType , new Type [ ] { booleanType } , null , null ) ; addMethod ( <str> , <str> , null , true , charType , new Type [ ] { booleanType } , null , null ) ; addMethod ( <str> , <str> , null , true , intType , new Type [ ] { booleanType } , null , null ) ; addMethod ( <str> , <str> , null , true , longType , new Type [ ] { booleanType } , null , null ) ; addMethod ( <str> , <str> , null , true , floatType , new Type [ ] { booleanType } , null , null ) ; addMethod ( <str> , <str> , null , true , doubleType , new Type [ ] { booleanType } , null , null ) ; addMethod ( <str> , <str> , null , true , intobjType , new Type [ ] { booleanType } , null , null ) ; addMethod ( <str> , <str> , null , true , byteType , new Type [ ] { booleanobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , shortType , new Type [ ] { booleanobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , charType , new Type [ ] { booleanobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , intType , new Type [ ] { booleanobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , longType , new Type [ ] { booleanobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , floatType , new Type [ ] { booleanobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , doubleType , new Type [ ] { booleanobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , byteobjType , new Type [ ] { booleanobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , shortobjType , new Type [ ] { booleanobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , charobjType , new Type [ ] { booleanobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , intobjType , new Type [ ] { booleanobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , longobjType , new Type [ ] { booleanobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , floatobjType , new Type [ ] { booleanobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , doubleobjType , new Type [ ] { booleanobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanType , new Type [ ] { byteType } , null , null ) ; addMethod ( <str> , <str> , null , true , shortobjType , new Type [ ] { byteType } , null , null ) ; addMethod ( <str> , <str> , null , true , charobjType , new Type [ ] { byteType } , null , null ) ; addMethod ( <str> , <str> , null , true , intobjType , new Type [ ] { byteType } , null , null ) ; addMethod ( <str> , <str> , null , true , longobjType , new Type [ ] { byteType } , null , null ) ; addMethod ( <str> , <str> , null , true , floatobjType , new Type [ ] { byteType } , null , null ) ; addMethod ( <str> , <str> , null , true , doubleobjType , new Type [ ] { byteType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanType , new Type [ ] { byteobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , charType , new Type [ ] { byteobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanType , new Type [ ] { shortType } , null , null ) ; addMethod ( <str> , <str> , null , true , byteobjType , new Type [ ] { shortType } , null , null ) ; addMethod ( <str> , <str> , null , true , charobjType , new Type [ ] { shortType } , null , null ) ; addMethod ( <str> , <str> , null , true , intobjType , new Type [ ] { shortType } , null , null ) ; addMethod ( <str> , <str> , null , true , longobjType , new Type [ ] { shortType } , null , null ) ; addMethod ( <str> , <str> , null , true , floatobjType , new Type [ ] { shortType } , null , null ) ; addMethod ( <str> , <str> , null , true , doubleobjType , new Type [ ] { shortType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanType , new Type [ ] { shortobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , charType , new Type [ ] { shortobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanType , new Type [ ] { charType } , null , null ) ; addMethod ( <str> , <str> , null , true , byteobjType , new Type [ ] { charType } , null , null ) ; addMethod ( <str> , <str> , null , true , shortobjType , new Type [ ] { charType } , null , null ) ; addMethod ( <str> , <str> , null , true , intobjType , new Type [ ] { charType } , null , null ) ; addMethod ( <str> , <str> , null , true , longobjType , new Type [ ] { charType } , null , null ) ; addMethod ( <str> , <str> , null , true , floatobjType , new Type [ ] { charType } , null , null ) ; addMethod ( <str> , <str> , null , true , doubleobjType , new Type [ ] { charType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanType , new Type [ ] { charobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , byteType , new Type [ ] { charobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , shortType , new Type [ ] { charobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , intType , new Type [ ] { charobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , longType , new Type [ ] { charobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , floatType , new Type [ ] { charobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , doubleType , new Type [ ] { charobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanobjType , new Type [ ] { charobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , byteobjType , new Type [ ] { charobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , shortobjType , new Type [ ] { charobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , intobjType , new Type [ ] { charobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , longobjType , new Type [ ] { charobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , floatobjType , new Type [ ] { charobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , doubleobjType , new Type [ ] { charobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanType , new Type [ ] { intType } , null , null ) ; addMethod ( <str> , <str> , null , true , byteobjType , new Type [ ] { intType } , null , null ) ; addMethod ( <str> , <str> , null , true , shortobjType , new Type [ ] { intType } , null , null ) ; addMethod ( <str> , <str> , null , true , charobjType , new Type [ ] { intType } , null , null ) ; addMethod ( <str> , <str> , null , true , longobjType , new Type [ ] { intType } , null , null ) ; addMethod ( <str> , <str> , null , true , floatobjType , new Type [ ] { intType } , null , null ) ; addMethod ( <str> , <str> , null , true , doubleobjType , new Type [ ] { intType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanType , new Type [ ] { intobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , charType , new Type [ ] { intobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanType , new Type [ ] { longType } , null , null ) ; addMethod ( <str> , <str> , null , true , byteobjType , new Type [ ] { longType } , null , null ) ; addMethod ( <str> , <str> , null , true , shortobjType , new Type [ ] { longType } , null , null ) ; addMethod ( <str> , <str> , null , true , charobjType , new Type [ ] { longType } , null , null ) ; addMethod ( <str> , <str> , null , true , intobjType , new Type [ ] { longType } , null , null ) ; addMethod ( <str> , <str> , null , true , floatobjType , new Type [ ] { longType } , null , null ) ; addMethod ( <str> , <str> , null , true , doubleobjType , new Type [ ] { longType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanType , new Type [ ] { longobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , charType , new Type [ ] { longobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanType , new Type [ ] { floatType } , null , null ) ; addMethod ( <str> , <str> , null , true , byteobjType , new Type [ ] { floatType } , null , null ) ; addMethod ( <str> , <str> , null , true , shortobjType , new Type [ ] { floatType } , null , null ) ; addMethod ( <str> , <str> , null , true , charobjType , new Type [ ] { floatType } , null , null ) ; addMethod ( <str> , <str> , null , true , intobjType , new Type [ ] { floatType } , null , null ) ; addMethod ( <str> , <str> , null , true , longobjType , new Type [ ] { floatType } , null , null ) ; addMethod ( <str> , <str> , null , true , doubleobjType , new Type [ ] { floatType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanType , new Type [ ] { floatobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , charType , new Type [ ] { floatobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanType , new Type [ ] { doubleType } , null , null ) ; addMethod ( <str> , <str> , null , true , byteobjType , new Type [ ] { doubleType } , null , null ) ; addMethod ( <str> , <str> , null , true , shortobjType , new Type [ ] { doubleType } , null , null ) ; addMethod ( <str> , <str> , null , true , charobjType , new Type [ ] { doubleType } , null , null ) ; addMethod ( <str> , <str> , null , true , intobjType , new Type [ ] { doubleType } , null , null ) ; addMethod ( <str> , <str> , null , true , longobjType , new Type [ ] { doubleType } , null , null ) ; addMethod ( <str> , <str> , null , true , floatobjType , new Type [ ] { doubleType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanType , new Type [ ] { doubleobjType } , null , null ) ; addMethod ( <str> , <str> , null , true , charType , new Type [ ] { doubleobjType } , null , null ) ; addMethod ( <str> , <str> , <str> , true , doubleType , new Type [ ] { doubleType , doubleType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanType , new Type [ ] { defType } , null , null ) ; addMethod ( <str> , <str> , null , true , byteType , new Type [ ] { defType } , null , null ) ; addMethod ( <str> , <str> , null , true , shortType , new Type [ ] { defType } , null , null ) ; addMethod ( <str> , <str> , null , true , charType , new Type [ ] { defType } , null , null ) ; addMethod ( <str> , <str> , null , true , intType , new Type [ ] { defType } , null , null ) ; addMethod ( <str> , <str> , null , true , longType , new Type [ ] { defType } , null , null ) ; addMethod ( <str> , <str> , null , true , floatType , new Type [ ] { defType } , null , null ) ; addMethod ( <str> , <str> , null , true , doubleType , new Type [ ] { defType } , null , null ) ; addMethod ( <str> , <str> , null , true , booleanobjType , new Type [ ] { defType } , null , null ) ; addMethod ( <str> , <str> , null , true , byteobjType , new Type [ ] { defType } , null , null ) ; addMethod ( <str> , <str> , null , true , shortobjType , new Type [ ] { defType } , null , null ) ; addMethod ( <str> , <str> , null , true , charobjType , new Type [ ] { defType } , null , null ) ; addMethod ( <str> , <str> , null , true , intobjType , new Type [ ] { defType } , null , null ) ; addMethod ( <str> , <str> , null , true , longobjType , new Type [ ] { defType } , null , null ) ; addMethod ( <str> , <str> , null , true , floatobjType , new Type [ ] { defType } , null , null ) ; addMethod ( <str> , <str> , null , true , doubleobjType , new Type [ ] { defType } , null , null ) ; addMethod ( <str> , <str> , <str> , false , booleanType , new Type [ ] { objectType } , null , new Type [ ] { defType } ) ; addMethod ( <str> , <str> , null , false , voidType , new Type [ ] { intType , objectType } , null , new Type [ ] { intType , defType } ) ; addMethod ( <str> , <str> , null , false , objectType , new Type [ ] { intType } , defType , null ) ; addMethod ( <str> , <str> , null , false , objectType , new Type [ ] { intType } , defType , null ) ; addMethod ( <str> , <str> , null , false , intType , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , false , booleanType , new Type [ ] { } , null , null ) ; addConstructor ( <str> , <str> , new Type [ ] { } , null ) ; addMethod ( <str> , <str> , null , false , objectType , new Type [ ] { objectType , objectType } , defType , new Type [ ] { defType , defType } ) ; addMethod ( <str> , <str> , null , false , objectType , new Type [ ] { objectType } , defType , new Type [ ] { defType } ) ; addMethod ( <str> , <str> , null , false , objectType , new Type [ ] { objectType } , null , null ) ; addMethod ( <str> , <str> , null , false , intType , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , false , booleanType , new Type [ ] { } , null , null ) ; addConstructor ( <str> , <str> , new Type [ ] { } , null ) ; addMethod ( <str> , <str> , null , false , objectType , new Type [ ] { objectType , objectType } , defType , new Type [ ] { stringType , defType } ) ; addMethod ( <str> , <str> , null , false , objectType , new Type [ ] { objectType } , defType , new Type [ ] { stringType } ) ; addMethod ( <str> , <str> , null , false , objectType , new Type [ ] { objectType } , defType , new Type [ ] { stringType } ) ; addMethod ( <str> , <str> , null , false , intType , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , false , booleanType , new Type [ ] { } , null , null ) ; addConstructor ( <str> , <str> , new Type [ ] { } , null ) ; addMethod ( <str> , <str> , <str> , false , booleanType , new Type [ ] { objectType } , null , null ) ; addMethod ( <str> , <str> , null , false , voidType , new Type [ ] { intType , objectType } , null , null ) ; addMethod ( <str> , <str> , null , false , objectType , new Type [ ] { intType } , null , null ) ; addMethod ( <str> , <str> , null , false , objectType , new Type [ ] { intType } , null , null ) ; addMethod ( <str> , <str> , null , false , intType , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , false , booleanType , new Type [ ] { } , null , null ) ; addConstructor ( <str> , <str> , new Type [ ] { } , null ) ; addMethod ( <str> , <str> , null , false , objectType , new Type [ ] { objectType , objectType } , null , null ) ; addMethod ( <str> , <str> , null , false , objectType , new Type [ ] { objectType } , null , null ) ; addMethod ( <str> , <str> , null , false , objectType , new Type [ ] { objectType } , null , null ) ; addMethod ( <str> , <str> , null , false , intType , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , false , booleanType , new Type [ ] { } , null , null ) ; addConstructor ( <str> , <str> , new Type [ ] { } , null ) ; addMethod ( <str> , <str> , null , false , objectType , new Type [ ] { objectType , objectType } , null , new Type [ ] { stringType , objectType } ) ; addMethod ( <str> , <str> , null , false , objectType , new Type [ ] { objectType } , null , new Type [ ] { stringType } ) ; addMethod ( <str> , <str> , null , false , objectType , new Type [ ] { objectType } , null , new Type [ ] { stringType } ) ; addMethod ( <str> , <str> , null , false , intType , new Type [ ] { } , null , null ) ; addMethod ( <str> , <str> , null , false , booleanType , new Type [ ] { } , null , null ) ; addConstructor ( <str> , <str> , new Type [ ] { } , null ) ; } private void copyDefaultStructs ( ) { copyStruct ( <str> , <str> ) ; copyStruct ( <str> , <str> ) ; copyStruct ( <str> , <str> , <str> ) ; copyStruct ( <str> , <str> , <str> ) ; copyStruct ( <str> , <str> ) ; copyStruct ( <str> , <str> , <str> ) ; copyStruct ( <str> , <str> , <str> ) ; copyStruct ( <str> , <str> , <str> ) ; copyStruct ( <str> , <str> , <str> ) ; copyStruct ( <str> , <str> ) ; copyStruct ( <str> , <str> ) ; copyStruct ( <str> , <str> , <str> ) ; copyStruct ( <str> , <str> ) ; copyStruct ( <str> , <str> , <str> ) ; copyStruct ( <str> , <str> ) ; copyStruct ( <str> , <str> , <str> ) ; copyStruct ( <str> , <str> ) ; copyStruct ( <str> , <str> , <str> ) ; copyStruct ( <str> , <str> ) ; copyStruct ( <str> , <str> , <str> ) ; copyStruct ( <str> , <str> ) ; copyStruct ( <str> , <str> , <str> ) ; copyStruct ( <str> , <str> ) ; copyStruct ( <str> , <str> , <str> ) ; copyStruct ( <str> , <str> ) ; } private void addDefaultTransforms ( ) { addTransform ( booleanType , byteType , <str> , <str> , true ) ; addTransform ( booleanType , shortType , <str> , <str> , true ) ; addTransform ( booleanType , charType , <str> , <str> , true ) ; addTransform ( booleanType , intType , <str> , <str> , true ) ; addTransform ( booleanType , longType , <str> , <str> , true ) ; addTransform ( booleanType , floatType , <str> , <str> , true ) ; addTransform ( booleanType , doubleType , <str> , <str> , true ) ; addTransform ( booleanType , objectType , <str> , <str> , true ) ; addTransform ( booleanType , defType , <str> , <str> , true ) ; addTransform ( booleanType , numberType , <str> , <str> , true ) ; addTransform ( booleanType , booleanobjType , <str> , <str> , true ) ; addTransform ( byteType , booleanType , <str> , <str> , true ) ; addTransform ( byteType , objectType , <str> , <str> , true ) ; addTransform ( byteType , defType , <str> , <str> , true ) ; addTransform ( byteType , numberType , <str> , <str> , true ) ; addTransform ( byteType , byteobjType , <str> , <str> , true ) ; addTransform ( byteType , shortobjType , <str> , <str> , true ) ; addTransform ( byteType , charobjType , <str> , <str> , true ) ; addTransform ( byteType , intobjType , <str> , <str> , true ) ; addTransform ( byteType , longobjType , <str> , <str> , true ) ; addTransform ( byteType , floatobjType , <str> , <str> , true ) ; addTransform ( byteType , doubleobjType , <str> , <str> , true ) ; addTransform ( shortType , booleanType , <str> , <str> , true ) ; addTransform ( shortType , objectType , <str> , <str> , true ) ; addTransform ( shortType , defType , <str> , <str> , true ) ; addTransform ( shortType , numberType , <str> , <str> , true ) ; addTransform ( shortType , byteobjType , <str> , <str> , true ) ; addTransform ( shortType , shortobjType , <str> , <str> , true ) ; addTransform ( shortType , charobjType , <str> , <str> , true ) ; addTransform ( shortType , intobjType , <str> , <str> , true ) ; addTransform ( shortType , longobjType , <str> , <str> , true ) ; addTransform ( shortType , floatobjType , <str> , <str> , true ) ; addTransform ( shortType , doubleobjType , <str> , <str> , true ) ; addTransform ( charType , booleanType , <str> , <str> , true ) ; addTransform ( charType , objectType , <str> , <str> , true ) ; addTransform ( charType , defType , <str> , <str> , true ) ; addTransform ( charType , numberType , <str> , <str> , true ) ; addTransform ( charType , byteobjType , <str> , <str> , true ) ; addTransform ( charType , shortobjType , <str> , <str> , true ) ; addTransform ( charType , charobjType , <str> , <str> , true ) ; addTransform ( charType , intobjType , <str> , <str> , true ) ; addTransform ( charType , longobjType , <str> , <str> , true ) ; addTransform ( charType , floatobjType , <str> , <str> , true ) ; addTransform ( charType , doubleobjType , <str> , <str> , true ) ; addTransform ( intType , booleanType , <str> , <str> , true ) ; addTransform ( intType , objectType , <str> , <str> , true ) ; addTransform ( intType , defType , <str> , <str> , true ) ; addTransform ( intType , numberType , <str> , <str> , true ) ; addTransform ( intType , byteobjType , <str> , <str> , true ) ; addTransform ( intType , shortobjType , <str> , <str> , true ) ; addTransform ( intType , charobjType , <str> , <str> , true ) ; addTransform ( intType , intobjType , <str> , <str> , true ) ; addTransform ( intType , longobjType , <str> , <str> , true ) ; addTransform ( intType , floatobjType , <str> , <str> , true ) ; addTransform ( intType , doubleobjType , <str> , <str> , true ) ; addTransform ( longType , booleanType , <str> , <str> , true ) ; addTransform ( longType , objectType , <str> , <str> , true ) ; addTransform ( longType , defType , <str> , <str> , true ) ; addTransform ( longType , numberType , <str> , <str> , true ) ; addTransform ( longType , byteobjType , <str> , <str> , true ) ; addTransform ( longType , shortobjType , <str> , <str> , true ) ; addTransform ( longType , charobjType , <str> , <str> , true ) ; addTransform ( longType , intobjType , <str> , <str> , true ) ; addTransform ( longType , longobjType , <str> , <str> , true ) ; addTransform ( longType , floatobjType , <str> , <str> , true ) ; addTransform ( longType , doubleobjType , <str> , <str> , true ) ; addTransform ( floatType , booleanType , <str> , <str> , true ) ; addTransform ( floatType , objectType , <str> , <str> , true ) ; addTransform ( floatType , defType , <str> , <str> , true ) ; addTransform ( floatType , numberType , <str> , <str> , true ) ; addTransform ( floatType , byteobjType , <str> , <str> , true ) ; addTransform ( floatType , shortobjType , <str> , <str> , true ) ; addTransform ( floatType , charobjType , <str> , <str> , true ) ; addTransform ( floatType , intobjType , <str> , <str> , true ) ; addTransform ( floatType , longobjType , <str> , <str> , true ) ; addTransform ( floatType , floatobjType , <str> , <str> , true ) ; addTransform ( floatType , doubleobjType , <str> , <str> , true ) ; addTransform ( doubleType , booleanType , <str> , <str> , true ) ; addTransform ( doubleType , objectType , <str> , <str> , true ) ; addTransform ( doubleType , defType , <str> , <str> , true ) ; addTransform ( doubleType , numberType , <str> , <str> , true ) ; addTransform ( doubleType , byteobjType , <str> , <str> , true ) ; 
