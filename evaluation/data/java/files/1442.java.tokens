package org . gradle . api . internal . artifacts . result ; import org . gradle . api . artifacts . component . ComponentSelector ; import org . gradle . api . artifacts . result . ResolvedComponentResult ; import org . gradle . api . artifacts . result . ResolvedDependencyResult ; public class DefaultResolvedDependencyResult extends AbstractDependencyResult implements ResolvedDependencyResult { private final ResolvedComponentResult selected ; public DefaultResolvedDependencyResult ( ComponentSelector requested , ResolvedComponentResult selected , ResolvedComponentResult from ) { super ( requested , from ) ; this . selected = selected ; } public ResolvedComponentResult getSelected ( ) { return selected ; } @Override public String toString ( ) { if ( getRequested ( ) . matchesStrictly ( getSelected ( ) . getId ( ) ) ) { return getRequested ( ) . toString ( ) ; } else { return String . format ( <str> , getRequested ( ) , getSelected ( ) . getId ( ) ) ; } } } 
