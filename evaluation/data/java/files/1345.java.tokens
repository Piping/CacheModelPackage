package org . elasticsearch . deps . jackson ; import com . fasterxml . jackson . core . JsonFactory ; import com . fasterxml . jackson . core . JsonGenerator ; import com . fasterxml . jackson . core . JsonParser ; import com . fasterxml . jackson . core . JsonToken ; import org . elasticsearch . common . io . stream . BytesStreamOutput ; import org . elasticsearch . test . ESTestCase ; import java . io . IOException ; import static org . hamcrest . Matchers . equalTo ; public class JacksonLocationTests extends ESTestCase { public void testLocationExtraction ( ) throws IOException { BytesStreamOutput os = new BytesStreamOutput ( ) ; JsonGenerator gen = new JsonFactory ( ) . createGenerator ( os ) ; gen . writeStartObject ( ) ; gen . writeStringField ( <str> , <str> ) ; gen . writeFieldName ( <str> ) ; gen . writeStartObject ( ) ; gen . writeStringField ( <str> , <str> ) ; gen . writeEndObject ( ) ; gen . writeEndObject ( ) ; gen . close ( ) ; byte [ ] data = os . bytes ( ) . toBytes ( ) ; JsonParser parser = new JsonFactory ( ) . createParser ( data ) ; assertThat ( parser . nextToken ( ) , equalTo ( JsonToken . START_OBJECT ) ) ; assertThat ( parser . nextToken ( ) , equalTo ( JsonToken . FIELD_NAME ) ) ; assertThat ( parser . nextToken ( ) , equalTo ( JsonToken . VALUE_STRING ) ) ; assertThat ( parser . nextToken ( ) , equalTo ( JsonToken . FIELD_NAME ) ) ; } } 
