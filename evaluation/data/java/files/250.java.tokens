package org . elasticsearch . index . indexing ; import org . apache . lucene . document . Field . Store ; import org . apache . lucene . document . IntField ; import org . apache . lucene . document . StringField ; import org . elasticsearch . common . bytes . BytesReference ; import org . elasticsearch . common . xcontent . json . JsonXContent ; import org . elasticsearch . index . indexing . IndexingSlowLog . SlowLogParsedDocumentPrinter ; import org . elasticsearch . index . mapper . ParsedDocument ; import org . elasticsearch . test . ESTestCase ; import java . io . IOException ; import static org . hamcrest . Matchers . containsString ; import static org . hamcrest . Matchers . not ; public class IndexingSlowLogTests extends ESTestCase { public void testSlowLogParsedDocumentPrinterSourceToLog ( ) throws IOException { BytesReference source = JsonXContent . contentBuilder ( ) . startObject ( ) . field ( <str> , <str> ) . endObject ( ) . bytes ( ) ; ParsedDocument pd = new ParsedDocument ( new StringField ( <str> , <str> , Store . YES ) , new IntField ( <str> , <int> , Store . YES ) , <str> , <str> , null , <int> , - <int> , null , source , null ) ; SlowLogParsedDocumentPrinter p = new SlowLogParsedDocumentPrinter ( pd , <int> , true , <int> ) ; assertThat ( p . toString ( ) , not ( containsString ( <str> ) ) ) ; p = new SlowLogParsedDocumentPrinter ( pd , <int> , true , Integer . MAX_VALUE ) ; assertThat ( p . toString ( ) , containsString ( <str> ) ) ; p = new SlowLogParsedDocumentPrinter ( pd , <int> , true , <int> ) ; assertThat ( p . toString ( ) , containsString ( <str> ) ) ; } } 
