package com . netflix . hystrix . contrib . javanica . cache ; import com . netflix . hystrix . contrib . javanica . cache . annotation . CacheKey ; import org . junit . Test ; import java . lang . annotation . Annotation ; import java . lang . reflect . Method ; import static org . junit . Assert . assertEquals ; import static org . junit . Assert . assertTrue ; import static org . junit . Assert . fail ; public class CacheInvocationParameterTest { @Test public void testCacheInvocationParameterConstructor ( ) throws NoSuchMethodException { Class < ? > rawType = String . class ; Object value = <str> ; Method method = CacheInvocationParameterTest . class . getDeclaredMethod ( <str> , String . class ) ; method . setAccessible ( true ) ; Annotation [ ] annotations = method . getParameterAnnotations ( ) [ <int> ] ; int position = <int> ; CacheInvocationParameter cacheInvocationParameter = new CacheInvocationParameter ( rawType , value , annotations , position ) ; assertEquals ( rawType , cacheInvocationParameter . getRawType ( ) ) ; assertEquals ( value , cacheInvocationParameter . getValue ( ) ) ; assertEquals ( annotations [ <int> ] , cacheInvocationParameter . getCacheKeyAnnotation ( ) ) ; assertTrue ( cacheInvocationParameter . hasCacheKeyAnnotation ( ) ) ; assertTrue ( cacheInvocationParameter . getAnnotations ( ) . contains ( annotations [ <int> ] ) ) ; try { cacheInvocationParameter . getAnnotations ( ) . clear ( ) ; fail ( ) ; } catch ( Throwable e ) { } } private static void stabMethod ( @CacheKey String val ) { } }