package com . badlogic . gdx . utils ; import com . badlogic . gdx . Gdx ; public class PerformanceCounters { private final static float nano2seconds = <int> f / <float> ; private long lastTick = <int> ; public final Array < PerformanceCounter > counters = new Array < PerformanceCounter > ( ) ; public PerformanceCounter add ( final String name , final int windowSize ) { PerformanceCounter result = new PerformanceCounter ( name , windowSize ) ; counters . add ( result ) ; return result ; } public PerformanceCounter add ( final String name ) { PerformanceCounter result = new PerformanceCounter ( name ) ; counters . add ( result ) ; return result ; } public void tick ( ) { final long t = TimeUtils . nanoTime ( ) ; if ( lastTick > <int> ) tick ( ( t - lastTick ) * nano2seconds ) ; lastTick = t ; } public void tick ( final float deltaTime ) { for ( int i = <int> ; i < counters . size ; i + + ) counters . get ( i ) . tick ( deltaTime ) ; } public StringBuilder toString ( final StringBuilder sb ) { sb . setLength ( <int> ) ; for ( int i = <int> ; i < counters . size ; i + + ) { if ( i ! = <int> ) sb . append ( <str> ) ; counters . get ( i ) . toString ( sb ) ; } return sb ; } }