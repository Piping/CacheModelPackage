package org . apache . cassandra . cql3 . validation . entities ; import org . apache . cassandra . cql3 . UntypedResultSet ; import org . apache . cassandra . cql3 . CQLTester ; import org . junit . Test ; import static org . junit . Assert . assertEquals ; import static org . junit . Assert . fail ; public class TypeTest extends CQLTester { @Test public void testNonExistingOnes ( ) throws Throwable { assertInvalidMessage ( <str> , <str> + KEYSPACE + <str> ) ; assertInvalidMessage ( <str> , <str> ) ; execute ( <str> + KEYSPACE + <str> ) ; execute ( <str> ) ; } @Test public void testNowToUUIDCompatibility ( ) throws Throwable { createTable ( <str> ) ; execute ( <str> ) ; UntypedResultSet results = execute ( <str> ) ; assertEquals ( <int> , results . size ( ) ) ; } @Test public void testDateCompatibility ( ) throws Throwable { createTable ( <str> ) ; execute ( <str> ) ; UntypedResultSet results = execute ( <str> ) ; assertEquals ( <int> , results . size ( ) ) ; execute ( <str> ) ; results = execute ( <str> ) ; assertEquals ( <int> , results . size ( ) ) ; } @Test public void testReversedTypeCompatibility ( ) throws Throwable { createTable ( <str> ) ; execute ( <str> ) ; UntypedResultSet results = execute ( <str> ) ; assertEquals ( <int> , results . size ( ) ) ; } @Test public void testAlterReversedColumn ( ) throws Throwable { createTable ( <str> ) ; alterTable ( <str> ) ; } @Test public void testIncompatibleReversedTypes ( ) throws Throwable { createTable ( <str> ) ; try { alterTable ( <str> ) ; fail ( <str> ) ; } catch ( RuntimeException e ) { } } @Test public void testReversedAndNonReversed ( ) throws Throwable { createTable ( <str> ) ; try { alterTable ( <str> ) ; fail ( <str> ) ; } catch ( RuntimeException e ) { } } }