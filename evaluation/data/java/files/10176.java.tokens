package com . badlogic . gdx . scenes . scene2d . ui ; import com . badlogic . gdx . scenes . scene2d . Actor ; import com . badlogic . gdx . scenes . scene2d . ui . Label . LabelStyle ; import com . badlogic . gdx . scenes . scene2d . utils . Drawable ; public class TextTooltip extends Tooltip < Label > { public TextTooltip ( String text , Skin skin ) { this ( text , TooltipManager . getInstance ( ) , skin . get ( TextTooltipStyle . class ) ) ; } public TextTooltip ( String text , Skin skin , String styleName ) { this ( text , TooltipManager . getInstance ( ) , skin . get ( styleName , TextTooltipStyle . class ) ) ; } public TextTooltip ( String text , TextTooltipStyle style ) { this ( text , TooltipManager . getInstance ( ) , style ) ; } public TextTooltip ( String text , TooltipManager manager , Skin skin ) { this ( text , manager , skin . get ( TextTooltipStyle . class ) ) ; } public TextTooltip ( String text , TooltipManager manager , Skin skin , String styleName ) { this ( text , manager , skin . get ( styleName , TextTooltipStyle . class ) ) ; } public TextTooltip ( String text , final TooltipManager manager , TextTooltipStyle style ) { super ( null , manager ) ; Label label = new Label ( text , style . label ) ; label . setWrap ( true ) ; container . setActor ( label ) ; container . width ( new Value ( ) { public float get ( Actor context ) { return Math . min ( manager . maxWidth , container . getActor ( ) . getGlyphLayout ( ) . width ) ; } } ) ; setStyle ( style ) ; } public void setStyle ( TextTooltipStyle style ) { if ( style = = null ) throw new NullPointerException ( <str> ) ; if ( ! ( style instanceof TextTooltipStyle ) ) throw new IllegalArgumentException ( <str> ) ; container . getActor ( ) . setStyle ( style . label ) ; container . setBackground ( style . background ) ; container . maxWidth ( style . wrapWidth ) ; } static public class TextTooltipStyle { public LabelStyle label ; public Drawable background ; public float wrapWidth ; public TextTooltipStyle ( ) { } public TextTooltipStyle ( LabelStyle label , Drawable background ) { this . label = label ; this . background = background ; } public TextTooltipStyle ( TextTooltipStyle style ) { this . label = new LabelStyle ( style . label ) ; background = style . background ; } } }