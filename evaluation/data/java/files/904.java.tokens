package com . google . common . collect ; import com . google . common . annotations . GwtCompatible ; import com . google . common . base . Preconditions ; @GwtCompatible ( serializable = true , emulated = true ) @SuppressWarnings ( <str> ) final class SingletonImmutableSet < E > extends ImmutableSet < E > { final transient E element ; private transient int cachedHashCode ; SingletonImmutableSet ( E element ) { this . element = Preconditions . checkNotNull ( element ) ; } SingletonImmutableSet ( E element , int hashCode ) { this . element = element ; cachedHashCode = hashCode ; } @Override public int size ( ) { return <int> ; } @Override public boolean contains ( Object target ) { return element . equals ( target ) ; } @Override public UnmodifiableIterator < E > iterator ( ) { return Iterators . singletonIterator ( element ) ; } @Override boolean isPartialView ( ) { return false ; } @Override int copyIntoArray ( Object [ ] dst , int offset ) { dst [ offset ] = element ; return offset + <int> ; } @Override public final int hashCode ( ) { int code = cachedHashCode ; if ( code = = <int> ) { cachedHashCode = code = element . hashCode ( ) ; } return code ; } @Override boolean isHashCodeFast ( ) { return cachedHashCode ! = <int> ; } @Override public String toString ( ) { String elementToString = element . toString ( ) ; return new StringBuilder ( elementToString . length ( ) + <int> ) . append ( <str> ) . append ( elementToString ) . append ( <str> ) . toString ( ) ; } }