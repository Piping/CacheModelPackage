package jcuda . runtime ; import jcuda . NativePointerObject ; public class textureReference extends NativePointerObject { public int normalized ; public int filterMode ; public int addressMode [ ] = new int [ <int> ] ; public cudaChannelFormatDesc channelDesc ; public int sRGB ; public int maxAnisotropy ; public int mipmapFilterMode ; public float mipmapLevelBias ; public float minMipmapLevelClamp ; public float maxMipmapLevelClamp ; public textureReference ( ) { } @Override public String toString ( ) { return <str> + <str> + Long . toHexString ( getNativePointer ( ) ) + <str> + <str> + normalized + <str> + <str> + cudaTextureFilterMode . stringFor ( filterMode ) + <str> + <str> + cudaTextureAddressMode . stringFor ( addressMode [ <int> ] ) + <str> + cudaTextureAddressMode . stringFor ( addressMode [ <int> ] ) + <str> + cudaTextureAddressMode . stringFor ( addressMode [ <int> ] ) + <str> + <str> + <str> + channelDesc + <str> + <str> + sRGB + <str> + <str> + maxAnisotropy + <str> + <str> + cudaTextureFilterMode . stringFor ( mipmapFilterMode ) + <str> + <str> + mipmapLevelBias + <str> + <str> + minMipmapLevelClamp + <str> + <str> + maxMipmapLevelClamp + <str> ; } }