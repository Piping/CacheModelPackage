package org . elasticsearch . common . blobstore ; import java . util . ArrayList ; import java . util . Collections ; import java . util . Iterator ; import java . util . List ; public class BlobPath implements Iterable < String > { private final List < String > paths ; public BlobPath ( ) { this . paths = Collections . emptyList ( ) ; } public static BlobPath cleanPath ( ) { return new BlobPath ( ) ; } private BlobPath ( List < String > paths ) { this . paths = paths ; } @Override public Iterator < String > iterator ( ) { return paths . iterator ( ) ; } public String [ ] toArray ( ) { return paths . toArray ( new String [ paths . size ( ) ] ) ; } public BlobPath add ( String path ) { List < String > paths = new ArrayList < > ( ) ; paths . addAll ( this . paths ) ; paths . add ( path ) ; return new BlobPath ( Collections . unmodifiableList ( paths ) ) ; } public String buildAsString ( String separator ) { StringBuilder sb = new StringBuilder ( ) ; for ( int i = <int> ; i < paths . size ( ) ; i + + ) { sb . append ( paths . get ( i ) ) ; if ( i < ( paths . size ( ) - <int> ) ) { sb . append ( separator ) ; } } return sb . toString ( ) ; } @Override public String toString ( ) { StringBuilder sb = new StringBuilder ( ) ; for ( String path : paths ) { sb . append ( <str> ) . append ( path ) . append ( <str> ) ; } return sb . toString ( ) ; } } 
