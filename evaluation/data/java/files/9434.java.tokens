package com . badlogic . gdx . tests ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . graphics . GL20 ; import com . badlogic . gdx . graphics . Texture ; import com . badlogic . gdx . graphics . g2d . BitmapFont ; import com . badlogic . gdx . graphics . g2d . SpriteBatch ; import com . badlogic . gdx . tests . utils . GdxTest ; public class PixelsPerInchTest extends GdxTest { BitmapFont font ; SpriteBatch batch ; Texture texture ; @Override public void create ( ) { font = new BitmapFont ( Gdx . files . internal ( <str> ) , false ) ; batch = new SpriteBatch ( ) ; texture = new Texture ( Gdx . files . internal ( <str> ) ) ; } public void render ( ) { Gdx . gl . glClear ( GL20 . GL_COLOR_BUFFER_BIT ) ; batch . begin ( ) ; float width = ( int ) ( Gdx . graphics . getPpcX ( ) * <int> ) ; float height = ( int ) ( Gdx . graphics . getPpcY ( ) * <int> ) ; batch . draw ( texture , <int> , <int> , width , height , <int> , <int> , <int> , <int> , false , false ) ; font . draw ( batch , <str> + width + <str> + height + <str> + Gdx . graphics . getPpiX ( ) + <str> + Gdx . graphics . getPpiY ( ) + <str> + Gdx . graphics . getPpcX ( ) + <str> + Gdx . graphics . getPpcY ( ) + <str> , <int> , <int> ) ; batch . end ( ) ; } @Override public void dispose ( ) { font . dispose ( ) ; batch . dispose ( ) ; texture . dispose ( ) ; } }