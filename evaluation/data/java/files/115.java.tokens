package io . netty . channel ; import io . netty . buffer . ByteBuf ; import io . netty . buffer . ByteBufAllocator ; import io . netty . util . Attribute ; import io . netty . util . AttributeKey ; import io . netty . util . AttributeMap ; import io . netty . util . concurrent . EventExecutor ; import io . netty . util . concurrent . FutureListener ; import java . net . ConnectException ; import java . net . SocketAddress ; import java . nio . channels . Channels ; public interface ChannelHandlerContext extends AttributeMap { Channel channel ( ) ; EventExecutor executor ( ) ; String name ( ) ; ChannelHandler handler ( ) ; boolean isRemoved ( ) ; ChannelHandlerContext fireChannelRegistered ( ) ; ChannelHandlerContext fireChannelUnregistered ( ) ; ChannelHandlerContext fireChannelActive ( ) ; ChannelHandlerContext fireChannelInactive ( ) ; ChannelHandlerContext fireExceptionCaught ( Throwable cause ) ; ChannelHandlerContext fireUserEventTriggered ( Object event ) ; ChannelHandlerContext fireChannelRead ( Object msg ) ; ChannelHandlerContext fireChannelReadComplete ( ) ; ChannelHandlerContext fireChannelWritabilityChanged ( ) ; ChannelFuture bind ( SocketAddress localAddress ) ; ChannelFuture connect ( SocketAddress remoteAddress ) ; ChannelFuture connect ( SocketAddress remoteAddress , SocketAddress localAddress ) ; ChannelFuture disconnect ( ) ; ChannelFuture close ( ) ; ChannelFuture deregister ( ) ; ChannelFuture bind ( SocketAddress localAddress , ChannelPromise promise ) ; ChannelFuture connect ( SocketAddress remoteAddress , ChannelPromise promise ) ; ChannelFuture connect ( SocketAddress remoteAddress , SocketAddress localAddress , ChannelPromise promise ) ; ChannelFuture disconnect ( ChannelPromise promise ) ; ChannelFuture close ( ChannelPromise promise ) ; ChannelFuture deregister ( ChannelPromise promise ) ; ChannelHandlerContext read ( ) ; ChannelFuture write ( Object msg ) ; ChannelFuture write ( Object msg , ChannelPromise promise ) ; ChannelHandlerContext flush ( ) ; ChannelFuture writeAndFlush ( Object msg , ChannelPromise promise ) ; ChannelFuture writeAndFlush ( Object msg ) ; ChannelPipeline pipeline ( ) ; ByteBufAllocator alloc ( ) ; ChannelPromise newPromise ( ) ; ChannelProgressivePromise newProgressivePromise ( ) ; ChannelFuture newSucceededFuture ( ) ; ChannelFuture newFailedFuture ( Throwable cause ) ; ChannelPromise voidPromise ( ) ; } 
