package org . gradle . api . tasks . diagnostics ; import org . gradle . api . Project ; import org . gradle . api . tasks . diagnostics . internal . PropertyReportRenderer ; import org . gradle . api . tasks . diagnostics . internal . ReportRenderer ; import java . io . IOException ; import java . util . Map ; import java . util . TreeMap ; public class PropertyReportTask extends AbstractReportTask { private PropertyReportRenderer renderer = new PropertyReportRenderer ( ) ; public ReportRenderer getRenderer ( ) { return renderer ; } public void setRenderer ( PropertyReportRenderer renderer ) { this . renderer = renderer ; } public void generate ( Project project ) throws IOException { for ( Map . Entry < String , ? > entry : new TreeMap < String , Object > ( project . getProperties ( ) ) . entrySet ( ) ) { if ( entry . getKey ( ) . equals ( <str> ) ) { renderer . addProperty ( entry . getKey ( ) , <str> ) ; } else { renderer . addProperty ( entry . getKey ( ) , entry . getValue ( ) ) ; } } } } 
