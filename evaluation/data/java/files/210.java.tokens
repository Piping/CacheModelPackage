package org . jbox2d . collision ; import org . jbox2d . common . Settings ; import org . jbox2d . common . Vec2 ; public class Manifold { public static enum ManifoldType { CIRCLES , FACE_A , FACE_B } public final ManifoldPoint [ ] points ; public final Vec2 localNormal ; public final Vec2 localPoint ; public ManifoldType type ; public int pointCount ; public Manifold ( ) { points = new ManifoldPoint [ Settings . maxManifoldPoints ] ; for ( int i = <int> ; i < Settings . maxManifoldPoints ; i + + ) { points [ i ] = new ManifoldPoint ( ) ; } localNormal = new Vec2 ( ) ; localPoint = new Vec2 ( ) ; pointCount = <int> ; } public Manifold ( Manifold other ) { points = new ManifoldPoint [ Settings . maxManifoldPoints ] ; localNormal = other . localNormal . clone ( ) ; localPoint = other . localPoint . clone ( ) ; pointCount = other . pointCount ; type = other . type ; for ( int i = <int> ; i < Settings . maxManifoldPoints ; i + + ) { points [ i ] = new ManifoldPoint ( other . points [ i ] ) ; } } public void set ( Manifold cp ) { for ( int i = <int> ; i < cp . pointCount ; i + + ) { points [ i ] . set ( cp . points [ i ] ) ; } type = cp . type ; localNormal . set ( cp . localNormal ) ; localPoint . set ( cp . localPoint ) ; pointCount = cp . pointCount ; } } 
