package org . elasticsearch . index . analysis ; import com . ibm . icu . text . Normalizer2 ; import org . apache . lucene . analysis . icu . ICUNormalizer2CharFilter ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . env . Environment ; import org . elasticsearch . index . IndexSettings ; import java . io . Reader ; public class IcuNormalizerCharFilterFactory extends AbstractCharFilterFactory { private final String name ; private final Normalizer2 normalizer ; public IcuNormalizerCharFilterFactory ( IndexSettings indexSettings , Environment environment , String name , Settings settings ) { super ( indexSettings , name ) ; this . name = settings . get ( <str> , <str> ) ; String mode = settings . get ( <str> ) ; if ( ! <str> . equals ( mode ) & & ! <str> . equals ( mode ) ) { mode = <str> ; } this . normalizer = Normalizer2 . getInstance ( null , this . name , <str> . equals ( mode ) ? Normalizer2 . Mode . COMPOSE : Normalizer2 . Mode . DECOMPOSE ) ; } @Override public Reader create ( Reader reader ) { return new ICUNormalizer2CharFilter ( reader , normalizer ) ; } } 
