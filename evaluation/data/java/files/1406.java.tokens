package com . google . common . collect ; import java . util . ListIterator ; public class ForwardingListIteratorTest extends ForwardingTestCase { private ForwardingListIterator < String > forward ; @Override public void setUp ( ) throws Exception { super . setUp ( ) ; @SuppressWarnings ( <str> ) final ListIterator < String > li = createProxyInstance ( ListIterator . class ) ; forward = new ForwardingListIterator < String > ( ) { @Override protected ListIterator < String > delegate ( ) { return li ; } } ; } public void testAdd_T ( ) { forward . add ( <str> ) ; assertEquals ( <str> , getCalls ( ) ) ; } public void testHasNext ( ) { forward . hasNext ( ) ; assertEquals ( <str> , getCalls ( ) ) ; } public void testHasPrevious ( ) { forward . hasPrevious ( ) ; assertEquals ( <str> , getCalls ( ) ) ; } public void testNext ( ) { forward . next ( ) ; assertEquals ( <str> , getCalls ( ) ) ; } public void testNextIndex ( ) { forward . nextIndex ( ) ; assertEquals ( <str> , getCalls ( ) ) ; } public void testPrevious ( ) { forward . previous ( ) ; assertEquals ( <str> , getCalls ( ) ) ; } public void testPreviousIndex ( ) { forward . previousIndex ( ) ; assertEquals ( <str> , getCalls ( ) ) ; } public void testRemove ( ) { forward . remove ( ) ; assertEquals ( <str> , getCalls ( ) ) ; } public void testSet_T ( ) { forward . set ( <str> ) ; assertEquals ( <str> , getCalls ( ) ) ; } }