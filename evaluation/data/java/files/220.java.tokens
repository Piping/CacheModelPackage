package com . netflix . hystrix . contrib . codahalemetricspublisher ; import com . codahale . metrics . Metric ; import com . codahale . metrics . MetricFilter ; import com . netflix . config . DynamicPropertyFactory ; import org . slf4j . Logger ; import org . slf4j . LoggerFactory ; public class ConfigurableCodaHaleMetricFilter implements MetricFilter { private static final Logger LOGGER = LoggerFactory . getLogger ( ConfigurableCodaHaleMetricFilter . class ) ; private DynamicPropertyFactory archaiusPropertyFactory ; public ConfigurableCodaHaleMetricFilter ( DynamicPropertyFactory archaiusPropertyFactory ) { this . archaiusPropertyFactory = archaiusPropertyFactory ; } @Override public boolean matches ( String s , Metric metric ) { if ( ! isFilterEnabled ( ) ) { return true ; } boolean matchesFilter = archaiusPropertyFactory . getBooleanProperty ( s , false ) . get ( ) ; LOGGER . debug ( <str> , s , matchesFilter ) ; return matchesFilter ; } protected boolean isFilterEnabled ( ) { boolean filterEnabled = archaiusPropertyFactory . getBooleanProperty ( <str> , false ) . get ( ) ; LOGGER . debug ( <str> , filterEnabled ) ; return filterEnabled ; } }