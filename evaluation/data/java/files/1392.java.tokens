package org . elasticsearch . common . inject . spi ; import org . elasticsearch . common . inject . Binder ; import org . elasticsearch . common . inject . TypeLiteral ; import org . elasticsearch . common . inject . matcher . Matcher ; public final class TypeListenerBinding implements Element { private final Object source ; private final Matcher < ? super TypeLiteral < ? > > typeMatcher ; private final TypeListener listener ; TypeListenerBinding ( Object source , TypeListener listener , Matcher < ? super TypeLiteral < ? > > typeMatcher ) { this . source = source ; this . listener = listener ; this . typeMatcher = typeMatcher ; } public TypeListener getListener ( ) { return listener ; } public Matcher < ? super TypeLiteral < ? > > getTypeMatcher ( ) { return typeMatcher ; } @Override public Object getSource ( ) { return source ; } @Override public < T > T acceptVisitor ( ElementVisitor < T > visitor ) { return visitor . visit ( this ) ; } @Override public void applyTo ( Binder binder ) { binder . withSource ( getSource ( ) ) . bindListener ( typeMatcher , listener ) ; } } 
