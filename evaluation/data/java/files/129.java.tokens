package com . badlogic . gdx . physics . box2d . joints ; import org . jbox2d . common . Vec2 ; import com . badlogic . gdx . math . Vector2 ; import com . badlogic . gdx . physics . box2d . Joint ; import com . badlogic . gdx . physics . box2d . World ; public class WheelJoint extends Joint { org . jbox2d . dynamics . joints . WheelJoint joint ; Vector2 localAnchorA = new Vector2 ( ) ; Vector2 localAnchorB = new Vector2 ( ) ; Vector2 localAxisA = new Vector2 ( ) ; public WheelJoint ( World world , org . jbox2d . dynamics . joints . WheelJoint joint ) { super ( world , joint ) ; this . joint = joint ; } public Vector2 getLocalAnchorA ( ) { Vec2 localAnchor = joint . getLocalAnchorA ( ) ; localAnchorA . set ( localAnchor . x , localAnchor . y ) ; return localAnchorA ; } public Vector2 getLocalAnchorB ( ) { Vec2 localAnchor = joint . getLocalAnchorB ( ) ; localAnchorB . set ( localAnchor . x , localAnchor . y ) ; return localAnchorB ; } public Vector2 getLocalAxisA ( ) { Vec2 localAxis = joint . getLocalAxisA ( ) ; localAxisA . set ( localAxis . x , localAxis . y ) ; return localAxisA ; } public float getJointTranslation ( ) { return joint . getJointTranslation ( ) ; } public float getJointSpeed ( ) { return joint . getJointSpeed ( ) ; } public boolean isMotorEnabled ( ) { return joint . isMotorEnabled ( ) ; } public void enableMotor ( boolean flag ) { joint . enableMotor ( flag ) ; } public void setMotorSpeed ( float speed ) { joint . setMotorSpeed ( speed ) ; } public float getMotorSpeed ( ) { return joint . getMotorSpeed ( ) ; } public void setMaxMotorTorque ( float torque ) { joint . setMaxMotorTorque ( torque ) ; } public float getMaxMotorTorque ( ) { return joint . getMaxMotorTorque ( ) ; } public float getMotorTorque ( float invDt ) { return joint . getMotorTorque ( invDt ) ; } public void setSpringFrequencyHz ( float hz ) { joint . setSpringFrequencyHz ( hz ) ; } public float getSpringFrequencyHz ( ) { return joint . getSpringFrequencyHz ( ) ; } public void setSpringDampingRatio ( float ratio ) { joint . setSpringDampingRatio ( ratio ) ; } public float getSpringDampingRatio ( ) { return joint . getSpringDampingRatio ( ) ; } } 
