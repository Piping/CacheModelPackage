package org . elasticsearch . common . text ; import java . nio . charset . StandardCharsets ; import org . elasticsearch . common . bytes . BytesArray ; import org . elasticsearch . common . bytes . BytesReference ; public class StringText implements Text { public static final Text [ ] EMPTY_ARRAY = new Text [ <int> ] ; public static Text [ ] convertFromStringArray ( String [ ] strings ) { if ( strings . length = = <int> ) { return EMPTY_ARRAY ; } Text [ ] texts = new Text [ strings . length ] ; for ( int i = <int> ; i < strings . length ; i + + ) { texts [ i ] = new StringText ( strings [ i ] ) ; } return texts ; } private final String text ; private int hash ; public StringText ( String text ) { this . text = text ; } @Override public boolean hasBytes ( ) { return false ; } @Override public BytesReference bytes ( ) { return new BytesArray ( text . getBytes ( StandardCharsets . UTF_8 ) ) ; } @Override public boolean hasString ( ) { return true ; } @Override public String string ( ) { return text ; } @Override public String toString ( ) { return string ( ) ; } @Override public int hashCode ( ) { if ( hash = = <int> ) { hash = bytes ( ) . hashCode ( ) ; } return hash ; } @Override public boolean equals ( Object obj ) { return bytes ( ) . equals ( ( ( Text ) obj ) . bytes ( ) ) ; } @Override public int compareTo ( Text text ) { return UTF8SortedAsUnicodeComparator . utf8SortedAsUnicodeSortOrder . compare ( bytes ( ) , text . bytes ( ) ) ; } } 
