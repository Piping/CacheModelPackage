package com . google . common . collect ; import com . google . common . annotations . GwtCompatible ; import com . google . common . collect . testing . MapInterfaceTest ; import java . util . Collection ; import java . util . Map ; @GwtCompatible public class ForMapMultimapAsMapImplementsMapTest extends AbstractMultimapAsMapImplementsMapTest { public ForMapMultimapAsMapImplementsMapTest ( ) { super ( true , true , true ) ; } @Override protected Map < String , Collection < Integer > > makeEmptyMap ( ) { Map < String , Integer > map = Maps . newHashMap ( ) ; return Multimaps . forMap ( map ) . asMap ( ) ; } @Override protected Map < String , Collection < Integer > > makePopulatedMap ( ) { Map < String , Integer > map = Maps . newHashMap ( ) ; map . put ( <str> , <int> ) ; map . put ( <str> , <int> ) ; map . put ( <str> , <int> ) ; return Multimaps . forMap ( map ) . asMap ( ) ; } @Override public void testEntrySetRemoveAllNullFromEmpty ( ) { try { super . testEntrySetRemoveAllNullFromEmpty ( ) ; } catch ( RuntimeException tolerated ) { } } @Override public void testEntrySetRetainAllNullFromEmpty ( ) { try { super . testEntrySetRetainAllNullFromEmpty ( ) ; } catch ( RuntimeException tolerated ) { } } @Override public void testKeySetRemoveAllNullFromEmpty ( ) { try { super . testKeySetRemoveAllNullFromEmpty ( ) ; } catch ( RuntimeException tolerated ) { } } @Override public void testKeySetRetainAllNullFromEmpty ( ) { try { super . testKeySetRetainAllNullFromEmpty ( ) ; } catch ( RuntimeException tolerated ) { } } @Override public void testValuesRemoveAllNullFromEmpty ( ) { try { super . testValuesRemoveAllNullFromEmpty ( ) ; } catch ( RuntimeException tolerated ) { } } @Override public void testValuesRetainAllNullFromEmpty ( ) { try { super . testValuesRemoveAllNullFromEmpty ( ) ; } catch ( RuntimeException tolerated ) { } } } 
