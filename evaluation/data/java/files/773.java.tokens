package com . google . common . cache ; import com . google . common . annotations . GwtCompatible ; import com . google . common . collect . ImmutableMap ; import com . google . common . util . concurrent . ExecutionError ; import com . google . common . util . concurrent . UncheckedExecutionException ; import java . util . Map ; import java . util . concurrent . Callable ; import java . util . concurrent . ConcurrentMap ; import java . util . concurrent . ExecutionException ; import javax . annotation . Nullable ; @GwtCompatible public interface Cache < K , V > { @Nullable V getIfPresent ( Object key ) ; V get ( K key , Callable < ? extends V > loader ) throws ExecutionException ; ImmutableMap < K , V > getAllPresent ( Iterable < ? > keys ) ; void put ( K key , V value ) ; void putAll ( Map < ? extends K , ? extends V > m ) ; void invalidate ( Object key ) ; void invalidateAll ( Iterable < ? > keys ) ; void invalidateAll ( ) ; long size ( ) ; CacheStats stats ( ) ; ConcurrentMap < K , V > asMap ( ) ; void cleanUp ( ) ; }