package org . elasticsearch . indices . mapping ; import org . elasticsearch . action . admin . cluster . health . ClusterHealthResponse ; import org . elasticsearch . action . admin . indices . mapping . get . GetMappingsResponse ; import org . elasticsearch . common . Priority ; import org . elasticsearch . common . xcontent . XContentBuilder ; import org . elasticsearch . test . ESIntegTestCase ; import org . elasticsearch . test . ESIntegTestCase . ClusterScope ; import java . io . IOException ; import java . util . Arrays ; import static org . elasticsearch . cluster . metadata . IndexMetaData . INDEX_METADATA_BLOCK ; import static org . elasticsearch . cluster . metadata . IndexMetaData . SETTING_BLOCKS_METADATA ; import static org . elasticsearch . cluster . metadata . IndexMetaData . SETTING_BLOCKS_READ ; import static org . elasticsearch . cluster . metadata . IndexMetaData . SETTING_BLOCKS_WRITE ; import static org . elasticsearch . cluster . metadata . IndexMetaData . SETTING_READ_ONLY ; import static org . elasticsearch . common . xcontent . XContentFactory . jsonBuilder ; import static org . elasticsearch . test . hamcrest . ElasticsearchAssertions . assertBlocked ; import static org . hamcrest . Matchers . equalTo ; import static org . hamcrest . Matchers . notNullValue ; @ClusterScope ( randomDynamicTemplates = false ) public class SimpleGetMappingsIT extends ESIntegTestCase { public void testGetMappingsWhereThereAreNone ( ) { createIndex ( <str> ) ; GetMappingsResponse response = client ( ) . admin ( ) . indices ( ) . prepareGetMappings ( ) . execute ( ) . actionGet ( ) ; assertThat ( response . mappings ( ) . containsKey ( <str> ) , equalTo ( true ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; } private XContentBuilder getMappingForType ( String type ) throws IOException { return jsonBuilder ( ) . startObject ( ) . startObject ( type ) . startObject ( <str> ) . startObject ( <str> ) . field ( <str> , <str> ) . endObject ( ) . endObject ( ) . endObject ( ) . endObject ( ) ; } public void testSimpleGetMappings ( ) throws Exception { client ( ) . admin ( ) . indices ( ) . prepareCreate ( <str> ) . addMapping ( <str> , getMappingForType ( <str> ) ) . addMapping ( <str> , getMappingForType ( <str> ) ) . addMapping ( <str> , getMappingForType ( <str> ) ) . addMapping ( <str> , getMappingForType ( <str> ) ) . execute ( ) . actionGet ( ) ; client ( ) . admin ( ) . indices ( ) . prepareCreate ( <str> ) . addMapping ( <str> , getMappingForType ( <str> ) ) . addMapping ( <str> , getMappingForType ( <str> ) ) . addMapping ( <str> , getMappingForType ( <str> ) ) . addMapping ( <str> , getMappingForType ( <str> ) ) . execute ( ) . actionGet ( ) ; ClusterHealthResponse clusterHealth = client ( ) . admin ( ) . cluster ( ) . prepareHealth ( ) . setWaitForEvents ( Priority . LANGUID ) . setWaitForGreenStatus ( ) . execute ( ) . actionGet ( ) ; assertThat ( clusterHealth . isTimedOut ( ) , equalTo ( false ) ) ; GetMappingsResponse response = client ( ) . admin ( ) . indices ( ) . prepareGetMappings ( ) . execute ( ) . actionGet ( ) ; assertThat ( response . mappings ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; response = client ( ) . admin ( ) . indices ( ) . prepareGetMappings ( <str> ) . setTypes ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( response . mappings ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; response = client ( ) . admin ( ) . indices ( ) . prepareGetMappings ( <str> ) . setTypes ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( response . mappings ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; response = client ( ) . admin ( ) . indices ( ) . prepareGetMappings ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( response . mappings ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; response = client ( ) . admin ( ) . indices ( ) . prepareGetMappings ( <str> ) . setTypes ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( response . mappings ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; response = client ( ) . admin ( ) . indices ( ) . prepareGetMappings ( ) . setTypes ( <str> ) . execute ( ) . actionGet ( ) ; assertThat ( response . mappings ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; response = client ( ) . admin ( ) . indices ( ) . prepareGetMappings ( ) . setTypes ( <str> , <str> ) . execute ( ) . actionGet ( ) ; assertThat ( response . mappings ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . get ( <str> ) , notNullValue ( ) ) ; } public void testGetMappingsWithBlocks ( ) throws IOException { client ( ) . admin ( ) . indices ( ) . prepareCreate ( <str> ) . addMapping ( <str> , getMappingForType ( <str> ) ) . addMapping ( <str> , getMappingForType ( <str> ) ) . execute ( ) . actionGet ( ) ; ensureGreen ( ) ; for ( String block : Arrays . asList ( SETTING_BLOCKS_READ , SETTING_BLOCKS_WRITE , SETTING_READ_ONLY ) ) { try { enableIndexBlock ( <str> , block ) ; GetMappingsResponse response = client ( ) . admin ( ) . indices ( ) . prepareGetMappings ( ) . execute ( ) . actionGet ( ) ; assertThat ( response . mappings ( ) . size ( ) , equalTo ( <int> ) ) ; assertThat ( response . mappings ( ) . get ( <str> ) . size ( ) , equalTo ( <int> ) ) ; } finally { disableIndexBlock ( <str> , block ) ; } } try { enableIndexBlock ( <str> , SETTING_BLOCKS_METADATA ) ; assertBlocked ( client ( ) . admin ( ) . indices ( ) . prepareGetMappings ( ) , INDEX_METADATA_BLOCK ) ; } finally { disableIndexBlock ( <str> , SETTING_BLOCKS_METADATA ) ; } } } 
