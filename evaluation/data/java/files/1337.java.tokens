package org . apache . cassandra . service . pager ; import org . apache . cassandra . db . ConsistencyLevel ; import org . apache . cassandra . db . ReadExecutionController ; import org . apache . cassandra . db . EmptyIterators ; import org . apache . cassandra . db . partitions . PartitionIterator ; import org . apache . cassandra . exceptions . RequestExecutionException ; import org . apache . cassandra . exceptions . RequestValidationException ; import org . apache . cassandra . service . ClientState ; public interface QueryPager { QueryPager EMPTY = new QueryPager ( ) { public ReadExecutionController executionController ( ) { return ReadExecutionController . empty ( ) ; } public PartitionIterator fetchPage ( int pageSize , ConsistencyLevel consistency , ClientState clientState ) throws RequestValidationException , RequestExecutionException { return EmptyIterators . partition ( ) ; } public PartitionIterator fetchPageInternal ( int pageSize , ReadExecutionController executionController ) throws RequestValidationException , RequestExecutionException { return EmptyIterators . partition ( ) ; } public boolean isExhausted ( ) { return true ; } public int maxRemaining ( ) { return <int> ; } public PagingState state ( ) { return null ; } } ; public PartitionIterator fetchPage ( int pageSize , ConsistencyLevel consistency , ClientState clientState ) throws RequestValidationException , RequestExecutionException ; public ReadExecutionController executionController ( ) ; public PartitionIterator fetchPageInternal ( int pageSize , ReadExecutionController executionController ) throws RequestValidationException , RequestExecutionException ; public boolean isExhausted ( ) ; public int maxRemaining ( ) ; public PagingState state ( ) ; } 
