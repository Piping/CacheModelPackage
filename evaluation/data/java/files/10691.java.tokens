package com . badlogic . gdx . physics . bullet . collision ; import com . badlogic . gdx . physics . bullet . BulletBase ; import com . badlogic . gdx . physics . bullet . linearmath . * ; import com . badlogic . gdx . math . Vector3 ; import com . badlogic . gdx . math . Quaternion ; import com . badlogic . gdx . math . Matrix3 ; import com . badlogic . gdx . math . Matrix4 ; public class btBroadphasePair extends BulletBase { private long swigCPtr ; protected btBroadphasePair ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , cPtr , cMemoryOwn ) ; swigCPtr = cPtr ; } public btBroadphasePair ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( swigCPtr = cPtr , cMemoryOwn ) ; } public static long getCPtr ( btBroadphasePair obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; CollisionJNI . delete_btBroadphasePair ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } protected final static btBroadphasePair temp = new btBroadphasePair ( <int> , false ) ; public static btBroadphasePair internalTemp ( long cPtr , boolean own ) { temp . reset ( cPtr , own ) ; return temp ; } protected static final com . badlogic . gdx . utils . Pool < btBroadphasePair > pool = new com . badlogic . gdx . utils . Pool < btBroadphasePair > ( ) { @Override protected btBroadphasePair newObject ( ) { return new btBroadphasePair ( <int> , false ) ; } } ; public static btBroadphasePair obtain ( long cPtr , boolean own ) { final btBroadphasePair result = pool . obtain ( ) ; result . reset ( cPtr , own ) ; return result ; } public static void free ( final btBroadphasePair inst ) { inst . dispose ( ) ; pool . free ( inst ) ; } public btBroadphasePair ( ) { this ( CollisionJNI . new_btBroadphasePair__SWIG_0 ( ) , true ) ; } public btBroadphasePair ( btBroadphasePair other ) { this ( CollisionJNI . new_btBroadphasePair__SWIG_1 ( other ) , true ) ; } public btBroadphasePair ( btBroadphaseProxy proxy0 , btBroadphaseProxy proxy1 ) { this ( CollisionJNI . new_btBroadphasePair__SWIG_2 ( proxy0 , proxy1 ) , true ) ; } public void setPProxy0 ( btBroadphaseProxy value ) { CollisionJNI . btBroadphasePair_pProxy0_set ( swigCPtr , this , btBroadphaseProxy . getCPtr ( value ) , value ) ; } public btBroadphaseProxy getPProxy0 ( ) { return btBroadphaseProxy . internalTemp ( CollisionJNI . btBroadphasePair_pProxy0_get ( swigCPtr , this ) , false ) ; } public void setPProxy1 ( btBroadphaseProxy value ) { CollisionJNI . btBroadphasePair_pProxy1_set ( swigCPtr , this , btBroadphaseProxy . getCPtr ( value ) , value ) ; } public btBroadphaseProxy getPProxy1 ( ) { return btBroadphaseProxy . internalTemp ( CollisionJNI . btBroadphasePair_pProxy1_get ( swigCPtr , this ) , false ) ; } public void setAlgorithm ( btCollisionAlgorithm value ) { CollisionJNI . btBroadphasePair_algorithm_set ( swigCPtr , this , btCollisionAlgorithm . getCPtr ( value ) , value ) ; } public btCollisionAlgorithm getAlgorithm ( ) { long cPtr = CollisionJNI . btBroadphasePair_algorithm_get ( swigCPtr , this ) ; return ( cPtr = = <int> ) ? null : new btCollisionAlgorithm ( cPtr , false ) ; } public void setInternalInfo1 ( long value ) { CollisionJNI . btBroadphasePair_internalInfo1_set ( swigCPtr , this , value ) ; } public long getInternalInfo1 ( ) { return CollisionJNI . btBroadphasePair_internalInfo1_get ( swigCPtr , this ) ; } public void setInternalTmpValue ( int value ) { CollisionJNI . btBroadphasePair_internalTmpValue_set ( swigCPtr , this , value ) ; } public int getInternalTmpValue ( ) { return CollisionJNI . btBroadphasePair_internalTmpValue_get ( swigCPtr , this ) ; } }