package com . badlogic . gdx . tests . android ; import javax . microedition . khronos . opengles . GL10 ; import android . opengl . Matrix ; import com . badlogic . gdx . Gdx ; import com . badlogic . gdx . graphics . g2d . BitmapFont ; import com . badlogic . gdx . graphics . g2d . SpriteBatch ; import com . badlogic . gdx . math . Matrix4 ; import com . badlogic . gdx . tests . utils . GdxTest ; public class MatrixTest extends GdxTest { BitmapFont font ; SpriteBatch batch ; String results = <str> ; @Override public void create ( ) { font = new BitmapFont ( ) ; batch = new SpriteBatch ( ) ; Matrix4 m1 = new Matrix4 ( ) ; Matrix4 m2 = new Matrix4 ( ) ; float [ ] a1 = new float [ <int> ] ; float [ ] a2 = new float [ <int> ] ; float [ ] a3 = new float [ <int> ] ; Matrix . setIdentityM ( a1 , <int> ) ; Matrix . setIdentityM ( a2 , <int> ) ; Matrix . setIdentityM ( a3 , <int> ) ; long startTime = System . nanoTime ( ) ; int ops = <int> ; while ( System . nanoTime ( ) - startTime < <int> l ) { Matrix . multiplyMM ( a1 , <int> , a2 , <int> , a3 , <int> ) ; ops + + ; } results = <str> + ops + <str> ; startTime = System . nanoTime ( ) ; ops = <int> ; while ( System . nanoTime ( ) - startTime < <int> l ) { m1 . mul ( m2 ) ; ops + + ; } startTime = System . nanoTime ( ) ; ops = <int> ; while ( System . nanoTime ( ) - startTime < <int> l ) { m1 . mul ( m2 ) ; ops + + ; } results + = <str> + ops + <str> ; } @Override public void render ( ) { Gdx . gl . glClear ( GL10 . GL_COLOR_BUFFER_BIT ) ; batch . begin ( ) ; font . draw ( batch , results , <int> , <int> ) ; batch . end ( ) ; } } 
