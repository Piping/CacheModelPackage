package com . netflix . hystrix . strategy . properties ; import static org . junit . Assert . assertEquals ; import org . junit . Test ; import com . netflix . hystrix . strategy . properties . HystrixProperty . Factory ; public class HystrixPropertyTest { @Test public void testNested1 ( ) { HystrixProperty < String > a = Factory . asProperty ( <str> ) ; assertEquals ( <str> , a . get ( ) ) ; HystrixProperty < String > aWithDefault = Factory . asProperty ( a , <str> ) ; assertEquals ( <str> , aWithDefault . get ( ) ) ; } @Test public void testNested2 ( ) { HystrixProperty < String > nullValue = Factory . nullProperty ( ) ; HystrixProperty < String > withDefault = Factory . asProperty ( nullValue , <str> ) ; assertEquals ( <str> , withDefault . get ( ) ) ; } @Test public void testNested3 ( ) { HystrixProperty < String > nullValue = Factory . nullProperty ( ) ; HystrixProperty < String > a = Factory . asProperty ( nullValue , <str> ) ; HystrixProperty < String > withDefault = Factory . asProperty ( a , <str> ) ; assertEquals ( <str> , withDefault . get ( ) ) ; } @Test public void testNested4 ( ) { HystrixProperty < String > nullValue = Factory . nullProperty ( ) ; HystrixProperty < String > a = Factory . asProperty ( nullValue , null ) ; HystrixProperty < String > withDefault = Factory . asProperty ( a , <str> ) ; assertEquals ( <str> , withDefault . get ( ) ) ; } @Test public void testNested5 ( ) { HystrixProperty < String > nullValue = Factory . nullProperty ( ) ; HystrixProperty < String > a = Factory . asProperty ( nullValue , null ) ; @SuppressWarnings ( <str> ) HystrixProperty < String > withDefault = Factory . asProperty ( a , Factory . asProperty ( <str> ) ) ; assertEquals ( <str> , withDefault . get ( ) ) ; } @Test public void testSeries1 ( ) { HystrixProperty < String > nullValue = Factory . nullProperty ( ) ; HystrixProperty < String > a = Factory . asProperty ( nullValue , null ) ; @SuppressWarnings ( <str> ) HystrixProperty < String > withDefault = Factory . asProperty ( a , nullValue , nullValue , Factory . asProperty ( <str> ) ) ; assertEquals ( <str> , withDefault . get ( ) ) ; } @Test public void testSeries2 ( ) { HystrixProperty < String > nullValue = Factory . nullProperty ( ) ; HystrixProperty < String > a = Factory . asProperty ( nullValue , null ) ; @SuppressWarnings ( <str> ) HystrixProperty < String > withDefault = Factory . asProperty ( a , nullValue , Factory . asProperty ( <str> ) , nullValue , Factory . asProperty ( <str> ) ) ; assertEquals ( <str> , withDefault . get ( ) ) ; } }