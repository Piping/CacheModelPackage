package com . badlogic . gdx . physics . bullet . collision ; import com . badlogic . gdx . physics . bullet . BulletBase ; import com . badlogic . gdx . physics . bullet . linearmath . * ; import com . badlogic . gdx . math . Vector3 ; import com . badlogic . gdx . math . Quaternion ; import com . badlogic . gdx . math . Matrix3 ; import com . badlogic . gdx . math . Matrix4 ; public class btSortedOverlappingPairCache extends btOverlappingPairCache { private long swigCPtr ; protected btSortedOverlappingPairCache ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , CollisionJNI . btSortedOverlappingPairCache_SWIGUpcast ( cPtr ) , cMemoryOwn ) ; swigCPtr = cPtr ; } public btSortedOverlappingPairCache ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( CollisionJNI . btSortedOverlappingPairCache_SWIGUpcast ( swigCPtr = cPtr ) , cMemoryOwn ) ; } public static long getCPtr ( btSortedOverlappingPairCache obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; CollisionJNI . delete_btSortedOverlappingPairCache ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } public btSortedOverlappingPairCache ( ) { this ( CollisionJNI . new_btSortedOverlappingPairCache ( ) , true ) ; } public boolean needsBroadphaseCollision ( btBroadphaseProxy proxy0 , btBroadphaseProxy proxy1 ) { return CollisionJNI . btSortedOverlappingPairCache_needsBroadphaseCollision ( swigCPtr , this , btBroadphaseProxy . getCPtr ( proxy0 ) , proxy0 , btBroadphaseProxy . getCPtr ( proxy1 ) , proxy1 ) ; } public btBroadphasePairArray getOverlappingPairArray ( ) { return new btBroadphasePairArray ( CollisionJNI . btSortedOverlappingPairCache_getOverlappingPairArray__SWIG_0 ( swigCPtr , this ) , false ) ; } public btBroadphasePair getOverlappingPairArrayPtr ( ) { return btBroadphasePair . internalTemp ( CollisionJNI . btSortedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0 ( swigCPtr , this ) , false ) ; } public btOverlapFilterCallback getOverlapFilterCallback ( ) { long cPtr = CollisionJNI . btSortedOverlappingPairCache_getOverlapFilterCallback ( swigCPtr , this ) ; return ( cPtr = = <int> ) ? null : new btOverlapFilterCallback ( cPtr , false ) ; } }