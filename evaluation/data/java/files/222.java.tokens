package org . elasticsearch . index . analysis ; import org . apache . lucene . analysis . TokenStream ; import org . apache . lucene . analysis . commongrams . CommonGramsFilter ; import org . apache . lucene . analysis . commongrams . CommonGramsQueryFilter ; import org . apache . lucene . analysis . util . CharArraySet ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . env . Environment ; import org . elasticsearch . index . IndexSettings ; public class CommonGramsTokenFilterFactory extends AbstractTokenFilterFactory { private final CharArraySet words ; private final boolean ignoreCase ; private final boolean queryMode ; public CommonGramsTokenFilterFactory ( IndexSettings indexSettings , Environment env , String name , Settings settings ) { super ( indexSettings , name , settings ) ; this . ignoreCase = settings . getAsBoolean ( <str> , false ) ; this . queryMode = settings . getAsBoolean ( <str> , false ) ; this . words = Analysis . parseCommonWords ( env , settings , null , ignoreCase ) ; if ( this . words = = null ) { throw new IllegalArgumentException ( <str> ) ; } } @Override public TokenStream create ( TokenStream tokenStream ) { CommonGramsFilter filter = new CommonGramsFilter ( tokenStream , words ) ; if ( queryMode ) { return new CommonGramsQueryFilter ( filter ) ; } else { return filter ; } } } 
