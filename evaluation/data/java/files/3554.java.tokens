package org . nd4j . linalg . fft ; import org . nd4j . linalg . api . complex . IComplexNDArray ; import org . nd4j . linalg . api . ndarray . INDArray ; public interface FFTInstance { IComplexNDArray fft ( INDArray transform , int numElements ) ; IComplexNDArray fft ( IComplexNDArray inputC ) ; IComplexNDArray fft ( INDArray input ) ; IComplexNDArray fft ( INDArray transform , int numElements , int dimension ) ; IComplexNDArray fft ( IComplexNDArray inputC , int numElements ) ; IComplexNDArray fft ( IComplexNDArray inputC , int numElements , int dimension ) ; IComplexNDArray ifft ( INDArray transform , int numElements , int dimension ) ; IComplexNDArray ifft ( IComplexNDArray inputC ) ; IComplexNDArray ifft ( INDArray transform , int numElements ) ; IComplexNDArray ifft ( IComplexNDArray inputC , int numElements , int dimension ) ; IComplexNDArray ifftn ( INDArray transform , int dimension , int numElements ) ; IComplexNDArray irfftn ( IComplexNDArray arr ) ; IComplexNDArray irfft ( IComplexNDArray arr , int dimension ) ; IComplexNDArray irfft ( IComplexNDArray arr ) ; IComplexNDArray ifftn ( IComplexNDArray transform , int dimension , int numElements ) ; IComplexNDArray fftn ( IComplexNDArray transform , int dimension , int numElements ) ; IComplexNDArray fftn ( INDArray transform , int dimension , int numElements ) ; IComplexNDArray fftn ( INDArray transform ) ; IComplexNDArray fftn ( IComplexNDArray transform ) ; IComplexNDArray ifftn ( IComplexNDArray transform , int dimension ) ; IComplexNDArray ifftn ( IComplexNDArray transform ) ; IComplexNDArray ifftn ( INDArray transform ) ; IComplexNDArray rawifftn ( IComplexNDArray transform , int [ ] shape , int [ ] axes ) ; IComplexNDArray rawfftn ( IComplexNDArray transform , int [ ] shape , int [ ] axes ) ; IComplexNDArray rawfft ( IComplexNDArray transform , int n , int dimension ) ; IComplexNDArray rawifft ( IComplexNDArray transform , int n , int dimension ) ; IComplexNDArray rawifft ( IComplexNDArray transform , int dimension ) ; }