package io . netty . resolver . dns ; import java . net . InetSocketAddress ; final class SequentialDnsServerAddressStream implements DnsServerAddressStream { private final InetSocketAddress [ ] addresses ; private int i ; SequentialDnsServerAddressStream ( InetSocketAddress [ ] addresses , int startIdx ) { this . addresses = addresses ; i = startIdx ; } @Override public InetSocketAddress next ( ) { int i = this . i ; InetSocketAddress next = addresses [ i ] ; if ( + + i < addresses . length ) { this . i = i ; } else { this . i = <int> ; } return next ; } @Override public String toString ( ) { return toString ( <str> , i , addresses ) ; } static String toString ( String type , int index , InetSocketAddress [ ] addresses ) { final StringBuilder buf = new StringBuilder ( type . length ( ) + <int> + addresses . length * <int> ) ; buf . append ( type ) . append ( <str> ) . append ( index ) ; buf . append ( <str> ) ; for ( InetSocketAddress a : addresses ) { buf . append ( a ) . append ( <str> ) ; } buf . setLength ( buf . length ( ) - <int> ) ; buf . append ( <str> ) ; return buf . toString ( ) ; } } 
