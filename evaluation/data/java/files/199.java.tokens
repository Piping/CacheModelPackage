package org . gradle . api . internal . tasks . compile . incremental ; import org . gradle . util . GFileUtils ; import java . io . File ; import java . util . List ; import static java . lang . String . format ; public class SourceToNameConverter { private CompilationSourceDirs sourceDirs ; public SourceToNameConverter ( CompilationSourceDirs sourceDirs ) { this . sourceDirs = sourceDirs ; } public String getClassName ( File javaSourceClass ) { List < File > dirs = sourceDirs . getSourceRoots ( ) ; for ( File sourceDir : dirs ) { if ( javaSourceClass . getAbsolutePath ( ) . startsWith ( sourceDir . getAbsolutePath ( ) ) ) { String relativePath = GFileUtils . relativePath ( sourceDir , javaSourceClass ) ; if ( ! relativePath . startsWith ( <str> ) ) { return relativePath . replaceAll ( <str> , <str> ) . replaceAll ( <str> , <str> ) ; } } } throw new IllegalArgumentException ( format ( <str> , javaSourceClass , dirs ) ) ; } } 
