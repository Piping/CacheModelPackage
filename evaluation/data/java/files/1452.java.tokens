package com . badlogic . gdx . physics . bullet . collision ; import com . badlogic . gdx . physics . bullet . BulletBase ; import com . badlogic . gdx . physics . bullet . linearmath . * ; import com . badlogic . gdx . math . Vector3 ; import com . badlogic . gdx . math . Quaternion ; import com . badlogic . gdx . math . Matrix3 ; import com . badlogic . gdx . math . Matrix4 ; public class btPersistentManifold extends btTypedObject { private long swigCPtr ; protected btPersistentManifold ( final String className , long cPtr , boolean cMemoryOwn ) { super ( className , CollisionJNI . btPersistentManifold_SWIGUpcast ( cPtr ) , cMemoryOwn ) ; swigCPtr = cPtr ; } public btPersistentManifold ( long cPtr , boolean cMemoryOwn ) { this ( <str> , cPtr , cMemoryOwn ) ; construct ( ) ; } @Override protected void reset ( long cPtr , boolean cMemoryOwn ) { if ( ! destroyed ) destroy ( ) ; super . reset ( CollisionJNI . btPersistentManifold_SWIGUpcast ( swigCPtr = cPtr ) , cMemoryOwn ) ; } public static long getCPtr ( btPersistentManifold obj ) { return ( obj = = null ) ? <int> : obj . swigCPtr ; } @Override protected void finalize ( ) throws Throwable { if ( ! destroyed ) destroy ( ) ; super . finalize ( ) ; } @Override protected synchronized void delete ( ) { if ( swigCPtr ! = <int> ) { if ( swigCMemOwn ) { swigCMemOwn = false ; CollisionJNI . delete_btPersistentManifold ( swigCPtr ) ; } swigCPtr = <int> ; } super . delete ( ) ; } public void setCompanionIdA ( int value ) { CollisionJNI . btPersistentManifold_companionIdA_set ( swigCPtr , this , value ) ; } public int getCompanionIdA ( ) { return CollisionJNI . btPersistentManifold_companionIdA_get ( swigCPtr , this ) ; } public void setCompanionIdB ( int value ) { CollisionJNI . btPersistentManifold_companionIdB_set ( swigCPtr , this , value ) ; } public int getCompanionIdB ( ) { return CollisionJNI . btPersistentManifold_companionIdB_get ( swigCPtr , this ) ; } public void setIndex1a ( int value ) { CollisionJNI . btPersistentManifold_index1a_set ( swigCPtr , this , value ) ; } public int getIndex1a ( ) { return CollisionJNI . btPersistentManifold_index1a_get ( swigCPtr , this ) ; } public btPersistentManifold ( ) { this ( CollisionJNI . new_btPersistentManifold__SWIG_0 ( ) , true ) ; } public btPersistentManifold ( btCollisionObject body0 , btCollisionObject body1 , int arg2 , float contactBreakingThreshold , float contactProcessingThreshold ) { this ( CollisionJNI . new_btPersistentManifold__SWIG_1 ( btCollisionObject . getCPtr ( body0 ) , body0 , btCollisionObject . getCPtr ( body1 ) , body1 , arg2 , contactBreakingThreshold , contactProcessingThreshold ) , true ) ; } public btCollisionObject getBody0 ( ) { return btCollisionObject . getInstance ( CollisionJNI . btPersistentManifold_getBody0 ( swigCPtr , this ) , false ) ; } public btCollisionObject getBody1 ( ) { return btCollisionObject . getInstance ( CollisionJNI . btPersistentManifold_getBody1 ( swigCPtr , this ) , false ) ; } public void setBodies ( btCollisionObject body0 , btCollisionObject body1 ) { CollisionJNI . btPersistentManifold_setBodies ( swigCPtr , this , btCollisionObject . getCPtr ( body0 ) , body0 , btCollisionObject . getCPtr ( body1 ) , body1 ) ; } public void clearUserCache ( btManifoldPoint pt ) { CollisionJNI . btPersistentManifold_clearUserCache ( swigCPtr , this , btManifoldPoint . getCPtr ( pt ) , pt ) ; } public int getNumContacts ( ) { return CollisionJNI . btPersistentManifold_getNumContacts ( swigCPtr , this ) ; } public void setNumContacts ( int cachedPoints ) { CollisionJNI . btPersistentManifold_setNumContacts ( swigCPtr , this , cachedPoints ) ; } public btManifoldPoint getContactPoint ( int index ) { return new btManifoldPoint ( CollisionJNI . btPersistentManifold_getContactPoint__SWIG_0 ( swigCPtr , this , index ) , false ) ; } public float getContactBreakingThreshold ( ) { return CollisionJNI . btPersistentManifold_getContactBreakingThreshold ( swigCPtr , this ) ; } public float getContactProcessingThreshold ( ) { return CollisionJNI . btPersistentManifold_getContactProcessingThreshold ( swigCPtr , this ) ; } public void setContactBreakingThreshold ( float contactBreakingThreshold ) { CollisionJNI . btPersistentManifold_setContactBreakingThreshold ( swigCPtr , this , contactBreakingThreshold ) ; } public void setContactProcessingThreshold ( float contactProcessingThreshold ) { CollisionJNI . btPersistentManifold_setContactProcessingThreshold ( swigCPtr , this , contactProcessingThreshold ) ; } public int getCacheEntry ( btManifoldPoint newPoint ) { return CollisionJNI . btPersistentManifold_getCacheEntry ( swigCPtr , this , btManifoldPoint . getCPtr ( newPoint ) , newPoint ) ; } public int addManifoldPoint ( btManifoldPoint newPoint , boolean isPredictive ) { return CollisionJNI . btPersistentManifold_addManifoldPoint__SWIG_0 ( swigCPtr , this , btManifoldPoint . getCPtr ( newPoint ) , newPoint , isPredictive ) ; } public int addManifoldPoint ( btManifoldPoint newPoint ) { return CollisionJNI . btPersistentManifold_addManifoldPoint__SWIG_1 ( swigCPtr , this , btManifoldPoint . getCPtr ( newPoint ) , newPoint ) ; } public void removeContactPoint ( int index ) { CollisionJNI . btPersistentManifold_removeContactPoint ( swigCPtr , this , index ) ; } public void replaceContactPoint ( btManifoldPoint newPoint , int insertIndex ) { CollisionJNI . btPersistentManifold_replaceContactPoint ( swigCPtr , this , btManifoldPoint . getCPtr ( newPoint ) , newPoint , insertIndex ) ; } public boolean validContactDistance ( btManifoldPoint pt ) { return CollisionJNI . btPersistentManifold_validContactDistance ( swigCPtr , this , btManifoldPoint . getCPtr ( pt ) , pt ) ; } public void refreshContactPoints ( Matrix4 trA , Matrix4 trB ) { CollisionJNI . btPersistentManifold_refreshContactPoints ( swigCPtr , this , trA , trB ) ; } public void clearManifold ( ) { CollisionJNI . btPersistentManifold_clearManifold ( swigCPtr , this ) ; } } 
