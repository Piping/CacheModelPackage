package com . nostra13 . universalimageloader . sample . ext ; import android . annotation . TargetApi ; import android . content . Context ; import android . os . Build ; import android . util . Base64 ; import com . nostra13 . universalimageloader . core . download . BaseImageDownloader ; import java . io . ByteArrayInputStream ; import java . io . IOException ; import java . io . InputStream ; @TargetApi ( Build . VERSION_CODES . FROYO ) public class Base64ImageDownloader extends BaseImageDownloader { public static final String BASE64_SCHEME = <str> ; public static final String BASE64_URI_PREFIX = BASE64_SCHEME + <str> ; public static final String BASE64_DATA_PREFIX = <str> ; public Base64ImageDownloader ( Context context ) { super ( context ) ; } public Base64ImageDownloader ( Context context , int connectTimeout , int readTimeout ) { super ( context , connectTimeout , readTimeout ) ; } @Override public InputStream getStreamFromOtherSource ( String imageUri , Object extra ) throws IOException { if ( imageUri . startsWith ( BASE64_URI_PREFIX ) ) { return getStreamFormBase64 ( imageUri , extra ) ; } return super . getStreamFromOtherSource ( imageUri , extra ) ; } protected InputStream getStreamFormBase64 ( String imageUri , Object extra ) { int dataStartIndex = imageUri . indexOf ( BASE64_DATA_PREFIX ) + BASE64_DATA_PREFIX . length ( ) ; String base64 = imageUri . substring ( dataStartIndex ) ; return new ByteArrayInputStream ( Base64 . decode ( base64 , Base64 . DEFAULT ) ) ; } }