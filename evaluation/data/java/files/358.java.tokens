package org . eclipse . debug . internal . ui . views . memory . renderings ; import org . eclipse . debug . internal . ui . DebugUIMessages ; import org . eclipse . debug . internal . ui . DebugUIPlugin ; import org . eclipse . debug . ui . IDebugUIConstants ; import org . eclipse . jface . action . Action ; import org . eclipse . ui . PlatformUI ; public class FormatTableRenderingAction extends Action { private AbstractBaseTableRendering fRendering ; int fColumnSize = - <int> ; int fRowSize = - <int> ; public FormatTableRenderingAction ( AbstractBaseTableRendering rendering ) { fRendering = rendering ; setText ( DebugUIMessages . FormatTableRenderingAction_16 ) ; PlatformUI . getWorkbench ( ) . getHelpSystem ( ) . setHelp ( this , IDebugUIConstants . PLUGIN_ID + <str> ) ; } @Override public void run ( ) { FormatTableRenderingDialog dialog = new FormatTableRenderingDialog ( fRendering , DebugUIPlugin . getShell ( ) ) ; dialog . open ( ) ; fColumnSize = dialog . getColumnSize ( ) ; fRowSize = dialog . getRowSize ( ) ; if ( fColumnSize > <int> & & fRowSize > <int> ) { int addressableSize = fRendering . getAddressableSize ( ) ; int columnSizeInBytes = addressableSize * fColumnSize ; int rowSizeInBytes = addressableSize * fRowSize ; fRendering . format ( rowSizeInBytes , columnSizeInBytes ) ; } } } 
