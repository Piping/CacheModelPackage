package com . badlogic . gdx . physics . bullet . collision ; public final class ContactCallbackEvent { public final static int TYPE_MASK = <hex> ; public final static int BY_MASK = <int> ; public final static int FILTERED = <int> ; public final static int INCLUDE_POINT = <int> ; public final static int BY_WRAPPER = <int> ; public final static int BY_MANIFOLD = <int> ; public final static int BY_OBJECT = <int> ; public final static int BY_VALUE = <int> ; public final static int SHIFT_ON_ADDED = <int> ; public final static int SHIFT_ON_PROCESSED = <int> ; public final static int SHIFT_ON_DESTROYED = <int> ; public final static int SHIFT_ON_STARTED = <int> ; public final static int SHIFT_ON_ENDED = <int> ; public final static int ON_ADDED_UNFILTERED_WRAPPER = ( BY_WRAPPER ) < < SHIFT_ON_ADDED ; public final static int ON_ADDED_UNFILTERED_OBJECT = ( BY_OBJECT ) < < SHIFT_ON_ADDED ; public final static int ON_ADDED_UNFILTERED_VALUE = ( BY_VALUE ) < < SHIFT_ON_ADDED ; public final static int ON_ADDED_UNFILTERED_WRAPPER_INCLUDEPOINT = ( BY_WRAPPER | INCLUDE_POINT ) < < SHIFT_ON_ADDED ; public final static int ON_ADDED_UNFILTERED_OBJECT_INCLUDEPOINT = ( BY_OBJECT | INCLUDE_POINT ) < < SHIFT_ON_ADDED ; public final static int ON_ADDED_UNFILTERED_VALUE_INCLUDEPOINT = ( BY_VALUE | INCLUDE_POINT ) < < SHIFT_ON_ADDED ; public final static int ON_ADDED_FILTERED_WRAPPER = ( FILTERED | BY_WRAPPER ) < < SHIFT_ON_ADDED ; public final static int ON_ADDED_FILTERED_OBJECT = ( FILTERED | BY_OBJECT ) < < SHIFT_ON_ADDED ; public final static int ON_ADDED_FILTERED_VALUE = ( FILTERED | BY_VALUE ) < < SHIFT_ON_ADDED ; public final static int ON_ADDED_FILTERED_WRAPPER_INCLUDEPOINT = ( FILTERED | BY_WRAPPER | INCLUDE_POINT ) < < SHIFT_ON_ADDED ; public final static int ON_ADDED_FILTERED_OBJECT_INCLUDEPOINT = ( FILTERED | BY_OBJECT | INCLUDE_POINT ) < < SHIFT_ON_ADDED ; public final static int ON_ADDED_FILTERED_VALUE_INCLUDEPOINT = ( FILTERED | BY_VALUE | INCLUDE_POINT ) < < SHIFT_ON_ADDED ; public final static int ON_PROCESSED_UNFILTERED_OBJECT = ( BY_OBJECT ) < < SHIFT_ON_PROCESSED ; public final static int ON_PROCESSED_UNFILTERED_VALUE = ( BY_VALUE ) < < SHIFT_ON_PROCESSED ; public final static int ON_PROCESSED_UNFILTERED_OBJECT_INCLUDEPOINT = ( BY_OBJECT | INCLUDE_POINT ) < < SHIFT_ON_PROCESSED ; public final static int ON_PROCESSED_UNFILTERED_VALUE_INCLUDEPOINT = ( BY_VALUE | INCLUDE_POINT ) < < SHIFT_ON_PROCESSED ; public final static int ON_PROCESSED_FILTERED_OBJECT = ( FILTERED | BY_OBJECT ) < < SHIFT_ON_PROCESSED ; public final static int ON_PROCESSED_FILTERED_VALUE = ( FILTERED | BY_VALUE ) < < SHIFT_ON_PROCESSED ; public final static int ON_PROCESSED_FILTERED_OBJECT_INCLUDEPOINT = ( FILTERED | BY_OBJECT | INCLUDE_POINT ) < < SHIFT_ON_PROCESSED ; public final static int ON_PROCESSED_FILTERED_VALUE_INCLUDEPOINT = ( FILTERED | BY_VALUE | INCLUDE_POINT ) < < SHIFT_ON_PROCESSED ; public final static int ON_DESTROYED = BY_VALUE < < SHIFT_ON_DESTROYED ; public final static int ON_STARTED_UNFILTERED_MANIFOLD = ( BY_MANIFOLD ) < < SHIFT_ON_STARTED ; public final static int ON_STARTED_UNFILTERED_OBJECT = ( BY_OBJECT ) < < SHIFT_ON_STARTED ; public final static int ON_STARTED_UNFILTERED_VALUE = ( BY_VALUE ) < < SHIFT_ON_STARTED ; public final static int ON_STARTED_FILTERED_MANIFOLD = ( FILTERED | BY_MANIFOLD ) < < SHIFT_ON_STARTED ; public final static int ON_STARTED_FILTERED_OBJECT = ( FILTERED | BY_OBJECT ) < < SHIFT_ON_STARTED ; public final static int ON_STARTED_FILTERED_VALUE = ( FILTERED | BY_VALUE ) < < SHIFT_ON_STARTED ; public final static int ON_ENDED_UNFILTERED_MANIFOLD = ( BY_MANIFOLD ) < < SHIFT_ON_ENDED ; public final static int ON_ENDED_UNFILTERED_OBJECT = ( BY_OBJECT ) < < SHIFT_ON_ENDED ; public final static int ON_ENDED_UNFILTERED_VALUE = ( BY_VALUE ) < < SHIFT_ON_ENDED ; public final static int ON_ENDED_FILTERED_MANIFOLD = ( FILTERED | BY_MANIFOLD ) < < SHIFT_ON_ENDED ; public final static int ON_ENDED_FILTERED_OBJECT = ( FILTERED | BY_OBJECT ) < < SHIFT_ON_ENDED ; public final static int ON_ENDED_FILTERED_VALUE = ( FILTERED | BY_VALUE ) < < SHIFT_ON_ENDED ; }