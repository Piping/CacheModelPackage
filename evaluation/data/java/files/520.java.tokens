package org . elasticsearch . index . analysis ; import org . apache . lucene . analysis . TokenStream ; import org . apache . lucene . analysis . core . LowerCaseFilter ; import org . apache . lucene . analysis . el . GreekLowerCaseFilter ; import org . apache . lucene . analysis . ga . IrishLowerCaseFilter ; import org . apache . lucene . analysis . tr . TurkishLowerCaseFilter ; import org . elasticsearch . common . settings . Settings ; import org . elasticsearch . env . Environment ; import org . elasticsearch . index . IndexSettings ; public class LowerCaseTokenFilterFactory extends AbstractTokenFilterFactory { private final String lang ; public LowerCaseTokenFilterFactory ( IndexSettings indexSettings , Environment environment , String name , Settings settings ) { super ( indexSettings , name , settings ) ; this . lang = settings . get ( <str> , null ) ; } @Override public TokenStream create ( TokenStream tokenStream ) { if ( lang = = null ) { return new LowerCaseFilter ( tokenStream ) ; } else if ( lang . equalsIgnoreCase ( <str> ) ) { return new GreekLowerCaseFilter ( tokenStream ) ; } else if ( lang . equalsIgnoreCase ( <str> ) ) { return new IrishLowerCaseFilter ( tokenStream ) ; } else if ( lang . equalsIgnoreCase ( <str> ) ) { return new TurkishLowerCaseFilter ( tokenStream ) ; } else { throw new IllegalArgumentException ( <str> + lang + <str> ) ; } } } 
