package rx . internal . operators ; import rx . Observable . Operator ; import rx . exceptions . * ; import rx . Subscriber ; public class OperatorCast < T , R > implements Operator < R , T > { private final Class < R > castClass ; public OperatorCast ( Class < R > castClass ) { this . castClass = castClass ; } @Override public Subscriber < ? super T > call ( final Subscriber < ? super R > o ) { return new Subscriber < T > ( o ) { @Override public void onCompleted ( ) { o . onCompleted ( ) ; } @Override public void onError ( Throwable e ) { o . onError ( e ) ; } @Override public void onNext ( T t ) { try { o . onNext ( castClass . cast ( t ) ) ; } catch ( Throwable e ) { Exceptions . throwOrReport ( e , this , t ) ; } } } ; } }