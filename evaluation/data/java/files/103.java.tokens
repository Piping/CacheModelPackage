package org . gradle . internal . resource . transfer ; import org . gradle . internal . resource . AbstractExternalResource ; import org . gradle . internal . resource . ResourceException ; import org . gradle . internal . resource . metadata . ExternalResourceMetaData ; import java . io . IOException ; import java . io . InputStream ; import java . net . URI ; public class DefaultExternalResource extends AbstractExternalResource { private final URI uri ; private final ExternalResourceReadResponse response ; public DefaultExternalResource ( URI uri , ExternalResourceReadResponse response ) { this . uri = uri ; this . response = response ; } @Override public URI getURI ( ) { return uri ; } @Override public ExternalResourceMetaData getMetaData ( ) { return response . getMetaData ( ) ; } @Override public boolean isLocal ( ) { return response . isLocal ( ) ; } @Override protected InputStream openStream ( ) throws IOException { return response . openStream ( ) ; } @Override public void close ( ) { try { response . close ( ) ; } catch ( IOException e ) { throw new ResourceException ( uri , String . format ( <str> , uri ) , e ) ; } } } 
