package io . netty . handler . codec ; import java . util . Iterator ; import java . util . List ; import java . util . Map . Entry ; import java . util . Set ; public interface Headers < K , V , T extends Headers < K , V , T > > extends Iterable < Entry < K , V > > { V get ( K name ) ; V get ( K name , V defaultValue ) ; V getAndRemove ( K name ) ; V getAndRemove ( K name , V defaultValue ) ; List < V > getAll ( K name ) ; List < V > getAllAndRemove ( K name ) ; Boolean getBoolean ( K name ) ; boolean getBoolean ( K name , boolean defaultValue ) ; Byte getByte ( K name ) ; byte getByte ( K name , byte defaultValue ) ; Character getChar ( K name ) ; char getChar ( K name , char defaultValue ) ; Short getShort ( K name ) ; short getShort ( K name , short defaultValue ) ; Integer getInt ( K name ) ; int getInt ( K name , int defaultValue ) ; Long getLong ( K name ) ; long getLong ( K name , long defaultValue ) ; Float getFloat ( K name ) ; float getFloat ( K name , float defaultValue ) ; Double getDouble ( K name ) ; double getDouble ( K name , double defaultValue ) ; Long getTimeMillis ( K name ) ; long getTimeMillis ( K name , long defaultValue ) ; Boolean getBooleanAndRemove ( K name ) ; boolean getBooleanAndRemove ( K name , boolean defaultValue ) ; Byte getByteAndRemove ( K name ) ; byte getByteAndRemove ( K name , byte defaultValue ) ; Character getCharAndRemove ( K name ) ; char getCharAndRemove ( K name , char defaultValue ) ; Short getShortAndRemove ( K name ) ; short getShortAndRemove ( K name , short defaultValue ) ; Integer getIntAndRemove ( K name ) ; int getIntAndRemove ( K name , int defaultValue ) ; Long getLongAndRemove ( K name ) ; long getLongAndRemove ( K name , long defaultValue ) ; Float getFloatAndRemove ( K name ) ; float getFloatAndRemove ( K name , float defaultValue ) ; Double getDoubleAndRemove ( K name ) ; double getDoubleAndRemove ( K name , double defaultValue ) ; Long getTimeMillisAndRemove ( K name ) ; long getTimeMillisAndRemove ( K name , long defaultValue ) ; boolean contains ( K name ) ; boolean contains ( K name , V value ) ; boolean containsObject ( K name , Object value ) ; boolean containsBoolean ( K name , boolean value ) ; boolean containsByte ( K name , byte value ) ; boolean containsChar ( K name , char value ) ; boolean containsShort ( K name , short value ) ; boolean containsInt ( K name , int value ) ; boolean containsLong ( K name , long value ) ; boolean containsFloat ( K name , float value ) ; boolean containsDouble ( K name , double value ) ; boolean containsTimeMillis ( K name , long value ) ; int size ( ) ; boolean isEmpty ( ) ; Set < K > names ( ) ; T add ( K name , V value ) ; T add ( K name , Iterable < ? extends V > values ) ; T add ( K name , V . . . values ) ; T addObject ( K name , Object value ) ; T addObject ( K name , Iterable < ? > values ) ; T addObject ( K name , Object . . . values ) ; T addBoolean ( K name , boolean value ) ; T addByte ( K name , byte value ) ; T addChar ( K name , char value ) ; T addShort ( K name , short value ) ; T addInt ( K name , int value ) ; T addLong ( K name , long value ) ; T addFloat ( K name , float value ) ; T addDouble ( K name , double value ) ; T addTimeMillis ( K name , long value ) ; T add ( Headers < ? extends K , ? extends V , ? > headers ) ; T set ( K name , V value ) ; T set ( K name , Iterable < ? extends V > values ) ; T set ( K name , V . . . values ) ; T setObject ( K name , Object value ) ; T setObject ( K name , Iterable < ? > values ) ; T setObject ( K name , Object . . . values ) ; T setBoolean ( K name , boolean value ) ; T setByte ( K name , byte value ) ; T setChar ( K name , char value ) ; T setShort ( K name , short value ) ; T setInt ( K name , int value ) ; T setLong ( K name , long value ) ; T setFloat ( K name , float value ) ; T setDouble ( K name , double value ) ; T setTimeMillis ( K name , long value ) ; T set ( Headers < ? extends K , ? extends V , ? > headers ) ; T setAll ( Headers < ? extends K , ? extends V , ? > headers ) ; boolean remove ( K name ) ; T clear ( ) ; @Override Iterator < Entry < K , V > > iterator ( ) ; }